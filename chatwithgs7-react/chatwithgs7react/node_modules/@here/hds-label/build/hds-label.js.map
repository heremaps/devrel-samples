{"version":3,"file":"hds-label.js","sourceRoot":"","sources":["../src/hds-label.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAC,aAAa,EAAE,WAAW,EAAC,MAAM,gBAAgB,CAAC;AAC1D,OAAO,EAAC,IAAI,EAAE,UAAU,EAAiB,MAAM,KAAK,CAAC;AACrD,OAAO,EAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AACzD,OAAO,EAAC,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AACrD,OAAO,EAAC,MAAM,EAAC,MAAM,oBAAoB,CAAC;AAK1C;;;;;GAKG;AAEI,IAAM,KAAK,aAAX,MAAM,KAAM,SAAQ,UAAU;IAA9B;;QAMqB,SAAI,GAAc,SAAS,CAAC;QAC5B,YAAO,GAAiB,SAAS,CAAC;IAyF9D,CAAC;IAlFW,YAAY;QACpB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,aAAa,OAAK,CAAC,SAAS,EAAE,EAAE,CAAC;QACtD,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAES,OAAO,CAAC,kBAAkC;QAClD,IAAI,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACjE,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;QACD,IAAI,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE;YACxC,IAAI,CAAC,cAAc,EAAE,MAAM,EAAE,CAAC;SAC/B;IACH,CAAC;IAES,MAAM;QACd,MAAM,UAAU,GAAG,EAAE,CAAC;QACtB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QAC7B,OAAO,IAAI,CAAA;uCACwB,QAAQ,CAAC,UAAU,CAAC;;YAE/C,IAAI,CAAC,kBAAkB,EAAE,IAAI,IAAI,CAAC,oBAAoB,EAAE;;UAE1D,IAAI,CAAC,iBAAiB,EAAE;;KAE7B,CAAC;IACJ,CAAC;IAES,kBAAkB;QAC1B,MAAM,UAAU,GAAG,EAAE,CAAC;QACtB,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;QAChC,OAAO,IAAI,CAAA;kCACmB,QAAQ,CAAC,UAAU,CAAC,aAAa,IAAI,CAAC,UAAU;;;KAG7E,CAAC;IACJ,CAAC;IAES,oBAAoB;QAC5B,OAAO,IAAI,CAAA;;;;KAIV,CAAC;IACJ,CAAC;IAES,iBAAiB;QACzB,OAAO,IAAI,CAAA,qCAAqC,CAAC;IACnD,CAAC;IAEO,UAAU,CAAC,CAAQ;QACzB,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,kBAAkB;YAAE,OAAO;QACrC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;IAClC,CAAC;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAiB,CAAC;YAChD,MAAM,MAAM,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;YACnD,IAAI,MAAM,EAAE;gBACV,OAAO,MAAqB,CAAC;aAC9B;SACF;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,gBAAgB,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QACtE,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,OAAO,SAAS,CAAC,CAAC,CAAgB,CAAC;SACpC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAEO,oBAAoB;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACtC,IAAI,MAAM,KAAK,IAAI,CAAC,kBAAkB,EAAE;YACtC,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBAC3B,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC;aAC5D;YACD,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;YACjC,IAAI,CAAC,kBAAkB,EAAE,YAAY,CAAC,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SACnE;IACH,CAAC;;AA9FM,YAAM,GAAG,MAAM,CAAC;AAEhB,eAAS,GAAG,CAAC,CAAC;AAEK;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;kCAAc;AACb;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;mCAA6B;AAC5B;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;sCAAmC;AAClB;IAAzC,KAAK,CAAC,2BAA2B,EAAE,IAAI,CAAC;0CAAyC;AACjD;IAAhC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC;6CAA2C;AAC1C;IAAhC,KAAK,CAAC,wBAAwB,CAAC;iDAAgD;AAEhF;IADC,KAAK,EAAE;iDACiC;AAZ9B,KAAK;IADjB,aAAa,CAAC,WAAW,CAAC;GACd,KAAK,CAgGjB;SAhGY,KAAK","sourcesContent":["import {customElement, isSlotEmpty} from '@here/hds-base';\nimport {html, LitElement, PropertyValues} from 'lit';\nimport {property, query, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {styles} from './hds-label.css.js';\n\nexport type LabelVariant = 'default' | 'error' | 'warning' | 'success' | 'focus' | 'disabled';\nexport type LabelType = 'default' | 'assistive';\n\n/**\n * @slot default Content for the primary label\n * @slot secondary Content for the secondary label, on the right\n * @slot form-element Form element to reference for accessibility\n *\n */\n@customElement('hds-label')\nexport class Label extends LitElement {\n  static styles = styles;\n\n  static idCounter = 0;\n\n  @property({type: String}) for?: string;\n  @property({type: String}) type: LabelType = 'default';\n  @property({type: String}) variant: LabelVariant = 'default';\n  @query('slot[name=\"form-element\"]', true) protected formElement!: HTMLSlotElement;\n  @query('.label-secondary', true) protected secondaryLabel!: HTMLDivElement;\n  @query('slot[name=\"secondary\"]') protected secondaryLabelSlot!: HTMLSlotElement;\n  @state()\n  private currentLabelTarget?: HTMLElement;\n\n  protected firstUpdated() {\n    this.id = this.id || `hds-label-${Label.idCounter++}`;\n    this.assignAriaLabelledBy();\n  }\n\n  protected updated(_changedProperties: PropertyValues) {\n    if (_changedProperties.has('id') || _changedProperties.has('for')) {\n      this.assignAriaLabelledBy();\n    }\n    if (isSlotEmpty(this.secondaryLabelSlot)) {\n      this.secondaryLabel?.remove();\n    }\n  }\n\n  protected render() {\n    const cssClasses = {};\n    cssClasses[this.type] = true;\n    return html`\n      <div class=\"-hds-label-wrapper ${classMap(cssClasses)}\">\n        <div class=\"label-container\">\n          ${this.renderPrimaryLabel()} ${this.renderSecondaryLabel()}\n        </div>\n        ${this.renderFormElement()}\n      </div>\n    `;\n  }\n\n  protected renderPrimaryLabel() {\n    const cssClasses = {};\n    cssClasses[this.variant] = true;\n    return html`\n      <div class=\"label-primary ${classMap(cssClasses)}\" @click=\"${this.labelClick}\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  protected renderSecondaryLabel() {\n    return html`\n      <div class=\"label-secondary\">\n        <slot name=\"secondary\"></slot>\n      </div>\n    `;\n  }\n\n  protected renderFormElement() {\n    return html` <slot name=\"form-element\"></slot> `;\n  }\n\n  private labelClick(e: Event) {\n    e.stopPropagation();\n    if (!this.currentLabelTarget) return;\n    this.currentLabelTarget.focus();\n    this.currentLabelTarget.click();\n  }\n\n  private findLabelTarget(): HTMLElement | undefined {\n    if (this.for) {\n      const scope = this.getRootNode() as HTMLElement;\n      const target = scope.querySelector(`#${this.for}`);\n      if (target) {\n        return target as HTMLElement;\n      }\n    }\n\n    const slotNodes = this.formElement?.assignedElements({flatten: true});\n    if (slotNodes.length > 0) {\n      return slotNodes[0] as HTMLElement;\n    }\n    return undefined;\n  }\n\n  private assignAriaLabelledBy() {\n    const target = this.findLabelTarget();\n    if (target !== this.currentLabelTarget) {\n      if (this.currentLabelTarget) {\n        this.currentLabelTarget.removeAttribute('aria-labelledby');\n      }\n      this.currentLabelTarget = target;\n      this.currentLabelTarget?.setAttribute('aria-labelledby', this.id);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-label': Label;\n  }\n}\n"]}