import { BaseElement } from '@here/hds-base';
import '@here/hds-checkbox';
import '@here/hds-icon';
export declare type OptionVariant = 'single' | 'multiple';
/**
 * @slot default Content for the label
 */
export declare class Option extends BaseElement {
    static styles: import("lit").CSSResultGroup;
    static shadowRootOptions: {
        delegatesFocus: boolean;
        mode: ShadowRootMode;
        slotAssignment?: SlotAssignmentMode | undefined;
    };
    isTabbable: boolean;
    disabled: boolean;
    selected: boolean;
    variant: OptionVariant;
    protected optionContentSlot: HTMLSlotElement;
    protected render(): import("lit-html").TemplateResult<1>;
    protected renderIcon(): import("lit-html").TemplateResult<1>;
    protected renderSingleOption(isSelected: boolean): import("lit-html").TemplateResult<1>;
    protected renderMultipleOption(isSelected: boolean, isDisabled: boolean): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'hds-option': Option;
    }
}
