{"version":3,"file":"hds-option.js","sourceRoot":"","sources":["../src/hds-option.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,aAAa,EAAE,WAAW,EAAC,MAAM,gBAAgB,CAAC;AAC1D,OAAO,oBAAoB,CAAC;AAC5B,OAAO,gBAAgB,CAAC;AACxB,OAAO,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAC,MAAM,KAAK,CAAC;AAC9C,OAAO,EAAC,QAAQ,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAC,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AACrD,OAAO,EAAC,MAAM,EAAC,MAAM,qBAAqB,CAAC;AAI3C;;GAEG;AAEI,IAAM,MAAM,GAAZ,MAAM,MAAO,SAAQ,WAAW;IAAhC;;QAGL,eAAU,GAAG,IAAI,CAAC;QACS,aAAQ,GAAG,KAAK,CAAC;QACF,aAAQ,GAAG,KAAK,CAAC;QACX,YAAO,GAAkB,QAAQ,CAAC;IAiDpF,CAAC;IA9CW,MAAM;QACd,MAAM,OAAO,GAAG;YACd,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QAEF,MAAM,cAAc,GAClB,IAAI,CAAC,OAAO,KAAK,QAAQ;YACvB,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC;YACxC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE9D,OAAO,IAAI,CAAA;wCACyB,QAAQ,CAAC,OAAO,CAAC,mBAAmB,cAAc;KACrF,CAAC;IACJ,CAAC;IAES,UAAU;QAClB,OAAO,IAAI,CAAA,qDAAqD,CAAC;IACnE,CAAC;IAES,kBAAkB,CAAC,UAAmB;QAC9C,OAAO,IAAI,CAAA;;;;;UAKL,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,OAAO;;KAE7C,CAAC;IACJ,CAAC;IAES,oBAAoB,CAAC,UAAmB,EAAE,UAAmB;QACrE,OAAO,IAAI,CAAA;;;sBAGO,UAAU;uBACT,UAAU;oBACb,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,EAAE;;;;;;;KAOtC,CAAC;IACJ,CAAC;;AArDM,aAAM,GAAG,MAAM,CAAC;AAChB,wBAAiB,GAAG,EAAC,GAAG,UAAU,CAAC,iBAAiB,EAAE,cAAc,EAAE,IAAI,EAAC,CAAC;AAExD;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;wCAAkB;AACF;IAAzC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;wCAAkB;AACX;IAA/C,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAC,CAAC;uCAAmC;AACnE;IAAd,KAAK,CAAC,MAAM,CAAC;iDAA+C;AAPlD,MAAM;IADlB,aAAa,CAAC,YAAY,CAAC;GACf,MAAM,CAuDlB;SAvDY,MAAM","sourcesContent":["import {customElement, BaseElement} from '@here/hds-base';\nimport '@here/hds-checkbox';\nimport '@here/hds-icon';\nimport {html, LitElement, nothing} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {styles} from './hds-option.css.js';\n\nexport type OptionVariant = 'single' | 'multiple';\n\n/**\n * @slot default Content for the label\n */\n@customElement('hds-option')\nexport class Option extends BaseElement {\n  static styles = styles;\n  static shadowRootOptions = {...LitElement.shadowRootOptions, delegatesFocus: true};\n  isTabbable = true;\n  @property({type: Boolean}) disabled = false;\n  @property({type: Boolean, reflect: true}) selected = false;\n  @property({type: String, attribute: 'variant'}) variant: OptionVariant = 'single';\n  @query('slot') protected optionContentSlot!: HTMLSlotElement;\n\n  protected render() {\n    const classes = {\n      selected: this.selected,\n      disabled: this.disabled,\n    };\n\n    const optionTemplate =\n      this.variant === 'single'\n        ? this.renderSingleOption(this.selected)\n        : this.renderMultipleOption(this.selected, this.disabled);\n\n    return html`\n      <div class=\"-hds-option-wrapper ${classMap(classes)}\" tabindex=\"-1\">${optionTemplate}</div>\n    `;\n  }\n\n  protected renderIcon() {\n    return html` <hds-icon name=\"checkmark\" size=\"16px\"></hds-icon>`;\n  }\n\n  protected renderSingleOption(isSelected: boolean) {\n    return html`\n      <div class=\"single-variant\">\n        <div class=\"option-text\">\n          <slot></slot>\n        </div>\n        ${isSelected ? this.renderIcon() : nothing}\n      </div>\n    `;\n  }\n\n  protected renderMultipleOption(isSelected: boolean, isDisabled: boolean) {\n    return html`\n      <div class=\"multiple-variant\">\n        <hds-checkbox\n          ?checked=\"${isSelected}\"\n          ?disabled=\"${isDisabled}\"\n          @click=\"${e => e.preventDefault()}\"\n        >\n        </hds-checkbox>\n        <div class=\"option-text\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-option': Option;\n  }\n}\n"]}