{"version":3,"file":"hds-radio.js","sourceRoot":"","sources":["../src/hds-radio.ts"],"names":[],"mappings":"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","sourcesContent":["import {customElement, BaseElement} from '@here/hds-base';\nimport {html, LitElement, PropertyValues} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\nimport {RadioSize} from './hds-radio-group.js';\nimport {styles} from './hds-radio.css.js';\n\nexport type RadioChangePayload = {id: string; name: string; value: string};\nexport type RadioSelectPayload = string;\n\n// used for generating unique id for each radio\nlet radioIdCounter = 0;\n\n/**\n * @slot default Content placed in the label.\n * @slot description  Content placed in the description.\n *\n * @event {CustomEvent<{id: string; name: string; value: string}>} change Fired when the state has changed: checked/unchecked `RadioChangePayload`\n * @event {CustomEvent<string>} selectNext (**Internal use only**) Fired when next radio element should be selected `RadioSelect`\n * @event {CustomEvent<string>} selectPrevious (**Internal use only**) Fired when previous radio element should be selected `RadioSelect`\n *\n * */\n@customElement('hds-radio')\nexport class Radio extends BaseElement {\n  static styles = styles;\n  static shadowRootOptions = {...LitElement.shadowRootOptions, delegatesFocus: true};\n  isTabbable = true;\n  @property({type: Boolean, reflect: true}) checked = false;\n  @property({type: Boolean, reflect: true}) disabled = false;\n  @property({type: Boolean, attribute: false}) isRadioGroupDisabled = false;\n  @property({type: String}) id = '';\n  @property({type: String}) name = '';\n  @property({type: String}) value = '';\n  @property({type: String, attribute: 'aria-label'}) ariaLabel: string = '';\n  @property({type: Number, attribute: 'tabindex'}) tabIndex = -1;\n  @property({type: String, attribute: false}) size: RadioSize = 'medium';\n  @property({type: String}) autocomplete = '';\n  @query('input') protected formElement!: HTMLInputElement;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('keydown', this._handleKeydown);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeEventListener('keydown', this._handleKeydown);\n  }\n\n  focus() {\n    this.formElement.focus();\n  }\n\n  protected defaultValue(): string {\n    return this.formElement.defaultValue;\n  }\n\n  protected defaultChecked(): boolean {\n    return this.formElement.defaultChecked;\n  }\n\n  protected firstUpdated() {\n    this.id = this.id || `hds-radio-${++radioIdCounter}`;\n    this.name = this.name || 'hds-radio-group';\n  }\n\n  protected updated(_changedProperties: PropertyValues) {\n    if (this.checked && _changedProperties.get('checked') !== undefined) {\n      this._handleClick();\n    }\n  }\n\n  protected render() {\n    const classes = {\n      wrapper: true,\n      disabled: this.disabled || this.isRadioGroupDisabled,\n      '-checked': this.checked,\n      'hds-radio--size-small': this.size === 'small',\n    };\n    return html`\n      <label class=\"${classMap(classes)}\">\n        <input\n          type=\"radio\"\n          autocomplete=\"${ifDefined(this.autocomplete || undefined)}\"\n          tabindex=\"${this.tabIndex}\"\n          .checked=\"${this.checked}\"\n          id=\"${ifDefined(this.id === '' ? undefined : this.id)}\"\n          name=\"${ifDefined(this.name === '' ? undefined : this.name)}\"\n          .value=\"${this.value}\"\n          ?disabled=\"${this.disabled || this.isRadioGroupDisabled}\"\n          aria-label=\"${ifDefined(this.ariaLabel)}\"\n          @click=\"${this._handleClick}\"\n        />\n        <div class=\"radio-container\">\n          <div class=\"dot\"></div>\n        </div>\n        <div class=\"text-container\">\n          <slot class=\"label-text\"></slot>\n          <slot name=\"description\" class=\"description-text\"></slot>\n        </div>\n      </label>\n    `;\n  }\n\n  private _handleClick(e?: Event) {\n    if (e) e.stopPropagation();\n\n    this.dispatchEvent(\n      new CustomEvent<RadioChangePayload>('change', {\n        detail: {id: this.id, name: this.name, value: this.value},\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  private _handleKeydown = (e: KeyboardEvent) => {\n    let flag = false;\n    switch (e.key) {\n      case 'ArrowRight':\n      case 'ArrowDown':\n        this.dispatchEvent(\n          new CustomEvent<RadioSelectPayload>('selectNext', {detail: this.id, bubbles: true})\n        );\n        flag = true;\n        break;\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        this.dispatchEvent(\n          new CustomEvent<RadioSelectPayload>('selectPrevious', {detail: this.id, bubbles: true})\n        );\n        flag = true;\n        break;\n    }\n\n    if (flag) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-radio': Radio;\n  }\n}\n"]}