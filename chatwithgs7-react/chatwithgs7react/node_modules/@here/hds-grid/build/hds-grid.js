import { getCSSVariable } from '@here/hds-base';
export const DefaultBreakpoints = [
    {
        name: 'mobile',
        maxWidth: 600,
        rowGap: 10,
        columnGap: 10,
        columns: 4,
    },
    {
        name: 'tablet',
        minWidth: 601,
        maxWidth: 1024,
        rowGap: 10,
        columnGap: 10,
        columns: 6,
    },
    {
        name: 'desktop-small',
        minWidth: 1025,
        maxWidth: 1440,
        rowGap: 10,
        columnGap: 10,
        columns: 12,
    },
    {
        name: 'desktop-medium',
        minWidth: 1441,
        maxWidth: 1680,
        rowGap: 10,
        columnGap: 10,
        columns: 12,
    },
    {
        name: 'desktop-large',
        minWidth: 1681,
        rowGap: 10,
        columnGap: 10,
        columns: 12,
    },
];
export class HDSGrid {
    static getWidthForBreakpoint(name, el) {
        if (!this.breakpointNames.includes(name)) {
            // eslint-disable-next-line no-console
            console.error('Invalid breakpoint name');
        }
        const { minWidth } = HDSGrid.breakpoint(name, el);
        if (minWidth && typeof minWidth === 'number') {
            const baseFontSize = parseInt(getCSSVariable('--hds-font-baseline', el), 10);
            return minWidth * baseFontSize;
        }
        return minWidth;
    }
    static breakpoints(el) {
        const brs = {};
        for (const name of this.breakpointNames) {
            brs[name] = HDSGrid.breakpoint(name, el);
        }
        return brs;
    }
    static breakpoint(name, el) {
        return {
            name,
            columns: parseInt(getCSSVariable(`--hds-grid-columns-${name}`, el), 10),
            minWidth: parseInt(getCSSVariable(`--hds-grid-min-width-${name}`, el), 10),
            maxWidth: parseInt(getCSSVariable(`--hds-grid-max-width-${name}`, el), 10),
            columnGap: parseInt(getCSSVariable(`--hds-grid-column-gap-${name}`, el), 10),
            rowGap: parseInt(getCSSVariable(`--hds-grid-row-gap-${name}`, el), 10),
        };
    }
}
HDSGrid.breakpointNames = DefaultBreakpoints.map(e => e.name);
//# sourceMappingURL=hds-grid.js.map