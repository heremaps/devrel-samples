{"version":3,"file":"hds-breadcrumb-item.js","sourceRoot":"","sources":["../src/hds-breadcrumb-item.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable lit-a11y/click-events-have-key-events */\nimport {customElement} from '@here/hds-base';\nimport '@here/hds-icon';\nimport '@here/hds-tooltip';\nimport {html, LitElement, nothing} from 'lit';\nimport {property, query, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {styles} from './hds-breadcrumb-item.css.js';\n\n/**\n *\n * @event {CustomEvent<string>} expand Internal event (no need to listen to it)\n *\n * @slot default Content placed inside the item, it could be an anchor tag or simple text for the active item.\n */\n@customElement('hds-breadcrumb-item')\nexport class BreadcrumbItem extends LitElement {\n  static styles = styles;\n  static itemCounter = 0;\n\n  @property({type: Boolean}) active = false;\n  @property({type: Boolean}) visible = true;\n  @property({type: Boolean, attribute: 'is-ellipsis'}) isEllipsis = false;\n  @property({type: Boolean, attribute: 'is-last-item'}) isLastItem = false;\n  @state() protected hasTooltip = false;\n  @query('slot:not([name])') protected itemContentSlot!: HTMLSlotElement;\n  @query('.breadcrumb-expand') protected ellipsisContainer?: HTMLElement;\n\n  connectedCallback() {\n    super.connectedCallback && super.connectedCallback();\n    this.id = this.id || `hds-breadcrumb-item-${(BreadcrumbItem.itemCounter += 1)}`;\n    this.setAttribute('data-hds-tooltip', this.id);\n  }\n\n  protected render() {\n    return html` ${this._renderAsLink()} `;\n  }\n\n  protected _handleSlotChange() {\n    this.itemContentSlot.assignedElements().forEach(el => {\n      const isEllipsisActive = el instanceof HTMLElement && el.offsetWidth < el.scrollWidth;\n      if (isEllipsisActive) {\n        this.hasTooltip = true;\n      }\n    });\n  }\n\n  protected _handleKeydown = (e: KeyboardEvent) => {\n    let customKeyEvent = false;\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case 'Enter':\n      case ' ':\n        if (this.ellipsisContainer) {\n          this.ellipsisContainer.click();\n          customKeyEvent = true;\n        } else {\n          (this.itemContentSlot.assignedNodes()[0] as HTMLElement).click();\n          customKeyEvent = true;\n        }\n\n        break;\n    }\n\n    if (customKeyEvent) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  };\n\n  protected renderTooltip() {\n    if (this.hasTooltip) {\n      return html`\n        <hds-tooltip id=\"${this.id}\">\n          <div style=\"word-break: break-all\">${this.textContent}</div>\n        </hds-tooltip>\n      `;\n    }\n    return nothing;\n  }\n\n  protected _renderAsLink() {\n    const classes = {\n      'breadcrumb-link': !this.active,\n      'breadcrumb-text-truncate': true,\n      active: this.active,\n    };\n\n    const renderedNonLastItem = !this.isLastItem\n      ? html` <hds-icon class=\"breadcrumb-arrow\" name=\"chevron-right\" size=\"8px\"></hds-icon> `\n      : nothing;\n\n    // lit-a11y/click-events-have-key-events\n    const renderedEllipsis = this.isEllipsis\n      ? html`\n          <li class=\"breadcrumb-item\" @keydown=\"${this._handleKeydown}\">\n            <div\n              tabindex=\"0\"\n              class=\"breadcrumb-link breadcrumb-expand\"\n              @click=\"${this._handleExpandClick}\"\n              role=\"button\"\n            >\n              <span class=\"breadcrumb-ellipsis\">...</span>\n            </div>\n            <hds-icon class=\"breadcrumb-arrow\" name=\"chevron-right\" size=\"8px\"></hds-icon>\n          </li>\n        `\n      : nothing;\n\n    const renderedItem = html`\n      <li\n        class=\"breadcrumb-item\"\n        id=\"breadcrumb-item-slot-container\"\n        @slotchange=\"${this._handleSlotChange}\"\n        @keydown=\"${this._handleKeydown}\"\n      >\n        <div class=\"${classMap(classes)}\">\n          <slot></slot>\n        </div>\n        ${renderedNonLastItem} ${this.renderTooltip()}\n      </li>\n    `;\n\n    return html`${this.visible ? renderedItem : renderedEllipsis}`;\n  }\n\n  protected async _handleExpandClick() {\n    await this.updateComplete;\n    this.dispatchEvent(new CustomEvent<string>('expand', {detail: this.id, bubbles: true}));\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-breadcrumb-item': BreadcrumbItem;\n  }\n}\n"]}