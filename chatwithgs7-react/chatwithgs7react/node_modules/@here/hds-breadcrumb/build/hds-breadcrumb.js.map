{"version":3,"file":"hds-breadcrumb.js","sourceRoot":"","sources":["../src/hds-breadcrumb.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAC,IAAI,EAAE,UAAU,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,QAAQ,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAC,MAAM,EAAC,MAAM,yBAAyB,CAAC;AAC/C,OAAO,EAAC,cAAc,EAAC,MAAM,0BAA0B,CAAC;AAIxD;;;;;GAKG;AAEI,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,UAAU;IAAnC;;QAGmD,kBAAa,GAAG,KAAK,CAAC;QACjB,uBAAkB,GAAG,CAAC,CAAC;IA0DtF,CAAC;IAvDW,YAAY;QACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAES,MAAM;QACd,OAAO,IAAI,CAAA;8EAC+D,IAAI,CAAC,aAAa;;;;;KAK3F,CAAC;IACJ,CAAC;IAES,KAAK,CAAC,aAAa,CAAC,GAAwB;QACpD,GAAG,CAAC,eAAe,EAAE,CAAC;QACtB,GAAG,CAAC,cAAc,EAAE,CAAC;QACrB,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;QACxD,MAAM,IAAI,CAAC,cAAc,CAAC;QAC1B,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAA0B,QAAQ,EAAE;YACjD,MAAM,EAAE;gBACN,QAAQ,EAAE,IAAI;aACf;SACF,CAAC,CACH,CAAC;IACJ,CAAC;IAES,iBAAiB;QACzB,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC/B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,OAAO;SACR;QACD,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;gBAC5B,IACE,IAAI;oBACJ,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,kBAAkB;oBACvC,KAAK,GAAG,CAAC;oBACT,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EACxB;oBACA,6CAA6C;oBAC7C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACtB;YACH,CAAC,CAAC,CAAC;YACH,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;SAC5B;QACD,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;IAC5C,CAAC;IAES,SAAS;QACjB,OAAQ,IAAI,CAAC,SAA6B;aACvC,aAAa,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;aAC9B,MAAM,CAAC,CAAC,CAAO,EAAE,EAAE,CAAC,CAAC,YAAY,cAAc,CAAqB,CAAC;IAC1E,CAAC;;AA5DM,iBAAM,GAAG,MAAM,CAAC;AAEiC;IAAvD,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAC,CAAC;iDAAuB;AACjB;IAA5D,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,sBAAsB,EAAC,CAAC;sDAAwB;AACzD;IAA1B,KAAK,CAAC,kBAAkB,CAAC;6CAAmC;AALlD,UAAU;IADtB,aAAa,CAAC,gBAAgB,CAAC;GACnB,UAAU,CA8DtB;SA9DY,UAAU","sourcesContent":["import {customElement} from '@here/hds-base';\nimport {html, LitElement} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {styles} from './hds-breadcrumb.css.js';\nimport {BreadcrumbItem} from './hds-breadcrumb-item.js';\n\nexport type BreadcrumbChangePayload = {expanded: boolean};\n\n/**\n *\n * @event {CustomEvent<{expanded: boolean}>} change Fired when the breadcrumb status has been expanded `BreadcrumbChangePayload`\n *\n * @slot default List of `hds-breadcrumb-item` elements\n */\n@customElement('hds-breadcrumb')\nexport class Breadcrumb extends LitElement {\n  static styles = styles;\n\n  @property({type: Boolean, attribute: 'truncate-items'}) truncateItems = false;\n  @property({type: Number, attribute: 'truncate-item-buffer'}) truncateItemBuffer = 5;\n  @query('slot:not([name])') protected itemsSlot!: HTMLElement;\n\n  protected firstUpdated() {\n    this._setDefaultActive();\n  }\n\n  protected render() {\n    return html`\n      <nav class=\"-hds-breadcrumb-wrapper\" aria-label=\"breadcrumb\" @expand=\"${this._handleExpand}\">\n        <ol class=\"breadcrumb\">\n          <slot></slot>\n        </ol>\n      </nav>\n    `;\n  }\n\n  protected async _handleExpand(evt: CustomEvent<string>) {\n    evt.stopPropagation();\n    evt.preventDefault();\n    this._getItems().forEach(item => (item.visible = true));\n    await this.updateComplete;\n    this.dispatchEvent(\n      new CustomEvent<BreadcrumbChangePayload>('change', {\n        detail: {\n          expanded: true,\n        },\n      })\n    );\n  }\n\n  protected _setDefaultActive() {\n    const items = this._getItems();\n    if (items.length === 0) {\n      return;\n    }\n    if (this.truncateItems) {\n      items.forEach((item, index) => {\n        if (\n          item &&\n          items.length >= this.truncateItemBuffer &&\n          index > 0 &&\n          index < items.length - 1\n        ) {\n          // eslint-disable-next-line no-param-reassign\n          item.visible = false;\n        }\n      });\n      items[1].isEllipsis = true;\n    }\n    items[items.length - 1].isLastItem = true;\n  }\n\n  protected _getItems() {\n    return (this.itemsSlot as HTMLSlotElement)\n      .assignedNodes({flatten: true})\n      .filter((e: Node) => e instanceof BreadcrumbItem) as BreadcrumbItem[];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-breadcrumb': Breadcrumb;\n  }\n}\n"]}