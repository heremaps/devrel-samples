import { __decorate } from "tslib";
import { customElement, isSlotEmpty, findElementsInSlot } from '@here/hds-base';
import { html, LitElement } from 'lit';
import { classMap } from 'lit/directives/class-map.js';
import { styles } from './hds-navbar-top.css.js';
import { property, query } from 'lit/decorators.js';
import { ProfileMenu } from './hds-profile-menu.js';
/**
 * @slot logo Content for the logo image
 * @slot page-title Content for the title
 * @slot tabs-menu Content to create the menu structure in the navbar top using `hds-tab-bar` component
 * @slot right-tray Content to implement actionable items on the right hand side of the navbar top
 * @slot profile-menu Content to implement the profile details menu in the navbar top for login and profile menu controls with `hds-profile-menu` element
 * @cssprop --hds-navbar-top-max-width Max width for navbar-top body
 * @cssprop --hds-navbar-top-min-lr-spacing Min left/right spacing
 */
let NavBarTop = class NavBarTop extends LitElement {
    constructor() {
        super(...arguments);
        this.variant = 'default';
    }
    async onPageTitleSlotChange() {
        this.requestUpdate();
    }
    async onProfileMenuSlotChange() {
        findElementsInSlot(this.slotProfileMenu, ProfileMenu).forEach((profileMenu) => {
            // eslint-disable-next-line no-param-reassign
            profileMenu.navBarTopVariant = this.variant;
        });
    }
    render() {
        const classes = {
            'hds-navbar-top-container': true,
            'page-title-slot-empty': isSlotEmpty(this.slotPageTitle),
        };
        classes[`hds-navbar-top--variant-${this.variant}`] = true;
        return html `
      <div class="${classMap(classes)}" role="navigation">
        <div class="hds-navbar-top">
          <div class="hds-navbar-top-logo-container">
            <slot name="logo"></slot>
          </div>
          <div class="hds-navbar-top-title">
            <hr />
            <slot name="page-title" @slotchange="${this.onPageTitleSlotChange}"></slot>
          </div>
          <div class="hds-navbar-top-tabs">
            <slot name="tabs-menu"></slot>
          </div>
          <div class="hds-navbar-top-right-end-container">
            <slot class="hds-navbar-top-right-tray" name="right-tray"></slot>
            <slot
              class="hds-navbar-top-profile-menu"
              name="profile-menu"
              @slotchange="${this.onProfileMenuSlotChange}"
            ></slot>
          </div>
        </div>
      </div>
    `;
    }
};
NavBarTop.styles = styles;
__decorate([
    property({ type: String, attribute: true })
], NavBarTop.prototype, "variant", void 0);
__decorate([
    query('slot[name="page-title"]')
], NavBarTop.prototype, "slotPageTitle", void 0);
__decorate([
    query('slot[name="profile-menu"]')
], NavBarTop.prototype, "slotProfileMenu", void 0);
NavBarTop = __decorate([
    customElement('hds-navbar-top')
], NavBarTop);
export { NavBarTop };
//# sourceMappingURL=hds-navbar-top.js.map