{"version":3,"file":"hds-checkbox-group.js","sourceRoot":"","sources":["../src/hds-checkbox-group.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAC,aAAa,EAAE,WAAW,EAAC,MAAM,gBAAgB,CAAC;AAC1D,OAAO,EAAC,IAAI,EAAE,OAAO,EAAC,MAAM,KAAK,CAAC;AAClC,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC3C,OAAO,EAAC,SAAS,EAAC,MAAM,8BAA8B,CAAC;AACvD,OAAO,EAAC,MAAM,EAAC,MAAM,6BAA6B,CAAC;AAEnD;;;GAGG;AAEI,IAAM,aAAa,qBAAnB,MAAM,aAAc,SAAQ,WAAW;IAAvC;;QAK8C,cAAS,GAAW,EAAE,CAAC;QAChE,eAAU,GAAG,IAAI,CAAC;IAyD9B,CAAC;IApDC,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,eAAa,CAAC,EAAE,EAAE,CAAC;QACnB,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,OAAO,GAAG,4BAA4B,eAAa,CAAC,EAAE,EAAE,CAAC;SAC/D;QACD,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,gBAAgB,GAAG,sCAAsC,eAAa,CAAC,EAAE,EAAE,CAAC;SAClF;IACH,CAAC;IAES,kBAAkB;QAC1B,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO,IAAI,CAAA,qCAAqC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;qDACxB,IAAI,CAAC,KAAK;eAChD,CAAC;SACX;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAES,oBAAoB;QAC5B,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,OAAO,IAAI,CAAA,uCAAuC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC;uDACjC,IAAI,CAAC,cAAc;eAC3D,CAAC;SACX;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAES,YAAY;QACpB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,EAAE;YACrC,OAAO,IAAI,CAAA;UACP,IAAI,CAAC,kBAAkB,EAAE,IAAI,IAAI,CAAC,oBAAoB,EAAE;aACrD,CAAC;SACT;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAES,MAAM;QACd,MAAM,cAAc,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IACtD,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAChD,EAAE,CAAC;QACH,OAAO,IAAI,CAAA,IAAI,IAAI,CAAC,YAAY,EAAE;;;;sBAIhB,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;2BAC3B,SAAS,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;;;aAG9C,CAAC;IACZ,CAAC;;AA7DM,oBAAM,GAAG,MAAM,CAAC;AACN,gBAAE,GAAG,CAAC,CAAC;AACE;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;4CAA2B;AACI;IAAvD,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,iBAAiB,EAAC,CAAC;qDAAoC;AACxC;IAAlD,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAC,CAAC;gDAAwB;AAL/D,aAAa;IADzB,aAAa,CAAC,oBAAoB,CAAC;GACvB,aAAa,CA+DzB;SA/DY,aAAa","sourcesContent":["import {customElement, BaseElement} from '@here/hds-base';\nimport {html, nothing} from 'lit';\nimport {property} from 'lit/decorators.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\nimport {styles} from './hds-checkbox-group.css.js';\n\n/**\n *\n * @slot default List of `hds-checkbox` elements\n */\n@customElement('hds-checkbox-group')\nexport class CheckboxGroup extends BaseElement {\n  static styles = styles;\n  protected static id = 0;\n  @property({type: String}) label: string | undefined;\n  @property({type: String, attribute: 'secondary-label'}) secondaryLabel: string | undefined;\n  @property({type: String, attribute: 'aria-label'}) ariaLabel: string = '';\n  protected isTabbable = true;\n  private labelId: string | undefined;\n\n  private secondaryLabelId: string | undefined;\n\n  connectedCallback() {\n    super.connectedCallback();\n    CheckboxGroup.id++;\n    if (this.label) {\n      this.labelId = `hds-checkbox-group-label-${CheckboxGroup.id}`;\n    }\n    if (this.secondaryLabel) {\n      this.secondaryLabelId = `hds-checkbox-group-secondary-label-${CheckboxGroup.id}`;\n    }\n  }\n\n  protected renderPrimaryLabel() {\n    if (this.label) {\n      return html` <label class=\"label-primary\" id=\"${ifDefined(this.labelId)}\">\n        <div class=\"label-text label-text-primary\">${this.label}</div>\n      </label>`;\n    }\n    return nothing;\n  }\n\n  protected renderSecondaryLabel() {\n    if (this.secondaryLabel) {\n      return html` <label class=\"label-secondary\" id=\"${ifDefined(this.secondaryLabelId)}\">\n        <div class=\"label-text label-text-secondary\">${this.secondaryLabel}</div>\n      </label>`;\n    }\n    return nothing;\n  }\n\n  protected renderLabels() {\n    if (this.label || this.secondaryLabel) {\n      return html` <div class=\"label-container clearfix\">\n        ${this.renderPrimaryLabel()} ${this.renderSecondaryLabel()}\n      </div>`;\n    }\n    return nothing;\n  }\n\n  protected render() {\n    const ariaLabelledBy = `${this.label ? this.labelId : ''} ${\n      this.secondaryLabel ? this.secondaryLabelId : ''\n    }`;\n    return html` ${this.renderLabels()}\n      <div\n        class=\"-hds-checkbox-group-wrapper\"\n        role=\"group\"\n        .ariaLabel=\"${ifDefined(this.ariaLabel.trim())}\"\n        aria-labelledby=\"${ifDefined(ariaLabelledBy.trim())}\"\n      >\n        <slot></slot>\n      </div>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-checkbox-group': CheckboxGroup;\n  }\n}\n"]}