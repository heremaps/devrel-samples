{"version":3,"file":"HDSNotification.js","sourceRoot":"","sources":["../src/Notification/HDSNotification.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, {useRef, useEffect, useImperativeHandle} from 'react';\nimport {\n  Notification,\n  NotificationChangePayload,\n  NotificationVariant,\n  NotificationStatus,\n  NotificationSize,\n  NotificationActionPayload,\n} from '@here/hds-notification';\n\n// eslint-disable-next-line no-new\nnew Notification();\n\nexport interface HDSNotificationBaseProperties\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onClose' | 'onChange'> {\n  open?: boolean;\n  headline?: string;\n  variant?: NotificationVariant;\n  status?: NotificationStatus;\n  size?: NotificationSize;\n  timeout?: number;\n  keepNode?: boolean;\n  hideClose?: boolean;\n  hideIcon?: boolean;\n  closeAriaLabel?: string;\n  /* eslint-disable no-unused-vars */\n  onClose?: (e: NotificationChangePayload) => void;\n  onChange?: (e: CustomEvent<NotificationChangePayload>) => void;\n  onAction?: (e: NotificationActionPayload) => void;\n  /* eslint-enable no-unused-vars */\n}\n\nexport interface HDSNotificationProperties extends HDSNotificationBaseProperties {\n  children?: React.ReactNode;\n  inline?: boolean;\n}\n\nconst HDSNotification = React.forwardRef((props: HDSNotificationProperties, ref) => {\n  const {\n    children,\n    variant,\n    status,\n    size,\n    hideIcon,\n    timeout,\n    open,\n    keepNode,\n    inline,\n    hideClose,\n    closeAriaLabel,\n    onClose,\n    onChange,\n    onAction,\n    className,\n    ...rest\n  } = props;\n\n  const innerRef = useRef<HTMLElement>(null);\n\n  useImperativeHandle(ref, () => innerRef.current);\n\n  const _handleClose = (e: CustomEvent<NotificationChangePayload>) => {\n    if (e.target !== innerRef.current) return;\n    onClose && onClose(e.detail);\n    onChange && onChange(e);\n  };\n  const _handleActionClick = (e: CustomEvent<NotificationActionPayload>) => {\n    onAction && onAction(e.detail);\n  };\n\n  useEffect(() => {\n    if (innerRef.current && (onClose || onChange)) {\n      innerRef.current.addEventListener('change', _handleClose as EventListener);\n    }\n    return () => {\n      innerRef.current?.removeEventListener('change', _handleClose as EventListener);\n    };\n  }, [onClose, onChange, innerRef]);\n\n  useEffect(() => {\n    if (innerRef.current && onAction) {\n      innerRef.current.addEventListener('action', _handleActionClick as EventListener);\n    }\n    return () => {\n      innerRef.current?.removeEventListener('action', _handleActionClick as EventListener);\n    };\n  }, [onAction, innerRef]);\n\n  return (\n    <hds-notification\n      open={open}\n      keep-node={keepNode}\n      variant={variant}\n      status={status}\n      size={size}\n      timeout={timeout}\n      {...(className && {class: className})}\n      {...(hideClose && {'hide-close': hideClose})}\n      {...(hideIcon && {'hide-icon': hideIcon})}\n      {...(closeAriaLabel && {'close-aria-label': closeAriaLabel})}\n      {...(inline && {inline})}\n      ref={innerRef}\n      {...rest}\n    >\n      {children}\n    </hds-notification>\n  );\n});\n\nHDSNotification.defaultProps = {\n  open: true,\n  variant: 'solid',\n  status: 'default',\n  size: 'medium',\n  timeout: 0,\n  keepNode: true,\n  hideIcon: false,\n  hideClose: false,\n};\n\nexport default HDSNotification;\n"]}