{"version":3,"file":"HDSToastContextProvider.js","sourceRoot":"","sources":["../src/Notification/HDSToastContextProvider.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,EAAC,aAAa,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAC,MAAM,OAAO,CAAC;AAC3E,OAAO,iBAAiB,MAAM,wBAAwB,CAAC;AACvD,OAAO,eAAgD,MAAM,sBAAsB,CAAC;AAEpF,IAAI,aAAa,GAAG,CAAC,CAAC;AAetB,MAAM,YAAY,GAAG,aAAa,CAAC,EAAsB,CAAC,CAAC;AAE3D,eAAe,YAAY,CAAC;AAE5B,MAAM,sBAAsB,GAAG,CAAC,KAAwB,EAAE,EAAE;IAC1D,MAAM,EAAC,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAC,GAAG,KAAK,CAAC;IACxD,MAAM,WAAW,GAAG,CAAC,CAA4B,EAAE,EAAE;QACnD,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,CAAC,CAAC,CAAC;SACZ;QACD,WAAY,CAAC,OAAQ,CAAC,CAAC;IACzB,CAAC,CAAC;IACF,OAAO,CACL,oBAAC,eAAe,OAAK,KAAK,EAAE,OAAO,EAAE,WAAW,IAC7C,QAAQ,CACO,CACnB,CAAC;AACJ,CAAC,CAAC;AAMF,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAA+B,EAAE,EAAE;IAC5F,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,EAAyB,CAAC,CAAC;IAEhE,MAAM,QAAQ,GAAG,WAAW,CAC1B,CAAC,YAA+B,EAAE,EAAE;QAClC,MAAM,EAAE,GAAG,aAAa,aAAa,EAAE,EAAE,CAAC;QAC1C,YAAY,CAAC,EAAE,GAAG,EAAE,CAAC;QACrB,YAAY,CAAC,OAAO,GAAG,EAAE,CAAC;QAC1B,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC;IACvD,CAAC,EACD,CAAC,SAAS,CAAC,CACZ,CAAC;IAEF,MAAM,WAAW,GAAG,CAAC,OAAe,EAAE,EAAE;QACtC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;IAC/E,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE7D,OAAO,CACL,oBAAC,YAAY,CAAC,QAAQ,IAAC,KAAK,EAAE,YAAY;QACvC,QAAQ;QACT,oBAAC,iBAAiB,IAAC,QAAQ,EAAE,QAAQ,IAClC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CACnB,oBAAC,sBAAsB,OACjB,KAAK,EACT,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,EAAE,EAAE,KAAK,CAAC,EAAE,EACZ,GAAG,EAAE,KAAK,CAAC,OAAO,EAClB,WAAW,EAAE,WAAW,IAEvB,KAAK,CAAC,IAAI,CACY,CAC1B,CAAC,CACgB,CACE,CACzB,CAAC;AACJ,CAAC,CAAC;AAEF,uBAAuB,CAAC,YAAY,GAAG;IACrC,QAAQ,EAAE,cAAc;CACzB,CAAC","sourcesContent":["import {NotificationChangePayload, NotificationPosition} from '@here/hds-notification';\nimport React, {createContext, useCallback, useMemo, useState} from 'react';\nimport HDSToastContainer from './HDSToastContainer.js';\nimport HDSNotification, {HDSNotificationBaseProperties} from './HDSNotification.js';\n\nlet toastsCounter = 1;\n\nexport interface ToastWrapperProps extends HDSNotificationBaseProperties {\n  toastId?: string;\n  body?: React.ReactNode;\n  id?: string;\n  // eslint-disable-next-line no-unused-vars\n  removeToast?: (toastId: string) => void;\n}\n\ninterface ToastContextType {\n  // eslint-disable-next-line no-unused-vars\n  addToast: (toast: ToastWrapperProps) => void;\n}\n\nconst ToastContext = createContext({} as ToastContextType);\n\nexport default ToastContext;\n\nconst HDSNotificationWrapper = (props: ToastWrapperProps) => {\n  const {onClose, toastId, removeToast, children} = props;\n  const handleClose = (e: NotificationChangePayload) => {\n    if (onClose) {\n      onClose(e);\n    }\n    removeToast!(toastId!);\n  };\n  return (\n    <HDSNotification {...props} onClose={handleClose}>\n      {children}\n    </HDSNotification>\n  );\n};\nexport interface HDSToastContextProviderProps {\n  position?: NotificationPosition;\n  children?: React.ReactNode;\n}\n\nexport const HDSToastContextProvider = ({position, children}: HDSToastContextProviderProps) => {\n  const [toasts, setToasts] = useState([] as ToastWrapperProps[]);\n\n  const addToast = useCallback(\n    (toastElement: ToastWrapperProps) => {\n      const id = `hds-toast-${toastsCounter++}`;\n      toastElement.id = id;\n      toastElement.toastId = id;\n      setToasts(currValue => [...currValue, toastElement]);\n    },\n    [setToasts]\n  );\n\n  const removeToast = (toastId: string) => {\n    setToasts(currValue => currValue.filter(toast => toast.toastId !== toastId));\n  };\n\n  const contextValue = useMemo(() => ({addToast}), [addToast]);\n\n  return (\n    <ToastContext.Provider value={contextValue}>\n      {children}\n      <HDSToastContainer position={position}>\n        {toasts.map(toast => (\n          <HDSNotificationWrapper\n            {...toast}\n            toastId={toast.toastId}\n            id={toast.id}\n            key={toast.toastId}\n            removeToast={removeToast}\n          >\n            {toast.body}\n          </HDSNotificationWrapper>\n        ))}\n      </HDSToastContainer>\n    </ToastContext.Provider>\n  );\n};\n\nHDSToastContextProvider.defaultProps = {\n  position: 'bottom-right',\n};\n"]}