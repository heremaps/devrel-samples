import React, { useRef, useEffect, useImperativeHandle } from 'react';
import { Stepper, } from '@here/hds-stepper';
// eslint-disable-next-line no-new
new Stepper();
const HDSStepper = React.forwardRef((props, ref) => {
    const { children, nonLinear, hideLabel, activeStep, completeStep, className, errorStep, onStepStateChange, getCurrentActiveStep, bottomLabel, orientation, ...rest } = props;
    const innerRef = useRef(null);
    useImperativeHandle(ref, () => innerRef.current);
    const _handleStepStateChange = (e) => {
        onStepStateChange && onStepStateChange(e.detail);
    };
    const _handleCurrentActiveStepChange = (e) => {
        if (e.target !== innerRef.current)
            return;
        getCurrentActiveStep && getCurrentActiveStep(e.detail);
    };
    useEffect(() => {
        if (innerRef.current) {
            if (onStepStateChange) {
                innerRef.current.addEventListener('state', _handleStepStateChange);
            }
        }
        return () => {
            innerRef.current?.removeEventListener('state', _handleStepStateChange);
        };
    }, [onStepStateChange, innerRef]);
    useEffect(() => {
        if (innerRef.current) {
            if (getCurrentActiveStep) {
                innerRef.current.addEventListener('current-active-step', _handleCurrentActiveStepChange);
            }
        }
        return () => {
            innerRef.current?.removeEventListener('current-active-step', _handleCurrentActiveStepChange);
        };
    }, [getCurrentActiveStep, innerRef]);
    return (React.createElement("hds-stepper", { ...(nonLinear && { 'non-linear': nonLinear }), ...(bottomLabel && { 'bottom-label': bottomLabel }), ...(hideLabel && { 'hide-label': hideLabel }), ...(className && { class: className }), "active-step": activeStep, ...((completeStep || completeStep === 0) && {
            'complete-step': completeStep,
        }), ...((errorStep || errorStep === 0) && { 'error-step': errorStep }), orientation: orientation, ref: innerRef, ...rest }, children));
});
HDSStepper.defaultProps = {
    orientation: 'horizontal',
    nonLinear: false,
    hideLabel: false,
    bottomLabel: false,
    activeStep: 0,
};
export default HDSStepper;
//# sourceMappingURL=HDSStepper.js.map