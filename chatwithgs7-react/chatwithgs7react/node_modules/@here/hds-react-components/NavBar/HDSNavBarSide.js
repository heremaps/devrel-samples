import { useEffect, useImperativeHandle, useRef } from 'react';
import * as React from 'react';
import { NavBarSide } from '@here/hds-navbar';
// eslint-disable-next-line no-new
new NavBarSide();
const HDSNavBarSide = React.forwardRef((props, ref) => {
    const { title, collapsed, logo, main, footer, className, toggleText, hideToggle, onChange, ...rest } = props;
    const innerRef = useRef(null);
    useImperativeHandle(ref, () => innerRef.current);
    const _handleChange = (e) => {
        if (e.target !== innerRef.current)
            return;
        onChange && onChange(e.detail);
    };
    useEffect(() => {
        if (innerRef.current) {
            if (onChange) {
                innerRef.current.addEventListener('change', _handleChange);
            }
        }
        return () => {
            innerRef.current?.removeEventListener('change', _handleChange);
        };
    }, [onChange, innerRef]);
    return (React.createElement("hds-navbar-side", { ref: innerRef, ...(collapsed && { collapsed }), ...(hideToggle && { 'hide-toggle': hideToggle }), ...(className && { class: className }), ...(toggleText && { 'toggle-text': toggleText }), ...rest },
        logo && React.createElement("div", { slot: "logo" }, logo),
        title && React.createElement("div", { slot: "title" }, title),
        main && React.createElement("div", { slot: "main" }, main),
        footer && React.createElement("div", { slot: "footer" }, footer)));
});
HDSNavBarSide.defaultProps = {
    toggleText: 'Hide Menu',
    hideToggle: false,
};
export default HDSNavBarSide;
//# sourceMappingURL=HDSNavBarSide.js.map