{"version":3,"file":"HDSNavBarSide.js","sourceRoot":"","sources":["../src/NavBar/HDSNavBarSide.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,mBAAmB,EAAE,MAAM,EAAC,MAAM,OAAO,CAAC;AAC7D,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAC,UAAU,EAA0B,MAAM,kBAAkB,CAAC;AAGrE,kCAAkC;AAClC,IAAI,UAAU,EAAE,CAAC;AAajB,MAAM,aAAa,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,KAA8B,EAAE,GAAG,EAAE,EAAE;IAC7E,MAAM,EACJ,KAAK,EACL,SAAS,EACT,IAAI,EACJ,IAAI,EACJ,MAAM,EACN,SAAS,EACT,UAAU,EACV,UAAU,EACV,QAAQ,EACR,GAAG,IAAI,EACR,GAAG,KAAK,CAAC;IAEV,MAAM,QAAQ,GAAG,MAAM,CAAc,IAAI,CAAC,CAAC;IAC3C,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAEjD,MAAM,aAAa,GAAG,CAAC,CAAuC,EAAE,EAAE;QAChE,IAAI,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,OAAO;YAAE,OAAO;QAC1C,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,QAAQ,CAAC,OAAO,EAAE;YACpB,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;aAC7E;SACF;QACD,OAAO,GAAG,EAAE;YACV,QAAQ,CAAC,OAAO,EAAE,mBAAmB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;QAClF,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEzB,OAAO,CACL,yCACE,GAAG,EAAE,QAAQ,KACT,CAAC,SAAS,IAAI,EAAC,SAAS,EAAC,CAAC,KAC1B,CAAC,UAAU,IAAI,EAAC,aAAa,EAAE,UAAU,EAAC,CAAC,KAC3C,CAAC,SAAS,IAAI,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,KACjC,CAAC,UAAU,IAAI,EAAC,aAAa,EAAE,UAAU,EAAC,CAAC,KAC3C,IAAI;QAEP,IAAI,IAAI,6BAAK,IAAI,EAAC,MAAM,IAAE,IAAI,CAAO;QACrC,KAAK,IAAI,6BAAK,IAAI,EAAC,OAAO,IAAE,KAAK,CAAO;QACxC,IAAI,IAAI,6BAAK,IAAI,EAAC,MAAM,IAAE,IAAI,CAAO;QACrC,MAAM,IAAI,6BAAK,IAAI,EAAC,QAAQ,IAAE,MAAM,CAAO,CAC5B,CACnB,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,aAAa,CAAC,YAAY,GAAG;IAC3B,UAAU,EAAE,WAAW;IACvB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF,eAAe,aAAa,CAAC","sourcesContent":["import {useEffect, useImperativeHandle, useRef} from 'react';\nimport * as React from 'react';\nimport {NavBarSide, NavbarSideChangePayload} from '@here/hds-navbar';\nimport {HDSPanelProperties} from '../Panel/HDSPanel.js';\n\n// eslint-disable-next-line no-new\nnew NavBarSide();\n\ninterface HDSNavBarSideProperties extends Omit<HDSPanelProperties, 'expanded' | 'onChange'> {\n  collapsed?: boolean;\n  title?: string;\n  toggleText?: string;\n  hideToggle?: Boolean;\n  logo?: React.ReactNode;\n  main?: React.ReactNode;\n  footer?: React.ReactNode;\n  onChange?: (e: NavbarSideChangePayload) => void;\n}\n\nconst HDSNavBarSide = React.forwardRef((props: HDSNavBarSideProperties, ref) => {\n  const {\n    title,\n    collapsed,\n    logo,\n    main,\n    footer,\n    className,\n    toggleText,\n    hideToggle,\n    onChange,\n    ...rest\n  } = props;\n\n  const innerRef = useRef<HTMLElement>(null);\n  useImperativeHandle(ref, () => innerRef.current);\n\n  const _handleChange = (e: CustomEvent<NavbarSideChangePayload>) => {\n    if (e.target !== innerRef.current) return;\n    onChange && onChange(e.detail);\n  };\n\n  useEffect(() => {\n    if (innerRef.current) {\n      if (onChange) {\n        innerRef.current.addEventListener('change', _handleChange as EventListener);\n      }\n    }\n    return () => {\n      innerRef.current?.removeEventListener('change', _handleChange as EventListener);\n    };\n  }, [onChange, innerRef]);\n\n  return (\n    <hds-navbar-side\n      ref={innerRef}\n      {...(collapsed && {collapsed})}\n      {...(hideToggle && {'hide-toggle': hideToggle})}\n      {...(className && {class: className})}\n      {...(toggleText && {'toggle-text': toggleText})}\n      {...rest}\n    >\n      {logo && <div slot=\"logo\">{logo}</div>}\n      {title && <div slot=\"title\">{title}</div>}\n      {main && <div slot=\"main\">{main}</div>}\n      {footer && <div slot=\"footer\">{footer}</div>}\n    </hds-navbar-side>\n  );\n});\n\nHDSNavBarSide.defaultProps = {\n  toggleText: 'Hide Menu',\n  hideToggle: false,\n};\n\nexport default HDSNavBarSide;\n"]}