{"version":3,"file":"HDSAccordion.js","sourceRoot":"","sources":["../src/Accordion/HDSAccordion.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAC,SAAS,EAAE,mBAAmB,EAAC,MAAM,OAAO,CAAC;AAC5D,OAAO,EACL,SAAS,GAKV,MAAM,qBAAqB,CAAC;AAE7B,kCAAkC;AAClC,IAAI,SAAS,EAAE,CAAC;AAchB,MAAM,YAAY,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,KAA6B,EAAE,GAAG,EAAE,EAAE;IAC3E,MAAM,EACJ,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,SAAS,EACT,aAAa,EACb,UAAU,EACV,eAAe,EACf,qBAAqB,EACrB,QAAQ,EACR,GAAG,IAAI,EACR,GAAG,KAAK,CAAC;IAEV,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAc,IAAI,CAAC,CAAC;IACjD,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAEjD,MAAM,aAAa,GAAG,CAAC,CAAsC,EAAE,EAAE;QAC/D,IAAI,CAAC,CAAC,aAAa,KAAK,QAAQ,CAAC,OAAO;YAAE,OAAO;QACjD,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE;YAChC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;SAC7E;QACD,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,mBAAmB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;IAC/F,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEzB,OAAO,CACL,uCACE,OAAO,EAAE,OAAO,KACZ,CAAC,SAAS,IAAI,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,KACjC,CAAC,QAAQ,IAAI,EAAC,QAAQ,EAAC,CAAC,KACxB,CAAC,aAAa,IAAI,EAAC,gBAAgB,EAAE,aAAa,EAAC,CAAC,KACpD,CAAC,UAAU,IAAI,EAAC,aAAa,EAAE,UAAU,EAAC,CAAC,KAC3C,CAAC,eAAe,IAAI,EAAC,kBAAkB,EAAE,eAAe,EAAC,CAAC,KAC1D,CAAC,qBAAqB,IAAI,EAAC,yBAAyB,EAAE,qBAAqB,EAAC,CAAC,EACjF,GAAG,EAAE,QAAQ,KACT,IAAI,IAEP,QAAQ,CACK,CACjB,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,YAAY,CAAC,YAAY,GAAG;IAC1B,OAAO,EAAE,SAAS;IAClB,aAAa,EAAE,KAAK;IACpB,UAAU,EAAE,MAAM;IAClB,eAAe,EAAE,KAAK;IACtB,qBAAqB,EAAE,KAAK;IAC5B,QAAQ,EAAE,KAAK;CAChB,CAAC;AACF,eAAe,YAAY,CAAC","sourcesContent":["import React, {useEffect, useImperativeHandle} from 'react';\nimport {\n  Accordion,\n  AccordionChangePayload,\n  AccordionVariant,\n  AccordionArrowPosition,\n  AccordionExpandMode,\n} from '@here/hds-accordion';\n\n// eslint-disable-next-line no-new\nnew Accordion();\n\nexport interface HDSAccordionProperties\n  extends Omit<React.HTMLAttributes<HTMLElement>, 'onChange'> {\n  disabled?: boolean;\n  variant?: AccordionVariant;\n  arrowPosition?: AccordionArrowPosition;\n  expandMode?: AccordionExpandMode;\n  defaultExpanded?: boolean;\n  disableContentPadding?: boolean;\n  // eslint-disable-next-line no-unused-vars\n  onChange?: (value: AccordionChangePayload) => void;\n}\n\nconst HDSAccordion = React.forwardRef((props: HDSAccordionProperties, ref) => {\n  const {\n    children,\n    disabled,\n    variant,\n    className,\n    arrowPosition,\n    expandMode,\n    defaultExpanded,\n    disableContentPadding,\n    onChange,\n    ...rest\n  } = props;\n\n  const innerRef = React.useRef<HTMLElement>(null);\n  useImperativeHandle(ref, () => innerRef.current);\n\n  const _handleChange = (e: CustomEvent<AccordionChangePayload>) => {\n    if (e.currentTarget !== innerRef.current) return;\n    onChange && onChange(e.detail);\n  };\n\n  useEffect(() => {\n    if (onChange && innerRef.current) {\n      innerRef.current.addEventListener('change', _handleChange as EventListener);\n    }\n    return () => innerRef.current?.removeEventListener('change', _handleChange as EventListener);\n  }, [onChange, innerRef]);\n\n  return (\n    <hds-accordion\n      variant={variant}\n      {...(className && {class: className})}\n      {...(disabled && {disabled})}\n      {...(arrowPosition && {'arrow-position': arrowPosition})}\n      {...(expandMode && {'expand-mode': expandMode})}\n      {...(defaultExpanded && {'default-expanded': defaultExpanded})}\n      {...(disableContentPadding && {'disable-content-padding': disableContentPadding})}\n      ref={innerRef}\n      {...rest}\n    >\n      {children}\n    </hds-accordion>\n  );\n});\n\nHDSAccordion.defaultProps = {\n  variant: 'default',\n  arrowPosition: 'end',\n  expandMode: 'many',\n  defaultExpanded: false,\n  disableContentPadding: false,\n  disabled: false,\n};\nexport default HDSAccordion;\n"]}