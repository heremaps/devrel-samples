import React, { useEffect, useImperativeHandle, useRef } from 'react';
import { Launcher } from '@here/hds-launcher';
// eslint-disable-next-line no-new
new Launcher();
const HDSLauncher = React.forwardRef((props, ref) => {
    const { expanded, variant, title, className, subtitle, main, footer, onClose, children, ...rest } = props;
    const innerRef = useRef(null);
    useImperativeHandle(ref, () => innerRef.current);
    const _handleClose = (e) => {
        if (e.target !== innerRef.current)
            return;
        if (e && e.detail && !e.detail.expanded) {
            onClose && onClose();
        }
    };
    useEffect(() => {
        if (innerRef.current) {
            onClose && innerRef.current.addEventListener('change', _handleClose);
        }
        return () => innerRef.current?.removeEventListener('change', _handleClose);
    }, [onClose, innerRef]);
    return (React.createElement("hds-launcher", { variant: variant, ...(expanded && { expanded: true }), ...(className && { class: className }), ref: innerRef, ...rest },
        title && React.createElement("div", { slot: "title" }, title),
        subtitle && React.createElement("div", { slot: "subtitle" }, subtitle),
        main && React.createElement("div", { slot: "main" }, main),
        footer && React.createElement("div", { slot: "footer" }, footer),
        children));
});
HDSLauncher.defaultProps = {
    expanded: false,
    variant: 'subtle',
    panelPosition: 'left',
    panelInteraction: 'none',
    partialSize: 0,
};
export default HDSLauncher;
//# sourceMappingURL=HDSLauncher.js.map