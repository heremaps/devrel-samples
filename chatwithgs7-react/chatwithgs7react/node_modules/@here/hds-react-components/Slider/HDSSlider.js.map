{"version":3,"file":"HDSSlider.js","sourceRoot":"","sources":["../src/Slider/HDSSlider.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAC,MAAM,EAA8C,MAAM,kBAAkB,CAAC;AACrF,OAAO,EAAC,SAAS,EAAE,mBAAmB,EAAE,MAAM,EAAC,MAAM,OAAO,CAAC;AAG7D,kCAAkC;AAClC,IAAI,MAAM,EAAE,CAAC;AA4Bb,MAAM,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,KAA0B,EAAE,GAAG,EAAE,EAAE;IACrE,MAAM,EACJ,QAAQ,EACR,GAAG,EACH,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,SAAS,EACT,OAAO,EACP,cAAc,EACd,WAAW,EACX,WAAW,EACX,kBAAkB,EAClB,UAAU,EACV,UAAU,EACV,SAAS,EACT,cAAc,EACd,iBAAiB,EACjB,OAAO,EACP,YAAY,EACZ,eAAe,EACf,KAAK,EACL,MAAM,EACN,SAAS,EACT,QAAQ,EACR,GAAG,IAAI,EACR,GAAG,KAAK,CAAC;IAEV,MAAM,QAAQ,GAAG,MAAM,CAAc,IAAI,CAAC,CAAC;IAC3C,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAEjD,MAAM,aAAa,GAAG,CAAC,CAAmC,EAAE,EAAE;QAC5D,IAAI,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,OAAO;YAAE,OAAO;QAC1C,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,QAAQ,CAAC,OAAO,EAAE;YACpB,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;SAC7E;QACD,OAAO,GAAG,EAAE;YACV,QAAQ,CAAC,OAAO,EAAE,mBAAmB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;QAClF,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEzB,OAAO,CACL,oCACE,GAAG,EAAE,QAAQ,KACT,CAAC,SAAS,IAAI,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,EACrC,GAAG,EAAE,GAAG,EACR,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,gBACE,SAAS,cACX,OAAO,sBACC,cAAc,KAC5B,CAAC,WAAW,IAAI,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC,kBAC9B,WAAW,0BACH,kBAAkB,iBAC3B,UAAU,iBACV,UAAU,gBACX,SAAS,sBACH,cAAc,yBACX,iBAAiB,cAC5B,OAAO,oBACD,YAAY,uBACT,eAAe,EAClC,KAAK,EAAE,KAAK,EACZ,MAAM,EAAE,MAAM,KACV,CAAC,QAAQ,IAAI,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,KAC9B,IAAI,GACI,CACf,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC;AACpC,SAAS,CAAC,YAAY,GAAG;IACvB,QAAQ,EAAE,KAAK;IACf,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,GAAG;IACR,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,SAAS;IACf,IAAI,EAAE,QAAQ;CACf,CAAC;AACF,eAAe,SAAS,CAAC","sourcesContent":["import {IconCategory} from '@here/hds-iconlibrary';\nimport * as React from 'react';\nimport {Slider, SliderType, SliderSize, SliderChangePayload} from '@here/hds-slider';\nimport {useEffect, useImperativeHandle, useRef} from 'react';\nimport {IconStyle} from 'hds-icon/build/hds-icon.js';\n\n// eslint-disable-next-line no-new\nnew Slider();\n\ninterface HDSSliderProperties extends Omit<React.HTMLAttributes<HTMLElement>, 'onChange'> {\n  disabled?: boolean;\n  min?: number;\n  max?: number;\n  step?: number;\n  type?: SliderType;\n  size?: SliderSize;\n  textStart?: string;\n  textEnd?: string;\n  trackFillStart?: number;\n  noTrackFill?: boolean;\n  trackColors?: string[];\n  trackColorsLengths?: string[];\n  stepValues?: number[];\n  stepLabels?: string[];\n  iconStart?: string;\n  iconStartStyle?: IconStyle;\n  iconStartCategory?: IconCategory;\n  iconEnd?: string;\n  iconEndStyle?: IconStyle;\n  iconEndCategory?: IconCategory;\n  value?: number;\n  value2?: number;\n  onChange?: (_: CustomEvent<SliderChangePayload>) => void;\n}\n\nconst HDSSlider = React.forwardRef((props: HDSSliderProperties, ref) => {\n  const {\n    disabled,\n    min,\n    max,\n    step,\n    type,\n    size,\n    textStart,\n    textEnd,\n    trackFillStart,\n    noTrackFill,\n    trackColors,\n    trackColorsLengths,\n    stepValues,\n    stepLabels,\n    iconStart,\n    iconStartStyle,\n    iconStartCategory,\n    iconEnd,\n    iconEndStyle,\n    iconEndCategory,\n    value,\n    value2,\n    className,\n    onChange,\n    ...rest\n  } = props;\n\n  const innerRef = useRef<HTMLElement>(null);\n  useImperativeHandle(ref, () => innerRef.current);\n\n  const _handleChange = (e: CustomEvent<SliderChangePayload>) => {\n    if (e.target !== innerRef.current) return;\n    onChange && onChange(e);\n  };\n\n  useEffect(() => {\n    if (innerRef.current) {\n      innerRef.current.addEventListener('change', _handleChange as EventListener);\n    }\n    return () => {\n      innerRef.current?.removeEventListener('change', _handleChange as EventListener);\n    };\n  }, [onChange, innerRef]);\n\n  return (\n    <hds-slider\n      ref={innerRef}\n      {...(className && {class: className})}\n      min={min}\n      max={max}\n      step={step}\n      type={type}\n      size={size}\n      text-start={textStart}\n      text-end={textEnd}\n      track-fill-start={trackFillStart}\n      {...(noTrackFill && {'no-track-fill': true})}\n      track-colors={trackColors}\n      track-colors-lengths={trackColorsLengths}\n      step-values={stepValues}\n      step-labels={stepLabels}\n      icon-start={iconStart}\n      icon-start-style={iconStartStyle}\n      icon-start-category={iconStartCategory}\n      icon-end={iconEnd}\n      icon-end-style={iconEndStyle}\n      icon-end-category={iconEndCategory}\n      value={value}\n      value2={value2}\n      {...(disabled && {disabled: true})}\n      {...rest}\n    ></hds-slider>\n  );\n});\n\nHDSSlider.displayName = 'HDSSlider';\nHDSSlider.defaultProps = {\n  disabled: false,\n  min: 0,\n  max: 100,\n  step: 0,\n  type: 'default',\n  size: 'medium',\n};\nexport default HDSSlider;\n"]}