import React, { useEffect, useImperativeHandle, useRef } from 'react';
import { Breadcrumb } from '@here/hds-breadcrumb';
// eslint-disable-next-line no-new
new Breadcrumb();
const HDSBreadcrumb = React.forwardRef((props, ref) => {
    const { children, truncateItems, truncateItemsBuffer, className, onExpand, onChange, ...rest } = props;
    const innerRef = useRef(null);
    useImperativeHandle(ref, () => innerRef.current);
    const _handleChange = (e) => {
        onExpand && onExpand(e.detail);
        onChange && onChange(e.detail);
    };
    useEffect(() => {
        if (innerRef.current && (onExpand || onChange)) {
            innerRef.current.addEventListener('change', _handleChange);
        }
        return () => {
            innerRef.current?.removeEventListener('change', _handleChange);
        };
    }, [onChange, onExpand, innerRef]);
    return (React.createElement("hds-breadcrumb", { ref: innerRef, ...(truncateItems && { 'truncate-items': truncateItems }), ...(truncateItemsBuffer && {
            'truncate-item-buffer': truncateItemsBuffer,
        }), ...(className && { class: className }), ...rest }, children));
});
HDSBreadcrumb.defaultProps = {
    truncateItems: true,
    truncateItemsBuffer: 5,
};
export default HDSBreadcrumb;
//# sourceMappingURL=HDSBreadcrumb.js.map