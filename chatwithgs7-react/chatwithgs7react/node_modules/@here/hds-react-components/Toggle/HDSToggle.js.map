{"version":3,"file":"HDSToggle.js","sourceRoot":"","sources":["../src/Toggle/HDSToggle.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,EAAC,SAAS,EAAE,MAAM,EAAE,mBAAmB,EAAC,MAAM,OAAO,CAAC;AACpE,OAAO,EAAC,MAAM,EAAC,MAAM,kBAAkB,CAAC;AAGxC,kCAAkC;AAClC,IAAI,MAAM,EAAE,CAAC;AAIb,MAAM,SAAS,GAAG,KAAK,CAAC,UAAU,CAChC,CACE,EACE,QAAQ,EACR,OAAO,EACP,KAAK,EACL,QAAQ,EACR,EAAE,EACF,IAAI,EACJ,WAAW,EACX,SAAS,EACT,OAAO,EACP,QAAQ,EACR,YAAY,EACZ,QAAQ,EACR,GAAG,IAAI,EACa,EACtB,GAAG,EACH,EAAE;IACF,MAAM,QAAQ,GAAG,MAAM,CAAc,IAAI,CAAC,CAAC;IAE3C,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAEjD,MAAM,aAAa,GAAG,CAAC,CAAqC,EAAE,EAAE;QAC9D,IAAI,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,OAAO;YAAE,OAAO;QAC1C,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC7B,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,QAAQ,CAAC,OAAO,IAAI,CAAC,OAAO,IAAI,QAAQ,CAAC,EAAE;YAC7C,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;SAC7E;QACD,OAAO,GAAG,EAAE;YACV,QAAQ,CAAC,OAAO,EAAE,mBAAmB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;QAClF,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAElC,OAAO,CACL,uCACM,CAAC,OAAO,IAAI,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,KAC5B,CAAC,QAAQ,IAAI,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,KAC9B,CAAC,YAAY,IAAI,EAAC,eAAe,EAAE,YAAY,EAAC,CAAC,KACjD,CAAC,SAAS,IAAI,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,EACrC,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,QAAQ,EAClB,EAAE,EAAE,EAAE,EACN,IAAI,EAAE,IAAI,EACV,GAAG,EAAE,QAAQ,KACT,IAAI;QAEP,QAAQ;QACR,WAAW,IAAI,8BAAM,IAAI,EAAC,aAAa,IAAE,WAAW,CAAQ,CAClD,CACd,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,SAAS,CAAC,YAAY,GAAG;IACvB,OAAO,EAAE,KAAK;IACd,QAAQ,EAAE,KAAK;IACf,QAAQ,EAAE,KAAK;IACf,EAAE,EAAE,EAAE;IACN,IAAI,EAAE,EAAE;IACR,SAAS,EAAE,EAAE;IACb,YAAY,EAAE,KAAK;IACnB,YAAY,EAAE,EAAE;CACjB,CAAC;AAEF,eAAe,SAAS,CAAC","sourcesContent":["import {CheckboxChangePayload} from '@here/hds-checkbox';\nimport React, {useEffect, useRef, useImperativeHandle} from 'react';\nimport {Toggle} from '@here/hds-toggle';\nimport {HDSCheckboxProperties} from '../Checkbox/HDSCheckbox.js';\n\n// eslint-disable-next-line no-new\nnew Toggle();\n\ninterface HDSToggleProperties extends Omit<HDSCheckboxProperties, 'size'> {}\n\nconst HDSToggle = React.forwardRef(\n  (\n    {\n      children,\n      checked,\n      value,\n      disabled,\n      id,\n      name,\n      description,\n      className,\n      onCheck,\n      onChange,\n      showRequired,\n      required,\n      ...rest\n    }: HDSToggleProperties,\n    ref\n  ) => {\n    const innerRef = useRef<HTMLElement>(null);\n\n    useImperativeHandle(ref, () => innerRef.current);\n\n    const _handleChange = (e: CustomEvent<CheckboxChangePayload>) => {\n      if (e.target !== innerRef.current) return;\n      onCheck && onCheck(e.detail);\n      onChange && onChange(e);\n    };\n\n    useEffect(() => {\n      if (innerRef.current && (onCheck || onChange)) {\n        innerRef.current.addEventListener('change', _handleChange as EventListener);\n      }\n      return () => {\n        innerRef.current?.removeEventListener('change', _handleChange as EventListener);\n      };\n    }, [onCheck, onChange, innerRef]);\n\n    return (\n      <hds-toggle\n        {...(checked && {checked: true})}\n        {...(disabled && {disabled: true})}\n        {...(showRequired && {'show-required': showRequired})}\n        {...(className && {class: className})}\n        value={value}\n        required={required}\n        id={id}\n        name={name}\n        ref={innerRef}\n        {...rest}\n      >\n        {children}\n        {description && <span slot=\"description\">{description}</span>}\n      </hds-toggle>\n    );\n  }\n);\n\nHDSToggle.defaultProps = {\n  checked: false,\n  disabled: false,\n  required: false,\n  id: '',\n  name: '',\n  ariaLabel: '',\n  showRequired: false,\n  autocomplete: '',\n};\n\nexport default HDSToggle;\n"]}