{"version":3,"file":"HDSPanel.js","sourceRoot":"","sources":["../src/Panel/HDSPanel.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAC,SAAS,EAAE,mBAAmB,EAAC,MAAM,OAAO,CAAC;AAC5D,OAAO,EAAC,KAAK,EAAqB,MAAM,iBAAiB,CAAC;AAE1D,kCAAkC;AAClC,IAAI,KAAK,EAAE,CAAC;AAYZ,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,KAAyB,EAAE,GAAG,EAAE,EAAE;IACnE,MAAM,EACJ,OAAO,EACP,aAAa,EACb,gBAAgB,EAChB,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,GAAG,IAAI,EACR,GAAG,KAAK,CAAC;IAEV,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAc,IAAI,CAAC,CAAC;IACjD,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAEjD,MAAM,aAAa,GAAG,CAAC,CAAkC,EAAE,EAAE;QAC3D,IAAI,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,OAAO;YAAE,OAAO;QAC1C,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE;YAChC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;SAC7E;QACD,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,mBAAmB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;IAC/F,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEzB,MAAM,UAAU,GAAuB,EAAE,CAAC;IAE1C,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;IAC1C,gBAAgB,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,GAAG,gBAAgB,CAAC,CAAC;IACzE,aAAa,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,GAAG,aAAa,CAAC,CAAC;IAChE,WAAW,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,WAAW,CAAC,CAAC;IAC1D,QAAQ,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;IAE7C,OAAO,CACL,sCAAe,UAAU,KAAM,CAAC,SAAS,IAAI,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,KAAM,IAAI,EAAE,GAAG,EAAE,QAAQ,IACtF,QAAQ,CACC,CACb,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,YAAY,GAAG;IACtB,OAAO,EAAE,UAAU;IACnB,aAAa,EAAE,MAAM;IACrB,gBAAgB,EAAE,MAAM;IACxB,WAAW,EAAE,CAAC;IACd,QAAQ,EAAE,MAAM;CACjB,CAAC;AAEF,eAAe,QAAQ,CAAC","sourcesContent":["import React, {useEffect, useImperativeHandle} from 'react';\nimport {Panel, PanelChangePayload} from '@here/hds-panel';\n\n// eslint-disable-next-line no-new\nnew Panel();\n\nexport interface HDSPanelProperties extends Omit<React.HTMLAttributes<HTMLElement>, 'onChange'> {\n  children?: React.ReactNode;\n  variant?: string;\n  panelPosition?: string;\n  panelInteraction?: string;\n  partialSize?: number;\n  expanded?: string;\n  onChange?: (value: PanelChangePayload) => void;\n}\n\nconst HDSPanel = React.forwardRef((props: HDSPanelProperties, ref) => {\n  const {\n    variant,\n    panelPosition,\n    panelInteraction,\n    partialSize,\n    expanded,\n    children,\n    className,\n    onChange,\n    ...rest\n  } = props;\n\n  const innerRef = React.useRef<HTMLElement>(null);\n  useImperativeHandle(ref, () => innerRef.current);\n\n  const _handleChange = (e: CustomEvent<PanelChangePayload>) => {\n    if (e.target !== innerRef.current) return;\n    onChange && onChange(e.detail);\n  };\n\n  useEffect(() => {\n    if (onChange && innerRef.current) {\n      innerRef.current.addEventListener('change', _handleChange as EventListener);\n    }\n    return () => innerRef.current?.removeEventListener('change', _handleChange as EventListener);\n  }, [onChange, innerRef]);\n\n  const attributes: HDSPanelProperties = {};\n\n  variant && (attributes.variant = variant);\n  panelInteraction && (attributes['panel-interaction'] = panelInteraction);\n  panelPosition && (attributes['panel-position'] = panelPosition);\n  partialSize && (attributes['partial-size'] = partialSize);\n  expanded && (attributes.expanded = expanded);\n\n  return (\n    <hds-panel {...attributes} {...(className && {class: className})} {...rest} ref={innerRef}>\n      {children}\n    </hds-panel>\n  );\n});\n\nHDSPanel.defaultProps = {\n  variant: 'vertical',\n  panelPosition: 'left',\n  panelInteraction: 'none',\n  partialSize: 0,\n  expanded: 'open',\n};\n\nexport default HDSPanel;\n"]}