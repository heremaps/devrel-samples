import { useEffect, useImperativeHandle } from 'react';
import * as React from 'react';
import { Icon } from '@here/hds-icon';
// eslint-disable-next-line no-new
new Icon();
const HDSIcon = React.forwardRef((props, ref) => {
    const { iconStyle, className, onNotFound, ...rest } = props;
    const innerRef = React.useRef(null);
    useImperativeHandle(ref, () => innerRef.current);
    const _handleNotFound = (e) => {
        if (e.target !== innerRef.current)
            return;
        onNotFound && onNotFound(e.detail);
    };
    useEffect(() => {
        if (onNotFound && innerRef.current) {
            innerRef.current.addEventListener('notfound', _handleNotFound);
        }
        return () => innerRef.current?.removeEventListener('notfound', _handleNotFound);
    }, [onNotFound, innerRef]);
    return (React.createElement("hds-icon", { ...(className && { class: className }), ...(iconStyle && { 'icon-style': iconStyle }), ref: innerRef, ...rest }));
});
HDSIcon.defaultProps = {
    category: 'core-ui',
    iconStyle: 'solid',
    size: '16px',
};
export default HDSIcon;
//# sourceMappingURL=HDSIcon.js.map