{"version":3,"file":"HDSSwitcher.js","sourceRoot":"","sources":["../src/Switcher/HDSSwitcher.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAgC,QAAQ,EAAwB,MAAM,oBAAoB,CAAC;AAClG,OAAO,KAAK,EAAE,EAAC,SAAS,EAAE,mBAAmB,EAAE,MAAM,EAAC,MAAM,OAAO,CAAC;AAEpE,kCAAkC;AAClC,IAAI,QAAQ,EAAE,CAAC;AAUf,MAAM,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,KAAuB,EAAE,GAAG,EAAE,EAAE;IACpE,MAAM,EAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,IAAI,EAAC,GAAG,KAAK,CAAC;IAC3F,MAAM,QAAQ,GAAG,MAAM,CAAc,IAAI,CAAC,CAAC;IAE3C,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAEjD,MAAM,eAAe,GAAG,CAAC,CAAqC,EAAE,EAAE;QAChE,IAAI,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,OAAO;YAAE,OAAO;QAC1C,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,QAAQ,CAAC,OAAO,EAAE;YACpB,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,eAAgC,CAAC,CAAC;aAC/E;SACF;QACD,OAAO,GAAG,EAAE;YACV,QAAQ,CAAC,OAAO,EAAE,mBAAmB,CAAC,QAAQ,EAAE,eAAgC,CAAC,CAAC;QACpF,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEzB,OAAO,CACL,yCACM,CAAC,SAAS,IAAI,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,KACjC,CAAC,OAAO,IAAI,EAAC,OAAO,EAAC,CAAC,KACtB,CAAC,IAAI,IAAI,EAAC,IAAI,EAAC,CAAC,KAChB,CAAC,QAAQ,IAAI,EAAC,QAAQ,EAAC,CAAC,KACxB,CAAC,SAAS,IAAI,EAAC,YAAY,EAAE,SAAS,EAAC,CAAC,EAC5C,KAAK,EAAE,SAAS,EAChB,GAAG,EAAE,QAAQ,KACT,IAAI,IAEP,QAAQ,CACI,CAChB,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,WAAW,CAAC,YAAY,GAAG;IACzB,QAAQ,EAAE,KAAK;IACf,OAAO,EAAE,QAAQ;IACjB,IAAI,EAAE,QAAQ;IACd,SAAS,EAAE,SAAS;CACrB,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import {SwitcherVariant, SwitcherSize, Switcher, SwitcherSelectPayload} from '@here/hds-switcher';\nimport React, {useEffect, useImperativeHandle, useRef} from 'react';\n\n// eslint-disable-next-line no-new\nnew Switcher();\n\ninterface HDSSwitcherProps extends Omit<React.HTMLAttributes<HTMLElement>, 'onSelect'> {\n  variant?: SwitcherVariant;\n  size?: SwitcherSize;\n  disabled?: boolean;\n  ariaLabel?: string;\n  onSelect?: (tabIndex: SwitcherSelectPayload) => void;\n}\n\nconst HDSSwitcher = React.forwardRef((props: HDSSwitcherProps, ref) => {\n  const {children, className, disabled, variant, size, ariaLabel, onSelect, ...rest} = props;\n  const innerRef = useRef<HTMLElement>(null);\n\n  useImperativeHandle(ref, () => innerRef.current);\n\n  const _handleSelected = (e: CustomEvent<SwitcherSelectPayload>) => {\n    if (e.target !== innerRef.current) return;\n    onSelect && onSelect(e.detail);\n  };\n\n  useEffect(() => {\n    if (innerRef.current) {\n      if (onSelect) {\n        innerRef.current.addEventListener('select', _handleSelected as EventListener);\n      }\n    }\n    return () => {\n      innerRef.current?.removeEventListener('select', _handleSelected as EventListener);\n    };\n  }, [onSelect, innerRef]);\n\n  return (\n    <hds-switcher\n      {...(className && {class: className})}\n      {...(variant && {variant})}\n      {...(size && {size})}\n      {...(disabled && {disabled})}\n      {...(ariaLabel && {'aria-label': ariaLabel})}\n      class={className}\n      ref={innerRef}\n      {...rest}\n    >\n      {children}\n    </hds-switcher>\n  );\n});\n\nHDSSwitcher.defaultProps = {\n  disabled: false,\n  variant: 'subtle',\n  size: 'medium',\n  ariaLabel: undefined,\n};\n\nexport default HDSSwitcher;\n"]}