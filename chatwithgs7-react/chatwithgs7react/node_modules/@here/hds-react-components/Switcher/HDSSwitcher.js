import { Switcher } from '@here/hds-switcher';
import React, { useEffect, useImperativeHandle, useRef } from 'react';
// eslint-disable-next-line no-new
new Switcher();
const HDSSwitcher = React.forwardRef((props, ref) => {
    const { children, className, disabled, variant, size, ariaLabel, onSelect, ...rest } = props;
    const innerRef = useRef(null);
    useImperativeHandle(ref, () => innerRef.current);
    const _handleSelected = (e) => {
        if (e.target !== innerRef.current)
            return;
        onSelect && onSelect(e.detail);
    };
    useEffect(() => {
        if (innerRef.current) {
            if (onSelect) {
                innerRef.current.addEventListener('select', _handleSelected);
            }
        }
        return () => {
            innerRef.current?.removeEventListener('select', _handleSelected);
        };
    }, [onSelect, innerRef]);
    return (React.createElement("hds-switcher", { ...(className && { class: className }), ...(variant && { variant }), ...(size && { size }), ...(disabled && { disabled }), ...(ariaLabel && { 'aria-label': ariaLabel }), class: className, ref: innerRef, ...rest }, children));
});
HDSSwitcher.defaultProps = {
    disabled: false,
    variant: 'subtle',
    size: 'medium',
    ariaLabel: undefined,
};
export default HDSSwitcher;
//# sourceMappingURL=HDSSwitcher.js.map