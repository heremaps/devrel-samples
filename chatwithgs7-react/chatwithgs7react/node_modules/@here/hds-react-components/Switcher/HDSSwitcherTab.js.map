{"version":3,"file":"HDSSwitcherTab.js","sourceRoot":"","sources":["../src/Switcher/HDSSwitcherTab.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,EAAC,SAAS,EAAE,mBAAmB,EAAE,MAAM,EAAC,MAAM,OAAO,CAAC;AACpE,OAAO,EAAC,WAAW,EAA2B,MAAM,oBAAoB,CAAC;AAEzE,IAAI,WAAW,EAAE,CAAC;AAalB,MAAM,cAAc,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,KAA0B,EAAE,GAAG,EAAE,EAAE;IAC1E,MAAM,EACJ,IAAI,EACJ,YAAY,EACZ,SAAS,EACT,iBAAiB,EACjB,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,SAAS,EACT,QAAQ,EACR,GAAG,IAAI,EACR,GAAG,KAAK,CAAC;IACV,MAAM,QAAQ,GAAG,MAAM,CAAc,IAAI,CAAC,CAAC;IAE3C,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAEjD,MAAM,eAAe,GAAG,CAAC,CAAwC,EAAE,EAAE;QACnE,IAAI,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,OAAO;YAAE,OAAO;QAC1C,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,QAAQ,CAAC,OAAO,EAAE;YACpB,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,eAAgC,CAAC,CAAC;aAC/E;SACF;QACD,OAAO,GAAG,EAAE;YACV,QAAQ,CAAC,OAAO,EAAE,mBAAmB,CAAC,QAAQ,EAAE,eAAgC,CAAC,CAAC;QACpF,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IACzB,OAAO,CACL,wDACc,SAAS,EACrB,IAAI,EAAE,IAAI,KACN,CAAC,YAAY,IAAI,EAAC,eAAe,EAAE,YAAY,EAAC,CAAC,EACrD,SAAS,EAAE,SAAS,KAChB,CAAC,iBAAiB,IAAI,EAAC,qBAAqB,EAAE,iBAAiB,EAAC,CAAC,KACjE,CAAC,QAAQ,IAAI,EAAC,QAAQ,EAAC,CAAC,KACxB,CAAC,QAAQ,IAAI,EAAC,QAAQ,EAAC,CAAC,KACxB,CAAC,SAAS,IAAI,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,EACrC,GAAG,EAAE,QAAQ,KACT,IAAI,IAEP,QAAQ,CACQ,CACpB,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,cAAc,CAAC,YAAY,GAAG;IAC5B,QAAQ,EAAE,KAAK;IACf,QAAQ,EAAE,KAAK;IACf,IAAI,EAAE,SAAS;IACf,YAAY,EAAE,SAAS;IACvB,SAAS,EAAE,SAAS;IACpB,iBAAiB,EAAE,SAAS;IAC5B,SAAS,EAAE,SAAS;CACrB,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import {IconCategory} from '@here/hds-iconlibrary';\nimport React, {useEffect, useImperativeHandle, useRef} from 'react';\nimport {SwitcherTab, SwitcherTabSelectPayload} from '@here/hds-switcher';\n\nnew SwitcherTab();\n\ninterface HDSSwitcherTabProps extends Omit<React.HTMLAttributes<HTMLElement>, 'onSelect'> {\n  children?: React.ReactNode;\n  icon?: string;\n  iconCategory?: IconCategory;\n  iconRight?: string;\n  iconRightCategory?: IconCategory;\n  selected?: boolean;\n  disabled?: boolean;\n  ariaLabel?: string;\n  onSelect?: (tabIndex: SwitcherTabSelectPayload) => void;\n}\nconst HDSSwitcherTab = React.forwardRef((props: HDSSwitcherTabProps, ref) => {\n  const {\n    icon,\n    iconCategory,\n    iconRight,\n    iconRightCategory,\n    selected,\n    disabled,\n    children,\n    ariaLabel,\n    className,\n    onSelect,\n    ...rest\n  } = props;\n  const innerRef = useRef<HTMLElement>(null);\n\n  useImperativeHandle(ref, () => innerRef.current);\n\n  const _handleSelected = (e: CustomEvent<SwitcherTabSelectPayload>) => {\n    if (e.target !== innerRef.current) return;\n    onSelect && onSelect(e.detail);\n  };\n\n  useEffect(() => {\n    if (innerRef.current) {\n      if (onSelect) {\n        innerRef.current.addEventListener('select', _handleSelected as EventListener);\n      }\n    }\n    return () => {\n      innerRef.current?.removeEventListener('select', _handleSelected as EventListener);\n    };\n  }, [onSelect, innerRef]);\n  return (\n    <hds-switcher-tab\n      aria-label={ariaLabel}\n      icon={icon}\n      {...(iconCategory && {'icon-category': iconCategory})}\n      iconRight={iconRight}\n      {...(iconRightCategory && {'icon-right-category': iconRightCategory})}\n      {...(selected && {selected})}\n      {...(disabled && {disabled})}\n      {...(className && {class: className})}\n      ref={innerRef}\n      {...rest}\n    >\n      {children}\n    </hds-switcher-tab>\n  );\n});\n\nHDSSwitcherTab.defaultProps = {\n  disabled: false,\n  selected: false,\n  icon: undefined,\n  iconCategory: 'core-ui',\n  iconRight: undefined,\n  iconRightCategory: 'core-ui',\n  ariaLabel: undefined,\n};\n\nexport default HDSSwitcherTab;\n"]}