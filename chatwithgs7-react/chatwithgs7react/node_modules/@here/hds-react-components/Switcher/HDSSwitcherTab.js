import React, { useEffect, useImperativeHandle, useRef } from 'react';
import { SwitcherTab } from '@here/hds-switcher';
new SwitcherTab();
const HDSSwitcherTab = React.forwardRef((props, ref) => {
    const { icon, iconCategory, iconRight, iconRightCategory, selected, disabled, children, ariaLabel, className, onSelect, ...rest } = props;
    const innerRef = useRef(null);
    useImperativeHandle(ref, () => innerRef.current);
    const _handleSelected = (e) => {
        if (e.target !== innerRef.current)
            return;
        onSelect && onSelect(e.detail);
    };
    useEffect(() => {
        if (innerRef.current) {
            if (onSelect) {
                innerRef.current.addEventListener('select', _handleSelected);
            }
        }
        return () => {
            innerRef.current?.removeEventListener('select', _handleSelected);
        };
    }, [onSelect, innerRef]);
    return (React.createElement("hds-switcher-tab", { "aria-label": ariaLabel, icon: icon, ...(iconCategory && { 'icon-category': iconCategory }), iconRight: iconRight, ...(iconRightCategory && { 'icon-right-category': iconRightCategory }), ...(selected && { selected }), ...(disabled && { disabled }), ...(className && { class: className }), ref: innerRef, ...rest }, children));
});
HDSSwitcherTab.defaultProps = {
    disabled: false,
    selected: false,
    icon: undefined,
    iconCategory: 'core-ui',
    iconRight: undefined,
    iconRightCategory: 'core-ui',
    ariaLabel: undefined,
};
export default HDSSwitcherTab;
//# sourceMappingURL=HDSSwitcherTab.js.map