// eslint-disable-next-line no-use-before-define
import React, { useEffect, useImperativeHandle, useRef } from 'react';
import { Calendar, } from '@here/hds-calendar';
// eslint-disable-next-line no-new
new Calendar();
const HDSCalendar = React.forwardRef((props, ref) => {
    const { children, className, onSelect, onChange, ...rest } = props;
    const innerRef = useRef(null);
    useImperativeHandle(ref, () => innerRef.current);
    const _handleChange = (e) => {
        if (e.target !== innerRef.current)
            return;
        onChange && onChange(e);
    };
    const _handleSelect = (e) => {
        if (e.target !== innerRef.current)
            return;
        onSelect && onSelect(e);
    };
    useEffect(() => {
        if (innerRef.current) {
            innerRef.current.addEventListener('change', _handleChange);
            innerRef.current.addEventListener('select', _handleSelect);
        }
        return () => {
            innerRef.current?.removeEventListener('change', _handleChange);
            innerRef.current?.removeEventListener('select', _handleSelect);
        };
    }, [onSelect, onChange, innerRef]);
    return (React.createElement("hds-calendar", { ref: innerRef, ...(className && { class: className }), ...rest }, children && children));
});
HDSCalendar.displayName = 'HDSCalendar';
HDSCalendar.defaultProps = {
    variant: 'default',
    firstDayOfWeek: 'Monday',
    lang: 'en-US',
    monthFormat: 'long',
    yearFormat: 'numeric',
    weekdayFormat: 'short',
    dayFormat: 'numeric',
    dayOutsideFormat: 'numeric',
    value: '',
    selected: '',
    hideYearControls: false,
    hideMonthControls: false,
};
export default HDSCalendar;
//# sourceMappingURL=HDSCalendar.js.map