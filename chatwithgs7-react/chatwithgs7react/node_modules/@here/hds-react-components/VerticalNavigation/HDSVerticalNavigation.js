import { VerticalNavigation, } from '@here/hds-vertical-navigation';
import React, { useEffect, useImperativeHandle, useRef } from 'react';
// eslint-disable-next-line no-new
new VerticalNavigation();
const HDSVerticalNavigation = React.forwardRef((props, ref) => {
    const { onSelect, onChange, chevron, navMode, children, className, ...rest } = props;
    const innerRef = useRef(null);
    useImperativeHandle(ref, () => innerRef.current);
    const _handleSelected = (e) => {
        onSelect && onSelect(e.detail);
    };
    const _handleChanged = (e) => {
        onChange && onChange(e.detail);
    };
    useEffect(() => {
        if (onSelect && innerRef.current) {
            innerRef.current.addEventListener('select', _handleSelected);
        }
        return () => {
            innerRef.current?.removeEventListener('select', _handleSelected);
        };
    }, [onSelect, innerRef]);
    useEffect(() => {
        if (onChange && innerRef.current) {
            innerRef.current.addEventListener('change', _handleChanged);
        }
        return () => {
            innerRef.current?.removeEventListener('change', _handleChanged);
        };
    }, [onChange, innerRef]);
    return (React.createElement("hds-vertical-navigation", { ref: innerRef, ...(className && { class: className }), ...(chevron && { chevron }), ...(navMode && { 'nav-mode': navMode }), ...rest }, children));
});
HDSVerticalNavigation.defaultProps = {
    navMode: 'expanded',
    chevron: false,
};
export default HDSVerticalNavigation;
//# sourceMappingURL=HDSVerticalNavigation.js.map