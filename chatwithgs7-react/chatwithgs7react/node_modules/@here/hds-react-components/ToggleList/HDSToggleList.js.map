{"version":3,"file":"HDSToggleList.js","sourceRoot":"","sources":["../src/ToggleList/HDSToggleList.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,EAAC,SAAS,EAAE,mBAAmB,EAAC,MAAM,OAAO,CAAC;AAC5D,OAAO,EAAC,UAAU,EAAgD,MAAM,sBAAsB,CAAC;AAG/F,kCAAkC;AAClC,IAAI,UAAU,EAAE,CAAC;AAQjB,MAAM,aAAa,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,KAA8B,EAAE,GAAG,EAAE,EAAE;IAC7E,MAAM,EAAC,QAAQ,EAAE,UAAU,EAAE,eAAe,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAI,EAAC,GAAG,KAAK,CAAC;IAE9F,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAc,IAAI,CAAC,CAAC;IACjD,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAEjD,MAAM,aAAa,GAAG,CAAC,CAAuC,EAAE,EAAE;QAChE,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC;IACF,MAAM,aAAa,GAAG,CAAC,CAAiC,EAAE,EAAE;QAC1D,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE;YAChC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;SAC7E;QACD,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,mBAAmB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;IAC/F,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEzB,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE;YAChC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;SAC7E;QACD,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,mBAAmB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;IAC/F,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEzB,OAAO,CACL,2CACM,CAAC,UAAU,IAAI,EAAC,aAAa,EAAE,UAAU,EAAC,CAAC,KAC3C,CAAC,eAAe,IAAI,EAAC,kBAAkB,EAAE,eAAe,EAAC,CAAC,KAC1D,CAAC,SAAS,IAAI,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,EACrC,GAAG,EAAE,QAAQ,KACT,IAAI,IAEP,QAAQ,CACM,CAClB,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,aAAa,CAAC,YAAY,GAAG;IAC3B,UAAU,EAAE,MAAM;IAClB,eAAe,EAAE,KAAK;CACvB,CAAC;AAEF,eAAe,aAAa,CAAC","sourcesContent":["import {ListSelectPayload} from '@here/hds-list';\nimport React, {useEffect, useImperativeHandle} from 'react';\nimport {ToggleList, TogglelistExpandMode, ToggleListChangePayload} from '@here/hds-togglelist';\nimport {HDSListProperties} from '../List/HDSList.js';\n\n// eslint-disable-next-line no-new\nnew ToggleList();\n\ninterface HDSToggleListProperties extends Omit<HDSListProperties, 'onChange'> {\n  expandMode?: TogglelistExpandMode;\n  defaultExpanded?: boolean;\n  onChange?: (value: ToggleListChangePayload) => void;\n}\n\nconst HDSToggleList = React.forwardRef((props: HDSToggleListProperties, ref) => {\n  const {children, expandMode, defaultExpanded, className, onChange, onSelect, ...rest} = props;\n\n  const innerRef = React.useRef<HTMLElement>(null);\n  useImperativeHandle(ref, () => innerRef.current);\n\n  const _handleChange = (e: CustomEvent<ToggleListChangePayload>) => {\n    onChange && onChange(e.detail);\n  };\n  const _handleSelect = (e: CustomEvent<ListSelectPayload>) => {\n    onSelect && onSelect(e.detail);\n  };\n\n  useEffect(() => {\n    if (onChange && innerRef.current) {\n      innerRef.current.addEventListener('change', _handleChange as EventListener);\n    }\n    return () => innerRef.current?.removeEventListener('change', _handleChange as EventListener);\n  }, [onChange, innerRef]);\n\n  useEffect(() => {\n    if (onSelect && innerRef.current) {\n      innerRef.current.addEventListener('select', _handleSelect as EventListener);\n    }\n    return () => innerRef.current?.removeEventListener('select', _handleSelect as EventListener);\n  }, [onSelect, innerRef]);\n\n  return (\n    <hds-togglelist\n      {...(expandMode && {'expand-mode': expandMode})}\n      {...(defaultExpanded && {'default-expanded': defaultExpanded})}\n      {...(className && {class: className})}\n      ref={innerRef}\n      {...rest}\n    >\n      {children}\n    </hds-togglelist>\n  );\n});\n\nHDSToggleList.defaultProps = {\n  expandMode: 'many',\n  defaultExpanded: false,\n};\n\nexport default HDSToggleList;\n"]}