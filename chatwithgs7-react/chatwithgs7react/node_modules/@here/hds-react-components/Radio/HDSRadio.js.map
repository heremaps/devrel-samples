{"version":3,"file":"HDSRadio.js","sourceRoot":"","sources":["../src/Radio/HDSRadio.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAC,SAAS,EAAE,mBAAmB,EAAE,MAAM,EAAC,MAAM,OAAO,CAAC;AACpE,OAAO,EAAC,KAAK,EAAqB,MAAM,iBAAiB,CAAC;AAE1D,IAAI,KAAK,EAAE,CAAC;AAgBZ,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,KAAoB,EAAE,GAAG,EAAE,EAAE;IAC9D,MAAM,EACJ,OAAO,EACP,cAAc,EACd,QAAQ,EACR,EAAE,EACF,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,WAAW,EACX,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,YAAY,EACZ,GAAG,IAAI,EACR,GAAG,KAAK,CAAC;IACV,MAAM,QAAQ,GAAG,MAAM,CAAc,IAAI,CAAC,CAAC;IAC3C,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAEjD,MAAM,aAAa,GAAG,CAAC,CAAkC,EAAE,EAAE;QAC3D,IAAI,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,OAAO;YAAE,OAAO;QAC1C,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;IACF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,EAAE;YAChC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;SAC7E;QACD,OAAO,GAAG,EAAE;YACV,QAAQ,CAAC,OAAO,EAAE,mBAAmB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;QAClF,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEzB,OAAO,CACL,sCACM,CAAC,OAAO,IAAI,EAAC,OAAO,EAAC,CAAC,KACtB,CAAC,cAAc,IAAI,EAAC,cAAc,EAAC,CAAC,KACpC,CAAC,QAAQ,IAAI,EAAC,QAAQ,EAAC,CAAC,KACxB,CAAC,SAAS,IAAI,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,KACjC,CAAC,YAAY,IAAI,EAAC,YAAY,EAAC,CAAC,KAChC,CAAC,IAAI,IAAI,EAAC,IAAI,EAAC,CAAC,EACpB,EAAE,EAAE,EAAE,EACN,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,GAAG,EAAE,QAAQ,KACT,IAAI;QAEP,QAAQ;QACR,WAAW,IAAI,8BAAM,IAAI,EAAC,aAAa,IAAE,WAAW,CAAQ,CACnD,CACb,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,YAAY,GAAG;IACtB,OAAO,EAAE,KAAK;IACd,QAAQ,EAAE,KAAK;IACf,IAAI,EAAE,QAAQ;IACd,KAAK,EAAE,EAAE;IACT,IAAI,EAAE,EAAE;IACR,WAAW,EAAE,EAAE;IACf,YAAY,EAAE,EAAE;CACjB,CAAC;AAEF,eAAe,QAAQ,CAAC","sourcesContent":["import React, {useEffect, useImperativeHandle, useRef} from 'react';\nimport {Radio, RadioChangePayload} from '@here/hds-radio';\n\nnew Radio();\n\ninterface HDSRadioProps extends Omit<React.HTMLAttributes<HTMLElement>, 'onChange'> {\n  children: React.ReactNode;\n  checked?: boolean;\n  defaultChecked?: boolean;\n  disabled?: boolean;\n  size?: string;\n  id?: string;\n  name?: string;\n  value?: string;\n  description?: React.ReactNode;\n  autocomplete?: string;\n  onChange?: (event: CustomEvent<RadioChangePayload>) => void;\n}\n\nconst HDSRadio = React.forwardRef((props: HDSRadioProps, ref) => {\n  const {\n    checked,\n    defaultChecked,\n    disabled,\n    id,\n    name,\n    value,\n    size,\n    description,\n    className,\n    children,\n    onChange,\n    autocomplete,\n    ...rest\n  } = props;\n  const innerRef = useRef<HTMLElement>(null);\n  useImperativeHandle(ref, () => innerRef.current);\n\n  const _handleChange = (e: CustomEvent<RadioChangePayload>) => {\n    if (e.target !== innerRef.current) return;\n    onChange && onChange(e);\n  };\n  useEffect(() => {\n    if (innerRef.current && onChange) {\n      innerRef.current.addEventListener('change', _handleChange as EventListener);\n    }\n    return () => {\n      innerRef.current?.removeEventListener('change', _handleChange as EventListener);\n    };\n  }, [onChange, innerRef]);\n\n  return (\n    <hds-radio\n      {...(checked && {checked})}\n      {...(defaultChecked && {defaultChecked})}\n      {...(disabled && {disabled})}\n      {...(className && {class: className})}\n      {...(autocomplete && {autocomplete})}\n      {...(size && {size})}\n      id={id}\n      name={name}\n      value={value}\n      ref={innerRef}\n      {...rest}\n    >\n      {children}\n      {description && <span slot=\"description\">{description}</span>}\n    </hds-radio>\n  );\n});\n\nHDSRadio.defaultProps = {\n  checked: false,\n  disabled: false,\n  size: 'medium',\n  value: '',\n  name: '',\n  description: '',\n  autocomplete: '',\n};\n\nexport default HDSRadio;\n"]}