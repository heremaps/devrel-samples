import React, { useEffect, useRef, useImperativeHandle } from 'react';
import { Checkbox } from '@here/hds-checkbox';
// eslint-disable-next-line no-new
new Checkbox();
const HDSCheckbox = React.forwardRef(({ children, checked, value, size, disabled, id, name, description, ariaLabel, className, onCheck, onChange, showRequired, required, autocomplete, ...rest }, ref) => {
    const innerRef = useRef(null);
    useImperativeHandle(ref, () => innerRef.current);
    const _handleChange = (e) => {
        if (e.target !== innerRef.current)
            return;
        onCheck && onCheck(e.detail);
        onChange && onChange(e);
    };
    useEffect(() => {
        if (innerRef.current && (onCheck || onChange)) {
            innerRef.current.addEventListener('change', _handleChange);
        }
        return () => {
            innerRef.current?.removeEventListener('change', _handleChange);
        };
    }, [onCheck, onChange, innerRef]);
    return (React.createElement("hds-checkbox", { ...(checked && { checked: true }), ...(disabled && { disabled: true }), ...(showRequired && { 'show-required': showRequired }), ...(className && { class: className }), ...(autocomplete && { autocomplete }), ...(ariaLabel && { 'aria-label': ariaLabel }), value: value, size: size, required: required, id: id, name: name, ref: innerRef, ...rest },
        children,
        description && React.createElement("span", { slot: "description" }, description)));
});
HDSCheckbox.defaultProps = {
    size: 'medium',
    checked: false,
    disabled: false,
    required: false,
    showRequired: false,
    name: '',
    autocomplete: '',
    ariaLabel: '',
};
export default HDSCheckbox;
//# sourceMappingURL=HDSCheckbox.js.map