import { TabBar } from '@here/hds-tabs';
import React, { useEffect, useImperativeHandle, useRef } from 'react';
// eslint-disable-next-line no-new
new TabBar();
const HDSTabBar = React.forwardRef((props, ref) => {
    const { children, variant, className, onSelect, selectFirstTab, ariaLabel, ariaRole, ...rest } = props;
    const innerRef = useRef(null);
    useImperativeHandle(ref, () => innerRef.current);
    const _handleSelected = (e) => {
        if (e.target !== innerRef.current)
            return;
        onSelect && onSelect(e.detail);
    };
    useEffect(() => {
        if (innerRef.current) {
            if (onSelect) {
                innerRef.current.addEventListener('select', _handleSelected);
            }
        }
        return () => {
            innerRef.current?.removeEventListener('select', _handleSelected);
        };
    }, [onSelect, innerRef]);
    return (React.createElement("hds-tab-bar", { variant: variant, ...(selectFirstTab && { 'select-first-tab': selectFirstTab }), ...(ariaRole && { 'aria-role': ariaRole }), ...(className && { class: className }), "aria-label": ariaLabel, ref: innerRef, ...rest }, children));
});
HDSTabBar.defaultProps = {
    variant: 'default',
    selectFirstTab: false,
    ariaLabel: undefined,
    ariaRole: 'tablist',
};
export default HDSTabBar;
//# sourceMappingURL=HDSTabBar.js.map