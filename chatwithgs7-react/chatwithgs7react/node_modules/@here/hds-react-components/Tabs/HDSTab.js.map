{"version":3,"file":"HDSTab.js","sourceRoot":"","sources":["../src/Tabs/HDSTab.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAC,GAAG,EAAC,MAAM,gBAAgB,CAAC;AAEnC,kCAAkC;AAClC,IAAI,GAAG,EAAE,CAAC;AAiBV,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAC7B,CACE,EACE,IAAI,EACJ,YAAY,EACZ,QAAQ,EACR,QAAQ,EACR,YAAY,EACZ,QAAQ,EACR,IAAI,EACJ,OAAO,EACP,QAAQ,EACR,UAAU,EACV,SAAS,EACT,WAAW,EACX,YAAY,EACZ,IAAI,EACJ,GAAG,IAAI,EACK,EACd,GAAG,EACH,EAAE,CAAC,CACH,iCACE,IAAI,EAAE,IAAI,mBACK,YAAY,KACvB,CAAC,QAAQ,IAAI,EAAC,WAAW,EAAE,QAAQ,EAAC,CAAC,KACrC,CAAC,UAAU,IAAI,EAAC,cAAc,EAAE,UAAU,EAAC,CAAC,KAC5C,CAAC,QAAQ,IAAI,EAAC,QAAQ,EAAC,CAAC,KACxB,CAAC,QAAQ,IAAI,EAAC,QAAQ,EAAC,CAAC,KACxB,CAAC,SAAS,IAAI,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,KACjC,CAAC,IAAI,IAAI,EAAC,IAAI,EAAC,CAAC,KAChB,CAAC,OAAO,IAAI,EAAC,OAAO,EAAC,CAAC,KACtB,CAAC,WAAW,IAAI,EAAC,cAAc,EAAE,WAAW,EAAC,CAAC,KAC9C,CAAC,YAAY,IAAI,EAAC,eAAe,EAAE,YAAY,EAAC,CAAC,KACjD,CAAC,YAAY,IAAI,EAAC,eAAe,EAAE,YAAY,EAAC,CAAC,EACrD,GAAG,EAAE,GAAG,KACJ,IAAI;IAEP,QAAQ;IACR,IAAI,IAAI,6BAAK,IAAI,EAAC,MAAM,IAAE,IAAI,CAAO,CAC9B,CACX,CACF,CAAC;AAEF,MAAM,CAAC,YAAY,GAAG;IACpB,IAAI,EAAE,EAAE;IACR,YAAY,EAAE,SAAS;IACvB,IAAI,EAAE,KAAK;IACX,WAAW,EAAE,KAAK;IAClB,YAAY,EAAE,KAAK;IACnB,QAAQ,EAAE,KAAK;IACf,YAAY,EAAE,SAAS;IACvB,QAAQ,EAAE,KAAK;IACf,UAAU,EAAE,EAAE;IACd,QAAQ,EAAE,KAAK;CAChB,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import {IconCategory} from '@here/hds-iconlibrary';\nimport React from 'react';\nimport {Tab} from '@here/hds-tabs';\n\n// eslint-disable-next-line no-new\nnew Tab();\n\ninterface HDSTabProps extends React.HTMLAttributes<HTMLElement> {\n  children: React.ReactNode;\n  menu?: React.ReactNode;\n  icon?: string;\n  iconCategory?: IconCategory;\n  link?: boolean;\n  chevron?: boolean;\n  clickAction?: boolean;\n  externalLink?: boolean;\n  selected?: boolean;\n  disabled?: boolean;\n  ariaControls?: string;\n  ariaRole?: string;\n  tabPanelId?: string;\n}\nconst HDSTab = React.forwardRef(\n  (\n    {\n      icon,\n      iconCategory,\n      selected,\n      disabled,\n      ariaControls,\n      ariaRole,\n      link,\n      chevron,\n      children,\n      tabPanelId,\n      className,\n      clickAction,\n      externalLink,\n      menu,\n      ...rest\n    }: HDSTabProps,\n    ref\n  ) => (\n    <hds-tab\n      icon={icon}\n      aria-controls={ariaControls}\n      {...(ariaRole && {'aria-role': ariaRole})}\n      {...(tabPanelId && {'tab-panel-id': tabPanelId})}\n      {...(selected && {selected})}\n      {...(disabled && {disabled})}\n      {...(className && {class: className})}\n      {...(link && {link})}\n      {...(chevron && {chevron})}\n      {...(clickAction && {'click-action': clickAction})}\n      {...(externalLink && {'external-link': externalLink})}\n      {...(iconCategory && {'icon-category': iconCategory})}\n      ref={ref}\n      {...rest}\n    >\n      {children}\n      {menu && <div slot=\"menu\">{menu}</div>}\n    </hds-tab>\n  )\n);\n\nHDSTab.defaultProps = {\n  icon: '',\n  iconCategory: 'core-ui',\n  link: false,\n  clickAction: false,\n  externalLink: false,\n  disabled: false,\n  ariaControls: undefined,\n  ariaRole: 'tab',\n  tabPanelId: '',\n  selected: false,\n};\n\nexport default HDSTab;\n"]}