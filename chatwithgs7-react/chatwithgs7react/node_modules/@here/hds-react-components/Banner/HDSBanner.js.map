{"version":3,"file":"HDSBanner.js","sourceRoot":"","sources":["../src/Banner/HDSBanner.tsx"],"names":[],"mappings":"AAAA,gDAAgD;AAChD,OAAO,KAAK,EAAE,EAAC,SAAS,EAAE,mBAAmB,EAAE,MAAM,EAAC,MAAM,OAAO,CAAC;AACpE,OAAO,EAAC,MAAM,EAAkD,MAAM,kBAAkB,CAAC;AAEzF,kCAAkC;AAClC,IAAI,MAAM,EAAE,CAAC;AAkBb,MAAM,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,KAA0B,EAAE,GAAG,EAAE,EAAE;IACrE,MAAM,EACJ,OAAO,EACP,OAAO,EACP,KAAK,EACL,OAAO,EACP,WAAW,EACX,SAAS,EACT,SAAS,EACT,IAAI,EACJ,IAAI,EACJ,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,SAAS,EACT,GAAG,IAAI,EACR,GAAG,KAAK,CAAC;IACV,MAAM,QAAQ,GAAG,MAAM,CAAc,IAAI,CAAC,CAAC;IAC3C,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAEjD,MAAM,aAAa,GAAG,CAAC,CAAmC,EAAE,EAAE;QAC5D,IAAI,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,OAAO;YAAE,OAAO;QAC1C,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE;YACrB,KAAK,QAAQ;gBACX,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBAC7B,MAAM;YACR,KAAK,SAAS;gBACZ,SAAS,IAAI,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBACjC,MAAM;SACT;QACD,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;IACF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,QAAQ,CAAC,OAAO,EAAE;YACpB,IAAI,OAAO,IAAI,SAAS,IAAI,QAAQ,EAAE;gBACpC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;aAC7E;SACF;QACD,OAAO,GAAG,EAAE;YACV,QAAQ,CAAC,OAAO,EAAE,mBAAmB,CAAC,QAAQ,EAAE,aAA8B,CAAC,CAAC;QAClF,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAE7C,OAAO,CACL,oCACE,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,KAAK,KACR,CAAC,SAAS,IAAI,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,EACrC,OAAO,EAAE,OAAO,KACZ,CAAC,SAAS,IAAI,EAAC,SAAS,EAAC,CAAC,KAC1B,CAAC,WAAW,IAAI,EAAC,cAAc,EAAE,WAAW,EAAC,CAAC,KAC9C,CAAC,IAAI,IAAI,EAAC,IAAI,EAAC,CAAC,KAChB,CAAC,IAAI,IAAI,EAAC,IAAI,EAAC,CAAC,EACpB,GAAG,EAAE,QAAQ,KACT,IAAI;QAEP,OAAO,IAAI,OAAO;QAClB,QAAQ,IAAI,QAAQ,CACV,CACd,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,SAAS,CAAC,YAAY,GAAG;IACvB,OAAO,EAAE,CAAC;IACV,OAAO,EAAE,SAAS;IAClB,WAAW,EAAE,KAAK;IAClB,SAAS,EAAE,KAAK;IAChB,IAAI,EAAE,KAAK;CACZ,CAAC;AAEF,eAAe,SAAS,CAAC","sourcesContent":["// eslint-disable-next-line no-use-before-define\nimport React, {useEffect, useImperativeHandle, useRef} from 'react';\nimport {Banner, BannerChangePayload, BannerVariant, BannerState} from '@here/hds-banner';\n\n// eslint-disable-next-line no-new\nnew Banner();\n\ninterface HDSBannerProperties extends Omit<React.HTMLAttributes<HTMLElement>, 'onChange'> {\n  message?: React.ReactNode;\n  timeout?: number;\n  variant?: BannerVariant;\n  state?: BannerState;\n  alignCenter?: boolean;\n  removable?: boolean;\n  open?: boolean;\n  icon?: boolean;\n  /* eslint-disable no-unused-vars */\n  onClose?: (e: BannerChangePayload) => void;\n  onTimeout?: (e: BannerChangePayload) => void;\n  onChange?: (e: CustomEvent<BannerChangePayload>) => void;\n  /* eslint-enable no-unused-vars */\n}\n\nconst HDSBanner = React.forwardRef((props: HDSBannerProperties, ref) => {\n  const {\n    timeout,\n    message,\n    state,\n    variant,\n    alignCenter,\n    removable,\n    className,\n    open,\n    icon,\n    children,\n    onClose,\n    onChange,\n    onTimeout,\n    ...rest\n  } = props;\n  const innerRef = useRef<HTMLElement>(null);\n  useImperativeHandle(ref, () => innerRef.current);\n\n  const _handleAction = (e: CustomEvent<BannerChangePayload>) => {\n    if (e.target !== innerRef.current) return;\n    switch (e.detail.from) {\n      case 'button':\n        onClose && onClose(e.detail);\n        break;\n      case 'timeout':\n        onTimeout && onTimeout(e.detail);\n        break;\n    }\n    onChange && onChange(e);\n  };\n  useEffect(() => {\n    if (innerRef.current) {\n      if (onClose || onTimeout || onChange) {\n        innerRef.current.addEventListener('change', _handleAction as EventListener);\n      }\n    }\n    return () => {\n      innerRef.current?.removeEventListener('change', _handleAction as EventListener);\n    };\n  }, [onClose, onTimeout, onChange, innerRef]);\n\n  return (\n    <hds-banner\n      variant={variant}\n      state={state}\n      {...(className && {class: className})}\n      timeout={timeout}\n      {...(removable && {removable})}\n      {...(alignCenter && {'align-center': alignCenter})}\n      {...(open && {open})}\n      {...(icon && {icon})}\n      ref={innerRef}\n      {...rest}\n    >\n      {message && message}\n      {children && children}\n    </hds-banner>\n  );\n});\n\nHDSBanner.defaultProps = {\n  timeout: 0,\n  variant: 'default',\n  alignCenter: false,\n  removable: false,\n  icon: false,\n};\n\nexport default HDSBanner;\n"]}