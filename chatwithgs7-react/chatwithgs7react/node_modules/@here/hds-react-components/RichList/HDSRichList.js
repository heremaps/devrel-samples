import { RichList } from '@here/hds-rich-list';
import React, { useEffect, useImperativeHandle } from 'react';
// eslint-disable-next-line no-new
new RichList();
const HDSRichList = React.forwardRef((props, ref) => {
    const { children, variant, onAction, onSelect, disabled, className, ...rest } = props;
    const innerRef = React.useRef(null);
    useImperativeHandle(ref, () => innerRef.current);
    const _handleAction = (e) => {
        onAction && onAction(e.detail);
    };
    useEffect(() => {
        if (onAction && innerRef.current) {
            innerRef.current.addEventListener('action', _handleAction);
        }
        return () => innerRef.current?.removeEventListener('action', _handleAction);
    }, [onAction, innerRef]);
    const _handleSelected = (e) => {
        if (e.target !== innerRef.current)
            return;
        onSelect && onSelect(e.detail);
    };
    useEffect(() => {
        if (onSelect && innerRef.current) {
            innerRef.current.addEventListener('select', _handleSelected);
        }
        return () => innerRef.current?.removeEventListener('select', _handleSelected);
    }, [onSelect, innerRef]);
    return (React.createElement("hds-rich-list", { ref: innerRef, variant: variant, ...(disabled && { disabled }), ...(className && { class: className }), ...rest }, children));
});
HDSRichList.defaultProps = {
    disabled: false,
    variant: 'default',
};
export default HDSRichList;
//# sourceMappingURL=HDSRichList.js.map