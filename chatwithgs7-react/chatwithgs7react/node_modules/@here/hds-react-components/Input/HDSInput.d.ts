import { IconCategory } from '@here/hds-iconlibrary';
import React from 'react';
import { Input, InputType, PasswordVisibility, InputSize, InputChangePayload, InputInputPayload, InputActionPayload } from '@here/hds-input';
export interface HDSInputProperties extends Omit<React.HTMLAttributes<HTMLInputElement>, 'onAction' | 'onChange' | 'onBlur' | 'onFocus' | 'onKeyDown' | 'onKeyUp' | 'onInput'> {
    value?: string;
    type?: InputType;
    passwordVisibility?: PasswordVisibility;
    id?: string;
    name?: string;
    placeholder?: string;
    label?: string;
    secondaryLabel?: string;
    icon?: string;
    iconCategory?: IconCategory;
    size?: InputSize;
    disabled?: boolean;
    readonly?: boolean;
    required?: boolean;
    autofocus?: boolean;
    minlength?: number;
    maxlength?: number;
    min?: string | number;
    max?: string | number;
    step?: number;
    charCounter?: boolean;
    error?: boolean;
    errorText?: string;
    ariaLabelledby?: string;
    ariaLabel?: string;
    pattern?: string;
    autocomplete?: string;
    onAction?: (e: CustomEvent<InputActionPayload>) => void;
    onChange?: (e: CustomEvent<InputChangePayload>) => void;
    onBlur?: (e: CustomEvent<Input>) => void;
    onFocus?: (e: CustomEvent<Input>) => void;
    onKeyDown?: (e: KeyboardEvent) => void;
    onKeyUp?: (e: KeyboardEvent) => void;
    onInput?: (e: CustomEvent<InputInputPayload>) => void;
}
declare const HDSInput: React.ForwardRefExoticComponent<HDSInputProperties & React.RefAttributes<unknown>>;
export default HDSInput;
