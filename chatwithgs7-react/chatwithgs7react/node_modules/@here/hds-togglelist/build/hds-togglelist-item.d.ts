import { ListItem } from '@here/hds-list';
/**
 * @slot default Content for item label
 *
 * @event {CustomEvent<{index: number; expanded: boolean}>} change Fired when item has changed its status: expanded / collapsed `ToggleListChangePayload`
 */
export declare class ToggleListItem extends ListItem {
    static shadowRootOptions: {
        delegatesFocus: boolean;
        mode: ShadowRootMode;
        slotAssignment?: SlotAssignmentMode | undefined;
    };
    hasSubList: boolean;
    expanded: boolean;
    index: number;
    subListElement: HTMLElement;
    protected slotElement: HTMLSlotElement;
    static get styles(): any;
    protected firstUpdated(): void;
    protected render(): import("lit-html").TemplateResult<1>;
    private _toggle;
    private _appendSubList;
    private _onKeyDown;
}
declare global {
    interface HTMLElementTagNameMap {
        'hds-togglelist-item': ToggleListItem;
    }
}
