import { List } from '@here/hds-list';
export declare type TogglelistExpandMode = 'one' | 'many';
export declare type ToggleListChangePayload = {
    index: number;
    expanded: boolean;
};
/**
 * @slot default Content for the `hds-togglelist-item` elements
 *
 * @event {CustomEvent<{index: number; expanded: boolean}>} change Fired when item has changed its status: expanded / collapsed `ToggleListChangePayload`
 * @event {CustomEvent<{id: string; index: number}>} select Fired when an item has been selected `ListSelectPayload`
 *
 */
export declare class ToggleList extends List {
    static shadowRootOptions: {
        delegatesFocus: boolean;
        mode: ShadowRootMode;
        slotAssignment?: SlotAssignmentMode | undefined;
    };
    expandMode: TogglelistExpandMode;
    defaultExpanded: boolean;
    protected slotElement: HTMLSlotElement;
    static get styles(): any;
    connectedCallback(): void;
    disconnectedCallback(): void;
    protected render(): import("lit-html").TemplateResult<1>;
    private _getListItems;
    private _updateItems;
    private _onChange;
    private _onListSlotChange;
}
declare global {
    interface HTMLElementTagNameMap {
        'hds-togglelist': ToggleList;
    }
}
