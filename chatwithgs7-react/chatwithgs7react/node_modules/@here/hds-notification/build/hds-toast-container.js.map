{"version":3,"file":"hds-toast-container.js","sourceRoot":"","sources":["../src/hds-toast-container.ts"],"names":[],"mappings":"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","sourcesContent":["import {customElement} from '@here/hds-base';\nimport {html, LitElement} from 'lit';\nimport {property} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {\n  NotificationActionPayload,\n  NotificationChangePayload,\n  NotificationSize,\n  NotificationStatus,\n  NotificationVariant,\n} from './hds-notification.js';\nimport {styles} from './hds-toast-container.css.js';\n\nexport type NotificationPosition =\n  | 'top-left'\n  | 'top-center'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-center'\n  | 'bottom-right';\n\n@customElement('hds-toast-container')\nexport class ToastContainer extends LitElement {\n  static styles = styles;\n\n  @property({type: String, reflect: true}) position: NotificationPosition = 'bottom-right';\n\n  protected render() {\n    const classes = {\n      [`position-${this.position}`]: true,\n    };\n    return html` <div id=\"hds-notification__container\" class=\"wrapper ${classMap(classes)}\">\n      <slot></slot>\n    </div>`;\n  }\n}\n\nexport interface ToastProps {\n  title: string;\n  body?: string;\n  bodyCssSelector?: string;\n  variant?: NotificationVariant;\n  status?: NotificationStatus;\n  size?: NotificationSize;\n  timeout?: number;\n  position?: NotificationPosition;\n  onChange?: (e: CustomEvent<NotificationChangePayload>) => void;\n  onAction?: (e: CustomEvent<NotificationActionPayload>) => void;\n}\n\nexport const toast = ({\n  title,\n  body = '',\n  bodyCssSelector = '',\n  timeout = 3,\n  position = 'bottom-right',\n  variant = 'solid',\n  status = 'default',\n  size = 'medium',\n  onChange,\n  onAction,\n}: ToastProps) => {\n  let parentEl = document.querySelector(\"[data-theme^='hds-']\");\n  if (!parentEl) {\n    // eslint-disable-next-line no-console\n    console.error(\"No [data-theme^='hds-'] element found.\");\n    parentEl = document.body;\n  }\n\n  const toastNotificationEl = document.createElement('hds-notification');\n  toastNotificationEl.open = true;\n  toastNotificationEl.headline = title;\n  if (onChange) {\n    toastNotificationEl.addEventListener('change', e =>\n      onChange(e as CustomEvent<NotificationChangePayload>)\n    );\n  }\n  if (onAction) {\n    toastNotificationEl.addEventListener('action', e => onAction(e as CustomEvent));\n  }\n  if (bodyCssSelector) {\n    const templateEl = document.querySelector(bodyCssSelector) as HTMLTemplateElement;\n    if (templateEl) {\n      const templateClone = templateEl.content.cloneNode(true);\n      toastNotificationEl.appendChild(templateClone);\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(`No template element found with selector: ${bodyCssSelector}`);\n      return;\n    }\n  } else {\n    toastNotificationEl.innerHTML = body;\n  }\n  toastNotificationEl.variant = variant;\n  toastNotificationEl.timeout = timeout;\n  toastNotificationEl.status = status;\n  toastNotificationEl.size = size;\n\n  let container = document.querySelector('hds-toast-container');\n\n  if (!container) {\n    container = document.createElement('hds-toast-container');\n    container.position = position;\n    parentEl.appendChild(container);\n  }\n  container.appendChild(toastNotificationEl);\n};\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-toast-container': ToastContainer;\n  }\n}\n"]}