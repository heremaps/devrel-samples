import { IconCategory } from '@here/hds-iconlibrary';
import { ListItem } from '@here/hds-list';
import { PropertyValues } from 'lit';
import * as HDSProgressIndicator from '@here/hds-progress-indicator';
export declare type RichListItemState = 'default' | 'progress' | 'error' | 'success';
export declare type RichListItemVariant = 'default' | 'dense';
export declare type RichListItemAction = 'retry' | 'delete' | 'cancel';
export declare type RichListItemActionPayload = {
    id: string;
    action: string;
    file?: File;
};
/**
 *
 * @slot action Content for custom actions on the right side
 *
 * @event {CustomEvent<{id: string, action: string, file?: File}>} action Fired when one of the action buttons has been clicked `RichListItemActionPayload`
 */
export declare class RichListItem extends ListItem {
    richVariant: RichListItemVariant;
    state: RichListItemState;
    headline: string;
    subTitle: string;
    progressText: string;
    progress: number;
    progressVariant: HDSProgressIndicator.ProgressIndicatorVariant;
    errorText: string;
    file: File | undefined;
    filePreview: boolean;
    iconDefault: string;
    iconDefaultCategory: IconCategory;
    iconProgress: string;
    iconProgressCategory: IconCategory;
    iconError: string;
    iconErrorCategory: IconCategory;
    iconSuccess: string;
    iconSuccessCategory: IconCategory;
    hideIcon: boolean;
    hideCancel: boolean;
    hideRetry: boolean;
    hideDelete: boolean;
    unhoverable: boolean;
    unpressable: boolean;
    unselectable: boolean;
    unfocusable: boolean;
    private imgFilePreview;
    static get styles(): any;
    protected updated(_changedProperties: PropertyValues): Promise<void>;
    protected render(): import("lit-html").TemplateResult<1>;
    private canRenderFilePreview;
    private _emitEventOnAction;
    private _renderIcon;
    private _renderProgressBar;
    private _renderFilePreview;
    private _loadFilePreview;
    private _renderAction;
}
declare global {
    interface HTMLElementTagNameMap {
        'hds-rich-list-item': RichListItem;
    }
}
