{"version":3,"file":"hds-rich-list.js","sourceRoot":"","sources":["../src/hds-rich-list.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,gBAAgB,CAAC;AAC7C,OAAO,gBAAgB,CAAC;AACxB,OAAO,EAAC,IAAI,EAAc,MAAM,gBAAgB,CAAC;AACjD,OAAO,EAAC,IAAI,EAAiB,MAAM,KAAK,CAAC;AACzC,OAAO,EAAC,QAAQ,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAC,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AACrD,OAAO,EAAC,YAAY,EAAsB,MAAM,yBAAyB,CAAC;AAC1E,OAAO,EAAC,MAAM,EAAC,MAAM,wBAAwB,CAAC;AAE9C;;;;;GAKG;AAEI,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,IAAI;IAA3B;;QACsB,aAAQ,GAAG,KAAK,CAAC;QACI,gBAAW,GAAwB,SAAS,CAAC;QACjD,sBAAiB,GAAgB,OAAO,CAAC;IA8CvF,CAAC;IA3CC,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChC,CAAC;IAES,KAAK,CAAC,OAAO,CAAC,kBAAkC;QACxD,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAElC,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YACxC,IAAI,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACrC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;aACzC;SACF;IACH,CAAC;IAES,MAAM;QACd,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC;QACzC,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,IAAI,MAAM,CAAC;QAChD,MAAM,OAAO,GAAG;YACd,IAAI,EAAE,IAAI;YACV,wBAAwB,EAAE,IAAI;YAC9B,mBAAmB,EAAE,IAAI;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QACF,OAAO,IAAI,CAAA;;iBAEE,QAAQ,CAAC,OAAO,CAAC;gBAClB,IAAI;;sBAEE,SAAS;mBACZ,KAAK,CAAC,QAAQ;oBACb,KAAK,CAAC,UAAU;;;;KAI/B,CAAC;IACJ,CAAC;IAEO,aAAa;QACnB,OAAO,IAAI,CAAC,SAAS;aAClB,aAAa,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;aAC9B,MAAM,CAAC,CAAC,CAAO,EAAE,EAAE,CAAC,CAAC,YAAY,YAAY,CAAmB,CAAC;IACtE,CAAC;CACF,CAAA;AAhD4B;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;0CAAkB;AACI;IAA/C,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAC,CAAC;6CAA8C;AACjD;IAA3C,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;mDAA0C;AACtE;IAAd,KAAK,CAAC,MAAM,CAAC;2CAAuC;AAJ1C,QAAQ;IADpB,aAAa,CAAC,eAAe,CAAC;GAClB,QAAQ,CAiDpB;SAjDY,QAAQ","sourcesContent":["import {customElement} from '@here/hds-base';\nimport '@here/hds-icon';\nimport {List, ListPadding} from '@here/hds-list';\nimport {html, PropertyValues} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {RichListItem, RichListItemVariant} from './hds-rich-list-item.js';\nimport {styles} from './hds-rich-list.css.js';\n\n/**\n * @slot default Content for the list of `hds-rich-list-item` elements\n *\n * @event {CustomEvent<{id: string; index: number}>} select Fired when an item has been selected `ListSelectPayload`\n * @event {CustomEvent<{id: string, action: string, file:  File | undefined}>} action Fired when one of the action buttons has been clicked `RichListItemActionPayload`\n */\n@customElement('hds-rich-list')\nexport class RichList extends List {\n  @property({type: Boolean}) disabled = false;\n  @property({type: String, attribute: 'variant'}) richVariant: RichListItemVariant = 'default';\n  @property({type: String, attribute: false}) horizontalPadding: ListPadding = 'dense';\n  @query('slot') protected itemsSlot!: HTMLSlotElement;\n\n  static get styles(): any {\n    return [super.styles, styles];\n  }\n\n  protected async updated(_changedProperties: PropertyValues) {\n    super.updated(_changedProperties);\n\n    const items = this._getSlotItems();\n    for (let i = 0; i < items.length; i += 1) {\n      if (_changedProperties.has('variant')) {\n        items[i].richVariant = this.richVariant;\n      }\n    }\n  }\n\n  protected render() {\n    const role = this.innerRole || 'listbox';\n    const ariaLabel = this.innerAriaLabel || 'list';\n    const classes = {\n      list: true,\n      '-hds-rich-list-wrapper': true,\n      '-hds-list-wrapper': true,\n      disabled: this.disabled,\n    };\n    return html`\n      <div\n        class=\"${classMap(classes)}\"\n        role=\"${role}\"\n        tabindex=\"0\"\n        aria-label=\"${ariaLabel}\"\n        @select=\"${super.onSelect}\"\n        @keydown=\"${super.onKeypress}\"\n      >\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  private _getSlotItems() {\n    return this.itemsSlot\n      .assignedNodes({flatten: true})\n      .filter((e: Node) => e instanceof RichListItem) as RichListItem[];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-rich-list': RichList;\n  }\n}\n"]}