{"version":3,"file":"hds-confirm.js","sourceRoot":"","sources":["../src/hds-confirm.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAC,KAAK,EAAC,MAAM,iBAAiB,CAAC;AACtC,OAAO,mBAAmB,CAAC;AAC3B,OAAO,EAAC,IAAI,EAAC,MAAM,KAAK,CAAC;AAEzB,OAAO,EAAC,MAAM,EAAC,MAAM,sBAAsB,CAAC;AAE5C;;;;;;;;GAQG;AAGI,IAAM,OAAO,GAAb,MAAM,OAAQ,SAAQ,KAAK;IAChC,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChC,CAAC;IAES,KAAK,CAAC,OAAO;QACrB,KAAK,CAAC,mBAAmB,EAAE,CAAC;QAC5B,MAAM,KAAK,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IAES,MAAM;QACd,OAAO,IAAI,CAAA;;;;cAID,IAAI,CAAC,YAAY,EAAE;;;;yBAIR,GAAG,EAAE,CACd,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,QAAQ,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;;;;uCAIvD,IAAI,CAAC,OAAO;;;cAGrC,IAAI,CAAC,YAAY,EAAE,IAAI,IAAI,CAAC,iBAAiB,EAAE;;;+BAG9B,IAAI,CAAC,kBAAkB;;KAEjD,CAAC;IACJ,CAAC;CACF,CAAA;AAlCY,OAAO;IADnB,aAAa,CAAC,aAAa,CAAC;GAChB,OAAO,CAkCnB;SAlCY,OAAO","sourcesContent":["import {customElement} from '@here/hds-base';\nimport {Modal} from '@here/hds-modal';\nimport '@here/hds-overlay';\nimport {html} from 'lit';\n\nimport {styles} from './hds-confirm.css.js';\n\n/**\n * Confirm class.\n *\n * @event {CustomEvent<{from: 'button' | 'overlay' | 'escape'}>} change Fired when the modal is closed and from where has been closed: button / overlay / escape `ModalChangePayload`\n *\n * @slot header Content placed in the header of the Dialog.\n * @slot body Content placed in the body of the Dialog.\n * @slot footer  Content placed in the footer of the Dialog.\n */\n\n@customElement('hds-confirm')\nexport class Confirm extends Modal {\n  static get styles(): any {\n    return [super.styles, styles];\n  }\n\n  protected async updated() {\n    super.setTabbableElements();\n    await super.changeDefaultButtonSize('tablet');\n  }\n\n  protected render() {\n    return html`\n      <div class=\"-hds-modal-wrapper hds-grid-container\">\n        <div class=\"wrapper\" role=\"dialog\" aria-modal=\"true\" aria-describedby=\"content\">\n          <div class=\"content-wrapper\">\n            ${this.renderHeader()}\n            <div\n              class=\"body\"\n              id=\"content\"\n              @scroll=\"${() =>\n                this.dispatchEvent(new CustomEvent('scroll', {composed: true, bubbles: true}))}\"\n            >\n              <slot name=\"body\"></slot>\n              <slot>\n                <div class=\"message\">${this.message}</div>\n              </slot>\n            </div>\n            ${this.renderFooter()} ${this.renderCloseButton()}\n          </div>\n        </div>\n        <hds-overlay @click=\"${this.handleClickOverlay}\"></hds-overlay>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-confirm': Confirm;\n  }\n}\n"]}