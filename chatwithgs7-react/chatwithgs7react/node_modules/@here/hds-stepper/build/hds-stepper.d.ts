import { LitElement, PropertyValues } from 'lit';
import { Step, StepActivateStepInternal, StepState } from './hds-step.js';
export declare type StepperOrientation = 'vertical' | 'horizontal';
export declare type StepperCurrentActiveStepPayload = {
    currentState: StepState;
    stepIndex: number;
};
/**
 * @slot default Content for the `hds-step` elements
 *
 * @event {CustomEvent<{currentState: StepState; stepIndex: number}>} current-active-step Fired when a new step has been selected `StepperCurrentActiveStepPayload`
 *
 */
export declare class Stepper extends LitElement {
    static styles: import("lit").CSSResultGroup;
    nonLinear: boolean;
    hideLabel: boolean;
    bottomLabel: boolean;
    orientation: StepperOrientation;
    activeStep: number;
    completeStep?: number;
    errorStep?: number;
    stepsLength: number;
    protected stepsSlot: HTMLElement;
    connectedCallback(): void;
    disconnectedCallback(): void;
    reset(): void;
    protected _handleStepClick({ detail }: CustomEvent<StepActivateStepInternal>): void;
    protected firstUpdated(_changedProperties: PropertyValues): void;
    protected updated(_changedProperties: PropertyValues): Promise<void>;
    protected activeStepUpdated(oldVal: number): Promise<void>;
    protected completeStepUpdated(): void;
    protected errorStepUpdated(): void;
    protected setupStep(): void;
    protected render(): import("lit-html").TemplateResult<1>;
    protected _getSteps(): Step[];
}
declare global {
    interface HTMLElementTagNameMap {
        'hds-stepper': Stepper;
    }
}
