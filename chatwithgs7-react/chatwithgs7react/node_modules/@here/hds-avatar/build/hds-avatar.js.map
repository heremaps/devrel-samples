{"version":3,"file":"hds-avatar.js","sourceRoot":"","sources":["../src/hds-avatar.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,gBAAgB,CAAC;AAE7C,OAAO,gBAAgB,CAAC,CAAC,2CAA2C;AAEpE,OAAO,EAAC,IAAI,EAAE,UAAU,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC3C,OAAO,EAAC,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AACrD,OAAO,EAAC,SAAS,EAAC,MAAM,8BAA8B,CAAC;AAEvD,OAAO,EAAC,MAAM,EAAC,MAAM,qBAAqB,CAAC;AAI3C;;;;;KAKK;AAEE,IAAM,MAAM,GAAZ,MAAM,MAAO,SAAQ,UAAU;IAA/B;;QAGsB,aAAQ,GAAG,KAAK,CAAC;QACjB,eAAU,GAAG,KAAK,CAAC;QACL,SAAI,GAAe,QAAQ,CAAC;QAIf,iBAAY,GAAiB,SAAS,CAAC;QAC1C,cAAS,GAAc,OAAO,CAAC;IAiFpF,CAAC;IA/EC;;;;;;;OAOG;IACO,WAAW,CAAC,IAAwB;QAC5C,IAAI,QAAQ,GAAG,EAAE,CAAC;QAElB,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACjC;iBAAM;gBACL,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACxD;SACF;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IAES,MAAM;QACd,MAAM,OAAO,GAAG;YACd,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAU;SAC3B,CAAC;QACF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QAC1B,OAAO,IAAI,CAAA;;qCAEsB,QAAQ,CAAC,OAAO,CAAC;;yBAE7B,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;;+BAElB,IAAI,CAAC,aAAa,EAAE;;;KAG9C,CAAC;IACJ,CAAC;IAEO,WAAW;QACjB,QAAQ,IAAI,CAAC,IAAI,EAAE;YACjB,KAAK,SAAS;gBACZ,OAAO,MAAM,CAAC;YAChB,KAAK,OAAO;gBACV,OAAO,MAAM,CAAC;YAChB;gBACE,OAAO,MAAM,CAAC;SACjB;IACH,CAAC;IAEO,aAAa;QACnB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO,IAAI,CAAA;eACF,IAAI,CAAC,QAAQ;eACb,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;;kBAEjB,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACnC,CAAC;SACL;QAED,+CAA+C;QAC/C,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,QAAQ,EAAE;YACZ,OAAO,IAAI,CAAA,GAAG,QAAQ,EAAE,CAAC;SAC1B;QAED,+CAA+C;QAC/C,OAAO,IAAI,CAAA;;cAED,IAAI,CAAC,IAAI,IAAI,SAAS;kBAClB,IAAI,CAAC,YAAY;cACrB,IAAI,CAAC,WAAW,EAAE;;oBAEZ,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO;gBACpE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;iBACrB,CAAC;IAChB,CAAC;;AAzFM,aAAM,GAAG,MAAM,CAAC;AAEI;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;wCAAkB;AACjB;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;0CAAoB;AACL;IAAxC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;oCAA6B;AAC3C;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;oCAA0B;AACD;IAAjD,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAC,CAAC;wCAA8B;AACrD;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;oCAA0B;AACG;IAArD,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,eAAe,EAAC,CAAC;4CAAwC;AAC1C;IAAlD,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAC,CAAC;yCAAgC;AAVvE,MAAM;IADlB,aAAa,CAAC,YAAY,CAAC;GACf,MAAM,CA2FlB;SA3FY,MAAM","sourcesContent":["import {customElement} from '@here/hds-base';\nimport {IconStyle} from '@here/hds-icon'; // eslint-disable-line import/no-duplicates\nimport '@here/hds-icon'; // eslint-disable-line import/no-duplicates\nimport {IconCategory} from '@here/hds-iconlibrary';\nimport {html, LitElement} from 'lit';\nimport {property} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\n\nimport {styles} from './hds-avatar.css.js';\n\nexport type AvatarSize = 'small' | 'medium' | 'large' | 'x-large';\n\n/**\n * @summary An avatar component.\n * @cssprop --hds-avatar-background - Controls the background of the avatar\n * @cssprop --hds-avatar-border-background - Controls the background of the avatar's border\n * @cssprop --hds-avatar-focus-ring-color - Controls the color of the focus ring\n * */\n@customElement('hds-avatar')\nexport class Avatar extends LitElement {\n  static styles = styles;\n\n  @property({type: Boolean}) disabled = false;\n  @property({type: Boolean}) borderless = false;\n  @property({type: String, reflect: true}) size: AvatarSize = 'medium';\n  @property({type: String}) name: string | undefined;\n  @property({type: String, attribute: 'image-url'}) imageUrl: string | undefined;\n  @property({type: String}) icon: string | undefined;\n  @property({type: String, attribute: 'icon-category'}) iconCategory: IconCategory = 'core-ui';\n  @property({type: String, attribute: 'icon-style'}) iconStyle: IconStyle = 'solid';\n\n  /**\n   * @example\n   * this.getInitials('Jane Mary Doe'); // returns 'JM'\n   * @example\n   * this.getInitials('Jane'); // returns 'Ja'\n   * @example\n   * this.getInitials(' '); // returns ''\n   */\n  protected getInitials(name: string | undefined) {\n    let initials = '';\n\n    if (name !== undefined) {\n      const words = name.trim().split(' ');\n      if (words.length === 1) {\n        initials = words[0].slice(0, 2);\n      } else {\n        initials = words[0].slice(0, 1) + words[1].slice(0, 1);\n      }\n    }\n\n    return initials;\n  }\n\n  protected render() {\n    const classes = {\n      disabled: this.disabled,\n      bordered: !this.borderless,\n    };\n    classes[this.size] = true;\n    return html`\n      <div\n        class=\"-hds-avatar-wrapper ${classMap(classes)}\"\n        aria-hidden=\"true\"\n        aria-disabled=\"${ifDefined(this.disabled)}\"\n      >\n        <div class=\"content\">${this.renderContent()}</div>\n        <div class=\"focus-ring\"></div>\n      </div>\n    `;\n  }\n\n  private getIconSize() {\n    switch (this.size) {\n      case 'x-large':\n        return '24px';\n      case 'small':\n        return '12px';\n      default:\n        return '16px';\n    }\n  }\n\n  private renderContent() {\n    if (this.imageUrl) {\n      return html`<img\n        src=\"${this.imageUrl}\"\n        alt=\"${ifDefined(this.name)}\"\n        class=\"avatar-image\"\n        @error=\"${() => (this.imageUrl = '')}\"\n      />`;\n    }\n\n    // Renders the initials if a name was provided.\n    const initials = this.getInitials(this.name);\n    if (initials) {\n      return html`${initials}`;\n    }\n\n    // Otherwise renders the fallback profile icon.\n    return html` <hds-icon\n      class=\"avatar-icon\"\n      name=\"${this.icon || 'profile'}\"\n      category=\"${this.iconCategory}\"\n      size=\"${this.getIconSize()}\"\n      role=\"presentation\"\n      icon-style=\"${parseInt(this.getIconSize(), 10) > 16 ? this.iconStyle : 'solid'}\"\n      @error=\"${() => (this.icon = '')}\"\n    ></hds-icon>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-avatar': Avatar;\n  }\n}\n"]}