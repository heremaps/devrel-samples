import '@here/hds-button';
import { Modal } from '@here/hds-modal';
import '@here/hds-overlay';
import { Stepper } from '@here/hds-stepper';
import { TemplateResult } from 'lit';
export declare type WizardActionPayload = {
    from: 'confirm' | 'cancel';
};
/**
 * @slot header Content to be shown as title on the header
 * @slot body Main content of the modal
 * @slot footer Content to be shown on the footer below the body content
 * @slot stepper Content for the `hds-stepper` element
 * @slot stepper-footer Content for the footer section below the stepper
 *
 * @event {CustomEvent<{from: 'confirm' | 'cancel'}>} action Fired when click on one of the action buttons `WizardActionPayload`
 */
export declare class Wizard extends Modal {
    stepperHeading: string;
    confirmText: string;
    cancelText: string;
    stepText: string;
    protected debouncedResize: () => Promise<void>;
    private stepperSlot;
    static get styles(): any;
    get stepper(): Stepper | undefined;
    updated(): Promise<void>;
    protected render(): TemplateResult<1>;
    protected setTabbableElements(): Promise<void>;
    protected renderStepText(): string;
    /**
     * Set calculated max height for stepper as custom css variable
     */
    private changeStepperMaxHeight;
    private renderContentHeader;
    private onSlotChange;
    private renderStepperHeading;
    private renderStepperFooter;
    private renderContentFooter;
    private renderFooterButtons;
    private renderDefaultFooterButton;
    private defaultButtonClick;
}
declare global {
    interface HTMLElementTagNameMap {
        'hds-wizard': Wizard;
    }
}
