import {
  require_react_dom
} from "./chunk-6BKLQ22S.js";
import {
  require_react
} from "./chunk-DRWLMN53.js";
import {
  __commonJS,
  __export,
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment5 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement4(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment5;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement4;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var require_hoist_non_react_statics_cjs = __commonJS({
  "node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"(exports, module) {
    "use strict";
    var reactIs = require_react_is();
    var REACT_STATICS = {
      childContextTypes: true,
      contextType: true,
      contextTypes: true,
      defaultProps: true,
      displayName: true,
      getDefaultProps: true,
      getDerivedStateFromError: true,
      getDerivedStateFromProps: true,
      mixins: true,
      propTypes: true,
      type: true
    };
    var KNOWN_STATICS = {
      name: true,
      length: true,
      prototype: true,
      caller: true,
      callee: true,
      arguments: true,
      arity: true
    };
    var FORWARD_REF_STATICS = {
      "$$typeof": true,
      render: true,
      defaultProps: true,
      displayName: true,
      propTypes: true
    };
    var MEMO_STATICS = {
      "$$typeof": true,
      compare: true,
      defaultProps: true,
      displayName: true,
      propTypes: true,
      type: true
    };
    var TYPE_STATICS = {};
    TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
    TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
    function getStatics(component) {
      if (reactIs.isMemo(component)) {
        return MEMO_STATICS;
      }
      return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
    }
    var defineProperty = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype = Object.prototype;
    function hoistNonReactStatics2(targetComponent, sourceComponent, blacklist) {
      if (typeof sourceComponent !== "string") {
        if (objectPrototype) {
          var inheritedComponent = getPrototypeOf(sourceComponent);
          if (inheritedComponent && inheritedComponent !== objectPrototype) {
            hoistNonReactStatics2(targetComponent, inheritedComponent, blacklist);
          }
        }
        var keys = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) {
          keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }
        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);
        for (var i = 0; i < keys.length; ++i) {
          var key = keys[i];
          if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
            var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
            try {
              defineProperty(targetComponent, key, descriptor);
            } catch (e) {
            }
          }
        }
      }
      return targetComponent;
    }
    module.exports = hoistNonReactStatics2;
  }
});

// node_modules/@here/hds-react-components/Banner/HDSBanner.js
var import_react = __toESM(require_react(), 1);

// node_modules/tslib/tslib.es6.mjs
function __decorate(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d2 = decorators[i]) r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}

// node_modules/@lit/reactive-element/development/css-tag.js
var NODE_MODE = false;
var global2 = NODE_MODE ? globalThis : window;
var supportsAdoptingStyleSheets = global2.ShadowRoot && (global2.ShadyCSS === void 0 || global2.ShadyCSS.nativeShadow) && "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype;
var constructionToken = Symbol();
var cssTagCache = /* @__PURE__ */ new WeakMap();
var CSSResult = class {
  constructor(cssText, strings, safeToken) {
    this["_$cssResult$"] = true;
    if (safeToken !== constructionToken) {
      throw new Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
    }
    this.cssText = cssText;
    this._strings = strings;
  }
  // This is a getter so that it's lazy. In practice, this means stylesheets
  // are not created until the first element instance is made.
  get styleSheet() {
    let styleSheet = this._styleSheet;
    const strings = this._strings;
    if (supportsAdoptingStyleSheets && styleSheet === void 0) {
      const cacheable = strings !== void 0 && strings.length === 1;
      if (cacheable) {
        styleSheet = cssTagCache.get(strings);
      }
      if (styleSheet === void 0) {
        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(this.cssText);
        if (cacheable) {
          cssTagCache.set(strings, styleSheet);
        }
      }
    }
    return styleSheet;
  }
  toString() {
    return this.cssText;
  }
};
var textFromCSSResult = (value) => {
  if (value["_$cssResult$"] === true) {
    return value.cssText;
  } else if (typeof value === "number") {
    return value;
  } else {
    throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.`);
  }
};
var unsafeCSS = (value) => new CSSResult(typeof value === "string" ? value : String(value), void 0, constructionToken);
var css = (strings, ...values) => {
  const cssText = strings.length === 1 ? strings[0] : values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);
  return new CSSResult(cssText, strings, constructionToken);
};
var adoptStyles = (renderRoot, styles58) => {
  if (supportsAdoptingStyleSheets) {
    renderRoot.adoptedStyleSheets = styles58.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);
  } else {
    styles58.forEach((s) => {
      const style = document.createElement("style");
      const nonce = global2["litNonce"];
      if (nonce !== void 0) {
        style.setAttribute("nonce", nonce);
      }
      style.textContent = s.cssText;
      renderRoot.appendChild(style);
    });
  }
};
var cssResultFromStyleSheet = (sheet) => {
  let cssText = "";
  for (const rule of sheet.cssRules) {
    cssText += rule.cssText;
  }
  return unsafeCSS(cssText);
};
var getCompatibleStyle = supportsAdoptingStyleSheets || NODE_MODE && global2.CSSStyleSheet === void 0 ? (s) => s : (s) => s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;

// node_modules/@lit/reactive-element/development/reactive-element.js
var _a;
var _b;
var _c;
var _d;
var _e;
var NODE_MODE2 = false;
var global3 = NODE_MODE2 ? globalThis : window;
if (NODE_MODE2) {
  (_a = global3.customElements) !== null && _a !== void 0 ? _a : global3.customElements = customElements;
}
var DEV_MODE = true;
var requestUpdateThenable;
var issueWarning;
var trustedTypes = global3.trustedTypes;
var emptyStringForBooleanAttribute = trustedTypes ? trustedTypes.emptyScript : "";
var polyfillSupport = DEV_MODE ? global3.reactiveElementPolyfillSupportDevMode : global3.reactiveElementPolyfillSupport;
if (DEV_MODE) {
  const issuedWarnings = (_b = global3.litIssuedWarnings) !== null && _b !== void 0 ? _b : global3.litIssuedWarnings = /* @__PURE__ */ new Set();
  issueWarning = (code, warning) => {
    warning += ` See https://lit.dev/msg/${code} for more information.`;
    if (!issuedWarnings.has(warning)) {
      console.warn(warning);
      issuedWarnings.add(warning);
    }
  };
  issueWarning("dev-mode", `Lit is in dev mode. Not recommended for production!`);
  if (((_c = global3.ShadyDOM) === null || _c === void 0 ? void 0 : _c.inUse) && polyfillSupport === void 0) {
    issueWarning("polyfill-support-missing", `Shadow DOM is being polyfilled via \`ShadyDOM\` but the \`polyfill-support\` module has not been loaded.`);
  }
  requestUpdateThenable = (name) => ({
    then: (onfulfilled, _onrejected) => {
      issueWarning("request-update-promise", `The \`requestUpdate\` method should no longer return a Promise but does so on \`${name}\`. Use \`updateComplete\` instead.`);
      if (onfulfilled !== void 0) {
        onfulfilled(false);
      }
    }
  });
}
var debugLogEvent = DEV_MODE ? (event) => {
  const shouldEmit = global3.emitLitDebugLogEvents;
  if (!shouldEmit) {
    return;
  }
  global3.dispatchEvent(new CustomEvent("lit-debug", {
    detail: event
  }));
} : void 0;
var JSCompiler_renameProperty = (prop, _obj) => prop;
var defaultConverter = {
  toAttribute(value, type) {
    switch (type) {
      case Boolean:
        value = value ? emptyStringForBooleanAttribute : null;
        break;
      case Object:
      case Array:
        value = value == null ? value : JSON.stringify(value);
        break;
    }
    return value;
  },
  fromAttribute(value, type) {
    let fromValue = value;
    switch (type) {
      case Boolean:
        fromValue = value !== null;
        break;
      case Number:
        fromValue = value === null ? null : Number(value);
        break;
      case Object:
      case Array:
        try {
          fromValue = JSON.parse(value);
        } catch (e) {
          fromValue = null;
        }
        break;
    }
    return fromValue;
  }
};
var notEqual = (value, old) => {
  return old !== value && (old === old || value === value);
};
var defaultPropertyDeclaration = {
  attribute: true,
  type: String,
  converter: defaultConverter,
  reflect: false,
  hasChanged: notEqual
};
var finalized = "finalized";
var ReactiveElement = class extends HTMLElement {
  constructor() {
    super();
    this.__instanceProperties = /* @__PURE__ */ new Map();
    this.isUpdatePending = false;
    this.hasUpdated = false;
    this.__reflectingProperty = null;
    this.__initialize();
  }
  /**
   * Adds an initializer function to the class that is called during instance
   * construction.
   *
   * This is useful for code that runs against a `ReactiveElement`
   * subclass, such as a decorator, that needs to do work for each
   * instance, such as setting up a `ReactiveController`.
   *
   * ```ts
   * const myDecorator = (target: typeof ReactiveElement, key: string) => {
   *   target.addInitializer((instance: ReactiveElement) => {
   *     // This is run during construction of the element
   *     new MyController(instance);
   *   });
   * }
   * ```
   *
   * Decorating a field will then cause each instance to run an initializer
   * that adds a controller:
   *
   * ```ts
   * class MyElement extends LitElement {
   *   @myDecorator foo;
   * }
   * ```
   *
   * Initializers are stored per-constructor. Adding an initializer to a
   * subclass does not add it to a superclass. Since initializers are run in
   * constructors, initializers will run in order of the class hierarchy,
   * starting with superclasses and progressing to the instance's class.
   *
   * @nocollapse
   */
  static addInitializer(initializer) {
    var _a6;
    this.finalize();
    ((_a6 = this._initializers) !== null && _a6 !== void 0 ? _a6 : this._initializers = []).push(initializer);
  }
  /**
   * Returns a list of attributes corresponding to the registered properties.
   * @nocollapse
   * @category attributes
   */
  static get observedAttributes() {
    this.finalize();
    const attributes = [];
    this.elementProperties.forEach((v, p) => {
      const attr = this.__attributeNameForProperty(p, v);
      if (attr !== void 0) {
        this.__attributeToPropertyMap.set(attr, p);
        attributes.push(attr);
      }
    });
    return attributes;
  }
  /**
   * Creates a property accessor on the element prototype if one does not exist
   * and stores a {@linkcode PropertyDeclaration} for the property with the
   * given options. The property setter calls the property's `hasChanged`
   * property option or uses a strict identity check to determine whether or not
   * to request an update.
   *
   * This method may be overridden to customize properties; however,
   * when doing so, it's important to call `super.createProperty` to ensure
   * the property is setup correctly. This method calls
   * `getPropertyDescriptor` internally to get a descriptor to install.
   * To customize what properties do when they are get or set, override
   * `getPropertyDescriptor`. To customize the options for a property,
   * implement `createProperty` like this:
   *
   * ```ts
   * static createProperty(name, options) {
   *   options = Object.assign(options, {myOption: true});
   *   super.createProperty(name, options);
   * }
   * ```
   *
   * @nocollapse
   * @category properties
   */
  static createProperty(name, options2 = defaultPropertyDeclaration) {
    var _a6;
    if (options2.state) {
      options2.attribute = false;
    }
    this.finalize();
    this.elementProperties.set(name, options2);
    if (!options2.noAccessor && !this.prototype.hasOwnProperty(name)) {
      const key = typeof name === "symbol" ? Symbol() : `__${name}`;
      const descriptor = this.getPropertyDescriptor(name, key, options2);
      if (descriptor !== void 0) {
        Object.defineProperty(this.prototype, name, descriptor);
        if (DEV_MODE) {
          if (!this.hasOwnProperty("__reactivePropertyKeys")) {
            this.__reactivePropertyKeys = new Set((_a6 = this.__reactivePropertyKeys) !== null && _a6 !== void 0 ? _a6 : []);
          }
          this.__reactivePropertyKeys.add(name);
        }
      }
    }
  }
  /**
   * Returns a property descriptor to be defined on the given named property.
   * If no descriptor is returned, the property will not become an accessor.
   * For example,
   *
   * ```ts
   * class MyElement extends LitElement {
   *   static getPropertyDescriptor(name, key, options) {
   *     const defaultDescriptor =
   *         super.getPropertyDescriptor(name, key, options);
   *     const setter = defaultDescriptor.set;
   *     return {
   *       get: defaultDescriptor.get,
   *       set(value) {
   *         setter.call(this, value);
   *         // custom action.
   *       },
   *       configurable: true,
   *       enumerable: true
   *     }
   *   }
   * }
   * ```
   *
   * @nocollapse
   * @category properties
   */
  static getPropertyDescriptor(name, key, options2) {
    return {
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      get() {
        return this[key];
      },
      set(value) {
        const oldValue = this[name];
        this[key] = value;
        this.requestUpdate(name, oldValue, options2);
      },
      configurable: true,
      enumerable: true
    };
  }
  /**
   * Returns the property options associated with the given property.
   * These options are defined with a `PropertyDeclaration` via the `properties`
   * object or the `@property` decorator and are registered in
   * `createProperty(...)`.
   *
   * Note, this method should be considered "final" and not overridden. To
   * customize the options for a given property, override
   * {@linkcode createProperty}.
   *
   * @nocollapse
   * @final
   * @category properties
   */
  static getPropertyOptions(name) {
    return this.elementProperties.get(name) || defaultPropertyDeclaration;
  }
  /**
   * Creates property accessors for registered properties, sets up element
   * styling, and ensures any superclasses are also finalized. Returns true if
   * the element was finalized.
   * @nocollapse
   */
  static finalize() {
    if (this.hasOwnProperty(finalized)) {
      return false;
    }
    this[finalized] = true;
    const superCtor = Object.getPrototypeOf(this);
    superCtor.finalize();
    if (superCtor._initializers !== void 0) {
      this._initializers = [...superCtor._initializers];
    }
    this.elementProperties = new Map(superCtor.elementProperties);
    this.__attributeToPropertyMap = /* @__PURE__ */ new Map();
    if (this.hasOwnProperty(JSCompiler_renameProperty("properties", this))) {
      const props = this.properties;
      const propKeys = [
        ...Object.getOwnPropertyNames(props),
        ...Object.getOwnPropertySymbols(props)
      ];
      for (const p of propKeys) {
        this.createProperty(p, props[p]);
      }
    }
    this.elementStyles = this.finalizeStyles(this.styles);
    if (DEV_MODE) {
      const warnRemovedOrRenamed = (name, renamed = false) => {
        if (this.prototype.hasOwnProperty(name)) {
          issueWarning(renamed ? "renamed-api" : "removed-api", `\`${name}\` is implemented on class ${this.name}. It has been ${renamed ? "renamed" : "removed"} in this version of LitElement.`);
        }
      };
      warnRemovedOrRenamed("initialize");
      warnRemovedOrRenamed("requestUpdateInternal");
      warnRemovedOrRenamed("_getUpdateComplete", true);
    }
    return true;
  }
  /**
   * Takes the styles the user supplied via the `static styles` property and
   * returns the array of styles to apply to the element.
   * Override this method to integrate into a style management system.
   *
   * Styles are deduplicated preserving the _last_ instance in the list. This
   * is a performance optimization to avoid duplicated styles that can occur
   * especially when composing via subclassing. The last item is kept to try
   * to preserve the cascade order with the assumption that it's most important
   * that last added styles override previous styles.
   *
   * @nocollapse
   * @category styles
   */
  static finalizeStyles(styles58) {
    const elementStyles = [];
    if (Array.isArray(styles58)) {
      const set = new Set(styles58.flat(Infinity).reverse());
      for (const s of set) {
        elementStyles.unshift(getCompatibleStyle(s));
      }
    } else if (styles58 !== void 0) {
      elementStyles.push(getCompatibleStyle(styles58));
    }
    return elementStyles;
  }
  /**
   * Returns the property name for the given attribute `name`.
   * @nocollapse
   */
  static __attributeNameForProperty(name, options2) {
    const attribute = options2.attribute;
    return attribute === false ? void 0 : typeof attribute === "string" ? attribute : typeof name === "string" ? name.toLowerCase() : void 0;
  }
  /**
   * Internal only override point for customizing work done when elements
   * are constructed.
   */
  __initialize() {
    var _a6;
    this.__updatePromise = new Promise((res) => this.enableUpdating = res);
    this._$changedProperties = /* @__PURE__ */ new Map();
    this.__saveInstanceProperties();
    this.requestUpdate();
    (_a6 = this.constructor._initializers) === null || _a6 === void 0 ? void 0 : _a6.forEach((i) => i(this));
  }
  /**
   * Registers a `ReactiveController` to participate in the element's reactive
   * update cycle. The element automatically calls into any registered
   * controllers during its lifecycle callbacks.
   *
   * If the element is connected when `addController()` is called, the
   * controller's `hostConnected()` callback will be immediately called.
   * @category controllers
   */
  addController(controller) {
    var _a6, _b5;
    ((_a6 = this.__controllers) !== null && _a6 !== void 0 ? _a6 : this.__controllers = []).push(controller);
    if (this.renderRoot !== void 0 && this.isConnected) {
      (_b5 = controller.hostConnected) === null || _b5 === void 0 ? void 0 : _b5.call(controller);
    }
  }
  /**
   * Removes a `ReactiveController` from the element.
   * @category controllers
   */
  removeController(controller) {
    var _a6;
    (_a6 = this.__controllers) === null || _a6 === void 0 ? void 0 : _a6.splice(this.__controllers.indexOf(controller) >>> 0, 1);
  }
  /**
   * Fixes any properties set on the instance before upgrade time.
   * Otherwise these would shadow the accessor and break these properties.
   * The properties are stored in a Map which is played back after the
   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome
   * (<=41), properties created for native platform properties like (`id` or
   * `name`) may not have default values set in the element constructor. On
   * these browsers native properties appear on instances and therefore their
   * default value will overwrite any element default (e.g. if the element sets
   * this.id = 'id' in the constructor, the 'id' will become '' since this is
   * the native platform default).
   */
  __saveInstanceProperties() {
    this.constructor.elementProperties.forEach((_v, p) => {
      if (this.hasOwnProperty(p)) {
        this.__instanceProperties.set(p, this[p]);
        delete this[p];
      }
    });
  }
  /**
   * Returns the node into which the element should render and by default
   * creates and returns an open shadowRoot. Implement to customize where the
   * element's DOM is rendered. For example, to render into the element's
   * childNodes, return `this`.
   *
   * @return Returns a node into which to render.
   * @category rendering
   */
  createRenderRoot() {
    var _a6;
    const renderRoot = (_a6 = this.shadowRoot) !== null && _a6 !== void 0 ? _a6 : this.attachShadow(this.constructor.shadowRootOptions);
    adoptStyles(renderRoot, this.constructor.elementStyles);
    return renderRoot;
  }
  /**
   * On first connection, creates the element's renderRoot, sets up
   * element styling, and enables updating.
   * @category lifecycle
   */
  connectedCallback() {
    var _a6;
    if (this.renderRoot === void 0) {
      this.renderRoot = this.createRenderRoot();
    }
    this.enableUpdating(true);
    (_a6 = this.__controllers) === null || _a6 === void 0 ? void 0 : _a6.forEach((c) => {
      var _a7;
      return (_a7 = c.hostConnected) === null || _a7 === void 0 ? void 0 : _a7.call(c);
    });
  }
  /**
   * Note, this method should be considered final and not overridden. It is
   * overridden on the element instance with a function that triggers the first
   * update.
   * @category updates
   */
  enableUpdating(_requestedUpdate) {
  }
  /**
   * Allows for `super.disconnectedCallback()` in extensions while
   * reserving the possibility of making non-breaking feature additions
   * when disconnecting at some point in the future.
   * @category lifecycle
   */
  disconnectedCallback() {
    var _a6;
    (_a6 = this.__controllers) === null || _a6 === void 0 ? void 0 : _a6.forEach((c) => {
      var _a7;
      return (_a7 = c.hostDisconnected) === null || _a7 === void 0 ? void 0 : _a7.call(c);
    });
  }
  /**
   * Synchronizes property values when attributes change.
   *
   * Specifically, when an attribute is set, the corresponding property is set.
   * You should rarely need to implement this callback. If this method is
   * overridden, `super.attributeChangedCallback(name, _old, value)` must be
   * called.
   *
   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)
   * on MDN for more information about the `attributeChangedCallback`.
   * @category attributes
   */
  attributeChangedCallback(name, _old, value) {
    this._$attributeToProperty(name, value);
  }
  __propertyToAttribute(name, value, options2 = defaultPropertyDeclaration) {
    var _a6;
    const attr = this.constructor.__attributeNameForProperty(name, options2);
    if (attr !== void 0 && options2.reflect === true) {
      const converter = ((_a6 = options2.converter) === null || _a6 === void 0 ? void 0 : _a6.toAttribute) !== void 0 ? options2.converter : defaultConverter;
      const attrValue = converter.toAttribute(value, options2.type);
      if (DEV_MODE && this.constructor.enabledWarnings.indexOf("migration") >= 0 && attrValue === void 0) {
        issueWarning("undefined-attribute-value", `The attribute value for the ${name} property is undefined on element ${this.localName}. The attribute will be removed, but in the previous version of \`ReactiveElement\`, the attribute would not have changed.`);
      }
      this.__reflectingProperty = name;
      if (attrValue == null) {
        this.removeAttribute(attr);
      } else {
        this.setAttribute(attr, attrValue);
      }
      this.__reflectingProperty = null;
    }
  }
  /** @internal */
  _$attributeToProperty(name, value) {
    var _a6;
    const ctor = this.constructor;
    const propName = ctor.__attributeToPropertyMap.get(name);
    if (propName !== void 0 && this.__reflectingProperty !== propName) {
      const options2 = ctor.getPropertyOptions(propName);
      const converter = typeof options2.converter === "function" ? { fromAttribute: options2.converter } : ((_a6 = options2.converter) === null || _a6 === void 0 ? void 0 : _a6.fromAttribute) !== void 0 ? options2.converter : defaultConverter;
      this.__reflectingProperty = propName;
      this[propName] = converter.fromAttribute(
        value,
        options2.type
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
      );
      this.__reflectingProperty = null;
    }
  }
  /**
   * Requests an update which is processed asynchronously. This should be called
   * when an element should update based on some state not triggered by setting
   * a reactive property. In this case, pass no arguments. It should also be
   * called when manually implementing a property setter. In this case, pass the
   * property `name` and `oldValue` to ensure that any configured property
   * options are honored.
   *
   * @param name name of requesting property
   * @param oldValue old value of requesting property
   * @param options property options to use instead of the previously
   *     configured options
   * @category updates
   */
  requestUpdate(name, oldValue, options2) {
    let shouldRequestUpdate = true;
    if (name !== void 0) {
      options2 = options2 || this.constructor.getPropertyOptions(name);
      const hasChanged = options2.hasChanged || notEqual;
      if (hasChanged(this[name], oldValue)) {
        if (!this._$changedProperties.has(name)) {
          this._$changedProperties.set(name, oldValue);
        }
        if (options2.reflect === true && this.__reflectingProperty !== name) {
          if (this.__reflectingProperties === void 0) {
            this.__reflectingProperties = /* @__PURE__ */ new Map();
          }
          this.__reflectingProperties.set(name, options2);
        }
      } else {
        shouldRequestUpdate = false;
      }
    }
    if (!this.isUpdatePending && shouldRequestUpdate) {
      this.__updatePromise = this.__enqueueUpdate();
    }
    return DEV_MODE ? requestUpdateThenable(this.localName) : void 0;
  }
  /**
   * Sets up the element to asynchronously update.
   */
  async __enqueueUpdate() {
    this.isUpdatePending = true;
    try {
      await this.__updatePromise;
    } catch (e) {
      Promise.reject(e);
    }
    const result = this.scheduleUpdate();
    if (result != null) {
      await result;
    }
    return !this.isUpdatePending;
  }
  /**
   * Schedules an element update. You can override this method to change the
   * timing of updates by returning a Promise. The update will await the
   * returned Promise, and you should resolve the Promise to allow the update
   * to proceed. If this method is overridden, `super.scheduleUpdate()`
   * must be called.
   *
   * For instance, to schedule updates to occur just before the next frame:
   *
   * ```ts
   * override protected async scheduleUpdate(): Promise<unknown> {
   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));
   *   super.scheduleUpdate();
   * }
   * ```
   * @category updates
   */
  scheduleUpdate() {
    return this.performUpdate();
  }
  /**
   * Performs an element update. Note, if an exception is thrown during the
   * update, `firstUpdated` and `updated` will not be called.
   *
   * Call `performUpdate()` to immediately process a pending update. This should
   * generally not be needed, but it can be done in rare cases when you need to
   * update synchronously.
   *
   * Note: To ensure `performUpdate()` synchronously completes a pending update,
   * it should not be overridden. In LitElement 2.x it was suggested to override
   * `performUpdate()` to also customizing update scheduling. Instead, you should now
   * override `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,
   * scheduling updates via `performUpdate()` continues to work, but will make
   * also calling `performUpdate()` to synchronously process updates difficult.
   *
   * @category updates
   */
  performUpdate() {
    var _a6, _b5;
    if (!this.isUpdatePending) {
      return;
    }
    debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({ kind: "update" });
    if (!this.hasUpdated) {
      if (DEV_MODE) {
        const shadowedProperties = [];
        (_a6 = this.constructor.__reactivePropertyKeys) === null || _a6 === void 0 ? void 0 : _a6.forEach((p) => {
          var _a7;
          if (this.hasOwnProperty(p) && !((_a7 = this.__instanceProperties) === null || _a7 === void 0 ? void 0 : _a7.has(p))) {
            shadowedProperties.push(p);
          }
        });
        if (shadowedProperties.length) {
          throw new Error(`The following properties on element ${this.localName} will not trigger updates as expected because they are set using class fields: ${shadowedProperties.join(", ")}. Native class fields and some compiled output will overwrite accessors used for detecting changes. See https://lit.dev/msg/class-field-shadowing for more information.`);
        }
      }
    }
    if (this.__instanceProperties) {
      this.__instanceProperties.forEach((v, p) => this[p] = v);
      this.__instanceProperties = void 0;
    }
    let shouldUpdate = false;
    const changedProperties = this._$changedProperties;
    try {
      shouldUpdate = this.shouldUpdate(changedProperties);
      if (shouldUpdate) {
        this.willUpdate(changedProperties);
        (_b5 = this.__controllers) === null || _b5 === void 0 ? void 0 : _b5.forEach((c) => {
          var _a7;
          return (_a7 = c.hostUpdate) === null || _a7 === void 0 ? void 0 : _a7.call(c);
        });
        this.update(changedProperties);
      } else {
        this.__markUpdated();
      }
    } catch (e) {
      shouldUpdate = false;
      this.__markUpdated();
      throw e;
    }
    if (shouldUpdate) {
      this._$didUpdate(changedProperties);
    }
  }
  /**
   * Invoked before `update()` to compute values needed during the update.
   *
   * Implement `willUpdate` to compute property values that depend on other
   * properties and are used in the rest of the update process.
   *
   * ```ts
   * willUpdate(changedProperties) {
   *   // only need to check changed properties for an expensive computation.
   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {
   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);
   *   }
   * }
   *
   * render() {
   *   return html`SHA: ${this.sha}`;
   * }
   * ```
   *
   * @category updates
   */
  willUpdate(_changedProperties) {
  }
  // Note, this is an override point for polyfill-support.
  // @internal
  _$didUpdate(changedProperties) {
    var _a6;
    (_a6 = this.__controllers) === null || _a6 === void 0 ? void 0 : _a6.forEach((c) => {
      var _a7;
      return (_a7 = c.hostUpdated) === null || _a7 === void 0 ? void 0 : _a7.call(c);
    });
    if (!this.hasUpdated) {
      this.hasUpdated = true;
      this.firstUpdated(changedProperties);
    }
    this.updated(changedProperties);
    if (DEV_MODE && this.isUpdatePending && this.constructor.enabledWarnings.indexOf("change-in-update") >= 0) {
      issueWarning("change-in-update", `Element ${this.localName} scheduled an update (generally because a property was set) after an update completed, causing a new update to be scheduled. This is inefficient and should be avoided unless the next update can only be scheduled as a side effect of the previous update.`);
    }
  }
  __markUpdated() {
    this._$changedProperties = /* @__PURE__ */ new Map();
    this.isUpdatePending = false;
  }
  /**
   * Returns a Promise that resolves when the element has completed updating.
   * The Promise value is a boolean that is `true` if the element completed the
   * update without triggering another update. The Promise result is `false` if
   * a property was set inside `updated()`. If the Promise is rejected, an
   * exception was thrown during the update.
   *
   * To await additional asynchronous work, override the `getUpdateComplete`
   * method. For example, it is sometimes useful to await a rendered element
   * before fulfilling this Promise. To do this, first await
   * `super.getUpdateComplete()`, then any subsequent state.
   *
   * @return A promise of a boolean that resolves to true if the update completed
   *     without triggering another update.
   * @category updates
   */
  get updateComplete() {
    return this.getUpdateComplete();
  }
  /**
   * Override point for the `updateComplete` promise.
   *
   * It is not safe to override the `updateComplete` getter directly due to a
   * limitation in TypeScript which means it is not possible to call a
   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target
   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).
   * This method should be overridden instead. For example:
   *
   * ```ts
   * class MyElement extends LitElement {
   *   override async getUpdateComplete() {
   *     const result = await super.getUpdateComplete();
   *     await this._myChild.updateComplete;
   *     return result;
   *   }
   * }
   * ```
   *
   * @return A promise of a boolean that resolves to true if the update completed
   *     without triggering another update.
   * @category updates
   */
  getUpdateComplete() {
    return this.__updatePromise;
  }
  /**
   * Controls whether or not `update()` should be called when the element requests
   * an update. By default, this method always returns `true`, but this can be
   * customized to control when to update.
   *
   * @param _changedProperties Map of changed properties with old values
   * @category updates
   */
  shouldUpdate(_changedProperties) {
    return true;
  }
  /**
   * Updates the element. This method reflects property values to attributes.
   * It can be overridden to render and keep updated element DOM.
   * Setting properties inside this method will *not* trigger
   * another update.
   *
   * @param _changedProperties Map of changed properties with old values
   * @category updates
   */
  update(_changedProperties) {
    if (this.__reflectingProperties !== void 0) {
      this.__reflectingProperties.forEach((v, k) => this.__propertyToAttribute(k, this[k], v));
      this.__reflectingProperties = void 0;
    }
    this.__markUpdated();
  }
  /**
   * Invoked whenever the element is updated. Implement to perform
   * post-updating tasks via DOM APIs, for example, focusing an element.
   *
   * Setting properties inside this method will trigger the element to update
   * again after this update cycle completes.
   *
   * @param _changedProperties Map of changed properties with old values
   * @category updates
   */
  updated(_changedProperties) {
  }
  /**
   * Invoked when the element is first updated. Implement to perform one time
   * work on the element after update.
   *
   * ```ts
   * firstUpdated() {
   *   this.renderRoot.getElementById('my-text-area').focus();
   * }
   * ```
   *
   * Setting properties inside this method will trigger the element to update
   * again after this update cycle completes.
   *
   * @param _changedProperties Map of changed properties with old values
   * @category updates
   */
  firstUpdated(_changedProperties) {
  }
};
_e = finalized;
ReactiveElement[_e] = true;
ReactiveElement.elementProperties = /* @__PURE__ */ new Map();
ReactiveElement.elementStyles = [];
ReactiveElement.shadowRootOptions = { mode: "open" };
polyfillSupport === null || polyfillSupport === void 0 ? void 0 : polyfillSupport({ ReactiveElement });
if (DEV_MODE) {
  ReactiveElement.enabledWarnings = ["change-in-update"];
  const ensureOwnWarnings = function(ctor) {
    if (!ctor.hasOwnProperty(JSCompiler_renameProperty("enabledWarnings", ctor))) {
      ctor.enabledWarnings = ctor.enabledWarnings.slice();
    }
  };
  ReactiveElement.enableWarning = function(warning) {
    ensureOwnWarnings(this);
    if (this.enabledWarnings.indexOf(warning) < 0) {
      this.enabledWarnings.push(warning);
    }
  };
  ReactiveElement.disableWarning = function(warning) {
    ensureOwnWarnings(this);
    const i = this.enabledWarnings.indexOf(warning);
    if (i >= 0) {
      this.enabledWarnings.splice(i, 1);
    }
  };
}
((_d = global3.reactiveElementVersions) !== null && _d !== void 0 ? _d : global3.reactiveElementVersions = []).push("1.6.3");
if (DEV_MODE && global3.reactiveElementVersions.length > 1) {
  issueWarning("multiple-versions", `Multiple versions of Lit loaded. Loading multiple versions is not recommended.`);
}

// node_modules/lit-html/development/lit-html.js
var _a2;
var _b2;
var _c2;
var _d2;
var DEV_MODE2 = true;
var ENABLE_EXTRA_SECURITY_HOOKS = true;
var ENABLE_SHADYDOM_NOPATCH = true;
var NODE_MODE3 = false;
var global4 = NODE_MODE3 ? globalThis : window;
var debugLogEvent2 = DEV_MODE2 ? (event) => {
  const shouldEmit = global4.emitLitDebugLogEvents;
  if (!shouldEmit) {
    return;
  }
  global4.dispatchEvent(new CustomEvent("lit-debug", {
    detail: event
  }));
} : void 0;
var debugLogRenderId = 0;
var issueWarning2;
if (DEV_MODE2) {
  (_a2 = global4.litIssuedWarnings) !== null && _a2 !== void 0 ? _a2 : global4.litIssuedWarnings = /* @__PURE__ */ new Set();
  issueWarning2 = (code, warning) => {
    warning += code ? ` See https://lit.dev/msg/${code} for more information.` : "";
    if (!global4.litIssuedWarnings.has(warning)) {
      console.warn(warning);
      global4.litIssuedWarnings.add(warning);
    }
  };
  issueWarning2("dev-mode", `Lit is in dev mode. Not recommended for production!`);
}
var wrap = ENABLE_SHADYDOM_NOPATCH && ((_b2 = global4.ShadyDOM) === null || _b2 === void 0 ? void 0 : _b2.inUse) && ((_c2 = global4.ShadyDOM) === null || _c2 === void 0 ? void 0 : _c2.noPatch) === true ? global4.ShadyDOM.wrap : (node2) => node2;
var trustedTypes2 = global4.trustedTypes;
var policy = trustedTypes2 ? trustedTypes2.createPolicy("lit-html", {
  createHTML: (s) => s
}) : void 0;
var identityFunction = (value) => value;
var noopSanitizer = (_node, _name, _type) => identityFunction;
var setSanitizer = (newSanitizer) => {
  if (!ENABLE_EXTRA_SECURITY_HOOKS) {
    return;
  }
  if (sanitizerFactoryInternal !== noopSanitizer) {
    throw new Error(`Attempted to overwrite existing lit-html security policy. setSanitizeDOMValueFactory should be called at most once.`);
  }
  sanitizerFactoryInternal = newSanitizer;
};
var _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {
  sanitizerFactoryInternal = noopSanitizer;
};
var createSanitizer = (node2, name, type) => {
  return sanitizerFactoryInternal(node2, name, type);
};
var boundAttributeSuffix = "$lit$";
var marker = `lit$${String(Math.random()).slice(9)}$`;
var markerMatch = "?" + marker;
var nodeMarker = `<${markerMatch}>`;
var d = NODE_MODE3 && global4.document === void 0 ? {
  createTreeWalker() {
    return {};
  }
} : document;
var createMarker = () => d.createComment("");
var isPrimitive = (value) => value === null || typeof value != "object" && typeof value != "function";
var isArray = Array.isArray;
var isIterable = (value) => isArray(value) || // eslint-disable-next-line @typescript-eslint/no-explicit-any
typeof (value === null || value === void 0 ? void 0 : value[Symbol.iterator]) === "function";
var SPACE_CHAR = `[ 	
\f\r]`;
var ATTR_VALUE_CHAR = `[^ 	
\f\r"'\`<>=]`;
var NAME_CHAR = `[^\\s"'>=/]`;
var textEndRegex = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g;
var COMMENT_START = 1;
var TAG_NAME = 2;
var DYNAMIC_TAG_NAME = 3;
var commentEndRegex = /-->/g;
var comment2EndRegex = />/g;
var tagEndRegex = new RegExp(`>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|("|')|))|$)`, "g");
var ENTIRE_MATCH = 0;
var ATTRIBUTE_NAME = 1;
var SPACES_AND_EQUALS = 2;
var QUOTE_CHAR = 3;
var singleQuoteAttrEndRegex = /'/g;
var doubleQuoteAttrEndRegex = /"/g;
var rawTextElement = /^(?:script|style|textarea|title)$/i;
var HTML_RESULT = 1;
var SVG_RESULT = 2;
var ATTRIBUTE_PART = 1;
var CHILD_PART = 2;
var PROPERTY_PART = 3;
var BOOLEAN_ATTRIBUTE_PART = 4;
var EVENT_PART = 5;
var ELEMENT_PART = 6;
var COMMENT_PART = 7;
var tag = (type) => (strings, ...values) => {
  if (DEV_MODE2 && strings.some((s) => s === void 0)) {
    console.warn("Some template strings are undefined.\nThis is probably caused by illegal octal escape sequences.");
  }
  return {
    // This property needs to remain unminified.
    ["_$litType$"]: type,
    strings,
    values
  };
};
var html = tag(HTML_RESULT);
var svg = tag(SVG_RESULT);
var noChange = Symbol.for("lit-noChange");
var nothing = Symbol.for("lit-nothing");
var templateCache = /* @__PURE__ */ new WeakMap();
var walker = d.createTreeWalker(d, 129, null, false);
var sanitizerFactoryInternal = noopSanitizer;
function trustFromTemplateString(tsa, stringFromTSA) {
  if (!Array.isArray(tsa) || !tsa.hasOwnProperty("raw")) {
    let message = "invalid template strings array";
    if (DEV_MODE2) {
      message = `
          Internal Error: expected template strings to be an array
          with a 'raw' field. Faking a template strings array by
          calling html or svg like an ordinary function is effectively
          the same as calling unsafeHtml and can lead to major security
          issues, e.g. opening your code up to XSS attacks.
          If you're using the html or svg tagged template functions normally
          and still seeing this error, please file a bug at
          https://github.com/lit/lit/issues/new?template=bug_report.md
          and include information about your build tooling, if any.
        `.trim().replace(/\n */g, "\n");
    }
    throw new Error(message);
  }
  return policy !== void 0 ? policy.createHTML(stringFromTSA) : stringFromTSA;
}
var getTemplateHtml = (strings, type) => {
  const l = strings.length - 1;
  const attrNames = [];
  let html2 = type === SVG_RESULT ? "<svg>" : "";
  let rawTextEndRegex;
  let regex = textEndRegex;
  for (let i = 0; i < l; i++) {
    const s = strings[i];
    let attrNameEndIndex = -1;
    let attrName;
    let lastIndex = 0;
    let match2;
    while (lastIndex < s.length) {
      regex.lastIndex = lastIndex;
      match2 = regex.exec(s);
      if (match2 === null) {
        break;
      }
      lastIndex = regex.lastIndex;
      if (regex === textEndRegex) {
        if (match2[COMMENT_START] === "!--") {
          regex = commentEndRegex;
        } else if (match2[COMMENT_START] !== void 0) {
          regex = comment2EndRegex;
        } else if (match2[TAG_NAME] !== void 0) {
          if (rawTextElement.test(match2[TAG_NAME])) {
            rawTextEndRegex = new RegExp(`</${match2[TAG_NAME]}`, "g");
          }
          regex = tagEndRegex;
        } else if (match2[DYNAMIC_TAG_NAME] !== void 0) {
          if (DEV_MODE2) {
            throw new Error("Bindings in tag names are not supported. Please use static templates instead. See https://lit.dev/docs/templates/expressions/#static-expressions");
          }
          regex = tagEndRegex;
        }
      } else if (regex === tagEndRegex) {
        if (match2[ENTIRE_MATCH] === ">") {
          regex = rawTextEndRegex !== null && rawTextEndRegex !== void 0 ? rawTextEndRegex : textEndRegex;
          attrNameEndIndex = -1;
        } else if (match2[ATTRIBUTE_NAME] === void 0) {
          attrNameEndIndex = -2;
        } else {
          attrNameEndIndex = regex.lastIndex - match2[SPACES_AND_EQUALS].length;
          attrName = match2[ATTRIBUTE_NAME];
          regex = match2[QUOTE_CHAR] === void 0 ? tagEndRegex : match2[QUOTE_CHAR] === '"' ? doubleQuoteAttrEndRegex : singleQuoteAttrEndRegex;
        }
      } else if (regex === doubleQuoteAttrEndRegex || regex === singleQuoteAttrEndRegex) {
        regex = tagEndRegex;
      } else if (regex === commentEndRegex || regex === comment2EndRegex) {
        regex = textEndRegex;
      } else {
        regex = tagEndRegex;
        rawTextEndRegex = void 0;
      }
    }
    if (DEV_MODE2) {
      console.assert(attrNameEndIndex === -1 || regex === tagEndRegex || regex === singleQuoteAttrEndRegex || regex === doubleQuoteAttrEndRegex, "unexpected parse state B");
    }
    const end2 = regex === tagEndRegex && strings[i + 1].startsWith("/>") ? " " : "";
    html2 += regex === textEndRegex ? s + nodeMarker : attrNameEndIndex >= 0 ? (attrNames.push(attrName), s.slice(0, attrNameEndIndex) + boundAttributeSuffix + s.slice(attrNameEndIndex)) + marker + end2 : s + marker + (attrNameEndIndex === -2 ? (attrNames.push(void 0), i) : end2);
  }
  const htmlResult = html2 + (strings[l] || "<?>") + (type === SVG_RESULT ? "</svg>" : "");
  return [trustFromTemplateString(strings, htmlResult), attrNames];
};
var Template = class _Template {
  constructor({ strings, ["_$litType$"]: type }, options2) {
    this.parts = [];
    let node2;
    let nodeIndex = 0;
    let attrNameIndex = 0;
    const partCount = strings.length - 1;
    const parts = this.parts;
    const [html2, attrNames] = getTemplateHtml(strings, type);
    this.el = _Template.createElement(html2, options2);
    walker.currentNode = this.el.content;
    if (type === SVG_RESULT) {
      const content = this.el.content;
      const svgElement = content.firstChild;
      svgElement.remove();
      content.append(...svgElement.childNodes);
    }
    while ((node2 = walker.nextNode()) !== null && parts.length < partCount) {
      if (node2.nodeType === 1) {
        if (DEV_MODE2) {
          const tag2 = node2.localName;
          if (/^(?:textarea|template)$/i.test(tag2) && node2.innerHTML.includes(marker)) {
            const m = `Expressions are not supported inside \`${tag2}\` elements. See https://lit.dev/msg/expression-in-${tag2} for more information.`;
            if (tag2 === "template") {
              throw new Error(m);
            } else
              issueWarning2("", m);
          }
        }
        if (node2.hasAttributes()) {
          const attrsToRemove = [];
          for (const name of node2.getAttributeNames()) {
            if (name.endsWith(boundAttributeSuffix) || name.startsWith(marker)) {
              const realName = attrNames[attrNameIndex++];
              attrsToRemove.push(name);
              if (realName !== void 0) {
                const value = node2.getAttribute(realName.toLowerCase() + boundAttributeSuffix);
                const statics = value.split(marker);
                const m = /([.?@])?(.*)/.exec(realName);
                parts.push({
                  type: ATTRIBUTE_PART,
                  index: nodeIndex,
                  name: m[2],
                  strings: statics,
                  ctor: m[1] === "." ? PropertyPart : m[1] === "?" ? BooleanAttributePart : m[1] === "@" ? EventPart : AttributePart
                });
              } else {
                parts.push({
                  type: ELEMENT_PART,
                  index: nodeIndex
                });
              }
            }
          }
          for (const name of attrsToRemove) {
            node2.removeAttribute(name);
          }
        }
        if (rawTextElement.test(node2.tagName)) {
          const strings2 = node2.textContent.split(marker);
          const lastIndex = strings2.length - 1;
          if (lastIndex > 0) {
            node2.textContent = trustedTypes2 ? trustedTypes2.emptyScript : "";
            for (let i = 0; i < lastIndex; i++) {
              node2.append(strings2[i], createMarker());
              walker.nextNode();
              parts.push({ type: CHILD_PART, index: ++nodeIndex });
            }
            node2.append(strings2[lastIndex], createMarker());
          }
        }
      } else if (node2.nodeType === 8) {
        const data = node2.data;
        if (data === markerMatch) {
          parts.push({ type: CHILD_PART, index: nodeIndex });
        } else {
          let i = -1;
          while ((i = node2.data.indexOf(marker, i + 1)) !== -1) {
            parts.push({ type: COMMENT_PART, index: nodeIndex });
            i += marker.length - 1;
          }
        }
      }
      nodeIndex++;
    }
    debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
      kind: "template prep",
      template: this,
      clonableTemplate: this.el,
      parts: this.parts,
      strings
    });
  }
  // Overridden via `litHtmlPolyfillSupport` to provide platform support.
  /** @nocollapse */
  static createElement(html2, _options) {
    const el = d.createElement("template");
    el.innerHTML = html2;
    return el;
  }
};
function resolveDirective(part, value, parent = part, attributeIndex) {
  var _a6, _b5, _c4;
  var _d3;
  if (value === noChange) {
    return value;
  }
  let currentDirective = attributeIndex !== void 0 ? (_a6 = parent.__directives) === null || _a6 === void 0 ? void 0 : _a6[attributeIndex] : parent.__directive;
  const nextDirectiveConstructor = isPrimitive(value) ? void 0 : (
    // This property needs to remain unminified.
    value["_$litDirective$"]
  );
  if ((currentDirective === null || currentDirective === void 0 ? void 0 : currentDirective.constructor) !== nextDirectiveConstructor) {
    (_b5 = currentDirective === null || currentDirective === void 0 ? void 0 : currentDirective["_$notifyDirectiveConnectionChanged"]) === null || _b5 === void 0 ? void 0 : _b5.call(currentDirective, false);
    if (nextDirectiveConstructor === void 0) {
      currentDirective = void 0;
    } else {
      currentDirective = new nextDirectiveConstructor(part);
      currentDirective._$initialize(part, parent, attributeIndex);
    }
    if (attributeIndex !== void 0) {
      ((_c4 = (_d3 = parent).__directives) !== null && _c4 !== void 0 ? _c4 : _d3.__directives = [])[attributeIndex] = currentDirective;
    } else {
      parent.__directive = currentDirective;
    }
  }
  if (currentDirective !== void 0) {
    value = resolveDirective(part, currentDirective._$resolve(part, value.values), currentDirective, attributeIndex);
  }
  return value;
}
var TemplateInstance = class {
  constructor(template, parent) {
    this._$parts = [];
    this._$disconnectableChildren = void 0;
    this._$template = template;
    this._$parent = parent;
  }
  // Called by ChildPart parentNode getter
  get parentNode() {
    return this._$parent.parentNode;
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    return this._$parent._$isConnected;
  }
  // This method is separate from the constructor because we need to return a
  // DocumentFragment and we don't want to hold onto it with an instance field.
  _clone(options2) {
    var _a6;
    const { el: { content }, parts } = this._$template;
    const fragment = ((_a6 = options2 === null || options2 === void 0 ? void 0 : options2.creationScope) !== null && _a6 !== void 0 ? _a6 : d).importNode(content, true);
    walker.currentNode = fragment;
    let node2 = walker.nextNode();
    let nodeIndex = 0;
    let partIndex = 0;
    let templatePart = parts[0];
    while (templatePart !== void 0) {
      if (nodeIndex === templatePart.index) {
        let part;
        if (templatePart.type === CHILD_PART) {
          part = new ChildPart(node2, node2.nextSibling, this, options2);
        } else if (templatePart.type === ATTRIBUTE_PART) {
          part = new templatePart.ctor(node2, templatePart.name, templatePart.strings, this, options2);
        } else if (templatePart.type === ELEMENT_PART) {
          part = new ElementPart(node2, this, options2);
        }
        this._$parts.push(part);
        templatePart = parts[++partIndex];
      }
      if (nodeIndex !== (templatePart === null || templatePart === void 0 ? void 0 : templatePart.index)) {
        node2 = walker.nextNode();
        nodeIndex++;
      }
    }
    walker.currentNode = d;
    return fragment;
  }
  _update(values) {
    let i = 0;
    for (const part of this._$parts) {
      if (part !== void 0) {
        debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
          kind: "set part",
          part,
          value: values[i],
          valueIndex: i,
          values,
          templateInstance: this
        });
        if (part.strings !== void 0) {
          part._$setValue(values, part, i);
          i += part.strings.length - 2;
        } else {
          part._$setValue(values[i]);
        }
      }
      i++;
    }
  }
};
var ChildPart = class _ChildPart {
  constructor(startNode, endNode, parent, options2) {
    var _a6;
    this.type = CHILD_PART;
    this._$committedValue = nothing;
    this._$disconnectableChildren = void 0;
    this._$startNode = startNode;
    this._$endNode = endNode;
    this._$parent = parent;
    this.options = options2;
    this.__isConnected = (_a6 = options2 === null || options2 === void 0 ? void 0 : options2.isConnected) !== null && _a6 !== void 0 ? _a6 : true;
    if (ENABLE_EXTRA_SECURITY_HOOKS) {
      this._textSanitizer = void 0;
    }
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    var _a6, _b5;
    return (_b5 = (_a6 = this._$parent) === null || _a6 === void 0 ? void 0 : _a6._$isConnected) !== null && _b5 !== void 0 ? _b5 : this.__isConnected;
  }
  /**
   * The parent node into which the part renders its content.
   *
   * A ChildPart's content consists of a range of adjacent child nodes of
   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and
   * `.endNode`).
   *
   * - If both `.startNode` and `.endNode` are non-null, then the part's content
   * consists of all siblings between `.startNode` and `.endNode`, exclusively.
   *
   * - If `.startNode` is non-null but `.endNode` is null, then the part's
   * content consists of all siblings following `.startNode`, up to and
   * including the last child of `.parentNode`. If `.endNode` is non-null, then
   * `.startNode` will always be non-null.
   *
   * - If both `.endNode` and `.startNode` are null, then the part's content
   * consists of all child nodes of `.parentNode`.
   */
  get parentNode() {
    let parentNode = wrap(this._$startNode).parentNode;
    const parent = this._$parent;
    if (parent !== void 0 && (parentNode === null || parentNode === void 0 ? void 0 : parentNode.nodeType) === 11) {
      parentNode = parent.parentNode;
    }
    return parentNode;
  }
  /**
   * The part's leading marker node, if any. See `.parentNode` for more
   * information.
   */
  get startNode() {
    return this._$startNode;
  }
  /**
   * The part's trailing marker node, if any. See `.parentNode` for more
   * information.
   */
  get endNode() {
    return this._$endNode;
  }
  _$setValue(value, directiveParent = this) {
    var _a6;
    if (DEV_MODE2 && this.parentNode === null) {
      throw new Error(`This \`ChildPart\` has no \`parentNode\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \`innerHTML\` or \`textContent\` can do this.`);
    }
    value = resolveDirective(this, value, directiveParent);
    if (isPrimitive(value)) {
      if (value === nothing || value == null || value === "") {
        if (this._$committedValue !== nothing) {
          debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
            kind: "commit nothing to child",
            start: this._$startNode,
            end: this._$endNode,
            parent: this._$parent,
            options: this.options
          });
          this._$clear();
        }
        this._$committedValue = nothing;
      } else if (value !== this._$committedValue && value !== noChange) {
        this._commitText(value);
      }
    } else if (value["_$litType$"] !== void 0) {
      this._commitTemplateResult(value);
    } else if (value.nodeType !== void 0) {
      if (DEV_MODE2 && ((_a6 = this.options) === null || _a6 === void 0 ? void 0 : _a6.host) === value) {
        this._commitText(`[probable mistake: rendered a template's host in itself (commonly caused by writing \${this} in a template]`);
        console.warn(`Attempted to render the template host`, value, `inside itself. This is almost always a mistake, and in dev mode `, `we render some warning text. In production however, we'll `, `render it, which will usually result in an error, and sometimes `, `in the element disappearing from the DOM.`);
        return;
      }
      this._commitNode(value);
    } else if (isIterable(value)) {
      this._commitIterable(value);
    } else {
      this._commitText(value);
    }
  }
  _insert(node2) {
    return wrap(wrap(this._$startNode).parentNode).insertBefore(node2, this._$endNode);
  }
  _commitNode(value) {
    var _a6;
    if (this._$committedValue !== value) {
      this._$clear();
      if (ENABLE_EXTRA_SECURITY_HOOKS && sanitizerFactoryInternal !== noopSanitizer) {
        const parentNodeName = (_a6 = this._$startNode.parentNode) === null || _a6 === void 0 ? void 0 : _a6.nodeName;
        if (parentNodeName === "STYLE" || parentNodeName === "SCRIPT") {
          let message = "Forbidden";
          if (DEV_MODE2) {
            if (parentNodeName === "STYLE") {
              message = `Lit does not support binding inside style nodes. This is a security risk, as style injection attacks can exfiltrate data and spoof UIs. Consider instead using css\`...\` literals to compose styles, and make do dynamic styling with css custom properties, ::parts, <slot>s, and by mutating the DOM rather than stylesheets.`;
            } else {
              message = `Lit does not support binding inside script nodes. This is a security risk, as it could allow arbitrary code execution.`;
            }
          }
          throw new Error(message);
        }
      }
      debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
        kind: "commit node",
        start: this._$startNode,
        parent: this._$parent,
        value,
        options: this.options
      });
      this._$committedValue = this._insert(value);
    }
  }
  _commitText(value) {
    if (this._$committedValue !== nothing && isPrimitive(this._$committedValue)) {
      const node2 = wrap(this._$startNode).nextSibling;
      if (ENABLE_EXTRA_SECURITY_HOOKS) {
        if (this._textSanitizer === void 0) {
          this._textSanitizer = createSanitizer(node2, "data", "property");
        }
        value = this._textSanitizer(value);
      }
      debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
        kind: "commit text",
        node: node2,
        value,
        options: this.options
      });
      node2.data = value;
    } else {
      if (ENABLE_EXTRA_SECURITY_HOOKS) {
        const textNode = d.createTextNode("");
        this._commitNode(textNode);
        if (this._textSanitizer === void 0) {
          this._textSanitizer = createSanitizer(textNode, "data", "property");
        }
        value = this._textSanitizer(value);
        debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
          kind: "commit text",
          node: textNode,
          value,
          options: this.options
        });
        textNode.data = value;
      } else {
        this._commitNode(d.createTextNode(value));
        debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
          kind: "commit text",
          node: wrap(this._$startNode).nextSibling,
          value,
          options: this.options
        });
      }
    }
    this._$committedValue = value;
  }
  _commitTemplateResult(result) {
    var _a6;
    const { values, ["_$litType$"]: type } = result;
    const template = typeof type === "number" ? this._$getTemplate(result) : (type.el === void 0 && (type.el = Template.createElement(trustFromTemplateString(type.h, type.h[0]), this.options)), type);
    if (((_a6 = this._$committedValue) === null || _a6 === void 0 ? void 0 : _a6._$template) === template) {
      debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
        kind: "template updating",
        template,
        instance: this._$committedValue,
        parts: this._$committedValue._$parts,
        options: this.options,
        values
      });
      this._$committedValue._update(values);
    } else {
      const instance = new TemplateInstance(template, this);
      const fragment = instance._clone(this.options);
      debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
        kind: "template instantiated",
        template,
        instance,
        parts: instance._$parts,
        options: this.options,
        fragment,
        values
      });
      instance._update(values);
      debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
        kind: "template instantiated and updated",
        template,
        instance,
        parts: instance._$parts,
        options: this.options,
        fragment,
        values
      });
      this._commitNode(fragment);
      this._$committedValue = instance;
    }
  }
  // Overridden via `litHtmlPolyfillSupport` to provide platform support.
  /** @internal */
  _$getTemplate(result) {
    let template = templateCache.get(result.strings);
    if (template === void 0) {
      templateCache.set(result.strings, template = new Template(result));
    }
    return template;
  }
  _commitIterable(value) {
    if (!isArray(this._$committedValue)) {
      this._$committedValue = [];
      this._$clear();
    }
    const itemParts = this._$committedValue;
    let partIndex = 0;
    let itemPart;
    for (const item of value) {
      if (partIndex === itemParts.length) {
        itemParts.push(itemPart = new _ChildPart(this._insert(createMarker()), this._insert(createMarker()), this, this.options));
      } else {
        itemPart = itemParts[partIndex];
      }
      itemPart._$setValue(item);
      partIndex++;
    }
    if (partIndex < itemParts.length) {
      this._$clear(itemPart && wrap(itemPart._$endNode).nextSibling, partIndex);
      itemParts.length = partIndex;
    }
  }
  /**
   * Removes the nodes contained within this Part from the DOM.
   *
   * @param start Start node to clear from, for clearing a subset of the part's
   *     DOM (used when truncating iterables)
   * @param from  When `start` is specified, the index within the iterable from
   *     which ChildParts are being removed, used for disconnecting directives in
   *     those Parts.
   *
   * @internal
   */
  _$clear(start2 = wrap(this._$startNode).nextSibling, from2) {
    var _a6;
    (_a6 = this._$notifyConnectionChanged) === null || _a6 === void 0 ? void 0 : _a6.call(this, false, true, from2);
    while (start2 && start2 !== this._$endNode) {
      const n = wrap(start2).nextSibling;
      wrap(start2).remove();
      start2 = n;
    }
  }
  /**
   * Implementation of RootPart's `isConnected`. Note that this metod
   * should only be called on `RootPart`s (the `ChildPart` returned from a
   * top-level `render()` call). It has no effect on non-root ChildParts.
   * @param isConnected Whether to set
   * @internal
   */
  setConnected(isConnected) {
    var _a6;
    if (this._$parent === void 0) {
      this.__isConnected = isConnected;
      (_a6 = this._$notifyConnectionChanged) === null || _a6 === void 0 ? void 0 : _a6.call(this, isConnected);
    } else if (DEV_MODE2) {
      throw new Error("part.setConnected() may only be called on a RootPart returned from render().");
    }
  }
};
var AttributePart = class {
  constructor(element, name, strings, parent, options2) {
    this.type = ATTRIBUTE_PART;
    this._$committedValue = nothing;
    this._$disconnectableChildren = void 0;
    this.element = element;
    this.name = name;
    this._$parent = parent;
    this.options = options2;
    if (strings.length > 2 || strings[0] !== "" || strings[1] !== "") {
      this._$committedValue = new Array(strings.length - 1).fill(new String());
      this.strings = strings;
    } else {
      this._$committedValue = nothing;
    }
    if (ENABLE_EXTRA_SECURITY_HOOKS) {
      this._sanitizer = void 0;
    }
  }
  get tagName() {
    return this.element.tagName;
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    return this._$parent._$isConnected;
  }
  /**
   * Sets the value of this part by resolving the value from possibly multiple
   * values and static strings and committing it to the DOM.
   * If this part is single-valued, `this._strings` will be undefined, and the
   * method will be called with a single value argument. If this part is
   * multi-value, `this._strings` will be defined, and the method is called
   * with the value array of the part's owning TemplateInstance, and an offset
   * into the value array from which the values should be read.
   * This method is overloaded this way to eliminate short-lived array slices
   * of the template instance values, and allow a fast-path for single-valued
   * parts.
   *
   * @param value The part value, or an array of values for multi-valued parts
   * @param valueIndex the index to start reading values from. `undefined` for
   *   single-valued parts
   * @param noCommit causes the part to not commit its value to the DOM. Used
   *   in hydration to prime attribute parts with their first-rendered value,
   *   but not set the attribute, and in SSR to no-op the DOM operation and
   *   capture the value for serialization.
   *
   * @internal
   */
  _$setValue(value, directiveParent = this, valueIndex, noCommit) {
    const strings = this.strings;
    let change = false;
    if (strings === void 0) {
      value = resolveDirective(this, value, directiveParent, 0);
      change = !isPrimitive(value) || value !== this._$committedValue && value !== noChange;
      if (change) {
        this._$committedValue = value;
      }
    } else {
      const values = value;
      value = strings[0];
      let i, v;
      for (i = 0; i < strings.length - 1; i++) {
        v = resolveDirective(this, values[valueIndex + i], directiveParent, i);
        if (v === noChange) {
          v = this._$committedValue[i];
        }
        change || (change = !isPrimitive(v) || v !== this._$committedValue[i]);
        if (v === nothing) {
          value = nothing;
        } else if (value !== nothing) {
          value += (v !== null && v !== void 0 ? v : "") + strings[i + 1];
        }
        this._$committedValue[i] = v;
      }
    }
    if (change && !noCommit) {
      this._commitValue(value);
    }
  }
  /** @internal */
  _commitValue(value) {
    if (value === nothing) {
      wrap(this.element).removeAttribute(this.name);
    } else {
      if (ENABLE_EXTRA_SECURITY_HOOKS) {
        if (this._sanitizer === void 0) {
          this._sanitizer = sanitizerFactoryInternal(this.element, this.name, "attribute");
        }
        value = this._sanitizer(value !== null && value !== void 0 ? value : "");
      }
      debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
        kind: "commit attribute",
        element: this.element,
        name: this.name,
        value,
        options: this.options
      });
      wrap(this.element).setAttribute(this.name, value !== null && value !== void 0 ? value : "");
    }
  }
};
var PropertyPart = class extends AttributePart {
  constructor() {
    super(...arguments);
    this.type = PROPERTY_PART;
  }
  /** @internal */
  _commitValue(value) {
    if (ENABLE_EXTRA_SECURITY_HOOKS) {
      if (this._sanitizer === void 0) {
        this._sanitizer = sanitizerFactoryInternal(this.element, this.name, "property");
      }
      value = this._sanitizer(value);
    }
    debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
      kind: "commit property",
      element: this.element,
      name: this.name,
      value,
      options: this.options
    });
    this.element[this.name] = value === nothing ? void 0 : value;
  }
};
var emptyStringForBooleanAttribute2 = trustedTypes2 ? trustedTypes2.emptyScript : "";
var BooleanAttributePart = class extends AttributePart {
  constructor() {
    super(...arguments);
    this.type = BOOLEAN_ATTRIBUTE_PART;
  }
  /** @internal */
  _commitValue(value) {
    debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
      kind: "commit boolean attribute",
      element: this.element,
      name: this.name,
      value: !!(value && value !== nothing),
      options: this.options
    });
    if (value && value !== nothing) {
      wrap(this.element).setAttribute(this.name, emptyStringForBooleanAttribute2);
    } else {
      wrap(this.element).removeAttribute(this.name);
    }
  }
};
var EventPart = class extends AttributePart {
  constructor(element, name, strings, parent, options2) {
    super(element, name, strings, parent, options2);
    this.type = EVENT_PART;
    if (DEV_MODE2 && this.strings !== void 0) {
      throw new Error(`A \`<${element.localName}>\` has a \`@${name}=...\` listener with invalid content. Event listeners in templates must have exactly one expression and no surrounding text.`);
    }
  }
  // EventPart does not use the base _$setValue/_resolveValue implementation
  // since the dirty checking is more complex
  /** @internal */
  _$setValue(newListener, directiveParent = this) {
    var _a6;
    newListener = (_a6 = resolveDirective(this, newListener, directiveParent, 0)) !== null && _a6 !== void 0 ? _a6 : nothing;
    if (newListener === noChange) {
      return;
    }
    const oldListener = this._$committedValue;
    const shouldRemoveListener = newListener === nothing && oldListener !== nothing || newListener.capture !== oldListener.capture || newListener.once !== oldListener.once || newListener.passive !== oldListener.passive;
    const shouldAddListener = newListener !== nothing && (oldListener === nothing || shouldRemoveListener);
    debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
      kind: "commit event listener",
      element: this.element,
      name: this.name,
      value: newListener,
      options: this.options,
      removeListener: shouldRemoveListener,
      addListener: shouldAddListener,
      oldListener
    });
    if (shouldRemoveListener) {
      this.element.removeEventListener(this.name, this, oldListener);
    }
    if (shouldAddListener) {
      this.element.addEventListener(this.name, this, newListener);
    }
    this._$committedValue = newListener;
  }
  handleEvent(event) {
    var _a6, _b5;
    if (typeof this._$committedValue === "function") {
      this._$committedValue.call((_b5 = (_a6 = this.options) === null || _a6 === void 0 ? void 0 : _a6.host) !== null && _b5 !== void 0 ? _b5 : this.element, event);
    } else {
      this._$committedValue.handleEvent(event);
    }
  }
};
var ElementPart = class {
  constructor(element, parent, options2) {
    this.element = element;
    this.type = ELEMENT_PART;
    this._$disconnectableChildren = void 0;
    this._$parent = parent;
    this.options = options2;
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    return this._$parent._$isConnected;
  }
  _$setValue(value) {
    debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
      kind: "commit to element binding",
      element: this.element,
      value,
      options: this.options
    });
    resolveDirective(this, value);
  }
};
var _$LH = {
  // Used in lit-ssr
  _boundAttributeSuffix: boundAttributeSuffix,
  _marker: marker,
  _markerMatch: markerMatch,
  _HTML_RESULT: HTML_RESULT,
  _getTemplateHtml: getTemplateHtml,
  // Used in tests and private-ssr-support
  _TemplateInstance: TemplateInstance,
  _isIterable: isIterable,
  _resolveDirective: resolveDirective,
  _ChildPart: ChildPart,
  _AttributePart: AttributePart,
  _BooleanAttributePart: BooleanAttributePart,
  _EventPart: EventPart,
  _PropertyPart: PropertyPart,
  _ElementPart: ElementPart
};
var polyfillSupport2 = DEV_MODE2 ? global4.litHtmlPolyfillSupportDevMode : global4.litHtmlPolyfillSupport;
polyfillSupport2 === null || polyfillSupport2 === void 0 ? void 0 : polyfillSupport2(Template, ChildPart);
((_d2 = global4.litHtmlVersions) !== null && _d2 !== void 0 ? _d2 : global4.litHtmlVersions = []).push("2.8.0");
if (DEV_MODE2 && global4.litHtmlVersions.length > 1) {
  issueWarning2("multiple-versions", `Multiple versions of Lit loaded. Loading multiple versions is not recommended.`);
}
var render = (value, container, options2) => {
  var _a6, _b5;
  if (DEV_MODE2 && container == null) {
    throw new TypeError(`The container to render into may not be ${container}`);
  }
  const renderId = DEV_MODE2 ? debugLogRenderId++ : 0;
  const partOwnerNode = (_a6 = options2 === null || options2 === void 0 ? void 0 : options2.renderBefore) !== null && _a6 !== void 0 ? _a6 : container;
  let part = partOwnerNode["_$litPart$"];
  debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
    kind: "begin render",
    id: renderId,
    value,
    container,
    options: options2,
    part
  });
  if (part === void 0) {
    const endNode = (_b5 = options2 === null || options2 === void 0 ? void 0 : options2.renderBefore) !== null && _b5 !== void 0 ? _b5 : null;
    partOwnerNode["_$litPart$"] = part = new ChildPart(container.insertBefore(createMarker(), endNode), endNode, void 0, options2 !== null && options2 !== void 0 ? options2 : {});
  }
  part._$setValue(value);
  debugLogEvent2 === null || debugLogEvent2 === void 0 ? void 0 : debugLogEvent2({
    kind: "end render",
    id: renderId,
    value,
    container,
    options: options2,
    part
  });
  return part;
};
if (ENABLE_EXTRA_SECURITY_HOOKS) {
  render.setSanitizer = setSanitizer;
  render.createSanitizer = createSanitizer;
  if (DEV_MODE2) {
    render._testOnlyClearSanitizerFactoryDoNotCallOrElse = _testOnlyClearSanitizerFactoryDoNotCallOrElse;
  }
}

// node_modules/lit-element/development/lit-element.js
var _a3;
var _b3;
var _c3;
var DEV_MODE3 = true;
var issueWarning3;
if (DEV_MODE3) {
  const issuedWarnings = (_a3 = globalThis.litIssuedWarnings) !== null && _a3 !== void 0 ? _a3 : globalThis.litIssuedWarnings = /* @__PURE__ */ new Set();
  issueWarning3 = (code, warning) => {
    warning += ` See https://lit.dev/msg/${code} for more information.`;
    if (!issuedWarnings.has(warning)) {
      console.warn(warning);
      issuedWarnings.add(warning);
    }
  };
}
var LitElement = class extends ReactiveElement {
  constructor() {
    super(...arguments);
    this.renderOptions = { host: this };
    this.__childPart = void 0;
  }
  /**
   * @category rendering
   */
  createRenderRoot() {
    var _a6;
    var _b5;
    const renderRoot = super.createRenderRoot();
    (_a6 = (_b5 = this.renderOptions).renderBefore) !== null && _a6 !== void 0 ? _a6 : _b5.renderBefore = renderRoot.firstChild;
    return renderRoot;
  }
  /**
   * Updates the element. This method reflects property values to attributes
   * and calls `render` to render DOM via lit-html. Setting properties inside
   * this method will *not* trigger another update.
   * @param changedProperties Map of changed properties with old values
   * @category updates
   */
  update(changedProperties) {
    const value = this.render();
    if (!this.hasUpdated) {
      this.renderOptions.isConnected = this.isConnected;
    }
    super.update(changedProperties);
    this.__childPart = render(value, this.renderRoot, this.renderOptions);
  }
  /**
   * Invoked when the component is added to the document's DOM.
   *
   * In `connectedCallback()` you should setup tasks that should only occur when
   * the element is connected to the document. The most common of these is
   * adding event listeners to nodes external to the element, like a keydown
   * event handler added to the window.
   *
   * ```ts
   * connectedCallback() {
   *   super.connectedCallback();
   *   addEventListener('keydown', this._handleKeydown);
   * }
   * ```
   *
   * Typically, anything done in `connectedCallback()` should be undone when the
   * element is disconnected, in `disconnectedCallback()`.
   *
   * @category lifecycle
   */
  connectedCallback() {
    var _a6;
    super.connectedCallback();
    (_a6 = this.__childPart) === null || _a6 === void 0 ? void 0 : _a6.setConnected(true);
  }
  /**
   * Invoked when the component is removed from the document's DOM.
   *
   * This callback is the main signal to the element that it may no longer be
   * used. `disconnectedCallback()` should ensure that nothing is holding a
   * reference to the element (such as event listeners added to nodes external
   * to the element), so that it is free to be garbage collected.
   *
   * ```ts
   * disconnectedCallback() {
   *   super.disconnectedCallback();
   *   window.removeEventListener('keydown', this._handleKeydown);
   * }
   * ```
   *
   * An element may be re-connected after being disconnected.
   *
   * @category lifecycle
   */
  disconnectedCallback() {
    var _a6;
    super.disconnectedCallback();
    (_a6 = this.__childPart) === null || _a6 === void 0 ? void 0 : _a6.setConnected(false);
  }
  /**
   * Invoked on each update to perform rendering tasks. This method may return
   * any value renderable by lit-html's `ChildPart` - typically a
   * `TemplateResult`. Setting properties inside this method will *not* trigger
   * the element to update.
   * @category rendering
   */
  render() {
    return noChange;
  }
};
LitElement["finalized"] = true;
LitElement["_$litElement$"] = true;
(_b3 = globalThis.litElementHydrateSupport) === null || _b3 === void 0 ? void 0 : _b3.call(globalThis, { LitElement });
var polyfillSupport3 = DEV_MODE3 ? globalThis.litElementPolyfillSupportDevMode : globalThis.litElementPolyfillSupport;
polyfillSupport3 === null || polyfillSupport3 === void 0 ? void 0 : polyfillSupport3({ LitElement });
if (DEV_MODE3) {
  LitElement["finalize"] = function() {
    const finalized2 = ReactiveElement.finalize.call(this);
    if (!finalized2) {
      return false;
    }
    const warnRemovedOrRenamed = (obj, name, renamed = false) => {
      if (obj.hasOwnProperty(name)) {
        const ctorName = (typeof obj === "function" ? obj : obj.constructor).name;
        issueWarning3(renamed ? "renamed-api" : "removed-api", `\`${name}\` is implemented on class ${ctorName}. It has been ${renamed ? "renamed" : "removed"} in this version of LitElement.`);
      }
    };
    warnRemovedOrRenamed(this, "render");
    warnRemovedOrRenamed(this, "getStyles", true);
    warnRemovedOrRenamed(this.prototype, "adoptStyles");
    return true;
  };
}
((_c3 = globalThis.litElementVersions) !== null && _c3 !== void 0 ? _c3 : globalThis.litElementVersions = []).push("3.3.3");
if (DEV_MODE3 && globalThis.litElementVersions.length > 1) {
  issueWarning3("multiple-versions", `Multiple versions of Lit loaded. Loading multiple versions is not recommended.`);
}

// node_modules/@here/hds-base/build/BaseElement.js
var BaseElement = class extends LitElement {
};

// node_modules/@here/hds-base/build/utils.js
function roundToNearest(x, nearest = 0) {
  return nearest === 0 ? x : Math.round(x / nearest) * nearest;
}
function scale(x, xMin, xMax, xNewMin = 0, xNewMax = 1) {
  return (xNewMax - xNewMin) * ((x - xMin) / (xMax - xMin)) + xNewMin;
}
function clamp(x, min3, max3) {
  if (Number.isNaN(x))
    return NaN;
  return Math.min(Math.max(x, min3), max3);
}
function debounce(callback, wait) {
  let timer;
  return (...args) => {
    clearTimeout(timer);
    return new Promise((resolve) => {
      timer = setTimeout(() => resolve(callback(...args)), wait);
    });
  };
}
function closestElement(selector, base) {
  function findClosest(el) {
    if (!el || el === document || el === window) {
      return null;
    }
    const found = el.closest(selector);
    return found || findClosest(el.getRootNode().host);
  }
  return findClosest(base);
}
function getCSSVariable(name, el) {
  var _a6;
  const htmlElement = el || document.querySelector("[data-theme^=hds]");
  return (_a6 = getComputedStyle(htmlElement)) == null ? void 0 : _a6.getPropertyValue(name).trim();
}
function isSlotEmpty(slotOrNodes) {
  let isEmpty = true;
  if (slotOrNodes) {
    const nodes = slotOrNodes instanceof HTMLSlotElement ? slotOrNodes.assignedNodes({ flatten: true }) : slotOrNodes;
    for (let n = 0; n < nodes.length; n += 1) {
      const isWebComponent = nodes[n] instanceof HTMLElement && nodes[n].tagName.indexOf("-") !== -1;
      const hasAnyContent = nodes[n].textContent.trim() !== "";
      if (hasAnyContent || isWebComponent) {
        isEmpty = false;
        break;
      }
    }
  }
  return isEmpty;
}
var customElement = (tagName) => (ctor) => {
  if (typeof window !== "undefined") {
    const settings = window.hds || {};
    const disableAutoCustomElementsDefine = !!settings.disableAutoCustomElementsDefine;
    if (!disableAutoCustomElementsDefine) {
      const tryGetBeforeCustomElementsDefine = !!settings.tryGetBeforeCustomElementsDefine;
      if (!tryGetBeforeCustomElementsDefine || tryGetBeforeCustomElementsDefine && !window.customElements.get(tagName)) {
        window.customElements.define(tagName, ctor);
      }
    }
  }
};
var stringFormat = (template, args, keepNotMatched = false) => {
  if (template) {
    const argsKeysArray = Object.keys(args);
    const replacer = (_, match2) => {
      let valueByName = args[match2];
      let valueByIndex = args[argsKeysArray[match2]];
      valueByName = typeof valueByName === "number" ? valueByName.toString() : valueByName;
      valueByIndex = typeof valueByIndex === "number" ? valueByIndex.toString() : valueByIndex;
      const originalValue = keepNotMatched ? `{${match2}}` : "";
      const formatted = valueByName || valueByIndex || originalValue;
      return formatted;
    };
    return template.replace(/{([a-zA-Z0-9]+)}/g, replacer);
  }
  return template;
};
function findElementsInSlot(slot, filterType) {
  const results = [];
  if (!slot)
    return results;
  const elements = slot.assignedElements({ flatten: true });
  elements.forEach((node2) => {
    if (node2 instanceof filterType)
      results.push(node2);
    results.push(...Array.from(node2.querySelectorAll("*")).filter((e) => e instanceof filterType));
  });
  return results;
}

// node_modules/lit-html/development/directive.js
var PartType = {
  ATTRIBUTE: 1,
  CHILD: 2,
  PROPERTY: 3,
  BOOLEAN_ATTRIBUTE: 4,
  EVENT: 5,
  ELEMENT: 6
};
var directive = (c) => (...values) => ({
  // This property needs to remain unminified.
  ["_$litDirective$"]: c,
  values
});
var Directive = class {
  constructor(_partInfo) {
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    return this._$parent._$isConnected;
  }
  /** @internal */
  _$initialize(part, parent, attributeIndex) {
    this.__part = part;
    this._$parent = parent;
    this.__attributeIndex = attributeIndex;
  }
  /** @internal */
  _$resolve(part, props) {
    return this.update(part, props);
  }
  update(_part, props) {
    return this.render(...props);
  }
};

// node_modules/@here/hds-base/build/directives/StringToHtml.js
var StringToHTMLDirective = class extends Directive {
  render(str) {
    const arr = [`${str}`];
    const stringArray = arr;
    stringArray.raw = arr;
    return html(stringArray);
  }
};
var stringToHtml = directive(StringToHTMLDirective);
var StringToHtml_default = stringToHtml;

// node_modules/@here/hds-iconlibrary/build/index.js
var build_exports = {};
__export(build_exports, {
  HDS_ICONLIBRARY_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_8PX_CODEPOINTS: () => HDS_ICONLIBRARY_8PX_CODEPOINTS,
  HDS_ICONLIBRARY_CORE_UI_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_CORE_UI_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_CORE_UI_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_CORE_UI_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_CORE_UI_8PX_CODEPOINTS: () => HDS_ICONLIBRARY_CORE_UI_8PX_CODEPOINTS,
  HDS_ICONLIBRARY_DATA_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_DATA_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_DATA_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_DATA_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_DEVICES_SENSORS_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_DEVICES_SENSORS_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_DEVICES_SENSORS_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_DEVICES_SENSORS_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_DISCOVERY_SHARING_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_DISCOVERY_SHARING_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_DISCOVERY_SHARING_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_DISCOVERY_SHARING_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_FILE_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_FILE_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_FILE_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_FILE_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_FILE_8PX_CODEPOINTS: () => HDS_ICONLIBRARY_FILE_8PX_CODEPOINTS,
  HDS_ICONLIBRARY_MAP_VIEW_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_MAP_VIEW_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_MAP_VIEW_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_MAP_VIEW_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_MAP_VIEW_8PX_CODEPOINTS: () => HDS_ICONLIBRARY_MAP_VIEW_8PX_CODEPOINTS,
  HDS_ICONLIBRARY_MISC_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_MISC_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_MISC_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_MISC_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_NAVIGATION_IMAGE_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_NAVIGATION_IMAGE_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_NAVIGATION_IMAGE_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_NAVIGATION_IMAGE_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_NAVIGATION_IMAGE_8PX_CODEPOINTS: () => HDS_ICONLIBRARY_NAVIGATION_IMAGE_8PX_CODEPOINTS,
  HDS_ICONLIBRARY_POI_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_POI_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_POI_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_POI_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_SOCIAL_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_SOCIAL_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_SOCIAL_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_SOCIAL_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_STATS_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_STATS_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_STATS_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_STATS_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_STATS_8PX_CODEPOINTS: () => HDS_ICONLIBRARY_STATS_8PX_CODEPOINTS,
  HDS_ICONLIBRARY_THIRD_PARTY_LOGOS_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_THIRD_PARTY_LOGOS_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_THIRD_PARTY_LOGOS_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_THIRD_PARTY_LOGOS_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_THIRD_PARTY_LOGOS_8PX_CODEPOINTS: () => HDS_ICONLIBRARY_THIRD_PARTY_LOGOS_8PX_CODEPOINTS,
  HDS_ICONLIBRARY_TOOLS_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_TOOLS_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_TOOLS_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_TOOLS_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_TRAVEL_TRANSPORT_TRACKING_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_TRAVEL_TRANSPORT_TRACKING_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_TRAVEL_TRANSPORT_TRACKING_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_TRAVEL_TRANSPORT_TRACKING_24PX_CODEPOINTS,
  HDS_ICONLIBRARY_TRAVEL_TRANSPORT_TRACKING_8PX_CODEPOINTS: () => HDS_ICONLIBRARY_TRAVEL_TRANSPORT_TRACKING_8PX_CODEPOINTS,
  HDS_ICONLIBRARY_WEATHER_16PX_CODEPOINTS: () => HDS_ICONLIBRARY_WEATHER_16PX_CODEPOINTS,
  HDS_ICONLIBRARY_WEATHER_24PX_CODEPOINTS: () => HDS_ICONLIBRARY_WEATHER_24PX_CODEPOINTS,
  HdsIconlibraryCoreUi_16px: () => HdsIconlibraryCoreUi_16px,
  HdsIconlibraryCoreUi_24px: () => HdsIconlibraryCoreUi_24px,
  HdsIconlibraryCoreUi_8px: () => HdsIconlibraryCoreUi_8px,
  HdsIconlibraryData_16px: () => HdsIconlibraryData_16px,
  HdsIconlibraryData_24px: () => HdsIconlibraryData_24px,
  HdsIconlibraryDevicesSensors_16px: () => HdsIconlibraryDevicesSensors_16px,
  HdsIconlibraryDevicesSensors_24px: () => HdsIconlibraryDevicesSensors_24px,
  HdsIconlibraryDiscoverySharing_16px: () => HdsIconlibraryDiscoverySharing_16px,
  HdsIconlibraryDiscoverySharing_24px: () => HdsIconlibraryDiscoverySharing_24px,
  HdsIconlibraryFile_16px: () => HdsIconlibraryFile_16px,
  HdsIconlibraryFile_24px: () => HdsIconlibraryFile_24px,
  HdsIconlibraryFile_8px: () => HdsIconlibraryFile_8px,
  HdsIconlibraryMapView_16px: () => HdsIconlibraryMapView_16px,
  HdsIconlibraryMapView_24px: () => HdsIconlibraryMapView_24px,
  HdsIconlibraryMapView_8px: () => HdsIconlibraryMapView_8px,
  HdsIconlibraryMisc_16px: () => HdsIconlibraryMisc_16px,
  HdsIconlibraryMisc_24px: () => HdsIconlibraryMisc_24px,
  HdsIconlibraryNavigationImage_16px: () => HdsIconlibraryNavigationImage_16px,
  HdsIconlibraryNavigationImage_24px: () => HdsIconlibraryNavigationImage_24px,
  HdsIconlibraryNavigationImage_8px: () => HdsIconlibraryNavigationImage_8px,
  HdsIconlibraryPoi_16px: () => HdsIconlibraryPoi_16px,
  HdsIconlibraryPoi_24px: () => HdsIconlibraryPoi_24px,
  HdsIconlibrarySocial_16px: () => HdsIconlibrarySocial_16px,
  HdsIconlibrarySocial_24px: () => HdsIconlibrarySocial_24px,
  HdsIconlibraryStats_16px: () => HdsIconlibraryStats_16px,
  HdsIconlibraryStats_24px: () => HdsIconlibraryStats_24px,
  HdsIconlibraryStats_8px: () => HdsIconlibraryStats_8px,
  HdsIconlibraryThirdPartyLogos_16px: () => HdsIconlibraryThirdPartyLogos_16px,
  HdsIconlibraryThirdPartyLogos_24px: () => HdsIconlibraryThirdPartyLogos_24px,
  HdsIconlibraryThirdPartyLogos_8px: () => HdsIconlibraryThirdPartyLogos_8px,
  HdsIconlibraryTools_16px: () => HdsIconlibraryTools_16px,
  HdsIconlibraryTools_24px: () => HdsIconlibraryTools_24px,
  HdsIconlibraryTravelTransportTracking_16px: () => HdsIconlibraryTravelTransportTracking_16px,
  HdsIconlibraryTravelTransportTracking_24px: () => HdsIconlibraryTravelTransportTracking_24px,
  HdsIconlibraryTravelTransportTracking_8px: () => HdsIconlibraryTravelTransportTracking_8px,
  HdsIconlibraryWeather_16px: () => HdsIconlibraryWeather_16px,
  HdsIconlibraryWeather_24px: () => HdsIconlibraryWeather_24px,
  HdsIconlibrary_16px: () => HdsIconlibrary_16px,
  HdsIconlibrary_24px: () => HdsIconlibrary_24px,
  HdsIconlibrary_8px: () => HdsIconlibrary_8px
});

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-core-ui-8px.js
var HdsIconlibraryCoreUi_8px;
(function(HdsIconlibraryCoreUi_8px2) {
  HdsIconlibraryCoreUi_8px2["CheckmarkSolid_8px"] = "checkmark_solid_8px";
  HdsIconlibraryCoreUi_8px2["ChevronDownSolid_8px"] = "chevron-down_solid_8px";
  HdsIconlibraryCoreUi_8px2["ChevronLeftSolid_8px"] = "chevron-left_solid_8px";
  HdsIconlibraryCoreUi_8px2["ChevronRightSolid_8px"] = "chevron-right_solid_8px";
  HdsIconlibraryCoreUi_8px2["ChevronUpSolid_8px"] = "chevron-up_solid_8px";
  HdsIconlibraryCoreUi_8px2["CrossSolid_8px"] = "cross_solid_8px";
  HdsIconlibraryCoreUi_8px2["ExternalLinkSolid_8px"] = "external-link_solid_8px";
  HdsIconlibraryCoreUi_8px2["InformationSolid_8px"] = "information_solid_8px";
  HdsIconlibraryCoreUi_8px2["LockSolid_8px"] = "lock_solid_8px";
  HdsIconlibraryCoreUi_8px2["MinusSolid_8px"] = "minus_solid_8px";
  HdsIconlibraryCoreUi_8px2["OverflowHoriCenterSolid_8px"] = "overflow-hori-center_solid_8px";
  HdsIconlibraryCoreUi_8px2["OverflowVertCenterSolid_8px"] = "overflow-vert-center_solid_8px";
  HdsIconlibraryCoreUi_8px2["OverflowVertRightSolid_8px"] = "overflow-vert-right_solid_8px";
  HdsIconlibraryCoreUi_8px2["PlusSolid_8px"] = "plus_solid_8px";
  HdsIconlibraryCoreUi_8px2["ProfileSolid_8px"] = "profile_solid_8px";
  HdsIconlibraryCoreUi_8px2["UnlockSolid_8px"] = "unlock_solid_8px";
})(HdsIconlibraryCoreUi_8px = HdsIconlibraryCoreUi_8px || (HdsIconlibraryCoreUi_8px = {}));
var HDS_ICONLIBRARY_CORE_UI_8PX_CODEPOINTS = {
  [HdsIconlibraryCoreUi_8px.CheckmarkSolid_8px]: "61697",
  [HdsIconlibraryCoreUi_8px.ChevronDownSolid_8px]: "61698",
  [HdsIconlibraryCoreUi_8px.ChevronLeftSolid_8px]: "61699",
  [HdsIconlibraryCoreUi_8px.ChevronRightSolid_8px]: "61700",
  [HdsIconlibraryCoreUi_8px.ChevronUpSolid_8px]: "61701",
  [HdsIconlibraryCoreUi_8px.CrossSolid_8px]: "61702",
  [HdsIconlibraryCoreUi_8px.ExternalLinkSolid_8px]: "61703",
  [HdsIconlibraryCoreUi_8px.InformationSolid_8px]: "61704",
  [HdsIconlibraryCoreUi_8px.LockSolid_8px]: "61705",
  [HdsIconlibraryCoreUi_8px.MinusSolid_8px]: "61706",
  [HdsIconlibraryCoreUi_8px.OverflowHoriCenterSolid_8px]: "61707",
  [HdsIconlibraryCoreUi_8px.OverflowVertCenterSolid_8px]: "61708",
  [HdsIconlibraryCoreUi_8px.OverflowVertRightSolid_8px]: "61709",
  [HdsIconlibraryCoreUi_8px.PlusSolid_8px]: "61710",
  [HdsIconlibraryCoreUi_8px.ProfileSolid_8px]: "61711",
  [HdsIconlibraryCoreUi_8px.UnlockSolid_8px]: "61712"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-file-8px.js
var HdsIconlibraryFile_8px;
(function(HdsIconlibraryFile_8px2) {
  HdsIconlibraryFile_8px2["CopySolid_8px"] = "copy_solid_8px";
})(HdsIconlibraryFile_8px = HdsIconlibraryFile_8px || (HdsIconlibraryFile_8px = {}));
var HDS_ICONLIBRARY_FILE_8PX_CODEPOINTS = {
  [HdsIconlibraryFile_8px.CopySolid_8px]: "61697"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-map-view-8px.js
var HdsIconlibraryMapView_8px;
(function(HdsIconlibraryMapView_8px2) {
  HdsIconlibraryMapView_8px2["DotIndicatorSolid_8px"] = "dot-indicator_solid_8px";
  HdsIconlibraryMapView_8px2["EastCharacterSolid_8px"] = "east-character_solid_8px";
  HdsIconlibraryMapView_8px2["NorthCharacterSolid_8px"] = "north-character_solid_8px";
  HdsIconlibraryMapView_8px2["NorthUpSolid_8px"] = "north-up_solid_8px";
  HdsIconlibraryMapView_8px2["SouthCharacterSolid_8px"] = "south-character_solid_8px";
  HdsIconlibraryMapView_8px2["WestCharacterSolid_8px"] = "west-character_solid_8px";
})(HdsIconlibraryMapView_8px = HdsIconlibraryMapView_8px || (HdsIconlibraryMapView_8px = {}));
var HDS_ICONLIBRARY_MAP_VIEW_8PX_CODEPOINTS = {
  [HdsIconlibraryMapView_8px.DotIndicatorSolid_8px]: "61697",
  [HdsIconlibraryMapView_8px.EastCharacterSolid_8px]: "61698",
  [HdsIconlibraryMapView_8px.NorthCharacterSolid_8px]: "61699",
  [HdsIconlibraryMapView_8px.NorthUpSolid_8px]: "61700",
  [HdsIconlibraryMapView_8px.SouthCharacterSolid_8px]: "61701",
  [HdsIconlibraryMapView_8px.WestCharacterSolid_8px]: "61702"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-navigation-image-8px.js
var HdsIconlibraryNavigationImage_8px;
(function(HdsIconlibraryNavigationImage_8px2) {
  HdsIconlibraryNavigationImage_8px2["PauseSolid_8px"] = "pause_solid_8px";
  HdsIconlibraryNavigationImage_8px2["PlaySolid_8px"] = "play_solid_8px";
  HdsIconlibraryNavigationImage_8px2["PlayReverseSolid_8px"] = "play-reverse_solid_8px";
  HdsIconlibraryNavigationImage_8px2["StopSolid_8px"] = "stop_solid_8px";
})(HdsIconlibraryNavigationImage_8px = HdsIconlibraryNavigationImage_8px || (HdsIconlibraryNavigationImage_8px = {}));
var HDS_ICONLIBRARY_NAVIGATION_IMAGE_8PX_CODEPOINTS = {
  [HdsIconlibraryNavigationImage_8px.PauseSolid_8px]: "61697",
  [HdsIconlibraryNavigationImage_8px.PlaySolid_8px]: "61698",
  [HdsIconlibraryNavigationImage_8px.PlayReverseSolid_8px]: "61699",
  [HdsIconlibraryNavigationImage_8px.StopSolid_8px]: "61700"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-stats-8px.js
var HdsIconlibraryStats_8px;
(function(HdsIconlibraryStats_8px2) {
  HdsIconlibraryStats_8px2["MarkerSolid_8px"] = "marker_solid_8px";
})(HdsIconlibraryStats_8px = HdsIconlibraryStats_8px || (HdsIconlibraryStats_8px = {}));
var HDS_ICONLIBRARY_STATS_8PX_CODEPOINTS = {
  [HdsIconlibraryStats_8px.MarkerSolid_8px]: "61697"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-third-party-logos-8px.js
var HdsIconlibraryThirdPartyLogos_8px;
(function(HdsIconlibraryThirdPartyLogos_8px2) {
  HdsIconlibraryThirdPartyLogos_8px2["What_3WordsOutline_8px"] = "what-3-words_outline_8px";
  HdsIconlibraryThirdPartyLogos_8px2["What_3WordsSolid_8px"] = "what-3-words_solid_8px";
})(HdsIconlibraryThirdPartyLogos_8px = HdsIconlibraryThirdPartyLogos_8px || (HdsIconlibraryThirdPartyLogos_8px = {}));
var HDS_ICONLIBRARY_THIRD_PARTY_LOGOS_8PX_CODEPOINTS = {
  [HdsIconlibraryThirdPartyLogos_8px.What_3WordsOutline_8px]: "61697",
  [HdsIconlibraryThirdPartyLogos_8px.What_3WordsSolid_8px]: "61698"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-travel-transport-tracking-8px.js
var HdsIconlibraryTravelTransportTracking_8px;
(function(HdsIconlibraryTravelTransportTracking_8px2) {
  HdsIconlibraryTravelTransportTracking_8px2["AttentionSolid_8px"] = "attention_solid_8px";
})(HdsIconlibraryTravelTransportTracking_8px = HdsIconlibraryTravelTransportTracking_8px || (HdsIconlibraryTravelTransportTracking_8px = {}));
var HDS_ICONLIBRARY_TRAVEL_TRANSPORT_TRACKING_8PX_CODEPOINTS = {
  [HdsIconlibraryTravelTransportTracking_8px.AttentionSolid_8px]: "61697"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-core-ui-16px.js
var HdsIconlibraryCoreUi_16px;
(function(HdsIconlibraryCoreUi_16px2) {
  HdsIconlibraryCoreUi_16px2["AddSolid_16px"] = "add_solid_16px";
  HdsIconlibraryCoreUi_16px2["AddUserOutline_16px"] = "add-user_outline_16px";
  HdsIconlibraryCoreUi_16px2["AddUserSolid_16px"] = "add-user_solid_16px";
  HdsIconlibraryCoreUi_16px2["AlertSolid_16px"] = "alert_solid_16px";
  HdsIconlibraryCoreUi_16px2["ArrowDownSolid_16px"] = "arrow-down_solid_16px";
  HdsIconlibraryCoreUi_16px2["ArrowDownLeftSolid_16px"] = "arrow-down-left_solid_16px";
  HdsIconlibraryCoreUi_16px2["ArrowDownRightSolid_16px"] = "arrow-down-right_solid_16px";
  HdsIconlibraryCoreUi_16px2["ArrowLeftSolid_16px"] = "arrow-left_solid_16px";
  HdsIconlibraryCoreUi_16px2["ArrowRightSolid_16px"] = "arrow-right_solid_16px";
  HdsIconlibraryCoreUi_16px2["ArrowUpSolid_16px"] = "arrow-up_solid_16px";
  HdsIconlibraryCoreUi_16px2["ArrowUpLeftSolid_16px"] = "arrow-up-left_solid_16px";
  HdsIconlibraryCoreUi_16px2["ArrowUpRightSolid_16px"] = "arrow-up-right_solid_16px";
  HdsIconlibraryCoreUi_16px2["AttentionSolid_16px"] = "attention_solid_16px";
  HdsIconlibraryCoreUi_16px2["BatteryChargingSolid_16px"] = "battery-charging_solid_16px";
  HdsIconlibraryCoreUi_16px2["BatteryEmptySolid_16px"] = "battery-empty_solid_16px";
  HdsIconlibraryCoreUi_16px2["BatteryFullSolid_16px"] = "battery-full_solid_16px";
  HdsIconlibraryCoreUi_16px2["BatteryHalfSolid_16px"] = "battery-half_solid_16px";
  HdsIconlibraryCoreUi_16px2["BatteryLowSolid_16px"] = "battery-low_solid_16px";
  HdsIconlibraryCoreUi_16px2["BluetoothSolid_16px"] = "bluetooth_solid_16px";
  HdsIconlibraryCoreUi_16px2["BluetoothOffSolid_16px"] = "bluetooth-off_solid_16px";
  HdsIconlibraryCoreUi_16px2["BookmarkSolid_16px"] = "bookmark_solid_16px";
  HdsIconlibraryCoreUi_16px2["BookmarkAddSolid_16px"] = "bookmark-add_solid_16px";
  HdsIconlibraryCoreUi_16px2["CheckmarkSolid_16px"] = "checkmark_solid_16px";
  HdsIconlibraryCoreUi_16px2["ChevronDownSolid_16px"] = "chevron-down_solid_16px";
  HdsIconlibraryCoreUi_16px2["ChevronLeftSolid_16px"] = "chevron-left_solid_16px";
  HdsIconlibraryCoreUi_16px2["ChevronLeftDoubleSolid_16px"] = "chevron-left-double_solid_16px";
  HdsIconlibraryCoreUi_16px2["ChevronRightSolid_16px"] = "chevron-right_solid_16px";
  HdsIconlibraryCoreUi_16px2["ChevronRightDoubleSolid_16px"] = "chevron-right-double_solid_16px";
  HdsIconlibraryCoreUi_16px2["ChevronUpSolid_16px"] = "chevron-up_solid_16px";
  HdsIconlibraryCoreUi_16px2["ChevronUpDownSolid_16px"] = "chevron-up-down_solid_16px";
  HdsIconlibraryCoreUi_16px2["ClearSolid_16px"] = "clear_solid_16px";
  HdsIconlibraryCoreUi_16px2["CollapseSolid_16px"] = "collapse_solid_16px";
  HdsIconlibraryCoreUi_16px2["CommentSolid_16px"] = "comment_solid_16px";
  HdsIconlibraryCoreUi_16px2["ConfirmSolid_16px"] = "confirm_solid_16px";
  HdsIconlibraryCoreUi_16px2["CrossSolid_16px"] = "cross_solid_16px";
  HdsIconlibraryCoreUi_16px2["DeleteSolid_16px"] = "delete_solid_16px";
  HdsIconlibraryCoreUi_16px2["DetailsSolid_16px"] = "details_solid_16px";
  HdsIconlibraryCoreUi_16px2["DragListSolid_16px"] = "drag-list_solid_16px";
  HdsIconlibraryCoreUi_16px2["EditSolid_16px"] = "edit_solid_16px";
  HdsIconlibraryCoreUi_16px2["EditedSolid_16px"] = "edited_solid_16px";
  HdsIconlibraryCoreUi_16px2["ExpandSolid_16px"] = "expand_solid_16px";
  HdsIconlibraryCoreUi_16px2["ExternalLinkSolid_16px"] = "external-link_solid_16px";
  HdsIconlibraryCoreUi_16px2["FallbackItemSolid_16px"] = "fallback-item_solid_16px";
  HdsIconlibraryCoreUi_16px2["FolderClosedSolid_16px"] = "folder-closed_solid_16px";
  HdsIconlibraryCoreUi_16px2["FolderOpenSolid_16px"] = "folder-open_solid_16px";
  HdsIconlibraryCoreUi_16px2["GpsSolid_16px"] = "gps_solid_16px";
  HdsIconlibraryCoreUi_16px2["HelpSolid_16px"] = "help_solid_16px";
  HdsIconlibraryCoreUi_16px2["HereLogoSolid_16px"] = "HERE-logo_solid_16px";
  HdsIconlibraryCoreUi_16px2["HideSolid_16px"] = "hide_solid_16px";
  HdsIconlibraryCoreUi_16px2["HideAltSolid_16px"] = "hide-alt_solid_16px";
  HdsIconlibraryCoreUi_16px2["HideMenuSolid_16px"] = "hide-menu_solid_16px";
  HdsIconlibraryCoreUi_16px2["HistorySolid_16px"] = "history_solid_16px";
  HdsIconlibraryCoreUi_16px2["InboxAttentionSolid_16px"] = "inbox-attention_solid_16px";
  HdsIconlibraryCoreUi_16px2["InformationSolid_16px"] = "information_solid_16px";
  HdsIconlibraryCoreUi_16px2["InvalidSolid_16px"] = "invalid_solid_16px";
  HdsIconlibraryCoreUi_16px2["LoadingSolid_16px"] = "loading_solid_16px";
  HdsIconlibraryCoreUi_16px2["LocationOffOutline_16px"] = "location-off_outline_16px";
  HdsIconlibraryCoreUi_16px2["LocationOffSolid_16px"] = "location-off_solid_16px";
  HdsIconlibraryCoreUi_16px2["LockSolid_16px"] = "lock_solid_16px";
  HdsIconlibraryCoreUi_16px2["LockBreakSolid_16px"] = "lock-break_solid_16px";
  HdsIconlibraryCoreUi_16px2["MenuSolid_16px"] = "menu_solid_16px";
  HdsIconlibraryCoreUi_16px2["MicrophoneSolid_16px"] = "microphone_solid_16px";
  HdsIconlibraryCoreUi_16px2["MicrophoneOffSolid_16px"] = "microphone-off_solid_16px";
  HdsIconlibraryCoreUi_16px2["MinusSolid_16px"] = "minus_solid_16px";
  HdsIconlibraryCoreUi_16px2["NotificationsSolid_16px"] = "notifications_solid_16px";
  HdsIconlibraryCoreUi_16px2["OverflowHoriCenterSolid_16px"] = "overflow-hori-center_solid_16px";
  HdsIconlibraryCoreUi_16px2["OverflowVertCenterSolid_16px"] = "overflow-vert-center_solid_16px";
  HdsIconlibraryCoreUi_16px2["OverflowVertRightSolid_16px"] = "overflow-vert-right_solid_16px";
  HdsIconlibraryCoreUi_16px2["PlusSolid_16px"] = "plus_solid_16px";
  HdsIconlibraryCoreUi_16px2["ProfileSolid_16px"] = "profile_solid_16px";
  HdsIconlibraryCoreUi_16px2["QuestionMarkSolid_16px"] = "question-mark_solid_16px";
  HdsIconlibraryCoreUi_16px2["RedoSolid_16px"] = "redo_solid_16px";
  HdsIconlibraryCoreUi_16px2["RefreshSolid_16px"] = "refresh_solid_16px";
  HdsIconlibraryCoreUi_16px2["ReportSolid_16px"] = "report_solid_16px";
  HdsIconlibraryCoreUi_16px2["ResetSolid_16px"] = "reset_solid_16px";
  HdsIconlibraryCoreUi_16px2["SaveSolid_16px"] = "save_solid_16px";
  HdsIconlibraryCoreUi_16px2["SearchSolid_16px"] = "search_solid_16px";
  HdsIconlibraryCoreUi_16px2["SettingsSolid_16px"] = "settings_solid_16px";
  HdsIconlibraryCoreUi_16px2["ShowSolid_16px"] = "show_solid_16px";
  HdsIconlibraryCoreUi_16px2["ShowMenuSolid_16px"] = "show-menu_solid_16px";
  HdsIconlibraryCoreUi_16px2["SignInSolid_16px"] = "sign-in_solid_16px";
  HdsIconlibraryCoreUi_16px2["SignOutSolid_16px"] = "sign-out_solid_16px";
  HdsIconlibraryCoreUi_16px2["SlashSolid_16px"] = "slash_solid_16px";
  HdsIconlibraryCoreUi_16px2["SubmitSolid_16px"] = "submit_solid_16px";
  HdsIconlibraryCoreUi_16px2["SubstractSolid_16px"] = "substract_solid_16px";
  HdsIconlibraryCoreUi_16px2["SwitchHorizontalSolid_16px"] = "switch-horizontal_solid_16px";
  HdsIconlibraryCoreUi_16px2["SwitchVerticalSolid_16px"] = "switch-vertical_solid_16px";
  HdsIconlibraryCoreUi_16px2["TagSolid_16px"] = "tag_solid_16px";
  HdsIconlibraryCoreUi_16px2["TimeSolid_16px"] = "time_solid_16px";
  HdsIconlibraryCoreUi_16px2["UndoSolid_16px"] = "undo_solid_16px";
  HdsIconlibraryCoreUi_16px2["UnlockSolid_16px"] = "unlock_solid_16px";
  HdsIconlibraryCoreUi_16px2["VolumeAlertOutline_16px"] = "volume-alert_outline_16px";
  HdsIconlibraryCoreUi_16px2["VolumeAlertSolid_16px"] = "volume-alert_solid_16px";
  HdsIconlibraryCoreUi_16px2["VolumeHighOutline_16px"] = "volume-high_outline_16px";
  HdsIconlibraryCoreUi_16px2["VolumeHighSolid_16px"] = "volume-high_solid_16px";
  HdsIconlibraryCoreUi_16px2["VolumeLowOutline_16px"] = "volume-low_outline_16px";
  HdsIconlibraryCoreUi_16px2["VolumeLowSolid_16px"] = "volume-low_solid_16px";
  HdsIconlibraryCoreUi_16px2["VolumeMediumOutline_16px"] = "volume-medium_outline_16px";
  HdsIconlibraryCoreUi_16px2["VolumeMediumSolid_16px"] = "volume-medium_solid_16px";
  HdsIconlibraryCoreUi_16px2["VolumeNoSoundOutline_16px"] = "volume-no-sound_outline_16px";
  HdsIconlibraryCoreUi_16px2["VolumeNoSoundSolid_16px"] = "volume-no-sound_solid_16px";
  HdsIconlibraryCoreUi_16px2["VolumeOffOutline_16px"] = "volume-off_outline_16px";
  HdsIconlibraryCoreUi_16px2["VolumeOffSolid_16px"] = "volume-off_solid_16px";
  HdsIconlibraryCoreUi_16px2["WifiLowSolid_16px"] = "wifi-low_solid_16px";
  HdsIconlibraryCoreUi_16px2["WifiMediumSolid_16px"] = "wifi-medium_solid_16px";
  HdsIconlibraryCoreUi_16px2["WifiOffSolid_16px"] = "wifi-off_solid_16px";
  HdsIconlibraryCoreUi_16px2["WifiStrongSolid_16px"] = "wifi-strong_solid_16px";
})(HdsIconlibraryCoreUi_16px = HdsIconlibraryCoreUi_16px || (HdsIconlibraryCoreUi_16px = {}));
var HDS_ICONLIBRARY_CORE_UI_16PX_CODEPOINTS = {
  [HdsIconlibraryCoreUi_16px.AddSolid_16px]: "61697",
  [HdsIconlibraryCoreUi_16px.AddUserOutline_16px]: "61698",
  [HdsIconlibraryCoreUi_16px.AddUserSolid_16px]: "61699",
  [HdsIconlibraryCoreUi_16px.AlertSolid_16px]: "61700",
  [HdsIconlibraryCoreUi_16px.ArrowDownSolid_16px]: "61701",
  [HdsIconlibraryCoreUi_16px.ArrowDownLeftSolid_16px]: "61702",
  [HdsIconlibraryCoreUi_16px.ArrowDownRightSolid_16px]: "61703",
  [HdsIconlibraryCoreUi_16px.ArrowLeftSolid_16px]: "61704",
  [HdsIconlibraryCoreUi_16px.ArrowRightSolid_16px]: "61705",
  [HdsIconlibraryCoreUi_16px.ArrowUpSolid_16px]: "61706",
  [HdsIconlibraryCoreUi_16px.ArrowUpLeftSolid_16px]: "61707",
  [HdsIconlibraryCoreUi_16px.ArrowUpRightSolid_16px]: "61708",
  [HdsIconlibraryCoreUi_16px.AttentionSolid_16px]: "61709",
  [HdsIconlibraryCoreUi_16px.BatteryChargingSolid_16px]: "61710",
  [HdsIconlibraryCoreUi_16px.BatteryEmptySolid_16px]: "61711",
  [HdsIconlibraryCoreUi_16px.BatteryFullSolid_16px]: "61712",
  [HdsIconlibraryCoreUi_16px.BatteryHalfSolid_16px]: "61713",
  [HdsIconlibraryCoreUi_16px.BatteryLowSolid_16px]: "61714",
  [HdsIconlibraryCoreUi_16px.BluetoothSolid_16px]: "61715",
  [HdsIconlibraryCoreUi_16px.BluetoothOffSolid_16px]: "61716",
  [HdsIconlibraryCoreUi_16px.BookmarkSolid_16px]: "61717",
  [HdsIconlibraryCoreUi_16px.BookmarkAddSolid_16px]: "61718",
  [HdsIconlibraryCoreUi_16px.CheckmarkSolid_16px]: "61719",
  [HdsIconlibraryCoreUi_16px.ChevronDownSolid_16px]: "61720",
  [HdsIconlibraryCoreUi_16px.ChevronLeftSolid_16px]: "61721",
  [HdsIconlibraryCoreUi_16px.ChevronLeftDoubleSolid_16px]: "61722",
  [HdsIconlibraryCoreUi_16px.ChevronRightSolid_16px]: "61723",
  [HdsIconlibraryCoreUi_16px.ChevronRightDoubleSolid_16px]: "61724",
  [HdsIconlibraryCoreUi_16px.ChevronUpSolid_16px]: "61725",
  [HdsIconlibraryCoreUi_16px.ChevronUpDownSolid_16px]: "61726",
  [HdsIconlibraryCoreUi_16px.ClearSolid_16px]: "61727",
  [HdsIconlibraryCoreUi_16px.CollapseSolid_16px]: "61728",
  [HdsIconlibraryCoreUi_16px.CommentSolid_16px]: "61729",
  [HdsIconlibraryCoreUi_16px.ConfirmSolid_16px]: "61730",
  [HdsIconlibraryCoreUi_16px.CrossSolid_16px]: "61731",
  [HdsIconlibraryCoreUi_16px.DeleteSolid_16px]: "61732",
  [HdsIconlibraryCoreUi_16px.DetailsSolid_16px]: "61733",
  [HdsIconlibraryCoreUi_16px.DragListSolid_16px]: "61734",
  [HdsIconlibraryCoreUi_16px.EditSolid_16px]: "61735",
  [HdsIconlibraryCoreUi_16px.EditedSolid_16px]: "61736",
  [HdsIconlibraryCoreUi_16px.ExpandSolid_16px]: "61737",
  [HdsIconlibraryCoreUi_16px.ExternalLinkSolid_16px]: "61738",
  [HdsIconlibraryCoreUi_16px.FallbackItemSolid_16px]: "61739",
  [HdsIconlibraryCoreUi_16px.FolderClosedSolid_16px]: "61740",
  [HdsIconlibraryCoreUi_16px.FolderOpenSolid_16px]: "61741",
  [HdsIconlibraryCoreUi_16px.GpsSolid_16px]: "61742",
  [HdsIconlibraryCoreUi_16px.HelpSolid_16px]: "61743",
  [HdsIconlibraryCoreUi_16px.HereLogoSolid_16px]: "61744",
  [HdsIconlibraryCoreUi_16px.HideSolid_16px]: "61745",
  [HdsIconlibraryCoreUi_16px.HideAltSolid_16px]: "61746",
  [HdsIconlibraryCoreUi_16px.HideMenuSolid_16px]: "61747",
  [HdsIconlibraryCoreUi_16px.HistorySolid_16px]: "61748",
  [HdsIconlibraryCoreUi_16px.InboxAttentionSolid_16px]: "61749",
  [HdsIconlibraryCoreUi_16px.InformationSolid_16px]: "61750",
  [HdsIconlibraryCoreUi_16px.InvalidSolid_16px]: "61751",
  [HdsIconlibraryCoreUi_16px.LoadingSolid_16px]: "61752",
  [HdsIconlibraryCoreUi_16px.LocationOffOutline_16px]: "61753",
  [HdsIconlibraryCoreUi_16px.LocationOffSolid_16px]: "61754",
  [HdsIconlibraryCoreUi_16px.LockSolid_16px]: "61755",
  [HdsIconlibraryCoreUi_16px.LockBreakSolid_16px]: "61756",
  [HdsIconlibraryCoreUi_16px.MenuSolid_16px]: "61757",
  [HdsIconlibraryCoreUi_16px.MicrophoneSolid_16px]: "61758",
  [HdsIconlibraryCoreUi_16px.MicrophoneOffSolid_16px]: "61759",
  [HdsIconlibraryCoreUi_16px.MinusSolid_16px]: "61760",
  [HdsIconlibraryCoreUi_16px.NotificationsSolid_16px]: "61761",
  [HdsIconlibraryCoreUi_16px.OverflowHoriCenterSolid_16px]: "61762",
  [HdsIconlibraryCoreUi_16px.OverflowVertCenterSolid_16px]: "61763",
  [HdsIconlibraryCoreUi_16px.OverflowVertRightSolid_16px]: "61764",
  [HdsIconlibraryCoreUi_16px.PlusSolid_16px]: "61765",
  [HdsIconlibraryCoreUi_16px.ProfileSolid_16px]: "61766",
  [HdsIconlibraryCoreUi_16px.QuestionMarkSolid_16px]: "61767",
  [HdsIconlibraryCoreUi_16px.RedoSolid_16px]: "61768",
  [HdsIconlibraryCoreUi_16px.RefreshSolid_16px]: "61769",
  [HdsIconlibraryCoreUi_16px.ReportSolid_16px]: "61770",
  [HdsIconlibraryCoreUi_16px.ResetSolid_16px]: "61771",
  [HdsIconlibraryCoreUi_16px.SaveSolid_16px]: "61772",
  [HdsIconlibraryCoreUi_16px.SearchSolid_16px]: "61773",
  [HdsIconlibraryCoreUi_16px.SettingsSolid_16px]: "61774",
  [HdsIconlibraryCoreUi_16px.ShowSolid_16px]: "61775",
  [HdsIconlibraryCoreUi_16px.ShowMenuSolid_16px]: "61776",
  [HdsIconlibraryCoreUi_16px.SignInSolid_16px]: "61777",
  [HdsIconlibraryCoreUi_16px.SignOutSolid_16px]: "61778",
  [HdsIconlibraryCoreUi_16px.SlashSolid_16px]: "61779",
  [HdsIconlibraryCoreUi_16px.SubmitSolid_16px]: "61780",
  [HdsIconlibraryCoreUi_16px.SubstractSolid_16px]: "61781",
  [HdsIconlibraryCoreUi_16px.SwitchHorizontalSolid_16px]: "61782",
  [HdsIconlibraryCoreUi_16px.SwitchVerticalSolid_16px]: "61783",
  [HdsIconlibraryCoreUi_16px.TagSolid_16px]: "61784",
  [HdsIconlibraryCoreUi_16px.TimeSolid_16px]: "61785",
  [HdsIconlibraryCoreUi_16px.UndoSolid_16px]: "61786",
  [HdsIconlibraryCoreUi_16px.UnlockSolid_16px]: "61787",
  [HdsIconlibraryCoreUi_16px.VolumeAlertOutline_16px]: "61788",
  [HdsIconlibraryCoreUi_16px.VolumeAlertSolid_16px]: "61789",
  [HdsIconlibraryCoreUi_16px.VolumeHighOutline_16px]: "61790",
  [HdsIconlibraryCoreUi_16px.VolumeHighSolid_16px]: "61791",
  [HdsIconlibraryCoreUi_16px.VolumeLowOutline_16px]: "61792",
  [HdsIconlibraryCoreUi_16px.VolumeLowSolid_16px]: "61793",
  [HdsIconlibraryCoreUi_16px.VolumeMediumOutline_16px]: "61794",
  [HdsIconlibraryCoreUi_16px.VolumeMediumSolid_16px]: "61795",
  [HdsIconlibraryCoreUi_16px.VolumeNoSoundOutline_16px]: "61796",
  [HdsIconlibraryCoreUi_16px.VolumeNoSoundSolid_16px]: "61797",
  [HdsIconlibraryCoreUi_16px.VolumeOffOutline_16px]: "61798",
  [HdsIconlibraryCoreUi_16px.VolumeOffSolid_16px]: "61799",
  [HdsIconlibraryCoreUi_16px.WifiLowSolid_16px]: "61800",
  [HdsIconlibraryCoreUi_16px.WifiMediumSolid_16px]: "61801",
  [HdsIconlibraryCoreUi_16px.WifiOffSolid_16px]: "61802",
  [HdsIconlibraryCoreUi_16px.WifiStrongSolid_16px]: "61803"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-data-16px.js
var HdsIconlibraryData_16px;
(function(HdsIconlibraryData_16px2) {
  HdsIconlibraryData_16px2["AppSolid_16px"] = "app_solid_16px";
  HdsIconlibraryData_16px2["CatalogSolid_16px"] = "catalog_solid_16px";
  HdsIconlibraryData_16px2["ConflateSolid_16px"] = "conflate_solid_16px";
  HdsIconlibraryData_16px2["DatabaseSolid_16px"] = "database_solid_16px";
  HdsIconlibraryData_16px2["DeploySolid_16px"] = "deploy_solid_16px";
  HdsIconlibraryData_16px2["ExportSolid_16px"] = "export_solid_16px";
  HdsIconlibraryData_16px2["IndexSolid_16px"] = "index_solid_16px";
  HdsIconlibraryData_16px2["InspectSolid_16px"] = "inspect_solid_16px";
  HdsIconlibraryData_16px2["InteractiveSolid_16px"] = "interactive_solid_16px";
  HdsIconlibraryData_16px2["LayersSolid_16px"] = "layers_solid_16px";
  HdsIconlibraryData_16px2["MarketplaceSolid_16px"] = "marketplace_solid_16px";
  HdsIconlibraryData_16px2["PipelineSolid_16px"] = "pipeline_solid_16px";
  HdsIconlibraryData_16px2["RestSolid_16px"] = "rest_solid_16px";
  HdsIconlibraryData_16px2["ReviewSolid_16px"] = "review_solid_16px";
  HdsIconlibraryData_16px2["SendToListSolid_16px"] = "send-to-list_solid_16px";
  HdsIconlibraryData_16px2["ServicesSolid_16px"] = "services_solid_16px";
  HdsIconlibraryData_16px2["StreamSolid_16px"] = "stream_solid_16px";
  HdsIconlibraryData_16px2["TemplateSolid_16px"] = "template_solid_16px";
  HdsIconlibraryData_16px2["VersionedSolid_16px"] = "versioned_solid_16px";
  HdsIconlibraryData_16px2["VolatileSolid_16px"] = "volatile_solid_16px";
})(HdsIconlibraryData_16px = HdsIconlibraryData_16px || (HdsIconlibraryData_16px = {}));
var HDS_ICONLIBRARY_DATA_16PX_CODEPOINTS = {
  [HdsIconlibraryData_16px.AppSolid_16px]: "61697",
  [HdsIconlibraryData_16px.CatalogSolid_16px]: "61698",
  [HdsIconlibraryData_16px.ConflateSolid_16px]: "61699",
  [HdsIconlibraryData_16px.DatabaseSolid_16px]: "61700",
  [HdsIconlibraryData_16px.DeploySolid_16px]: "61701",
  [HdsIconlibraryData_16px.ExportSolid_16px]: "61702",
  [HdsIconlibraryData_16px.IndexSolid_16px]: "61703",
  [HdsIconlibraryData_16px.InspectSolid_16px]: "61704",
  [HdsIconlibraryData_16px.InteractiveSolid_16px]: "61705",
  [HdsIconlibraryData_16px.LayersSolid_16px]: "61706",
  [HdsIconlibraryData_16px.MarketplaceSolid_16px]: "61707",
  [HdsIconlibraryData_16px.PipelineSolid_16px]: "61708",
  [HdsIconlibraryData_16px.RestSolid_16px]: "61709",
  [HdsIconlibraryData_16px.ReviewSolid_16px]: "61710",
  [HdsIconlibraryData_16px.SendToListSolid_16px]: "61711",
  [HdsIconlibraryData_16px.ServicesSolid_16px]: "61712",
  [HdsIconlibraryData_16px.StreamSolid_16px]: "61713",
  [HdsIconlibraryData_16px.TemplateSolid_16px]: "61714",
  [HdsIconlibraryData_16px.VersionedSolid_16px]: "61715",
  [HdsIconlibraryData_16px.VolatileSolid_16px]: "61716"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-devices-sensors-16px.js
var HdsIconlibraryDevicesSensors_16px;
(function(HdsIconlibraryDevicesSensors_16px2) {
  HdsIconlibraryDevicesSensors_16px2["BarcodeReaderSolid_16px"] = "barcode-reader_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["CameraSolid_16px"] = "camera_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["ComputerChipSolid_16px"] = "computer-chip_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["DeviceConnectedSolid_16px"] = "device-connected_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["DeviceGroupConnectedSolid_16px"] = "device-group-connected_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["DeviceGroupFilterSolid_16px"] = "device-group-filter_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["DeviceGroupSmartFilterSolid_16px"] = "device-group-smart-filter_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["HdtvSolid_16px"] = "hdtv_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["KeyboardSolid_16px"] = "keyboard_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["LogicSolid_16px"] = "logic_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["MonitorSolid_16px"] = "monitor_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["PairedModeSolid_16px"] = "paired-mode_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["PrinterSolid_16px"] = "printer_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["ProjectorSolid_16px"] = "projector_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["ScannerSolid_16px"] = "scanner_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["SensorAirpressureSolid_16px"] = "sensor-airpressure_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["SensorHumiditySolid_16px"] = "sensor-humidity_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["SensorShockSolid_16px"] = "sensor-shock_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["SensorTemperatureSolid_16px"] = "sensor-temperature_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["SmartphoneSolid_16px"] = "smartphone_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["SoftwareSolid_16px"] = "software_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["SpeakerSolid_16px"] = "speaker_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["TabletSolid_16px"] = "tablet_solid_16px";
  HdsIconlibraryDevicesSensors_16px2["WhiteboardSolid_16px"] = "whiteboard_solid_16px";
})(HdsIconlibraryDevicesSensors_16px = HdsIconlibraryDevicesSensors_16px || (HdsIconlibraryDevicesSensors_16px = {}));
var HDS_ICONLIBRARY_DEVICES_SENSORS_16PX_CODEPOINTS = {
  [HdsIconlibraryDevicesSensors_16px.BarcodeReaderSolid_16px]: "61697",
  [HdsIconlibraryDevicesSensors_16px.CameraSolid_16px]: "61698",
  [HdsIconlibraryDevicesSensors_16px.ComputerChipSolid_16px]: "61699",
  [HdsIconlibraryDevicesSensors_16px.DeviceConnectedSolid_16px]: "61700",
  [HdsIconlibraryDevicesSensors_16px.DeviceGroupConnectedSolid_16px]: "61701",
  [HdsIconlibraryDevicesSensors_16px.DeviceGroupFilterSolid_16px]: "61702",
  [HdsIconlibraryDevicesSensors_16px.DeviceGroupSmartFilterSolid_16px]: "61703",
  [HdsIconlibraryDevicesSensors_16px.HdtvSolid_16px]: "61704",
  [HdsIconlibraryDevicesSensors_16px.KeyboardSolid_16px]: "61705",
  [HdsIconlibraryDevicesSensors_16px.LogicSolid_16px]: "61706",
  [HdsIconlibraryDevicesSensors_16px.MonitorSolid_16px]: "61707",
  [HdsIconlibraryDevicesSensors_16px.PairedModeSolid_16px]: "61708",
  [HdsIconlibraryDevicesSensors_16px.PrinterSolid_16px]: "61709",
  [HdsIconlibraryDevicesSensors_16px.ProjectorSolid_16px]: "61710",
  [HdsIconlibraryDevicesSensors_16px.ScannerSolid_16px]: "61711",
  [HdsIconlibraryDevicesSensors_16px.SensorAirpressureSolid_16px]: "61712",
  [HdsIconlibraryDevicesSensors_16px.SensorHumiditySolid_16px]: "61713",
  [HdsIconlibraryDevicesSensors_16px.SensorShockSolid_16px]: "61714",
  [HdsIconlibraryDevicesSensors_16px.SensorTemperatureSolid_16px]: "61715",
  [HdsIconlibraryDevicesSensors_16px.SmartphoneSolid_16px]: "61716",
  [HdsIconlibraryDevicesSensors_16px.SoftwareSolid_16px]: "61717",
  [HdsIconlibraryDevicesSensors_16px.SpeakerSolid_16px]: "61718",
  [HdsIconlibraryDevicesSensors_16px.TabletSolid_16px]: "61719",
  [HdsIconlibraryDevicesSensors_16px.WhiteboardSolid_16px]: "61720"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-discovery-sharing-16px.js
var HdsIconlibraryDiscoverySharing_16px;
(function(HdsIconlibraryDiscoverySharing_16px2) {
  HdsIconlibraryDiscoverySharing_16px2["CalendarSolid_16px"] = "calendar_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["CalendarAddSolid_16px"] = "calendar-add_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["DetailsSolid_16px"] = "details_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["DistributeSolid_16px"] = "distribute_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["DownloadSolid_16px"] = "download_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["DownloadCloudSolid_16px"] = "download-cloud_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["FilterOffSolid_16px"] = "filter-off_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["FilterOnSolid_16px"] = "filter-on_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["GridTypeEOutline_16px"] = "grid-type-E_outline_16px";
  HdsIconlibraryDiscoverySharing_16px2["GridTypeESolid_16px"] = "grid-type-E_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["GridTypeASolid_16px"] = "grid-typeA_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["GridTypeBSolid_16px"] = "grid-typeB_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["GridTypeCSolid_16px"] = "grid-typeC_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["GridTypeDSolid_16px"] = "grid-typeD_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["GroupSolid_16px"] = "group_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["GroupFilterSolid_16px"] = "group-filter_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["GroupSmartFilterSolid_16px"] = "group-smart-filter_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["HideSolid_16px"] = "hide_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["LinkSolid_16px"] = "link_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["ListTypeASolid_16px"] = "list-typeA_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["ListTypeBSolid_16px"] = "list-typeB_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["MapsDownloadSolid_16px"] = "maps-download_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["MapsUpdateSolid_16px"] = "maps-update_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["NoContentSolid_16px"] = "no-content_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["NotInSyncSolid_16px"] = "not-in-sync_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["ShareAndroidSolid_16px"] = "share-Android_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["ShareIOsSolid_16px"] = "share-iOS_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["ShowSolid_16px"] = "show_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["UnlinkSolid_16px"] = "unlink_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["UploadSolid_16px"] = "upload_solid_16px";
  HdsIconlibraryDiscoverySharing_16px2["UploadCloudSolid_16px"] = "upload-cloud_solid_16px";
})(HdsIconlibraryDiscoverySharing_16px = HdsIconlibraryDiscoverySharing_16px || (HdsIconlibraryDiscoverySharing_16px = {}));
var HDS_ICONLIBRARY_DISCOVERY_SHARING_16PX_CODEPOINTS = {
  [HdsIconlibraryDiscoverySharing_16px.CalendarSolid_16px]: "61697",
  [HdsIconlibraryDiscoverySharing_16px.CalendarAddSolid_16px]: "61698",
  [HdsIconlibraryDiscoverySharing_16px.DetailsSolid_16px]: "61699",
  [HdsIconlibraryDiscoverySharing_16px.DistributeSolid_16px]: "61700",
  [HdsIconlibraryDiscoverySharing_16px.DownloadSolid_16px]: "61701",
  [HdsIconlibraryDiscoverySharing_16px.DownloadCloudSolid_16px]: "61702",
  [HdsIconlibraryDiscoverySharing_16px.FilterOffSolid_16px]: "61703",
  [HdsIconlibraryDiscoverySharing_16px.FilterOnSolid_16px]: "61704",
  [HdsIconlibraryDiscoverySharing_16px.GridTypeEOutline_16px]: "61705",
  [HdsIconlibraryDiscoverySharing_16px.GridTypeESolid_16px]: "61706",
  [HdsIconlibraryDiscoverySharing_16px.GridTypeASolid_16px]: "61707",
  [HdsIconlibraryDiscoverySharing_16px.GridTypeBSolid_16px]: "61708",
  [HdsIconlibraryDiscoverySharing_16px.GridTypeCSolid_16px]: "61709",
  [HdsIconlibraryDiscoverySharing_16px.GridTypeDSolid_16px]: "61710",
  [HdsIconlibraryDiscoverySharing_16px.GroupSolid_16px]: "61711",
  [HdsIconlibraryDiscoverySharing_16px.GroupFilterSolid_16px]: "61712",
  [HdsIconlibraryDiscoverySharing_16px.GroupSmartFilterSolid_16px]: "61713",
  [HdsIconlibraryDiscoverySharing_16px.HideSolid_16px]: "61714",
  [HdsIconlibraryDiscoverySharing_16px.LinkSolid_16px]: "61715",
  [HdsIconlibraryDiscoverySharing_16px.ListTypeASolid_16px]: "61716",
  [HdsIconlibraryDiscoverySharing_16px.ListTypeBSolid_16px]: "61717",
  [HdsIconlibraryDiscoverySharing_16px.MapsDownloadSolid_16px]: "61718",
  [HdsIconlibraryDiscoverySharing_16px.MapsUpdateSolid_16px]: "61719",
  [HdsIconlibraryDiscoverySharing_16px.NoContentSolid_16px]: "61720",
  [HdsIconlibraryDiscoverySharing_16px.NotInSyncSolid_16px]: "61721",
  [HdsIconlibraryDiscoverySharing_16px.ShareAndroidSolid_16px]: "61722",
  [HdsIconlibraryDiscoverySharing_16px.ShareIOsSolid_16px]: "61723",
  [HdsIconlibraryDiscoverySharing_16px.ShowSolid_16px]: "61724",
  [HdsIconlibraryDiscoverySharing_16px.UnlinkSolid_16px]: "61725",
  [HdsIconlibraryDiscoverySharing_16px.UploadSolid_16px]: "61726",
  [HdsIconlibraryDiscoverySharing_16px.UploadCloudSolid_16px]: "61727"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-file-16px.js
var HdsIconlibraryFile_16px;
(function(HdsIconlibraryFile_16px2) {
  HdsIconlibraryFile_16px2["ArchiveSolid_16px"] = "archive_solid_16px";
  HdsIconlibraryFile_16px2["CopySolid_16px"] = "copy_solid_16px";
  HdsIconlibraryFile_16px2["DocFileSolid_16px"] = "DOC-File_solid_16px";
  HdsIconlibraryFile_16px2["EpsFileSolid_16px"] = "EPS-File_solid_16px";
  HdsIconlibraryFile_16px2["FileSolid_16px"] = "file_solid_16px";
  HdsIconlibraryFile_16px2["GifFileSolid_16px"] = "GIF-File_solid_16px";
  HdsIconlibraryFile_16px2["HtmlFileSolid_16px"] = "HTML-File_solid_16px";
  HdsIconlibraryFile_16px2["ImageSolid_16px"] = "image_solid_16px";
  HdsIconlibraryFile_16px2["JpgFileSolid_16px"] = "JPG-File_solid_16px";
  HdsIconlibraryFile_16px2["JsonFileSolid_16px"] = "JSON-File_solid_16px";
  HdsIconlibraryFile_16px2["Mp3FileSolid_16px"] = "MP3-File_solid_16px";
  HdsIconlibraryFile_16px2["PdfFileSolid_16px"] = "PDF-File_solid_16px";
  HdsIconlibraryFile_16px2["PngFileSolid_16px"] = "PNG-File_solid_16px";
  HdsIconlibraryFile_16px2["SvgFileSolid_16px"] = "SVG-File_solid_16px";
  HdsIconlibraryFile_16px2["TiffFileSolid_16px"] = "TIFF-File_solid_16px";
  HdsIconlibraryFile_16px2["TxtFileSolid_16px"] = "TXT-File_solid_16px";
  HdsIconlibraryFile_16px2["WavFileSolid_16px"] = "WAV-File_solid_16px";
  HdsIconlibraryFile_16px2["ZipSolid_16px"] = "ZIP_solid_16px";
})(HdsIconlibraryFile_16px = HdsIconlibraryFile_16px || (HdsIconlibraryFile_16px = {}));
var HDS_ICONLIBRARY_FILE_16PX_CODEPOINTS = {
  [HdsIconlibraryFile_16px.ArchiveSolid_16px]: "61697",
  [HdsIconlibraryFile_16px.CopySolid_16px]: "61698",
  [HdsIconlibraryFile_16px.DocFileSolid_16px]: "61699",
  [HdsIconlibraryFile_16px.EpsFileSolid_16px]: "61700",
  [HdsIconlibraryFile_16px.FileSolid_16px]: "61701",
  [HdsIconlibraryFile_16px.GifFileSolid_16px]: "61702",
  [HdsIconlibraryFile_16px.HtmlFileSolid_16px]: "61703",
  [HdsIconlibraryFile_16px.ImageSolid_16px]: "61704",
  [HdsIconlibraryFile_16px.JpgFileSolid_16px]: "61705",
  [HdsIconlibraryFile_16px.JsonFileSolid_16px]: "61706",
  [HdsIconlibraryFile_16px.Mp3FileSolid_16px]: "61707",
  [HdsIconlibraryFile_16px.PdfFileSolid_16px]: "61708",
  [HdsIconlibraryFile_16px.PngFileSolid_16px]: "61709",
  [HdsIconlibraryFile_16px.SvgFileSolid_16px]: "61710",
  [HdsIconlibraryFile_16px.TiffFileSolid_16px]: "61711",
  [HdsIconlibraryFile_16px.TxtFileSolid_16px]: "61712",
  [HdsIconlibraryFile_16px.WavFileSolid_16px]: "61713",
  [HdsIconlibraryFile_16px.ZipSolid_16px]: "61714"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-map-view-16px.js
var HdsIconlibraryMapView_16px;
(function(HdsIconlibraryMapView_16px2) {
  HdsIconlibraryMapView_16px2["i2DSolid_16px"] = "2D_solid_16px";
  HdsIconlibraryMapView_16px2["i3DSolid_16px"] = "3D_solid_16px";
  HdsIconlibraryMapView_16px2["CameraFrustumSolid_16px"] = "camera-frustum_solid_16px";
  HdsIconlibraryMapView_16px2["CameraOrbitSolid_16px"] = "camera-orbit_solid_16px";
  HdsIconlibraryMapView_16px2["CameraTopdownSolid_16px"] = "camera-topdown_solid_16px";
  HdsIconlibraryMapView_16px2["CameraViewSolid_16px"] = "camera-view_solid_16px";
  HdsIconlibraryMapView_16px2["CompassSolid_16px"] = "compass_solid_16px";
  HdsIconlibraryMapView_16px2["CurrentLocationSolid_16px"] = "current-location_solid_16px";
  HdsIconlibraryMapView_16px2["CurrentLocationOffSolid_16px"] = "current-location-off_solid_16px";
  HdsIconlibraryMapView_16px2["DashboardSolid_16px"] = "dashboard_solid_16px";
  HdsIconlibraryMapView_16px2["DistanceSolid_16px"] = "distance_solid_16px";
  HdsIconlibraryMapView_16px2["DotIndicatorOutline_16px"] = "dot-indicator_outline_16px";
  HdsIconlibraryMapView_16px2["DotIndicatorSolid_16px"] = "dot-indicator_solid_16px";
  HdsIconlibraryMapView_16px2["EastSolid_16px"] = "east_solid_16px";
  HdsIconlibraryMapView_16px2["EastCharacterSolid_16px"] = "east-character_solid_16px";
  HdsIconlibraryMapView_16px2["FlipHorizontalSolid_16px"] = "flip-horizontal_solid_16px";
  HdsIconlibraryMapView_16px2["FlipVerticalSolid_16px"] = "flip-vertical_solid_16px";
  HdsIconlibraryMapView_16px2["KeyframeSolid_16px"] = "keyframe_solid_16px";
  HdsIconlibraryMapView_16px2["LayersSolid_16px"] = "layers_solid_16px";
  HdsIconlibraryMapView_16px2["LegendSolid_16px"] = "legend_solid_16px";
  HdsIconlibraryMapView_16px2["MapMarkerOutline_16px"] = "map-marker_outline_16px";
  HdsIconlibraryMapView_16px2["MapMarkerSolid_16px"] = "map-marker_solid_16px";
  HdsIconlibraryMapView_16px2["MapViewSolid_16px"] = "map-view_solid_16px";
  HdsIconlibraryMapView_16px2["MarkerSolid_16px"] = "marker_solid_16px";
  HdsIconlibraryMapView_16px2["MaximizeSolid_16px"] = "maximize_solid_16px";
  HdsIconlibraryMapView_16px2["MinimizeSolid_16px"] = "minimize_solid_16px";
  HdsIconlibraryMapView_16px2["MinusRectangleSolid_16px"] = "minus-rectangle_solid_16px";
  HdsIconlibraryMapView_16px2["NorthSolid_16px"] = "north_solid_16px";
  HdsIconlibraryMapView_16px2["NorthCharacterSolid_16px"] = "north-character_solid_16px";
  HdsIconlibraryMapView_16px2["NorthEastCharacterSolid_16px"] = "north-east-character_solid_16px";
  HdsIconlibraryMapView_16px2["NorthUpSolid_16px"] = "north-up_solid_16px";
  HdsIconlibraryMapView_16px2["NorthWestCharacterSolid_16px"] = "north-west-character_solid_16px";
  HdsIconlibraryMapView_16px2["NotTiltedSolid_16px"] = "not-tilted_solid_16px";
  HdsIconlibraryMapView_16px2["PanViewSolid_16px"] = "pan-view_solid_16px";
  HdsIconlibraryMapView_16px2["PipSolid_16px"] = "pip_solid_16px";
  HdsIconlibraryMapView_16px2["PlaceSolid_16px"] = "place_solid_16px";
  HdsIconlibraryMapView_16px2["PlusRectangleSolid_16px"] = "plus-rectangle_solid_16px";
  HdsIconlibraryMapView_16px2["PopOutSolid_16px"] = "pop-out_solid_16px";
  HdsIconlibraryMapView_16px2["ProjectionGlobeSolid_16px"] = "projection-globe_solid_16px";
  HdsIconlibraryMapView_16px2["ProjectionMercatorSolid_16px"] = "projection-mercator_solid_16px";
  HdsIconlibraryMapView_16px2["ResizeSolid_16px"] = "resize_solid_16px";
  HdsIconlibraryMapView_16px2["SelectSectionSolid_16px"] = "select-section_solid_16px";
  HdsIconlibraryMapView_16px2["SingleScreenSolid_16px"] = "single-screen_solid_16px";
  HdsIconlibraryMapView_16px2["SouthSolid_16px"] = "south_solid_16px";
  HdsIconlibraryMapView_16px2["SouthCharacterSolid_16px"] = "south-character_solid_16px";
  HdsIconlibraryMapView_16px2["SouthEastCharacterSolid_16px"] = "south-east-character_solid_16px";
  HdsIconlibraryMapView_16px2["SouthWestCharacterSolid_16px"] = "south-west-character_solid_16px";
  HdsIconlibraryMapView_16px2["SplitTripleVSolid_16px"] = "split-triple-v_solid_16px";
  HdsIconlibraryMapView_16px2["SplitscreenHSolid_16px"] = "splitscreen-h_solid_16px";
  HdsIconlibraryMapView_16px2["SplitscreenVSolid_16px"] = "splitscreen-v_solid_16px";
  HdsIconlibraryMapView_16px2["StatisticsSolid_16px"] = "statistics_solid_16px";
  HdsIconlibraryMapView_16px2["TiltedSolid_16px"] = "tilted_solid_16px";
  HdsIconlibraryMapView_16px2["ValueDecreaseSolid_16px"] = "value-decrease_solid_16px";
  HdsIconlibraryMapView_16px2["ValueDecreaseHighSolid_16px"] = "value-decrease-high_solid_16px";
  HdsIconlibraryMapView_16px2["ValueIncreaseSolid_16px"] = "value-increase_solid_16px";
  HdsIconlibraryMapView_16px2["ValueIncreaseHighSolid_16px"] = "value-increase-high_solid_16px";
  HdsIconlibraryMapView_16px2["ViewAllSolid_16px"] = "view-all_solid_16px";
  HdsIconlibraryMapView_16px2["ViewCenterSolid_16px"] = "view-center_solid_16px";
  HdsIconlibraryMapView_16px2["WestSolid_16px"] = "west_solid_16px";
  HdsIconlibraryMapView_16px2["WestCharacterSolid_16px"] = "west-character_solid_16px";
  HdsIconlibraryMapView_16px2["WorkspacesSolid_16px"] = "workspaces_solid_16px";
})(HdsIconlibraryMapView_16px = HdsIconlibraryMapView_16px || (HdsIconlibraryMapView_16px = {}));
var HDS_ICONLIBRARY_MAP_VIEW_16PX_CODEPOINTS = {
  [HdsIconlibraryMapView_16px.i2DSolid_16px]: "61697",
  [HdsIconlibraryMapView_16px.i3DSolid_16px]: "61698",
  [HdsIconlibraryMapView_16px.CameraFrustumSolid_16px]: "61699",
  [HdsIconlibraryMapView_16px.CameraOrbitSolid_16px]: "61700",
  [HdsIconlibraryMapView_16px.CameraTopdownSolid_16px]: "61701",
  [HdsIconlibraryMapView_16px.CameraViewSolid_16px]: "61702",
  [HdsIconlibraryMapView_16px.CompassSolid_16px]: "61703",
  [HdsIconlibraryMapView_16px.CurrentLocationSolid_16px]: "61704",
  [HdsIconlibraryMapView_16px.CurrentLocationOffSolid_16px]: "61705",
  [HdsIconlibraryMapView_16px.DashboardSolid_16px]: "61706",
  [HdsIconlibraryMapView_16px.DistanceSolid_16px]: "61707",
  [HdsIconlibraryMapView_16px.DotIndicatorOutline_16px]: "61708",
  [HdsIconlibraryMapView_16px.DotIndicatorSolid_16px]: "61709",
  [HdsIconlibraryMapView_16px.EastSolid_16px]: "61710",
  [HdsIconlibraryMapView_16px.EastCharacterSolid_16px]: "61711",
  [HdsIconlibraryMapView_16px.FlipHorizontalSolid_16px]: "61712",
  [HdsIconlibraryMapView_16px.FlipVerticalSolid_16px]: "61713",
  [HdsIconlibraryMapView_16px.KeyframeSolid_16px]: "61714",
  [HdsIconlibraryMapView_16px.LayersSolid_16px]: "61715",
  [HdsIconlibraryMapView_16px.LegendSolid_16px]: "61716",
  [HdsIconlibraryMapView_16px.MapMarkerOutline_16px]: "61717",
  [HdsIconlibraryMapView_16px.MapMarkerSolid_16px]: "61718",
  [HdsIconlibraryMapView_16px.MapViewSolid_16px]: "61719",
  [HdsIconlibraryMapView_16px.MarkerSolid_16px]: "61720",
  [HdsIconlibraryMapView_16px.MaximizeSolid_16px]: "61721",
  [HdsIconlibraryMapView_16px.MinimizeSolid_16px]: "61722",
  [HdsIconlibraryMapView_16px.MinusRectangleSolid_16px]: "61723",
  [HdsIconlibraryMapView_16px.NorthSolid_16px]: "61724",
  [HdsIconlibraryMapView_16px.NorthCharacterSolid_16px]: "61725",
  [HdsIconlibraryMapView_16px.NorthEastCharacterSolid_16px]: "61726",
  [HdsIconlibraryMapView_16px.NorthUpSolid_16px]: "61727",
  [HdsIconlibraryMapView_16px.NorthWestCharacterSolid_16px]: "61728",
  [HdsIconlibraryMapView_16px.NotTiltedSolid_16px]: "61729",
  [HdsIconlibraryMapView_16px.PanViewSolid_16px]: "61730",
  [HdsIconlibraryMapView_16px.PipSolid_16px]: "61731",
  [HdsIconlibraryMapView_16px.PlaceSolid_16px]: "61732",
  [HdsIconlibraryMapView_16px.PlusRectangleSolid_16px]: "61733",
  [HdsIconlibraryMapView_16px.PopOutSolid_16px]: "61734",
  [HdsIconlibraryMapView_16px.ProjectionGlobeSolid_16px]: "61735",
  [HdsIconlibraryMapView_16px.ProjectionMercatorSolid_16px]: "61736",
  [HdsIconlibraryMapView_16px.ResizeSolid_16px]: "61737",
  [HdsIconlibraryMapView_16px.SelectSectionSolid_16px]: "61738",
  [HdsIconlibraryMapView_16px.SingleScreenSolid_16px]: "61739",
  [HdsIconlibraryMapView_16px.SouthSolid_16px]: "61740",
  [HdsIconlibraryMapView_16px.SouthCharacterSolid_16px]: "61741",
  [HdsIconlibraryMapView_16px.SouthEastCharacterSolid_16px]: "61742",
  [HdsIconlibraryMapView_16px.SouthWestCharacterSolid_16px]: "61743",
  [HdsIconlibraryMapView_16px.SplitTripleVSolid_16px]: "61744",
  [HdsIconlibraryMapView_16px.SplitscreenHSolid_16px]: "61745",
  [HdsIconlibraryMapView_16px.SplitscreenVSolid_16px]: "61746",
  [HdsIconlibraryMapView_16px.StatisticsSolid_16px]: "61747",
  [HdsIconlibraryMapView_16px.TiltedSolid_16px]: "61748",
  [HdsIconlibraryMapView_16px.ValueDecreaseSolid_16px]: "61749",
  [HdsIconlibraryMapView_16px.ValueDecreaseHighSolid_16px]: "61750",
  [HdsIconlibraryMapView_16px.ValueIncreaseSolid_16px]: "61751",
  [HdsIconlibraryMapView_16px.ValueIncreaseHighSolid_16px]: "61752",
  [HdsIconlibraryMapView_16px.ViewAllSolid_16px]: "61753",
  [HdsIconlibraryMapView_16px.ViewCenterSolid_16px]: "61754",
  [HdsIconlibraryMapView_16px.WestSolid_16px]: "61755",
  [HdsIconlibraryMapView_16px.WestCharacterSolid_16px]: "61756",
  [HdsIconlibraryMapView_16px.WorkspacesSolid_16px]: "61757"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-misc-16px.js
var HdsIconlibraryMisc_16px;
(function(HdsIconlibraryMisc_16px2) {
  HdsIconlibraryMisc_16px2["AddAddressNumberSolid_16px"] = "add-address-number_solid_16px";
  HdsIconlibraryMisc_16px2["AddressNumberSolid_16px"] = "address-number_solid_16px";
  HdsIconlibraryMisc_16px2["BuildingHomeSolid_16px"] = "building-home_solid_16px";
  HdsIconlibraryMisc_16px2["BuildingOffSolid_16px"] = "building-off_solid_16px";
  HdsIconlibraryMisc_16px2["BuildingOfficeSolid_16px"] = "building-office_solid_16px";
  HdsIconlibraryMisc_16px2["CalculatorSolid_16px"] = "calculator_solid_16px";
  HdsIconlibraryMisc_16px2["CartSolid_16px"] = "cart_solid_16px";
  HdsIconlibraryMisc_16px2["CodeSolid_16px"] = "code_solid_16px";
  HdsIconlibraryMisc_16px2["CreditCardSolid_16px"] = "credit-card_solid_16px";
  HdsIconlibraryMisc_16px2["DatasetSolid_16px"] = "dataset_solid_16px";
  HdsIconlibraryMisc_16px2["ElevatorSolid_16px"] = "elevator_solid_16px";
  HdsIconlibraryMisc_16px2["EnvironmentSolid_16px"] = "environment_solid_16px";
  HdsIconlibraryMisc_16px2["EscalatorSolid_16px"] = "escalator_solid_16px";
  HdsIconlibraryMisc_16px2["EscalatorDownSolid_16px"] = "escalator-down_solid_16px";
  HdsIconlibraryMisc_16px2["EscalatorUpSolid_16px"] = "escalator-up_solid_16px";
  HdsIconlibraryMisc_16px2["ExpertSolid_16px"] = "expert_solid_16px";
  HdsIconlibraryMisc_16px2["FamilySolid_16px"] = "family_solid_16px";
  HdsIconlibraryMisc_16px2["FlashlightSolid_16px"] = "flashlight_solid_16px";
  HdsIconlibraryMisc_16px2["GlobalSolid_16px"] = "global_solid_16px";
  HdsIconlibraryMisc_16px2["HandshakeSolid_16px"] = "handshake_solid_16px";
  HdsIconlibraryMisc_16px2["HardDriveSolid_16px"] = "hard-drive_solid_16px";
  HdsIconlibraryMisc_16px2["HeadphonesSolid_16px"] = "headphones_solid_16px";
  HdsIconlibraryMisc_16px2["InboxSolid_16px"] = "inbox_solid_16px";
  HdsIconlibraryMisc_16px2["InboxAttentionSolid_16px"] = "inbox-attention_solid_16px";
  HdsIconlibraryMisc_16px2["KeySolid_16px"] = "key_solid_16px";
  HdsIconlibraryMisc_16px2["KitchenSolid_16px"] = "kitchen_solid_16px";
  HdsIconlibraryMisc_16px2["LaboratorySolid_16px"] = "laboratory_solid_16px";
  HdsIconlibraryMisc_16px2["ManSolid_16px"] = "man_solid_16px";
  HdsIconlibraryMisc_16px2["MeetingPointSolid_16px"] = "meeting-point_solid_16px";
  HdsIconlibraryMisc_16px2["NeighbourhoodSolid_16px"] = "neighbourhood_solid_16px";
  HdsIconlibraryMisc_16px2["PacemakerSolid_16px"] = "pacemaker_solid_16px";
  HdsIconlibraryMisc_16px2["PeopleSolid_16px"] = "people_solid_16px";
  HdsIconlibraryMisc_16px2["PoopSolid_16px"] = "poop_solid_16px";
  HdsIconlibraryMisc_16px2["ProjectSolid_16px"] = "project_solid_16px";
  HdsIconlibraryMisc_16px2["ProjectsSolid_16px"] = "projects_solid_16px";
  HdsIconlibraryMisc_16px2["ReusableSolid_16px"] = "reusable_solid_16px";
  HdsIconlibraryMisc_16px2["ServiceSolid_16px"] = "service_solid_16px";
  HdsIconlibraryMisc_16px2["StairsSolid_16px"] = "stairs_solid_16px";
  HdsIconlibraryMisc_16px2["StopwatchSolid_16px"] = "stopwatch_solid_16px";
  HdsIconlibraryMisc_16px2["SuitcaseSolid_16px"] = "suitcase_solid_16px";
  HdsIconlibraryMisc_16px2["TerrainSolid_16px"] = "terrain_solid_16px";
  HdsIconlibraryMisc_16px2["TicketBarrierSolid_16px"] = "ticket-barrier_solid_16px";
  HdsIconlibraryMisc_16px2["TrophySolid_16px"] = "trophy_solid_16px";
  HdsIconlibraryMisc_16px2["VoiceCommandSolid_16px"] = "voice-command_solid_16px";
  HdsIconlibraryMisc_16px2["WheelchairSolid_16px"] = "wheelchair_solid_16px";
  HdsIconlibraryMisc_16px2["WomanSolid_16px"] = "woman_solid_16px";
})(HdsIconlibraryMisc_16px = HdsIconlibraryMisc_16px || (HdsIconlibraryMisc_16px = {}));
var HDS_ICONLIBRARY_MISC_16PX_CODEPOINTS = {
  [HdsIconlibraryMisc_16px.AddAddressNumberSolid_16px]: "61697",
  [HdsIconlibraryMisc_16px.AddressNumberSolid_16px]: "61698",
  [HdsIconlibraryMisc_16px.BuildingHomeSolid_16px]: "61699",
  [HdsIconlibraryMisc_16px.BuildingOffSolid_16px]: "61700",
  [HdsIconlibraryMisc_16px.BuildingOfficeSolid_16px]: "61701",
  [HdsIconlibraryMisc_16px.CalculatorSolid_16px]: "61702",
  [HdsIconlibraryMisc_16px.CartSolid_16px]: "61703",
  [HdsIconlibraryMisc_16px.CodeSolid_16px]: "61704",
  [HdsIconlibraryMisc_16px.CreditCardSolid_16px]: "61705",
  [HdsIconlibraryMisc_16px.DatasetSolid_16px]: "61706",
  [HdsIconlibraryMisc_16px.ElevatorSolid_16px]: "61707",
  [HdsIconlibraryMisc_16px.EnvironmentSolid_16px]: "61708",
  [HdsIconlibraryMisc_16px.EscalatorSolid_16px]: "61709",
  [HdsIconlibraryMisc_16px.EscalatorDownSolid_16px]: "61710",
  [HdsIconlibraryMisc_16px.EscalatorUpSolid_16px]: "61711",
  [HdsIconlibraryMisc_16px.ExpertSolid_16px]: "61712",
  [HdsIconlibraryMisc_16px.FamilySolid_16px]: "61713",
  [HdsIconlibraryMisc_16px.FlashlightSolid_16px]: "61714",
  [HdsIconlibraryMisc_16px.GlobalSolid_16px]: "61715",
  [HdsIconlibraryMisc_16px.HandshakeSolid_16px]: "61716",
  [HdsIconlibraryMisc_16px.HardDriveSolid_16px]: "61717",
  [HdsIconlibraryMisc_16px.HeadphonesSolid_16px]: "61718",
  [HdsIconlibraryMisc_16px.InboxSolid_16px]: "61719",
  [HdsIconlibraryMisc_16px.InboxAttentionSolid_16px]: "61720",
  [HdsIconlibraryMisc_16px.KeySolid_16px]: "61721",
  [HdsIconlibraryMisc_16px.KitchenSolid_16px]: "61722",
  [HdsIconlibraryMisc_16px.LaboratorySolid_16px]: "61723",
  [HdsIconlibraryMisc_16px.ManSolid_16px]: "61724",
  [HdsIconlibraryMisc_16px.MeetingPointSolid_16px]: "61725",
  [HdsIconlibraryMisc_16px.NeighbourhoodSolid_16px]: "61726",
  [HdsIconlibraryMisc_16px.PacemakerSolid_16px]: "61727",
  [HdsIconlibraryMisc_16px.PeopleSolid_16px]: "61728",
  [HdsIconlibraryMisc_16px.PoopSolid_16px]: "61729",
  [HdsIconlibraryMisc_16px.ProjectSolid_16px]: "61730",
  [HdsIconlibraryMisc_16px.ProjectsSolid_16px]: "61731",
  [HdsIconlibraryMisc_16px.ReusableSolid_16px]: "61732",
  [HdsIconlibraryMisc_16px.ServiceSolid_16px]: "61733",
  [HdsIconlibraryMisc_16px.StairsSolid_16px]: "61734",
  [HdsIconlibraryMisc_16px.StopwatchSolid_16px]: "61735",
  [HdsIconlibraryMisc_16px.SuitcaseSolid_16px]: "61736",
  [HdsIconlibraryMisc_16px.TerrainSolid_16px]: "61737",
  [HdsIconlibraryMisc_16px.TicketBarrierSolid_16px]: "61738",
  [HdsIconlibraryMisc_16px.TrophySolid_16px]: "61739",
  [HdsIconlibraryMisc_16px.VoiceCommandSolid_16px]: "61740",
  [HdsIconlibraryMisc_16px.WheelchairSolid_16px]: "61741",
  [HdsIconlibraryMisc_16px.WomanSolid_16px]: "61742"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-navigation-image-16px.js
var HdsIconlibraryNavigationImage_16px;
(function(HdsIconlibraryNavigationImage_16px2) {
  HdsIconlibraryNavigationImage_16px2["BrightnessOffSolid_16px"] = "brightness-off_solid_16px";
  HdsIconlibraryNavigationImage_16px2["BrightnessOnSolid_16px"] = "brightness-on_solid_16px";
  HdsIconlibraryNavigationImage_16px2["ColorFullSolid_16px"] = "color-full_solid_16px";
  HdsIconlibraryNavigationImage_16px2["ColorInvertASolid_16px"] = "color-invert-A_solid_16px";
  HdsIconlibraryNavigationImage_16px2["ColorInvertBSolid_16px"] = "color-invert-B_solid_16px";
  HdsIconlibraryNavigationImage_16px2["ColorOverrideSolid_16px"] = "color-override_solid_16px";
  HdsIconlibraryNavigationImage_16px2["ColorToneSolid_16px"] = "color-tone_solid_16px";
  HdsIconlibraryNavigationImage_16px2["ContrastSolid_16px"] = "contrast_solid_16px";
  HdsIconlibraryNavigationImage_16px2["FirstSolid_16px"] = "first_solid_16px";
  HdsIconlibraryNavigationImage_16px2["LastSolid_16px"] = "last_solid_16px";
  HdsIconlibraryNavigationImage_16px2["NextSolid_16px"] = "next_solid_16px";
  HdsIconlibraryNavigationImage_16px2["OpacityOffSolid_16px"] = "opacity-off_solid_16px";
  HdsIconlibraryNavigationImage_16px2["OpacityOnSolid_16px"] = "opacity-on_solid_16px";
  HdsIconlibraryNavigationImage_16px2["PauseSolid_16px"] = "pause_solid_16px";
  HdsIconlibraryNavigationImage_16px2["PlaySolid_16px"] = "play_solid_16px";
  HdsIconlibraryNavigationImage_16px2["PlayReverseSolid_16px"] = "play-reverse_solid_16px";
  HdsIconlibraryNavigationImage_16px2["PlaybackSpeedSolid_16px"] = "playback-speed_solid_16px";
  HdsIconlibraryNavigationImage_16px2["PreviousSolid_16px"] = "previous_solid_16px";
  HdsIconlibraryNavigationImage_16px2["SkipSolid_16px"] = "skip_solid_16px";
  HdsIconlibraryNavigationImage_16px2["StopSolid_16px"] = "stop_solid_16px";
})(HdsIconlibraryNavigationImage_16px = HdsIconlibraryNavigationImage_16px || (HdsIconlibraryNavigationImage_16px = {}));
var HDS_ICONLIBRARY_NAVIGATION_IMAGE_16PX_CODEPOINTS = {
  [HdsIconlibraryNavigationImage_16px.BrightnessOffSolid_16px]: "61697",
  [HdsIconlibraryNavigationImage_16px.BrightnessOnSolid_16px]: "61698",
  [HdsIconlibraryNavigationImage_16px.ColorFullSolid_16px]: "61699",
  [HdsIconlibraryNavigationImage_16px.ColorInvertASolid_16px]: "61700",
  [HdsIconlibraryNavigationImage_16px.ColorInvertBSolid_16px]: "61701",
  [HdsIconlibraryNavigationImage_16px.ColorOverrideSolid_16px]: "61702",
  [HdsIconlibraryNavigationImage_16px.ColorToneSolid_16px]: "61703",
  [HdsIconlibraryNavigationImage_16px.ContrastSolid_16px]: "61704",
  [HdsIconlibraryNavigationImage_16px.FirstSolid_16px]: "61705",
  [HdsIconlibraryNavigationImage_16px.LastSolid_16px]: "61706",
  [HdsIconlibraryNavigationImage_16px.NextSolid_16px]: "61707",
  [HdsIconlibraryNavigationImage_16px.OpacityOffSolid_16px]: "61708",
  [HdsIconlibraryNavigationImage_16px.OpacityOnSolid_16px]: "61709",
  [HdsIconlibraryNavigationImage_16px.PauseSolid_16px]: "61710",
  [HdsIconlibraryNavigationImage_16px.PlaySolid_16px]: "61711",
  [HdsIconlibraryNavigationImage_16px.PlayReverseSolid_16px]: "61712",
  [HdsIconlibraryNavigationImage_16px.PlaybackSpeedSolid_16px]: "61713",
  [HdsIconlibraryNavigationImage_16px.PreviousSolid_16px]: "61714",
  [HdsIconlibraryNavigationImage_16px.SkipSolid_16px]: "61715",
  [HdsIconlibraryNavigationImage_16px.StopSolid_16px]: "61716"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-poi-16px.js
var HdsIconlibraryPoi_16px;
(function(HdsIconlibraryPoi_16px2) {
  HdsIconlibraryPoi_16px2["AccommodationSolid_16px"] = "accommodation_solid_16px";
  HdsIconlibraryPoi_16px2["AirportSolid_16px"] = "airport_solid_16px";
  HdsIconlibraryPoi_16px2["AirportCargoSolid_16px"] = "airport-cargo_solid_16px";
  HdsIconlibraryPoi_16px2["AirportGateSolid_16px"] = "airport-gate_solid_16px";
  HdsIconlibraryPoi_16px2["AmusementParkSolid_16px"] = "amusement-park_solid_16px";
  HdsIconlibraryPoi_16px2["AquariumSolid_16px"] = "aquarium_solid_16px";
  HdsIconlibraryPoi_16px2["ArtGallerySolid_16px"] = "art-gallery_solid_16px";
  HdsIconlibraryPoi_16px2["AshramSolid_16px"] = "ashram_solid_16px";
  HdsIconlibraryPoi_16px2["AtmSolid_16px"] = "atm_solid_16px";
  HdsIconlibraryPoi_16px2["AttractionSolid_16px"] = "attraction_solid_16px";
  HdsIconlibraryPoi_16px2["BakerySolid_16px"] = "bakery_solid_16px";
  HdsIconlibraryPoi_16px2["BeachSolid_16px"] = "beach_solid_16px";
  HdsIconlibraryPoi_16px2["BookstoreSolid_16px"] = "bookstore_solid_16px";
  HdsIconlibraryPoi_16px2["BowlingSolid_16px"] = "bowling_solid_16px";
  HdsIconlibraryPoi_16px2["BridgeSolid_16px"] = "bridge_solid_16px";
  HdsIconlibraryPoi_16px2["BusSolid_16px"] = "bus_solid_16px";
  HdsIconlibraryPoi_16px2["BusinessSolid_16px"] = "business_solid_16px";
  HdsIconlibraryPoi_16px2["BusinessPostJpnSolid_16px"] = "business-post-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["ButcherSolid_16px"] = "butcher_solid_16px";
  HdsIconlibraryPoi_16px2["CableWaySolid_16px"] = "cable-way_solid_16px";
  HdsIconlibraryPoi_16px2["CampingSolid_16px"] = "camping_solid_16px";
  HdsIconlibraryPoi_16px2["CarChargingSolid_16px"] = "car-charging_solid_16px";
  HdsIconlibraryPoi_16px2["CarChargingFastSolid_16px"] = "car-charging-fast_solid_16px";
  HdsIconlibraryPoi_16px2["CarDealershipSolid_16px"] = "car-dealership_solid_16px";
  HdsIconlibraryPoi_16px2["CarElectricSolid_16px"] = "car-electric_solid_16px";
  HdsIconlibraryPoi_16px2["CarRentalSolid_16px"] = "car-rental_solid_16px";
  HdsIconlibraryPoi_16px2["CarRepairSolid_16px"] = "car-repair_solid_16px";
  HdsIconlibraryPoi_16px2["CarWashSolid_16px"] = "car-wash_solid_16px";
  HdsIconlibraryPoi_16px2["CargoCenterSolid_16px"] = "cargo-center_solid_16px";
  HdsIconlibraryPoi_16px2["CartSolid_16px"] = "cart_solid_16px";
  HdsIconlibraryPoi_16px2["CasinoSolid_16px"] = "casino_solid_16px";
  HdsIconlibraryPoi_16px2["CemetrySolid_16px"] = "cemetry_solid_16px";
  HdsIconlibraryPoi_16px2["ChurchSolid_16px"] = "church_solid_16px";
  HdsIconlibraryPoi_16px2["CinemaSolid_16px"] = "cinema_solid_16px";
  HdsIconlibraryPoi_16px2["ClothingSolid_16px"] = "clothing_solid_16px";
  HdsIconlibraryPoi_16px2["CoachSolid_16px"] = "coach_solid_16px";
  HdsIconlibraryPoi_16px2["CocktailSolid_16px"] = "cocktail_solid_16px";
  HdsIconlibraryPoi_16px2["CoffeeSolid_16px"] = "coffee_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyBahtSolid_16px"] = "currency-baht_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyDollarSolid_16px"] = "currency-dollar_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyDongSolid_16px"] = "currency-dong_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyEuroSolid_16px"] = "currency-euro_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyFrancSolid_16px"] = "currency-franc_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyKroneSolid_16px"] = "currency-krone_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyLiraSolid_16px"] = "currency-lira_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyNairaSolid_16px"] = "currency-naira_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyPoundSolid_16px"] = "currency-pound_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyRubleSolid_16px"] = "currency-ruble_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyRupeeSolid_16px"] = "currency-rupee_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyRupeesSolid_16px"] = "currency-rupees_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyRupiahSolid_16px"] = "currency-rupiah_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyShekelSolid_16px"] = "currency-shekel_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyTakaSolid_16px"] = "currency-taka_solid_16px";
  HdsIconlibraryPoi_16px2["CurrencyYenSolid_16px"] = "currency-yen_solid_16px";
  HdsIconlibraryPoi_16px2["DoughnutSolid_16px"] = "doughnut_solid_16px";
  HdsIconlibraryPoi_16px2["EducationSolid_16px"] = "education_solid_16px";
  HdsIconlibraryPoi_16px2["ElevatorSolid_16px"] = "elevator_solid_16px";
  HdsIconlibraryPoi_16px2["EmergencyFiredepartmentJpnSolid_16px"] = "emergency-firedepartment-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["EmergencyHospitalJpnSolid_16px"] = "emergency-hospital-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["EmergencyPoliceJpnSolid_16px"] = "emergency-police-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["EmergencyPoliceboxJpnSolid_16px"] = "emergency-policebox-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["EnterVenueSolid_16px"] = "enter-venue_solid_16px";
  HdsIconlibraryPoi_16px2["EntranceSolid_16px"] = "entrance_solid_16px";
  HdsIconlibraryPoi_16px2["EscalatorSolid_16px"] = "escalator_solid_16px";
  HdsIconlibraryPoi_16px2["ExhibitionCenterSolid_16px"] = "exhibition-center_solid_16px";
  HdsIconlibraryPoi_16px2["FacilitiesSolid_16px"] = "facilities_solid_16px";
  HdsIconlibraryPoi_16px2["FacilitiesCityhallJpnSolid_16px"] = "facilities-cityhall-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["FacilitiesEducationHigherJpnSolid_16px"] = "facilities-education-higher-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["FacilitiesEducationSchoolJpnSolid_16px"] = "facilities-education-school-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["FacilitiesOfficePrefecturalJpnSolid_16px"] = "facilities-office-prefectural-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["FacilitiesOfficeTownvillageJpnSolid_16px"] = "facilities-office-townvillage-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["FacilitiesOfficeWardJpnSolid_16px"] = "facilities-office-ward-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["FastFoodSolid_16px"] = "fast-food_solid_16px";
  HdsIconlibraryPoi_16px2["FerrySolid_16px"] = "ferry_solid_16px";
  HdsIconlibraryPoi_16px2["FireDepartmentSolid_16px"] = "fire-department_solid_16px";
  HdsIconlibraryPoi_16px2["FirstAidCrescentSolid_16px"] = "first-aid-crescent_solid_16px";
  HdsIconlibraryPoi_16px2["FirstAidCrossSolid_16px"] = "first-aid-cross_solid_16px";
  HdsIconlibraryPoi_16px2["FitnessSolid_16px"] = "fitness_solid_16px";
  HdsIconlibraryPoi_16px2["FrontierCrossingSolid_16px"] = "frontier-crossing_solid_16px";
  HdsIconlibraryPoi_16px2["GameArcadeSolid_16px"] = "game-arcade_solid_16px";
  HdsIconlibraryPoi_16px2["GolfCourseSolid_16px"] = "golf-course_solid_16px";
  HdsIconlibraryPoi_16px2["GrocerySolid_16px"] = "grocery_solid_16px";
  HdsIconlibraryPoi_16px2["GurdwaraSolid_16px"] = "gurdwara_solid_16px";
  HdsIconlibraryPoi_16px2["HarborSolid_16px"] = "harbor_solid_16px";
  HdsIconlibraryPoi_16px2["HospitalCrescentSolid_16px"] = "hospital-crescent_solid_16px";
  HdsIconlibraryPoi_16px2["HospitalCrossSolid_16px"] = "hospital-cross_solid_16px";
  HdsIconlibraryPoi_16px2["HotSpringJpnSolid_16px"] = "hot-spring-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["HotelSolid_16px"] = "hotel_solid_16px";
  HdsIconlibraryPoi_16px2["InclinedSolid_16px"] = "inclined_solid_16px";
  HdsIconlibraryPoi_16px2["IndustrialComplexSolid_16px"] = "industrial-complex_solid_16px";
  HdsIconlibraryPoi_16px2["KaraokeSolid_16px"] = "karaoke_solid_16px";
  HdsIconlibraryPoi_16px2["LaundrySolid_16px"] = "laundry_solid_16px";
  HdsIconlibraryPoi_16px2["LibrarySolid_16px"] = "library_solid_16px";
  HdsIconlibraryPoi_16px2["LiquorSolid_16px"] = "liquor_solid_16px";
  HdsIconlibraryPoi_16px2["LoadingDockSolid_16px"] = "loading-dock_solid_16px";
  HdsIconlibraryPoi_16px2["LoadingZoneSolid_16px"] = "loading-zone_solid_16px";
  HdsIconlibraryPoi_16px2["MetroSolid_16px"] = "metro_solid_16px";
  HdsIconlibraryPoi_16px2["MonorailSolid_16px"] = "monorail_solid_16px";
  HdsIconlibraryPoi_16px2["MosqueSolid_16px"] = "mosque_solid_16px";
  HdsIconlibraryPoi_16px2["MountainSolid_16px"] = "mountain_solid_16px";
  HdsIconlibraryPoi_16px2["MountainPassSolid_16px"] = "mountain-pass_solid_16px";
  HdsIconlibraryPoi_16px2["MuseumSolid_16px"] = "museum_solid_16px";
  HdsIconlibraryPoi_16px2["MuseumArtSolid_16px"] = "museum-art_solid_16px";
  HdsIconlibraryPoi_16px2["NatureSolid_16px"] = "nature_solid_16px";
  HdsIconlibraryPoi_16px2["NatureOverlookSolid_16px"] = "nature-overlook_solid_16px";
  HdsIconlibraryPoi_16px2["NightClubSolid_16px"] = "night-club_solid_16px";
  HdsIconlibraryPoi_16px2["PagodaSolid_16px"] = "pagoda_solid_16px";
  HdsIconlibraryPoi_16px2["ParkAndRideSolid_16px"] = "park-and-ride_solid_16px";
  HdsIconlibraryPoi_16px2["ParkingSolid_16px"] = "parking_solid_16px";
  HdsIconlibraryPoi_16px2["ParkingBicycleSolid_16px"] = "parking-bicycle_solid_16px";
  HdsIconlibraryPoi_16px2["ParkingGarageSolid_16px"] = "parking-garage_solid_16px";
  HdsIconlibraryPoi_16px2["ParkingMotorcycleSolid_16px"] = "parking-motorcycle_solid_16px";
  HdsIconlibraryPoi_16px2["PetrolStationSolid_16px"] = "petrol-station_solid_16px";
  HdsIconlibraryPoi_16px2["PharmacyCrescentSolid_16px"] = "pharmacy-crescent_solid_16px";
  HdsIconlibraryPoi_16px2["PharmacyCrossSolid_16px"] = "pharmacy-cross_solid_16px";
  HdsIconlibraryPoi_16px2["PicnicAreaSolid_16px"] = "picnic-area_solid_16px";
  HdsIconlibraryPoi_16px2["PlaygroundSolid_16px"] = "playground_solid_16px";
  HdsIconlibraryPoi_16px2["PointSolid_16px"] = "point_solid_16px";
  HdsIconlibraryPoi_16px2["PoliceSolid_16px"] = "police_solid_16px";
  HdsIconlibraryPoi_16px2["PoolSolid_16px"] = "pool_solid_16px";
  HdsIconlibraryPoi_16px2["PostSolid_16px"] = "post_solid_16px";
  HdsIconlibraryPoi_16px2["PubSolid_16px"] = "pub_solid_16px";
  HdsIconlibraryPoi_16px2["PublicToiletSolid_16px"] = "public-toilet_solid_16px";
  HdsIconlibraryPoi_16px2["PublicTransportSolid_16px"] = "public-transport_solid_16px";
  HdsIconlibraryPoi_16px2["RailLightSolid_16px"] = "rail-light_solid_16px";
  HdsIconlibraryPoi_16px2["RailRegionalSolid_16px"] = "rail-regional_solid_16px";
  HdsIconlibraryPoi_16px2["RailYardSolid_16px"] = "rail-yard_solid_16px";
  HdsIconlibraryPoi_16px2["RampSolid_16px"] = "ramp_solid_16px";
  HdsIconlibraryPoi_16px2["ReligiousPlaceSolid_16px"] = "religious-place_solid_16px";
  HdsIconlibraryPoi_16px2["ReligiousShintoJpnSolid_16px"] = "religious-shinto-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["ReligiousTempleBuddhistJpnSolid_16px"] = "religious-temple-buddhist-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["RestaurantSolid_16px"] = "restaurant_solid_16px";
  HdsIconlibraryPoi_16px2["SeaportHarborSolid_16px"] = "seaport-harbor_solid_16px";
  HdsIconlibraryPoi_16px2["ShoesSolid_16px"] = "shoes_solid_16px";
  HdsIconlibraryPoi_16px2["ShoppingSolid_16px"] = "shopping_solid_16px";
  HdsIconlibraryPoi_16px2["ShrineGenericSolid_16px"] = "shrine-generic_solid_16px";
  HdsIconlibraryPoi_16px2["SkiRunSolid_16px"] = "ski-run_solid_16px";
  HdsIconlibraryPoi_16px2["SkywalkSolid_16px"] = "skywalk_solid_16px";
  HdsIconlibraryPoi_16px2["StadiumSolid_16px"] = "stadium_solid_16px";
  HdsIconlibraryPoi_16px2["StairsSolid_16px"] = "stairs_solid_16px";
  HdsIconlibraryPoi_16px2["SweetsSolid_16px"] = "sweets_solid_16px";
  HdsIconlibraryPoi_16px2["SwimmingSolid_16px"] = "swimming_solid_16px";
  HdsIconlibraryPoi_16px2["SynagogueOutline_16px"] = "synagogue_outline_16px";
  HdsIconlibraryPoi_16px2["SynagogueSolid_16px"] = "synagogue_solid_16px";
  HdsIconlibraryPoi_16px2["TaxiSolid_16px"] = "taxi_solid_16px";
  HdsIconlibraryPoi_16px2["TheaterSolid_16px"] = "theater_solid_16px";
  HdsIconlibraryPoi_16px2["TollBoothSolid_16px"] = "toll-booth_solid_16px";
  HdsIconlibraryPoi_16px2["TouristInformationSolid_16px"] = "tourist-information_solid_16px";
  HdsIconlibraryPoi_16px2["TrainSolid_16px"] = "train_solid_16px";
  HdsIconlibraryPoi_16px2["TransportShinkansenJpnSolid_16px"] = "transport-shinkansen-jpn_solid_16px";
  HdsIconlibraryPoi_16px2["TravelAgentTicketingSolid_16px"] = "travel-agent-ticketing_solid_16px";
  HdsIconlibraryPoi_16px2["TruckDealershipSolid_16px"] = "truck-dealership_solid_16px";
  HdsIconlibraryPoi_16px2["TruckParkingSolid_16px"] = "truck-parking_solid_16px";
  HdsIconlibraryPoi_16px2["TruckRepairSolid_16px"] = "truck-repair_solid_16px";
  HdsIconlibraryPoi_16px2["TruckStopPlazaSolid_16px"] = "truck-stop-plaza_solid_16px";
  HdsIconlibraryPoi_16px2["TruckWashSolid_16px"] = "truck-wash_solid_16px";
  HdsIconlibraryPoi_16px2["TunnelSolid_16px"] = "tunnel_solid_16px";
  HdsIconlibraryPoi_16px2["WaterfallSolid_16px"] = "waterfall_solid_16px";
  HdsIconlibraryPoi_16px2["WeighStationSolid_16px"] = "weigh-station_solid_16px";
  HdsIconlibraryPoi_16px2["ZooSolid_16px"] = "zoo_solid_16px";
})(HdsIconlibraryPoi_16px = HdsIconlibraryPoi_16px || (HdsIconlibraryPoi_16px = {}));
var HDS_ICONLIBRARY_POI_16PX_CODEPOINTS = {
  [HdsIconlibraryPoi_16px.AccommodationSolid_16px]: "61697",
  [HdsIconlibraryPoi_16px.AirportSolid_16px]: "61698",
  [HdsIconlibraryPoi_16px.AirportCargoSolid_16px]: "61699",
  [HdsIconlibraryPoi_16px.AirportGateSolid_16px]: "61700",
  [HdsIconlibraryPoi_16px.AmusementParkSolid_16px]: "61701",
  [HdsIconlibraryPoi_16px.AquariumSolid_16px]: "61702",
  [HdsIconlibraryPoi_16px.ArtGallerySolid_16px]: "61703",
  [HdsIconlibraryPoi_16px.AshramSolid_16px]: "61704",
  [HdsIconlibraryPoi_16px.AtmSolid_16px]: "61705",
  [HdsIconlibraryPoi_16px.AttractionSolid_16px]: "61706",
  [HdsIconlibraryPoi_16px.BakerySolid_16px]: "61707",
  [HdsIconlibraryPoi_16px.BeachSolid_16px]: "61708",
  [HdsIconlibraryPoi_16px.BookstoreSolid_16px]: "61709",
  [HdsIconlibraryPoi_16px.BowlingSolid_16px]: "61710",
  [HdsIconlibraryPoi_16px.BridgeSolid_16px]: "61711",
  [HdsIconlibraryPoi_16px.BusSolid_16px]: "61712",
  [HdsIconlibraryPoi_16px.BusinessSolid_16px]: "61713",
  [HdsIconlibraryPoi_16px.BusinessPostJpnSolid_16px]: "61714",
  [HdsIconlibraryPoi_16px.ButcherSolid_16px]: "61715",
  [HdsIconlibraryPoi_16px.CableWaySolid_16px]: "61716",
  [HdsIconlibraryPoi_16px.CampingSolid_16px]: "61717",
  [HdsIconlibraryPoi_16px.CarChargingSolid_16px]: "61718",
  [HdsIconlibraryPoi_16px.CarChargingFastSolid_16px]: "61719",
  [HdsIconlibraryPoi_16px.CarDealershipSolid_16px]: "61720",
  [HdsIconlibraryPoi_16px.CarElectricSolid_16px]: "61721",
  [HdsIconlibraryPoi_16px.CarRentalSolid_16px]: "61722",
  [HdsIconlibraryPoi_16px.CarRepairSolid_16px]: "61723",
  [HdsIconlibraryPoi_16px.CarWashSolid_16px]: "61724",
  [HdsIconlibraryPoi_16px.CargoCenterSolid_16px]: "61725",
  [HdsIconlibraryPoi_16px.CartSolid_16px]: "61726",
  [HdsIconlibraryPoi_16px.CasinoSolid_16px]: "61727",
  [HdsIconlibraryPoi_16px.CemetrySolid_16px]: "61728",
  [HdsIconlibraryPoi_16px.ChurchSolid_16px]: "61729",
  [HdsIconlibraryPoi_16px.CinemaSolid_16px]: "61730",
  [HdsIconlibraryPoi_16px.ClothingSolid_16px]: "61731",
  [HdsIconlibraryPoi_16px.CoachSolid_16px]: "61732",
  [HdsIconlibraryPoi_16px.CocktailSolid_16px]: "61733",
  [HdsIconlibraryPoi_16px.CoffeeSolid_16px]: "61734",
  [HdsIconlibraryPoi_16px.CurrencyBahtSolid_16px]: "61735",
  [HdsIconlibraryPoi_16px.CurrencyDollarSolid_16px]: "61736",
  [HdsIconlibraryPoi_16px.CurrencyDongSolid_16px]: "61737",
  [HdsIconlibraryPoi_16px.CurrencyEuroSolid_16px]: "61738",
  [HdsIconlibraryPoi_16px.CurrencyFrancSolid_16px]: "61739",
  [HdsIconlibraryPoi_16px.CurrencyKroneSolid_16px]: "61740",
  [HdsIconlibraryPoi_16px.CurrencyLiraSolid_16px]: "61741",
  [HdsIconlibraryPoi_16px.CurrencyNairaSolid_16px]: "61742",
  [HdsIconlibraryPoi_16px.CurrencyPoundSolid_16px]: "61743",
  [HdsIconlibraryPoi_16px.CurrencyRubleSolid_16px]: "61744",
  [HdsIconlibraryPoi_16px.CurrencyRupeeSolid_16px]: "61745",
  [HdsIconlibraryPoi_16px.CurrencyRupeesSolid_16px]: "61746",
  [HdsIconlibraryPoi_16px.CurrencyRupiahSolid_16px]: "61747",
  [HdsIconlibraryPoi_16px.CurrencyShekelSolid_16px]: "61748",
  [HdsIconlibraryPoi_16px.CurrencyTakaSolid_16px]: "61749",
  [HdsIconlibraryPoi_16px.CurrencyYenSolid_16px]: "61750",
  [HdsIconlibraryPoi_16px.DoughnutSolid_16px]: "61751",
  [HdsIconlibraryPoi_16px.EducationSolid_16px]: "61752",
  [HdsIconlibraryPoi_16px.ElevatorSolid_16px]: "61753",
  [HdsIconlibraryPoi_16px.EmergencyFiredepartmentJpnSolid_16px]: "61754",
  [HdsIconlibraryPoi_16px.EmergencyHospitalJpnSolid_16px]: "61755",
  [HdsIconlibraryPoi_16px.EmergencyPoliceJpnSolid_16px]: "61756",
  [HdsIconlibraryPoi_16px.EmergencyPoliceboxJpnSolid_16px]: "61757",
  [HdsIconlibraryPoi_16px.EnterVenueSolid_16px]: "61758",
  [HdsIconlibraryPoi_16px.EntranceSolid_16px]: "61759",
  [HdsIconlibraryPoi_16px.EscalatorSolid_16px]: "61760",
  [HdsIconlibraryPoi_16px.ExhibitionCenterSolid_16px]: "61761",
  [HdsIconlibraryPoi_16px.FacilitiesSolid_16px]: "61762",
  [HdsIconlibraryPoi_16px.FacilitiesCityhallJpnSolid_16px]: "61763",
  [HdsIconlibraryPoi_16px.FacilitiesEducationHigherJpnSolid_16px]: "61764",
  [HdsIconlibraryPoi_16px.FacilitiesEducationSchoolJpnSolid_16px]: "61765",
  [HdsIconlibraryPoi_16px.FacilitiesOfficePrefecturalJpnSolid_16px]: "61766",
  [HdsIconlibraryPoi_16px.FacilitiesOfficeTownvillageJpnSolid_16px]: "61767",
  [HdsIconlibraryPoi_16px.FacilitiesOfficeWardJpnSolid_16px]: "61768",
  [HdsIconlibraryPoi_16px.FastFoodSolid_16px]: "61769",
  [HdsIconlibraryPoi_16px.FerrySolid_16px]: "61770",
  [HdsIconlibraryPoi_16px.FireDepartmentSolid_16px]: "61771",
  [HdsIconlibraryPoi_16px.FirstAidCrescentSolid_16px]: "61772",
  [HdsIconlibraryPoi_16px.FirstAidCrossSolid_16px]: "61773",
  [HdsIconlibraryPoi_16px.FitnessSolid_16px]: "61774",
  [HdsIconlibraryPoi_16px.FrontierCrossingSolid_16px]: "61775",
  [HdsIconlibraryPoi_16px.GameArcadeSolid_16px]: "61776",
  [HdsIconlibraryPoi_16px.GolfCourseSolid_16px]: "61777",
  [HdsIconlibraryPoi_16px.GrocerySolid_16px]: "61778",
  [HdsIconlibraryPoi_16px.GurdwaraSolid_16px]: "61779",
  [HdsIconlibraryPoi_16px.HarborSolid_16px]: "61780",
  [HdsIconlibraryPoi_16px.HospitalCrescentSolid_16px]: "61781",
  [HdsIconlibraryPoi_16px.HospitalCrossSolid_16px]: "61782",
  [HdsIconlibraryPoi_16px.HotSpringJpnSolid_16px]: "61783",
  [HdsIconlibraryPoi_16px.HotelSolid_16px]: "61784",
  [HdsIconlibraryPoi_16px.InclinedSolid_16px]: "61785",
  [HdsIconlibraryPoi_16px.IndustrialComplexSolid_16px]: "61786",
  [HdsIconlibraryPoi_16px.KaraokeSolid_16px]: "61787",
  [HdsIconlibraryPoi_16px.LaundrySolid_16px]: "61788",
  [HdsIconlibraryPoi_16px.LibrarySolid_16px]: "61789",
  [HdsIconlibraryPoi_16px.LiquorSolid_16px]: "61790",
  [HdsIconlibraryPoi_16px.LoadingDockSolid_16px]: "61791",
  [HdsIconlibraryPoi_16px.LoadingZoneSolid_16px]: "61792",
  [HdsIconlibraryPoi_16px.MetroSolid_16px]: "61793",
  [HdsIconlibraryPoi_16px.MonorailSolid_16px]: "61794",
  [HdsIconlibraryPoi_16px.MosqueSolid_16px]: "61795",
  [HdsIconlibraryPoi_16px.MountainSolid_16px]: "61796",
  [HdsIconlibraryPoi_16px.MountainPassSolid_16px]: "61797",
  [HdsIconlibraryPoi_16px.MuseumSolid_16px]: "61798",
  [HdsIconlibraryPoi_16px.MuseumArtSolid_16px]: "61799",
  [HdsIconlibraryPoi_16px.NatureSolid_16px]: "61800",
  [HdsIconlibraryPoi_16px.NatureOverlookSolid_16px]: "61801",
  [HdsIconlibraryPoi_16px.NightClubSolid_16px]: "61802",
  [HdsIconlibraryPoi_16px.PagodaSolid_16px]: "61803",
  [HdsIconlibraryPoi_16px.ParkAndRideSolid_16px]: "61804",
  [HdsIconlibraryPoi_16px.ParkingSolid_16px]: "61805",
  [HdsIconlibraryPoi_16px.ParkingBicycleSolid_16px]: "61806",
  [HdsIconlibraryPoi_16px.ParkingGarageSolid_16px]: "61807",
  [HdsIconlibraryPoi_16px.ParkingMotorcycleSolid_16px]: "61808",
  [HdsIconlibraryPoi_16px.PetrolStationSolid_16px]: "61809",
  [HdsIconlibraryPoi_16px.PharmacyCrescentSolid_16px]: "61810",
  [HdsIconlibraryPoi_16px.PharmacyCrossSolid_16px]: "61811",
  [HdsIconlibraryPoi_16px.PicnicAreaSolid_16px]: "61812",
  [HdsIconlibraryPoi_16px.PlaygroundSolid_16px]: "61813",
  [HdsIconlibraryPoi_16px.PointSolid_16px]: "61814",
  [HdsIconlibraryPoi_16px.PoliceSolid_16px]: "61815",
  [HdsIconlibraryPoi_16px.PoolSolid_16px]: "61816",
  [HdsIconlibraryPoi_16px.PostSolid_16px]: "61817",
  [HdsIconlibraryPoi_16px.PubSolid_16px]: "61818",
  [HdsIconlibraryPoi_16px.PublicToiletSolid_16px]: "61819",
  [HdsIconlibraryPoi_16px.PublicTransportSolid_16px]: "61820",
  [HdsIconlibraryPoi_16px.RailLightSolid_16px]: "61821",
  [HdsIconlibraryPoi_16px.RailRegionalSolid_16px]: "61822",
  [HdsIconlibraryPoi_16px.RailYardSolid_16px]: "61823",
  [HdsIconlibraryPoi_16px.RampSolid_16px]: "61824",
  [HdsIconlibraryPoi_16px.ReligiousPlaceSolid_16px]: "61825",
  [HdsIconlibraryPoi_16px.ReligiousShintoJpnSolid_16px]: "61826",
  [HdsIconlibraryPoi_16px.ReligiousTempleBuddhistJpnSolid_16px]: "61827",
  [HdsIconlibraryPoi_16px.RestaurantSolid_16px]: "61828",
  [HdsIconlibraryPoi_16px.SeaportHarborSolid_16px]: "61829",
  [HdsIconlibraryPoi_16px.ShoesSolid_16px]: "61830",
  [HdsIconlibraryPoi_16px.ShoppingSolid_16px]: "61831",
  [HdsIconlibraryPoi_16px.ShrineGenericSolid_16px]: "61832",
  [HdsIconlibraryPoi_16px.SkiRunSolid_16px]: "61833",
  [HdsIconlibraryPoi_16px.SkywalkSolid_16px]: "61834",
  [HdsIconlibraryPoi_16px.StadiumSolid_16px]: "61835",
  [HdsIconlibraryPoi_16px.StairsSolid_16px]: "61836",
  [HdsIconlibraryPoi_16px.SweetsSolid_16px]: "61837",
  [HdsIconlibraryPoi_16px.SwimmingSolid_16px]: "61838",
  [HdsIconlibraryPoi_16px.SynagogueOutline_16px]: "61839",
  [HdsIconlibraryPoi_16px.SynagogueSolid_16px]: "61840",
  [HdsIconlibraryPoi_16px.TaxiSolid_16px]: "61841",
  [HdsIconlibraryPoi_16px.TheaterSolid_16px]: "61842",
  [HdsIconlibraryPoi_16px.TollBoothSolid_16px]: "61843",
  [HdsIconlibraryPoi_16px.TouristInformationSolid_16px]: "61844",
  [HdsIconlibraryPoi_16px.TrainSolid_16px]: "61845",
  [HdsIconlibraryPoi_16px.TransportShinkansenJpnSolid_16px]: "61846",
  [HdsIconlibraryPoi_16px.TravelAgentTicketingSolid_16px]: "61847",
  [HdsIconlibraryPoi_16px.TruckDealershipSolid_16px]: "61848",
  [HdsIconlibraryPoi_16px.TruckParkingSolid_16px]: "61849",
  [HdsIconlibraryPoi_16px.TruckRepairSolid_16px]: "61850",
  [HdsIconlibraryPoi_16px.TruckStopPlazaSolid_16px]: "61851",
  [HdsIconlibraryPoi_16px.TruckWashSolid_16px]: "61852",
  [HdsIconlibraryPoi_16px.TunnelSolid_16px]: "61853",
  [HdsIconlibraryPoi_16px.WaterfallSolid_16px]: "61854",
  [HdsIconlibraryPoi_16px.WeighStationSolid_16px]: "61855",
  [HdsIconlibraryPoi_16px.ZooSolid_16px]: "61856"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-social-16px.js
var HdsIconlibrarySocial_16px;
(function(HdsIconlibrarySocial_16px2) {
  HdsIconlibrarySocial_16px2["CameraSolid_16px"] = "camera_solid_16px";
  HdsIconlibrarySocial_16px2["ChatOutline_16px"] = "chat_outline_16px";
  HdsIconlibrarySocial_16px2["ChatSolid_16px"] = "chat_solid_16px";
  HdsIconlibrarySocial_16px2["EditImageSolid_16px"] = "edit-image_solid_16px";
  HdsIconlibrarySocial_16px2["HeartSolid_16px"] = "heart_solid_16px";
  HdsIconlibrarySocial_16px2["LiveSolid_16px"] = "live_solid_16px";
  HdsIconlibrarySocial_16px2["MailSolid_16px"] = "mail_solid_16px";
  HdsIconlibrarySocial_16px2["MaskingSolid_16px"] = "masking_solid_16px";
  HdsIconlibrarySocial_16px2["StarSolid_16px"] = "star_solid_16px";
  HdsIconlibrarySocial_16px2["StarEmptySolid_16px"] = "star-empty_solid_16px";
  HdsIconlibrarySocial_16px2["TagHeartedSolid_16px"] = "tag-hearted_solid_16px";
  HdsIconlibrarySocial_16px2["TelephoneSolid_16px"] = "telephone_solid_16px";
  HdsIconlibrarySocial_16px2["ThumbsDownSolid_16px"] = "thumbs-down_solid_16px";
  HdsIconlibrarySocial_16px2["ThumbsUpSolid_16px"] = "thumbs-up_solid_16px";
})(HdsIconlibrarySocial_16px = HdsIconlibrarySocial_16px || (HdsIconlibrarySocial_16px = {}));
var HDS_ICONLIBRARY_SOCIAL_16PX_CODEPOINTS = {
  [HdsIconlibrarySocial_16px.CameraSolid_16px]: "61697",
  [HdsIconlibrarySocial_16px.ChatOutline_16px]: "61698",
  [HdsIconlibrarySocial_16px.ChatSolid_16px]: "61699",
  [HdsIconlibrarySocial_16px.EditImageSolid_16px]: "61700",
  [HdsIconlibrarySocial_16px.HeartSolid_16px]: "61701",
  [HdsIconlibrarySocial_16px.LiveSolid_16px]: "61702",
  [HdsIconlibrarySocial_16px.MailSolid_16px]: "61703",
  [HdsIconlibrarySocial_16px.MaskingSolid_16px]: "61704",
  [HdsIconlibrarySocial_16px.StarSolid_16px]: "61705",
  [HdsIconlibrarySocial_16px.StarEmptySolid_16px]: "61706",
  [HdsIconlibrarySocial_16px.TagHeartedSolid_16px]: "61707",
  [HdsIconlibrarySocial_16px.TelephoneSolid_16px]: "61708",
  [HdsIconlibrarySocial_16px.ThumbsDownSolid_16px]: "61709",
  [HdsIconlibrarySocial_16px.ThumbsUpSolid_16px]: "61710"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-stats-16px.js
var HdsIconlibraryStats_16px;
(function(HdsIconlibraryStats_16px2) {
  HdsIconlibraryStats_16px2["ActivitySolid_16px"] = "activity_solid_16px";
  HdsIconlibraryStats_16px2["BarChartSolid_16px"] = "bar-chart_solid_16px";
  HdsIconlibraryStats_16px2["DashboardSolid_16px"] = "dashboard_solid_16px";
  HdsIconlibraryStats_16px2["EastSolid_16px"] = "east_solid_16px";
  HdsIconlibraryStats_16px2["MarkerSolid_16px"] = "marker_solid_16px";
  HdsIconlibraryStats_16px2["NorthEastSolid_16px"] = "north-east_solid_16px";
  HdsIconlibraryStats_16px2["NorthWestSolid_16px"] = "north-west_solid_16px";
  HdsIconlibraryStats_16px2["PieChartSolid_16px"] = "pie-chart_solid_16px";
  HdsIconlibraryStats_16px2["SouthEastSolid_16px"] = "south-east_solid_16px";
  HdsIconlibraryStats_16px2["SouthWestSolid_16px"] = "south-west_solid_16px";
  HdsIconlibraryStats_16px2["StatisticsSolid_16px"] = "statistics_solid_16px";
  HdsIconlibraryStats_16px2["ValueSolid_16px"] = "value_solid_16px";
  HdsIconlibraryStats_16px2["ValueDecreaseSolid_16px"] = "value-decrease_solid_16px";
  HdsIconlibraryStats_16px2["ValueDecreaseHighSolid_16px"] = "value-decrease-high_solid_16px";
  HdsIconlibraryStats_16px2["ValueIncreaseSolid_16px"] = "value-increase_solid_16px";
  HdsIconlibraryStats_16px2["ValueIncreaseHighSolid_16px"] = "value-increase-high_solid_16px";
  HdsIconlibraryStats_16px2["WestSolid_16px"] = "west_solid_16px";
})(HdsIconlibraryStats_16px = HdsIconlibraryStats_16px || (HdsIconlibraryStats_16px = {}));
var HDS_ICONLIBRARY_STATS_16PX_CODEPOINTS = {
  [HdsIconlibraryStats_16px.ActivitySolid_16px]: "61697",
  [HdsIconlibraryStats_16px.BarChartSolid_16px]: "61698",
  [HdsIconlibraryStats_16px.DashboardSolid_16px]: "61699",
  [HdsIconlibraryStats_16px.EastSolid_16px]: "61700",
  [HdsIconlibraryStats_16px.MarkerSolid_16px]: "61701",
  [HdsIconlibraryStats_16px.NorthEastSolid_16px]: "61702",
  [HdsIconlibraryStats_16px.NorthWestSolid_16px]: "61703",
  [HdsIconlibraryStats_16px.PieChartSolid_16px]: "61704",
  [HdsIconlibraryStats_16px.SouthEastSolid_16px]: "61705",
  [HdsIconlibraryStats_16px.SouthWestSolid_16px]: "61706",
  [HdsIconlibraryStats_16px.StatisticsSolid_16px]: "61707",
  [HdsIconlibraryStats_16px.ValueSolid_16px]: "61708",
  [HdsIconlibraryStats_16px.ValueDecreaseSolid_16px]: "61709",
  [HdsIconlibraryStats_16px.ValueDecreaseHighSolid_16px]: "61710",
  [HdsIconlibraryStats_16px.ValueIncreaseSolid_16px]: "61711",
  [HdsIconlibraryStats_16px.ValueIncreaseHighSolid_16px]: "61712",
  [HdsIconlibraryStats_16px.WestSolid_16px]: "61713"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-third-party-logos-16px.js
var HdsIconlibraryThirdPartyLogos_16px;
(function(HdsIconlibraryThirdPartyLogos_16px2) {
  HdsIconlibraryThirdPartyLogos_16px2["i360Solid_16px"] = "360_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["AlexaSolid_16px"] = "alexa_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["AmexSolid_16px"] = "amex_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["DinersOutline_16px"] = "diners_outline_16px";
  HdsIconlibraryThirdPartyLogos_16px2["DinersSolid_16px"] = "diners_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["DiscoverOutline_16px"] = "discover_outline_16px";
  HdsIconlibraryThirdPartyLogos_16px2["DiscoverSolid_16px"] = "discover_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["FacebookSolid_16px"] = "facebook_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["FigmaSolid_16px"] = "figma_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["GithubSolid_16px"] = "github_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["GitlabSolid_16px"] = "gitlab_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["InstagramSolid_16px"] = "instagram_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["LinkedinSolid_16px"] = "linkedin_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["MastercardOutline_16px"] = "mastercard_outline_16px";
  HdsIconlibraryThirdPartyLogos_16px2["MastercardSolid_16px"] = "mastercard_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["RedditSolid_16px"] = "reddit_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["StorybookSolid_16px"] = "storybook_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["TwitterSolid_16px"] = "twitter_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["VisaOutline_16px"] = "visa_outline_16px";
  HdsIconlibraryThirdPartyLogos_16px2["VisaSolid_16px"] = "visa_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["What_3WordsOutline_16px"] = "what-3-words_outline_16px";
  HdsIconlibraryThirdPartyLogos_16px2["What_3WordsSolid_16px"] = "what-3-words_solid_16px";
  HdsIconlibraryThirdPartyLogos_16px2["YoutubeSolid_16px"] = "youtube_solid_16px";
})(HdsIconlibraryThirdPartyLogos_16px = HdsIconlibraryThirdPartyLogos_16px || (HdsIconlibraryThirdPartyLogos_16px = {}));
var HDS_ICONLIBRARY_THIRD_PARTY_LOGOS_16PX_CODEPOINTS = {
  [HdsIconlibraryThirdPartyLogos_16px.i360Solid_16px]: "61697",
  [HdsIconlibraryThirdPartyLogos_16px.AlexaSolid_16px]: "61698",
  [HdsIconlibraryThirdPartyLogos_16px.AmexSolid_16px]: "61699",
  [HdsIconlibraryThirdPartyLogos_16px.DinersOutline_16px]: "61700",
  [HdsIconlibraryThirdPartyLogos_16px.DinersSolid_16px]: "61701",
  [HdsIconlibraryThirdPartyLogos_16px.DiscoverOutline_16px]: "61702",
  [HdsIconlibraryThirdPartyLogos_16px.DiscoverSolid_16px]: "61703",
  [HdsIconlibraryThirdPartyLogos_16px.FacebookSolid_16px]: "61704",
  [HdsIconlibraryThirdPartyLogos_16px.FigmaSolid_16px]: "61705",
  [HdsIconlibraryThirdPartyLogos_16px.GithubSolid_16px]: "61706",
  [HdsIconlibraryThirdPartyLogos_16px.GitlabSolid_16px]: "61707",
  [HdsIconlibraryThirdPartyLogos_16px.InstagramSolid_16px]: "61708",
  [HdsIconlibraryThirdPartyLogos_16px.LinkedinSolid_16px]: "61709",
  [HdsIconlibraryThirdPartyLogos_16px.MastercardOutline_16px]: "61710",
  [HdsIconlibraryThirdPartyLogos_16px.MastercardSolid_16px]: "61711",
  [HdsIconlibraryThirdPartyLogos_16px.RedditSolid_16px]: "61712",
  [HdsIconlibraryThirdPartyLogos_16px.StorybookSolid_16px]: "61713",
  [HdsIconlibraryThirdPartyLogos_16px.TwitterSolid_16px]: "61714",
  [HdsIconlibraryThirdPartyLogos_16px.VisaOutline_16px]: "61715",
  [HdsIconlibraryThirdPartyLogos_16px.VisaSolid_16px]: "61716",
  [HdsIconlibraryThirdPartyLogos_16px.What_3WordsOutline_16px]: "61717",
  [HdsIconlibraryThirdPartyLogos_16px.What_3WordsSolid_16px]: "61718",
  [HdsIconlibraryThirdPartyLogos_16px.YoutubeSolid_16px]: "61719"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-tools-16px.js
var HdsIconlibraryTools_16px;
(function(HdsIconlibraryTools_16px2) {
  HdsIconlibraryTools_16px2["AddCamSolid_16px"] = "add-cam_solid_16px";
  HdsIconlibraryTools_16px2["AddMapMarkerOutline_16px"] = "add-map-marker_outline_16px";
  HdsIconlibraryTools_16px2["AddMapMarkerSolid_16px"] = "add-map-marker_solid_16px";
  HdsIconlibraryTools_16px2["AddPlaceSolid_16px"] = "add-place_solid_16px";
  HdsIconlibraryTools_16px2["AddRoadSolid_16px"] = "add-road_solid_16px";
  HdsIconlibraryTools_16px2["AddRoadSignSolid_16px"] = "add-road-sign_solid_16px";
  HdsIconlibraryTools_16px2["AddShapeSolid_16px"] = "add-shape_solid_16px";
  HdsIconlibraryTools_16px2["BrushSelectionSolid_16px"] = "brush-selection_solid_16px";
  HdsIconlibraryTools_16px2["CenterLineSolid_16px"] = "center-line_solid_16px";
  HdsIconlibraryTools_16px2["ColorPaletteSolid_16px"] = "color-palette_solid_16px";
  HdsIconlibraryTools_16px2["CompassBSolid_16px"] = "compass-b_solid_16px";
  HdsIconlibraryTools_16px2["ConnectorSolid_16px"] = "connector_solid_16px";
  HdsIconlibraryTools_16px2["CursorArrowSolid_16px"] = "cursor-arrow_solid_16px";
  HdsIconlibraryTools_16px2["CursorPointerSolid_16px"] = "cursor-pointer_solid_16px";
  HdsIconlibraryTools_16px2["CursorSelectorSolid_16px"] = "cursor-selector_solid_16px";
  HdsIconlibraryTools_16px2["DisconnectedSolid_16px"] = "disconnected_solid_16px";
  HdsIconlibraryTools_16px2["EditCurvesSolid_16px"] = "edit-curves_solid_16px";
  HdsIconlibraryTools_16px2["FinetuneSolid_16px"] = "finetune_solid_16px";
  HdsIconlibraryTools_16px2["FontSolid_16px"] = "font_solid_16px";
  HdsIconlibraryTools_16px2["GuidesSolid_16px"] = "guides_solid_16px";
  HdsIconlibraryTools_16px2["JoinBevelSolid_16px"] = "join-bevel_solid_16px";
  HdsIconlibraryTools_16px2["JoinMiterSolid_16px"] = "join-miter_solid_16px";
  HdsIconlibraryTools_16px2["JoinRoundSolid_16px"] = "join-round_solid_16px";
  HdsIconlibraryTools_16px2["LineDashedSolid_16px"] = "line-dashed_solid_16px";
  HdsIconlibraryTools_16px2["LineSolidSolid_16px"] = "line-solid_solid_16px";
  HdsIconlibraryTools_16px2["LineVariousSolid_16px"] = "line-various_solid_16px";
  HdsIconlibraryTools_16px2["MapPlannerSolid_16px"] = "map-planner_solid_16px";
  HdsIconlibraryTools_16px2["MergeSolid_16px"] = "merge_solid_16px";
  HdsIconlibraryTools_16px2["NumbersSolid_16px"] = "numbers_solid_16px";
  HdsIconlibraryTools_16px2["OutlineSolid_16px"] = "outline_solid_16px";
  HdsIconlibraryTools_16px2["OutlinePlusSolid_16px"] = "outline-plus_solid_16px";
  HdsIconlibraryTools_16px2["PathSolid_16px"] = "path_solid_16px";
  HdsIconlibraryTools_16px2["PickerSolid_16px"] = "picker_solid_16px";
  HdsIconlibraryTools_16px2["PolygonSolid_16px"] = "polygon_solid_16px";
  HdsIconlibraryTools_16px2["PolylineSolid_16px"] = "polyline_solid_16px";
  HdsIconlibraryTools_16px2["RoadSolid_16px"] = "road_solid_16px";
  HdsIconlibraryTools_16px2["SelectorFreeformSolid_16px"] = "selector-freeform_solid_16px";
  HdsIconlibraryTools_16px2["SelectorPointerSolid_16px"] = "selector-pointer_solid_16px";
  HdsIconlibraryTools_16px2["SelectorPolygonSolid_16px"] = "selector-polygon_solid_16px";
  HdsIconlibraryTools_16px2["ShapeSolid_16px"] = "shape_solid_16px";
  HdsIconlibraryTools_16px2["SkipPointSolid_16px"] = "skip-point_solid_16px";
  HdsIconlibraryTools_16px2["SplitObjectSolid_16px"] = "split-object_solid_16px";
  HdsIconlibraryTools_16px2["TextSolid_16px"] = "text_solid_16px";
  HdsIconlibraryTools_16px2["TiePointSolid_16px"] = "tie-point_solid_16px";
  HdsIconlibraryTools_16px2["TunerSolid_16px"] = "tuner_solid_16px";
  HdsIconlibraryTools_16px2["VectorPointSolid_16px"] = "vector-point_solid_16px";
  HdsIconlibraryTools_16px2["WrenchSolid_16px"] = "wrench_solid_16px";
})(HdsIconlibraryTools_16px = HdsIconlibraryTools_16px || (HdsIconlibraryTools_16px = {}));
var HDS_ICONLIBRARY_TOOLS_16PX_CODEPOINTS = {
  [HdsIconlibraryTools_16px.AddCamSolid_16px]: "61697",
  [HdsIconlibraryTools_16px.AddMapMarkerOutline_16px]: "61698",
  [HdsIconlibraryTools_16px.AddMapMarkerSolid_16px]: "61699",
  [HdsIconlibraryTools_16px.AddPlaceSolid_16px]: "61700",
  [HdsIconlibraryTools_16px.AddRoadSolid_16px]: "61701",
  [HdsIconlibraryTools_16px.AddRoadSignSolid_16px]: "61702",
  [HdsIconlibraryTools_16px.AddShapeSolid_16px]: "61703",
  [HdsIconlibraryTools_16px.BrushSelectionSolid_16px]: "61704",
  [HdsIconlibraryTools_16px.CenterLineSolid_16px]: "61705",
  [HdsIconlibraryTools_16px.ColorPaletteSolid_16px]: "61706",
  [HdsIconlibraryTools_16px.CompassBSolid_16px]: "61707",
  [HdsIconlibraryTools_16px.ConnectorSolid_16px]: "61708",
  [HdsIconlibraryTools_16px.CursorArrowSolid_16px]: "61709",
  [HdsIconlibraryTools_16px.CursorPointerSolid_16px]: "61710",
  [HdsIconlibraryTools_16px.CursorSelectorSolid_16px]: "61711",
  [HdsIconlibraryTools_16px.DisconnectedSolid_16px]: "61712",
  [HdsIconlibraryTools_16px.EditCurvesSolid_16px]: "61713",
  [HdsIconlibraryTools_16px.FinetuneSolid_16px]: "61714",
  [HdsIconlibraryTools_16px.FontSolid_16px]: "61715",
  [HdsIconlibraryTools_16px.GuidesSolid_16px]: "61716",
  [HdsIconlibraryTools_16px.JoinBevelSolid_16px]: "61717",
  [HdsIconlibraryTools_16px.JoinMiterSolid_16px]: "61718",
  [HdsIconlibraryTools_16px.JoinRoundSolid_16px]: "61719",
  [HdsIconlibraryTools_16px.LineDashedSolid_16px]: "61720",
  [HdsIconlibraryTools_16px.LineSolidSolid_16px]: "61721",
  [HdsIconlibraryTools_16px.LineVariousSolid_16px]: "61722",
  [HdsIconlibraryTools_16px.MapPlannerSolid_16px]: "61723",
  [HdsIconlibraryTools_16px.MergeSolid_16px]: "61724",
  [HdsIconlibraryTools_16px.NumbersSolid_16px]: "61725",
  [HdsIconlibraryTools_16px.OutlineSolid_16px]: "61726",
  [HdsIconlibraryTools_16px.OutlinePlusSolid_16px]: "61727",
  [HdsIconlibraryTools_16px.PathSolid_16px]: "61728",
  [HdsIconlibraryTools_16px.PickerSolid_16px]: "61729",
  [HdsIconlibraryTools_16px.PolygonSolid_16px]: "61730",
  [HdsIconlibraryTools_16px.PolylineSolid_16px]: "61731",
  [HdsIconlibraryTools_16px.RoadSolid_16px]: "61732",
  [HdsIconlibraryTools_16px.SelectorFreeformSolid_16px]: "61733",
  [HdsIconlibraryTools_16px.SelectorPointerSolid_16px]: "61734",
  [HdsIconlibraryTools_16px.SelectorPolygonSolid_16px]: "61735",
  [HdsIconlibraryTools_16px.ShapeSolid_16px]: "61736",
  [HdsIconlibraryTools_16px.SkipPointSolid_16px]: "61737",
  [HdsIconlibraryTools_16px.SplitObjectSolid_16px]: "61738",
  [HdsIconlibraryTools_16px.TextSolid_16px]: "61739",
  [HdsIconlibraryTools_16px.TiePointSolid_16px]: "61740",
  [HdsIconlibraryTools_16px.TunerSolid_16px]: "61741",
  [HdsIconlibraryTools_16px.VectorPointSolid_16px]: "61742",
  [HdsIconlibraryTools_16px.WrenchSolid_16px]: "61743"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-travel-transport-tracking-16px.js
var HdsIconlibraryTravelTransportTracking_16px;
(function(HdsIconlibraryTravelTransportTracking_16px2) {
  HdsIconlibraryTravelTransportTracking_16px2["AccidentCarSolid_16px"] = "accident-car_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["AirportSolid_16px"] = "airport_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["AmbulanceOutline_16px"] = "ambulance_outline_16px";
  HdsIconlibraryTravelTransportTracking_16px2["AmbulanceSolid_16px"] = "ambulance_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["ArrivalAirportSolid_16px"] = "arrival-airport_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["AttentionSolid_16px"] = "attention_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["AutoCaravanSolid_16px"] = "auto-caravan_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["AutoTrailerSolid_16px"] = "auto-trailer_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["BeamLightSolid_16px"] = "beam-light_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["BicycleSolid_16px"] = "bicycle_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["BicyclePaceSolid_16px"] = "bicycle-pace_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["BoatTrailerSolid_16px"] = "boat-trailer_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["BumpsSolid_16px"] = "bumps_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["BusSolid_16px"] = "bus_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["BusRapidSolid_16px"] = "bus-rapid_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["CableWaySolid_16px"] = "cable-way_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["CarFuelAltSolid_16px"] = "car-fuel-alt_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["CarRentalSolid_16px"] = "car-rental_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["CarRigSolid_16px"] = "car-rig_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["CarWifiOffSolid_16px"] = "car-wifi-off_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["CarWifiOnSolid_16px"] = "car-wifi-on_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["CaravanSolid_16px"] = "caravan_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["ChargingSolid_16px"] = "charging_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["ClosureSolid_16px"] = "closure_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["CoachSolid_16px"] = "coach_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["DeliveryVanOutline_16px"] = "delivery-van_outline_16px";
  HdsIconlibraryTravelTransportTracking_16px2["DeliveryVanSolid_16px"] = "delivery-van_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["DepartureAirportSolid_16px"] = "departure-airport_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["DestinationSolid_16px"] = "destination_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["DiagonalSolid_16px"] = "diagonal_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["DirectionsSolid_16px"] = "directions_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["DisabledVehicleSolid_16px"] = "disabled-vehicle_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["DrivingSolid_16px"] = "driving_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["DrivingOffSolid_16px"] = "driving-off_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["DynamicRoutingSolid_16px"] = "dynamic-routing_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["EvRangeSolid_16px"] = "ev-range_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["FerrySolid_16px"] = "ferry_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["FerryOffSolid_16px"] = "ferry-off_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["FlightMonitorSolid_16px"] = "flight-monitor_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["FullContainerLoadSolid_16px"] = "full-container-load_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["FullTruckLoadSolid_16px"] = "full-truck-load_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["GeofenceOutline_16px"] = "geofence_outline_16px";
  HdsIconlibraryTravelTransportTracking_16px2["GeofenceSolid_16px"] = "geofence_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["HandsfreeDrivingSolid_16px"] = "handsfree-driving_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["HeadLightSolid_16px"] = "head-light_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["HeavyMachinerySolid_16px"] = "heavy-machinery_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["HeightSolid_16px"] = "height_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["HighwaysSolid_16px"] = "highways_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["InclinedSolid_16px"] = "inclined_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["JourneySolid_16px"] = "journey_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["LaneRestrictionSolid_16px"] = "lane-restriction_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["LessContainerLoadSolid_16px"] = "less-container-load_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["LessTruckLoadSolid_16px"] = "less-truck-load_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["LightRailSolid_16px"] = "light-rail_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["LightrailSolid_16px"] = "lightrail_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["LocationTrackingOutline_16px"] = "location-tracking_outline_16px";
  HdsIconlibraryTravelTransportTracking_16px2["LocationTrackingSolid_16px"] = "location-tracking_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["MassTransitSolid_16px"] = "mass-transit_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["MaxHeightSolid_16px"] = "max-height_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["MaxWidthSolid_16px"] = "max-width_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["MetroSolid_16px"] = "metro_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["MonorailSolid_16px"] = "monorail_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["MotorcycleSolid_16px"] = "motorcycle_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["MotorhomeSolid_16px"] = "motorhome_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["MotorscooterSolid_16px"] = "motorscooter_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["MultimodalSolid_16px"] = "multimodal_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["NavigationSolid_16px"] = "navigation_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["NoContainerLoadSolid_16px"] = "no-container-load_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["NoTruckLoadSolid_16px"] = "no-truck-load_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlannedTourSolid_16px"] = "planned-tour_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeASolid_16px"] = "plug-type-a_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeBNema_14_50Solid_16px"] = "plug-type-b-nema-14-50_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeBNema_5_15Solid_16px"] = "plug-type-b-nema-5-15_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeCSolid_16px"] = "plug-type-c_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeChademoSolid_16px"] = "plug-type-chademo_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeESolid_16px"] = "plug-type-e_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeFSolid_16px"] = "plug-type-f_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeGSolid_16px"] = "plug-type-g_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeISolid_16px"] = "plug-type-I_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeIndustrialSolid_16px"] = "plug-type-industrial_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeJSolid_16px"] = "plug-type-j_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeJ1772Solid_16px"] = "plug-type-j1772_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeJ1772ComboSolid_16px"] = "plug-type-j1772-combo_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeMarechalSolid_16px"] = "plug-type-marechal_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeMennekesSolid_16px"] = "plug-type-mennekes_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeMennekesComboSolid_16px"] = "plug-type-mennekes-combo_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["PlugTypeTeslaSolid_16px"] = "plug-type-tesla_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RailHighspeedSolid_16px"] = "rail-highspeed_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RailHighspeedOffSolid_16px"] = "rail-highspeed-off_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RailIntercitySolid_16px"] = "rail-intercity_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RailLocalSolid_16px"] = "rail-local_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RailRegionalSolid_16px"] = "rail-regional_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RedLightCameraSolid_16px"] = "red-light-camera_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RideHailingSolid_16px"] = "ride-hailing_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RideshareSolid_16px"] = "rideshare_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RoadClosureSolid_16px"] = "road-closure_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RoadHazardSolid_16px"] = "road-hazard_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RoadTollsSolid_16px"] = "road-tolls_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RoadTollsOffSolid_16px"] = "road-tolls-off_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RoadUnpavedSolid_16px"] = "road-unpaved_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RoadUnpavedBicycleSolid_16px"] = "road-unpaved-bicycle_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RoadUnpavedMotorcycleSolid_16px"] = "road-unpaved-motorcycle_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RoadUnpavedOffSolid_16px"] = "road-unpaved-off_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RoadsideJpSolid_16px"] = "Roadside-jp_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RoadworksSolid_16px"] = "roadworks_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RouteSolid_16px"] = "route_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["RunnerPaceSolid_16px"] = "runner-pace_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["SchoolZoneUsSolid_16px"] = "school-zone-us_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["ScooterSolid_16px"] = "scooter_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["SecurityCameraSolid_16px"] = "security-camera_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["SemiTrailerSolid_16px"] = "semi-trailer_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["ServiceDeskSolid_16px"] = "service-desk_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["ShipmentSolid_16px"] = "shipment_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["SpeedCameraSolid_16px"] = "speed-camera_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["SpeedLimitSolid_16px"] = "speed-limit_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["SpeedZoneOutline_16px"] = "speed-zone_outline_16px";
  HdsIconlibraryTravelTransportTracking_16px2["SpeedalertSolid_16px"] = "speedalert_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["SpeedalertOffSolid_16px"] = "speedalert-off_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TaxiSolid_16px"] = "taxi_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TaxiOffSolid_16px"] = "taxi-off_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TicketSolid_16px"] = "ticket_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TourSolid_16px"] = "tour_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TrackerSolid_16px"] = "tracker_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TrafficSolid_16px"] = "traffic_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TrafficLightsOutline_16px"] = "traffic-lights_outline_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TrafficLightsSolid_16px"] = "traffic-lights_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TrafficOffSolid_16px"] = "traffic-off_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TrailerSolid_16px"] = "trailer_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TrainSolid_16px"] = "train_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TramSolid_16px"] = "tram_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TruckSolid_16px"] = "truck_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["TruckAxleSolid_16px"] = "truck-axle_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["UnpavedRoadPedestrianSolid_16px"] = "unpaved-road-pedestrian_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["UnpavedRoadTruckSolid_16px"] = "unpaved-road-truck_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["WaitPedestrianSolid_16px"] = "wait-pedestrian_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["WalkingSolid_16px"] = "walking_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["WalkingOffSolid_16px"] = "walking-off_solid_16px";
  HdsIconlibraryTravelTransportTracking_16px2["WidthSolid_16px"] = "width_solid_16px";
})(HdsIconlibraryTravelTransportTracking_16px = HdsIconlibraryTravelTransportTracking_16px || (HdsIconlibraryTravelTransportTracking_16px = {}));
var HDS_ICONLIBRARY_TRAVEL_TRANSPORT_TRACKING_16PX_CODEPOINTS = {
  [HdsIconlibraryTravelTransportTracking_16px.AccidentCarSolid_16px]: "61697",
  [HdsIconlibraryTravelTransportTracking_16px.AirportSolid_16px]: "61698",
  [HdsIconlibraryTravelTransportTracking_16px.AmbulanceOutline_16px]: "61699",
  [HdsIconlibraryTravelTransportTracking_16px.AmbulanceSolid_16px]: "61700",
  [HdsIconlibraryTravelTransportTracking_16px.ArrivalAirportSolid_16px]: "61701",
  [HdsIconlibraryTravelTransportTracking_16px.AttentionSolid_16px]: "61702",
  [HdsIconlibraryTravelTransportTracking_16px.AutoCaravanSolid_16px]: "61703",
  [HdsIconlibraryTravelTransportTracking_16px.AutoTrailerSolid_16px]: "61704",
  [HdsIconlibraryTravelTransportTracking_16px.BeamLightSolid_16px]: "61705",
  [HdsIconlibraryTravelTransportTracking_16px.BicycleSolid_16px]: "61706",
  [HdsIconlibraryTravelTransportTracking_16px.BicyclePaceSolid_16px]: "61707",
  [HdsIconlibraryTravelTransportTracking_16px.BoatTrailerSolid_16px]: "61708",
  [HdsIconlibraryTravelTransportTracking_16px.BumpsSolid_16px]: "61709",
  [HdsIconlibraryTravelTransportTracking_16px.BusSolid_16px]: "61710",
  [HdsIconlibraryTravelTransportTracking_16px.BusRapidSolid_16px]: "61711",
  [HdsIconlibraryTravelTransportTracking_16px.CableWaySolid_16px]: "61712",
  [HdsIconlibraryTravelTransportTracking_16px.CarFuelAltSolid_16px]: "61713",
  [HdsIconlibraryTravelTransportTracking_16px.CarRentalSolid_16px]: "61714",
  [HdsIconlibraryTravelTransportTracking_16px.CarRigSolid_16px]: "61715",
  [HdsIconlibraryTravelTransportTracking_16px.CarWifiOffSolid_16px]: "61716",
  [HdsIconlibraryTravelTransportTracking_16px.CarWifiOnSolid_16px]: "61717",
  [HdsIconlibraryTravelTransportTracking_16px.CaravanSolid_16px]: "61718",
  [HdsIconlibraryTravelTransportTracking_16px.ChargingSolid_16px]: "61719",
  [HdsIconlibraryTravelTransportTracking_16px.ClosureSolid_16px]: "61720",
  [HdsIconlibraryTravelTransportTracking_16px.CoachSolid_16px]: "61721",
  [HdsIconlibraryTravelTransportTracking_16px.DeliveryVanOutline_16px]: "61722",
  [HdsIconlibraryTravelTransportTracking_16px.DeliveryVanSolid_16px]: "61723",
  [HdsIconlibraryTravelTransportTracking_16px.DepartureAirportSolid_16px]: "61724",
  [HdsIconlibraryTravelTransportTracking_16px.DestinationSolid_16px]: "61725",
  [HdsIconlibraryTravelTransportTracking_16px.DiagonalSolid_16px]: "61726",
  [HdsIconlibraryTravelTransportTracking_16px.DirectionsSolid_16px]: "61727",
  [HdsIconlibraryTravelTransportTracking_16px.DisabledVehicleSolid_16px]: "61728",
  [HdsIconlibraryTravelTransportTracking_16px.DrivingSolid_16px]: "61729",
  [HdsIconlibraryTravelTransportTracking_16px.DrivingOffSolid_16px]: "61730",
  [HdsIconlibraryTravelTransportTracking_16px.DynamicRoutingSolid_16px]: "61731",
  [HdsIconlibraryTravelTransportTracking_16px.EvRangeSolid_16px]: "61732",
  [HdsIconlibraryTravelTransportTracking_16px.FerrySolid_16px]: "61733",
  [HdsIconlibraryTravelTransportTracking_16px.FerryOffSolid_16px]: "61734",
  [HdsIconlibraryTravelTransportTracking_16px.FlightMonitorSolid_16px]: "61735",
  [HdsIconlibraryTravelTransportTracking_16px.FullContainerLoadSolid_16px]: "61736",
  [HdsIconlibraryTravelTransportTracking_16px.FullTruckLoadSolid_16px]: "61737",
  [HdsIconlibraryTravelTransportTracking_16px.GeofenceOutline_16px]: "61738",
  [HdsIconlibraryTravelTransportTracking_16px.GeofenceSolid_16px]: "61739",
  [HdsIconlibraryTravelTransportTracking_16px.HandsfreeDrivingSolid_16px]: "61740",
  [HdsIconlibraryTravelTransportTracking_16px.HeadLightSolid_16px]: "61741",
  [HdsIconlibraryTravelTransportTracking_16px.HeavyMachinerySolid_16px]: "61742",
  [HdsIconlibraryTravelTransportTracking_16px.HeightSolid_16px]: "61743",
  [HdsIconlibraryTravelTransportTracking_16px.HighwaysSolid_16px]: "61744",
  [HdsIconlibraryTravelTransportTracking_16px.InclinedSolid_16px]: "61745",
  [HdsIconlibraryTravelTransportTracking_16px.JourneySolid_16px]: "61746",
  [HdsIconlibraryTravelTransportTracking_16px.LaneRestrictionSolid_16px]: "61747",
  [HdsIconlibraryTravelTransportTracking_16px.LessContainerLoadSolid_16px]: "61748",
  [HdsIconlibraryTravelTransportTracking_16px.LessTruckLoadSolid_16px]: "61749",
  [HdsIconlibraryTravelTransportTracking_16px.LightRailSolid_16px]: "61750",
  [HdsIconlibraryTravelTransportTracking_16px.LightrailSolid_16px]: "61751",
  [HdsIconlibraryTravelTransportTracking_16px.LocationTrackingOutline_16px]: "61752",
  [HdsIconlibraryTravelTransportTracking_16px.LocationTrackingSolid_16px]: "61753",
  [HdsIconlibraryTravelTransportTracking_16px.MassTransitSolid_16px]: "61754",
  [HdsIconlibraryTravelTransportTracking_16px.MaxHeightSolid_16px]: "61755",
  [HdsIconlibraryTravelTransportTracking_16px.MaxWidthSolid_16px]: "61756",
  [HdsIconlibraryTravelTransportTracking_16px.MetroSolid_16px]: "61757",
  [HdsIconlibraryTravelTransportTracking_16px.MonorailSolid_16px]: "61758",
  [HdsIconlibraryTravelTransportTracking_16px.MotorcycleSolid_16px]: "61759",
  [HdsIconlibraryTravelTransportTracking_16px.MotorhomeSolid_16px]: "61760",
  [HdsIconlibraryTravelTransportTracking_16px.MotorscooterSolid_16px]: "61761",
  [HdsIconlibraryTravelTransportTracking_16px.MultimodalSolid_16px]: "61762",
  [HdsIconlibraryTravelTransportTracking_16px.NavigationSolid_16px]: "61763",
  [HdsIconlibraryTravelTransportTracking_16px.NoContainerLoadSolid_16px]: "61764",
  [HdsIconlibraryTravelTransportTracking_16px.NoTruckLoadSolid_16px]: "61765",
  [HdsIconlibraryTravelTransportTracking_16px.PlannedTourSolid_16px]: "61766",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeASolid_16px]: "61767",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeBNema_14_50Solid_16px]: "61768",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeBNema_5_15Solid_16px]: "61769",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeCSolid_16px]: "61770",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeChademoSolid_16px]: "61771",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeESolid_16px]: "61772",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeFSolid_16px]: "61773",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeGSolid_16px]: "61774",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeISolid_16px]: "61775",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeIndustrialSolid_16px]: "61776",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeJSolid_16px]: "61777",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeJ1772Solid_16px]: "61778",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeJ1772ComboSolid_16px]: "61779",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeMarechalSolid_16px]: "61780",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeMennekesSolid_16px]: "61781",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeMennekesComboSolid_16px]: "61782",
  [HdsIconlibraryTravelTransportTracking_16px.PlugTypeTeslaSolid_16px]: "61783",
  [HdsIconlibraryTravelTransportTracking_16px.RailHighspeedSolid_16px]: "61784",
  [HdsIconlibraryTravelTransportTracking_16px.RailHighspeedOffSolid_16px]: "61785",
  [HdsIconlibraryTravelTransportTracking_16px.RailIntercitySolid_16px]: "61786",
  [HdsIconlibraryTravelTransportTracking_16px.RailLocalSolid_16px]: "61787",
  [HdsIconlibraryTravelTransportTracking_16px.RailRegionalSolid_16px]: "61788",
  [HdsIconlibraryTravelTransportTracking_16px.RedLightCameraSolid_16px]: "61789",
  [HdsIconlibraryTravelTransportTracking_16px.RideHailingSolid_16px]: "61790",
  [HdsIconlibraryTravelTransportTracking_16px.RideshareSolid_16px]: "61791",
  [HdsIconlibraryTravelTransportTracking_16px.RoadClosureSolid_16px]: "61792",
  [HdsIconlibraryTravelTransportTracking_16px.RoadHazardSolid_16px]: "61793",
  [HdsIconlibraryTravelTransportTracking_16px.RoadTollsSolid_16px]: "61794",
  [HdsIconlibraryTravelTransportTracking_16px.RoadTollsOffSolid_16px]: "61795",
  [HdsIconlibraryTravelTransportTracking_16px.RoadUnpavedSolid_16px]: "61796",
  [HdsIconlibraryTravelTransportTracking_16px.RoadUnpavedBicycleSolid_16px]: "61797",
  [HdsIconlibraryTravelTransportTracking_16px.RoadUnpavedMotorcycleSolid_16px]: "61798",
  [HdsIconlibraryTravelTransportTracking_16px.RoadUnpavedOffSolid_16px]: "61799",
  [HdsIconlibraryTravelTransportTracking_16px.RoadsideJpSolid_16px]: "61800",
  [HdsIconlibraryTravelTransportTracking_16px.RoadworksSolid_16px]: "61801",
  [HdsIconlibraryTravelTransportTracking_16px.RouteSolid_16px]: "61802",
  [HdsIconlibraryTravelTransportTracking_16px.RunnerPaceSolid_16px]: "61803",
  [HdsIconlibraryTravelTransportTracking_16px.SchoolZoneUsSolid_16px]: "61804",
  [HdsIconlibraryTravelTransportTracking_16px.ScooterSolid_16px]: "61805",
  [HdsIconlibraryTravelTransportTracking_16px.SecurityCameraSolid_16px]: "61806",
  [HdsIconlibraryTravelTransportTracking_16px.SemiTrailerSolid_16px]: "61807",
  [HdsIconlibraryTravelTransportTracking_16px.ServiceDeskSolid_16px]: "61808",
  [HdsIconlibraryTravelTransportTracking_16px.ShipmentSolid_16px]: "61809",
  [HdsIconlibraryTravelTransportTracking_16px.SpeedCameraSolid_16px]: "61810",
  [HdsIconlibraryTravelTransportTracking_16px.SpeedLimitSolid_16px]: "61811",
  [HdsIconlibraryTravelTransportTracking_16px.SpeedZoneOutline_16px]: "61812",
  [HdsIconlibraryTravelTransportTracking_16px.SpeedalertSolid_16px]: "61813",
  [HdsIconlibraryTravelTransportTracking_16px.SpeedalertOffSolid_16px]: "61814",
  [HdsIconlibraryTravelTransportTracking_16px.TaxiSolid_16px]: "61815",
  [HdsIconlibraryTravelTransportTracking_16px.TaxiOffSolid_16px]: "61816",
  [HdsIconlibraryTravelTransportTracking_16px.TicketSolid_16px]: "61817",
  [HdsIconlibraryTravelTransportTracking_16px.TourSolid_16px]: "61818",
  [HdsIconlibraryTravelTransportTracking_16px.TrackerSolid_16px]: "61819",
  [HdsIconlibraryTravelTransportTracking_16px.TrafficSolid_16px]: "61820",
  [HdsIconlibraryTravelTransportTracking_16px.TrafficLightsOutline_16px]: "61821",
  [HdsIconlibraryTravelTransportTracking_16px.TrafficLightsSolid_16px]: "61822",
  [HdsIconlibraryTravelTransportTracking_16px.TrafficOffSolid_16px]: "61823",
  [HdsIconlibraryTravelTransportTracking_16px.TrailerSolid_16px]: "61824",
  [HdsIconlibraryTravelTransportTracking_16px.TrainSolid_16px]: "61825",
  [HdsIconlibraryTravelTransportTracking_16px.TramSolid_16px]: "61826",
  [HdsIconlibraryTravelTransportTracking_16px.TruckSolid_16px]: "61827",
  [HdsIconlibraryTravelTransportTracking_16px.TruckAxleSolid_16px]: "61828",
  [HdsIconlibraryTravelTransportTracking_16px.UnpavedRoadPedestrianSolid_16px]: "61829",
  [HdsIconlibraryTravelTransportTracking_16px.UnpavedRoadTruckSolid_16px]: "61830",
  [HdsIconlibraryTravelTransportTracking_16px.WaitPedestrianSolid_16px]: "61831",
  [HdsIconlibraryTravelTransportTracking_16px.WalkingSolid_16px]: "61832",
  [HdsIconlibraryTravelTransportTracking_16px.WalkingOffSolid_16px]: "61833",
  [HdsIconlibraryTravelTransportTracking_16px.WidthSolid_16px]: "61834"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-weather-16px.js
var HdsIconlibraryWeather_16px;
(function(HdsIconlibraryWeather_16px2) {
  HdsIconlibraryWeather_16px2["ClearNightSolid_16px"] = "clear-night_solid_16px";
  HdsIconlibraryWeather_16px2["CloudyDaySolid_16px"] = "cloudy-day_solid_16px";
  HdsIconlibraryWeather_16px2["CloudyNightSolid_16px"] = "cloudy-night_solid_16px";
  HdsIconlibraryWeather_16px2["FloodSolid_16px"] = "flood_solid_16px";
  HdsIconlibraryWeather_16px2["FogSolid_16px"] = "fog_solid_16px";
  HdsIconlibraryWeather_16px2["HurricaneSolid_16px"] = "hurricane_solid_16px";
  HdsIconlibraryWeather_16px2["OvercastSolid_16px"] = "overcast_solid_16px";
  HdsIconlibraryWeather_16px2["RainSolid_16px"] = "rain_solid_16px";
  HdsIconlibraryWeather_16px2["RainFreezingSolid_16px"] = "rain-freezing_solid_16px";
  HdsIconlibraryWeather_16px2["RainSnowSolid_16px"] = "rain-snow_solid_16px";
  HdsIconlibraryWeather_16px2["ShowerDaySolid_16px"] = "shower-day_solid_16px";
  HdsIconlibraryWeather_16px2["ShowerNightSolid_16px"] = "shower-night_solid_16px";
  HdsIconlibraryWeather_16px2["SmogSolid_16px"] = "smog_solid_16px";
  HdsIconlibraryWeather_16px2["SnowfallSolid_16px"] = "snowfall_solid_16px";
  HdsIconlibraryWeather_16px2["StormSolid_16px"] = "storm_solid_16px";
  HdsIconlibraryWeather_16px2["StormyDaySolid_16px"] = "stormy-day_solid_16px";
  HdsIconlibraryWeather_16px2["StormyNightSolid_16px"] = "stormy-night_solid_16px";
  HdsIconlibraryWeather_16px2["WeatherClearDaySolid_16px"] = "weather-clear-day_solid_16px";
  HdsIconlibraryWeather_16px2["WindySolid_16px"] = "windy_solid_16px";
})(HdsIconlibraryWeather_16px = HdsIconlibraryWeather_16px || (HdsIconlibraryWeather_16px = {}));
var HDS_ICONLIBRARY_WEATHER_16PX_CODEPOINTS = {
  [HdsIconlibraryWeather_16px.ClearNightSolid_16px]: "61697",
  [HdsIconlibraryWeather_16px.CloudyDaySolid_16px]: "61698",
  [HdsIconlibraryWeather_16px.CloudyNightSolid_16px]: "61699",
  [HdsIconlibraryWeather_16px.FloodSolid_16px]: "61700",
  [HdsIconlibraryWeather_16px.FogSolid_16px]: "61701",
  [HdsIconlibraryWeather_16px.HurricaneSolid_16px]: "61702",
  [HdsIconlibraryWeather_16px.OvercastSolid_16px]: "61703",
  [HdsIconlibraryWeather_16px.RainSolid_16px]: "61704",
  [HdsIconlibraryWeather_16px.RainFreezingSolid_16px]: "61705",
  [HdsIconlibraryWeather_16px.RainSnowSolid_16px]: "61706",
  [HdsIconlibraryWeather_16px.ShowerDaySolid_16px]: "61707",
  [HdsIconlibraryWeather_16px.ShowerNightSolid_16px]: "61708",
  [HdsIconlibraryWeather_16px.SmogSolid_16px]: "61709",
  [HdsIconlibraryWeather_16px.SnowfallSolid_16px]: "61710",
  [HdsIconlibraryWeather_16px.StormSolid_16px]: "61711",
  [HdsIconlibraryWeather_16px.StormyDaySolid_16px]: "61712",
  [HdsIconlibraryWeather_16px.StormyNightSolid_16px]: "61713",
  [HdsIconlibraryWeather_16px.WeatherClearDaySolid_16px]: "61714",
  [HdsIconlibraryWeather_16px.WindySolid_16px]: "61715"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-core-ui-24px.js
var HdsIconlibraryCoreUi_24px;
(function(HdsIconlibraryCoreUi_24px2) {
  HdsIconlibraryCoreUi_24px2["AddOutline_24px"] = "add_outline_24px";
  HdsIconlibraryCoreUi_24px2["AddSolid_24px"] = "add_solid_24px";
  HdsIconlibraryCoreUi_24px2["AddUserOutline_24px"] = "add-user_outline_24px";
  HdsIconlibraryCoreUi_24px2["AddUserSolid_24px"] = "add-user_solid_24px";
  HdsIconlibraryCoreUi_24px2["AlertOutline_24px"] = "alert_outline_24px";
  HdsIconlibraryCoreUi_24px2["AlertSolid_24px"] = "alert_solid_24px";
  HdsIconlibraryCoreUi_24px2["ArrowDownOutline_24px"] = "arrow-down_outline_24px";
  HdsIconlibraryCoreUi_24px2["ArrowDownSolid_24px"] = "arrow-down_solid_24px";
  HdsIconlibraryCoreUi_24px2["ArrowDownLeftOutline_24px"] = "arrow-down-left_outline_24px";
  HdsIconlibraryCoreUi_24px2["ArrowDownLeftSolid_24px"] = "arrow-down-left_solid_24px";
  HdsIconlibraryCoreUi_24px2["ArrowDownRightOutline_24px"] = "arrow-down-right_outline_24px";
  HdsIconlibraryCoreUi_24px2["ArrowDownRightSolid_24px"] = "arrow-down-right_solid_24px";
  HdsIconlibraryCoreUi_24px2["ArrowLeftOutline_24px"] = "arrow-left_outline_24px";
  HdsIconlibraryCoreUi_24px2["ArrowLeftSolid_24px"] = "arrow-left_solid_24px";
  HdsIconlibraryCoreUi_24px2["ArrowRightOutline_24px"] = "arrow-right_outline_24px";
  HdsIconlibraryCoreUi_24px2["ArrowRightSolid_24px"] = "arrow-right_solid_24px";
  HdsIconlibraryCoreUi_24px2["ArrowUpOutline_24px"] = "arrow-up_outline_24px";
  HdsIconlibraryCoreUi_24px2["ArrowUpSolid_24px"] = "arrow-up_solid_24px";
  HdsIconlibraryCoreUi_24px2["ArrowUpLeftOutline_24px"] = "arrow-up-left_outline_24px";
  HdsIconlibraryCoreUi_24px2["ArrowUpLeftSolid_24px"] = "arrow-up-left_solid_24px";
  HdsIconlibraryCoreUi_24px2["ArrowUpRightOutline_24px"] = "arrow-up-right_outline_24px";
  HdsIconlibraryCoreUi_24px2["ArrowUpRightSolid_24px"] = "arrow-up-right_solid_24px";
  HdsIconlibraryCoreUi_24px2["AttentionOutline_24px"] = "attention_outline_24px";
  HdsIconlibraryCoreUi_24px2["AttentionSolid_24px"] = "attention_solid_24px";
  HdsIconlibraryCoreUi_24px2["BatteryChargingOutline_24px"] = "battery-charging_outline_24px";
  HdsIconlibraryCoreUi_24px2["BatteryChargingSolid_24px"] = "battery-charging_solid_24px";
  HdsIconlibraryCoreUi_24px2["BatteryEmptyOutline_24px"] = "battery-empty_outline_24px";
  HdsIconlibraryCoreUi_24px2["BatteryEmptySolid_24px"] = "battery-empty_solid_24px";
  HdsIconlibraryCoreUi_24px2["BatteryFullOutline_24px"] = "battery-full_outline_24px";
  HdsIconlibraryCoreUi_24px2["BatteryFullSolid_24px"] = "battery-full_solid_24px";
  HdsIconlibraryCoreUi_24px2["BatteryHalfOutline_24px"] = "battery-half_outline_24px";
  HdsIconlibraryCoreUi_24px2["BatteryHalfSolid_24px"] = "battery-half_solid_24px";
  HdsIconlibraryCoreUi_24px2["BatteryLowOutline_24px"] = "battery-low_outline_24px";
  HdsIconlibraryCoreUi_24px2["BatteryLowSolid_24px"] = "battery-low_solid_24px";
  HdsIconlibraryCoreUi_24px2["BluetoothOutline_24px"] = "bluetooth_outline_24px";
  HdsIconlibraryCoreUi_24px2["BluetoothSolid_24px"] = "bluetooth_solid_24px";
  HdsIconlibraryCoreUi_24px2["BluetoothOffOutline_24px"] = "bluetooth-off_outline_24px";
  HdsIconlibraryCoreUi_24px2["BluetoothOffSolid_24px"] = "bluetooth-off_solid_24px";
  HdsIconlibraryCoreUi_24px2["BookmarkOutline_24px"] = "bookmark_outline_24px";
  HdsIconlibraryCoreUi_24px2["BookmarkSolid_24px"] = "bookmark_solid_24px";
  HdsIconlibraryCoreUi_24px2["BookmarkAddOutline_24px"] = "bookmark-add_outline_24px";
  HdsIconlibraryCoreUi_24px2["BookmarkAddSolid_24px"] = "bookmark-add_solid_24px";
  HdsIconlibraryCoreUi_24px2["CheckmarkOutline_24px"] = "checkmark_outline_24px";
  HdsIconlibraryCoreUi_24px2["CheckmarkSolid_24px"] = "checkmark_solid_24px";
  HdsIconlibraryCoreUi_24px2["ChevronDownOutline_24px"] = "chevron-down_outline_24px";
  HdsIconlibraryCoreUi_24px2["ChevronDownSolid_24px"] = "chevron-down_solid_24px";
  HdsIconlibraryCoreUi_24px2["ChevronLeftOutline_24px"] = "chevron-left_outline_24px";
  HdsIconlibraryCoreUi_24px2["ChevronLeftSolid_24px"] = "chevron-left_solid_24px";
  HdsIconlibraryCoreUi_24px2["ChevronLeftDoubleOutline_24px"] = "chevron-left-double_outline_24px";
  HdsIconlibraryCoreUi_24px2["ChevronLeftDoubleSolid_24px"] = "chevron-left-double_solid_24px";
  HdsIconlibraryCoreUi_24px2["ChevronRightOutline_24px"] = "chevron-right_outline_24px";
  HdsIconlibraryCoreUi_24px2["ChevronRightSolid_24px"] = "chevron-right_solid_24px";
  HdsIconlibraryCoreUi_24px2["ChevronRightDoubleOutline_24px"] = "chevron-right-double_outline_24px";
  HdsIconlibraryCoreUi_24px2["ChevronRightDoubleSolid_24px"] = "chevron-right-double_solid_24px";
  HdsIconlibraryCoreUi_24px2["ChevronUpOutline_24px"] = "chevron-up_outline_24px";
  HdsIconlibraryCoreUi_24px2["ChevronUpSolid_24px"] = "chevron-up_solid_24px";
  HdsIconlibraryCoreUi_24px2["ChevronUpDownOutline_24px"] = "chevron-up-down_outline_24px";
  HdsIconlibraryCoreUi_24px2["ChevronUpDownSolid_24px"] = "chevron-up-down_solid_24px";
  HdsIconlibraryCoreUi_24px2["ClearOutline_24px"] = "clear_outline_24px";
  HdsIconlibraryCoreUi_24px2["ClearSolid_24px"] = "clear_solid_24px";
  HdsIconlibraryCoreUi_24px2["CollapseOutline_24px"] = "collapse_outline_24px";
  HdsIconlibraryCoreUi_24px2["CollapseSolid_24px"] = "collapse_solid_24px";
  HdsIconlibraryCoreUi_24px2["CommentOutline_24px"] = "comment_outline_24px";
  HdsIconlibraryCoreUi_24px2["CommentSolid_24px"] = "comment_solid_24px";
  HdsIconlibraryCoreUi_24px2["ConfirmOutline_24px"] = "confirm_outline_24px";
  HdsIconlibraryCoreUi_24px2["ConfirmSolid_24px"] = "confirm_solid_24px";
  HdsIconlibraryCoreUi_24px2["CrossOutline_24px"] = "cross_outline_24px";
  HdsIconlibraryCoreUi_24px2["CrossSolid_24px"] = "cross_solid_24px";
  HdsIconlibraryCoreUi_24px2["DeleteOutline_24px"] = "delete_outline_24px";
  HdsIconlibraryCoreUi_24px2["DeleteSolid_24px"] = "delete_solid_24px";
  HdsIconlibraryCoreUi_24px2["DetailsOutline_24px"] = "details_outline_24px";
  HdsIconlibraryCoreUi_24px2["DetailsSolid_24px"] = "details_solid_24px";
  HdsIconlibraryCoreUi_24px2["DragListOutline_24px"] = "drag-list_outline_24px";
  HdsIconlibraryCoreUi_24px2["DragListSolid_24px"] = "drag-list_solid_24px";
  HdsIconlibraryCoreUi_24px2["EditOutline_24px"] = "edit_outline_24px";
  HdsIconlibraryCoreUi_24px2["EditSolid_24px"] = "edit_solid_24px";
  HdsIconlibraryCoreUi_24px2["EditedOutline_24px"] = "edited_outline_24px";
  HdsIconlibraryCoreUi_24px2["EditedSolid_24px"] = "edited_solid_24px";
  HdsIconlibraryCoreUi_24px2["ExpandOutline_24px"] = "expand_outline_24px";
  HdsIconlibraryCoreUi_24px2["ExpandSolid_24px"] = "expand_solid_24px";
  HdsIconlibraryCoreUi_24px2["ExternalLinkOutline_24px"] = "external-link_outline_24px";
  HdsIconlibraryCoreUi_24px2["ExternalLinkSolid_24px"] = "external-link_solid_24px";
  HdsIconlibraryCoreUi_24px2["FallbackItemOutline_24px"] = "fallback-item_outline_24px";
  HdsIconlibraryCoreUi_24px2["FallbackItemSolid_24px"] = "fallback-item_solid_24px";
  HdsIconlibraryCoreUi_24px2["FolderClosedOutline_24px"] = "folder-closed_outline_24px";
  HdsIconlibraryCoreUi_24px2["FolderClosedSolid_24px"] = "folder-closed_solid_24px";
  HdsIconlibraryCoreUi_24px2["FolderOpenOutline_24px"] = "folder-open_outline_24px";
  HdsIconlibraryCoreUi_24px2["FolderOpenSolid_24px"] = "folder-open_solid_24px";
  HdsIconlibraryCoreUi_24px2["GpsOutline_24px"] = "gps_outline_24px";
  HdsIconlibraryCoreUi_24px2["GpsSolid_24px"] = "gps_solid_24px";
  HdsIconlibraryCoreUi_24px2["HelpOutline_24px"] = "help_outline_24px";
  HdsIconlibraryCoreUi_24px2["HelpSolid_24px"] = "help_solid_24px";
  HdsIconlibraryCoreUi_24px2["HereLogoOutline_24px"] = "HERE-logo_outline_24px";
  HdsIconlibraryCoreUi_24px2["HereLogoSolid_24px"] = "HERE-logo_solid_24px";
  HdsIconlibraryCoreUi_24px2["HideOutline_24px"] = "hide_outline_24px";
  HdsIconlibraryCoreUi_24px2["HideSolid_24px"] = "hide_solid_24px";
  HdsIconlibraryCoreUi_24px2["HideAltOutline_24px"] = "hide-alt_outline_24px";
  HdsIconlibraryCoreUi_24px2["HideAltSolid_24px"] = "hide-alt_solid_24px";
  HdsIconlibraryCoreUi_24px2["HideMenuOutline_24px"] = "hide-menu_outline_24px";
  HdsIconlibraryCoreUi_24px2["HideMenuSolid_24px"] = "hide-menu_solid_24px";
  HdsIconlibraryCoreUi_24px2["HistoryOutline_24px"] = "history_outline_24px";
  HdsIconlibraryCoreUi_24px2["HistorySolid_24px"] = "history_solid_24px";
  HdsIconlibraryCoreUi_24px2["InboxAttentionOutline_24px"] = "inbox-attention_outline_24px";
  HdsIconlibraryCoreUi_24px2["InboxAttentionSolid_24px"] = "inbox-attention_solid_24px";
  HdsIconlibraryCoreUi_24px2["InformationOutline_24px"] = "information_outline_24px";
  HdsIconlibraryCoreUi_24px2["InformationSolid_24px"] = "information_solid_24px";
  HdsIconlibraryCoreUi_24px2["InvalidOutline_24px"] = "invalid_outline_24px";
  HdsIconlibraryCoreUi_24px2["InvalidSolid_24px"] = "invalid_solid_24px";
  HdsIconlibraryCoreUi_24px2["LoadingOutline_24px"] = "loading_outline_24px";
  HdsIconlibraryCoreUi_24px2["LoadingSolid_24px"] = "loading_solid_24px";
  HdsIconlibraryCoreUi_24px2["LocationOffOutline_24px"] = "location-off_outline_24px";
  HdsIconlibraryCoreUi_24px2["LocationOffSolid_24px"] = "location-off_solid_24px";
  HdsIconlibraryCoreUi_24px2["LockOutline_24px"] = "lock_outline_24px";
  HdsIconlibraryCoreUi_24px2["LockSolid_24px"] = "lock_solid_24px";
  HdsIconlibraryCoreUi_24px2["LockBreakOutline_24px"] = "lock-break_outline_24px";
  HdsIconlibraryCoreUi_24px2["LockBreakSolid_24px"] = "lock-break_solid_24px";
  HdsIconlibraryCoreUi_24px2["MenuOutline_24px"] = "menu_outline_24px";
  HdsIconlibraryCoreUi_24px2["MenuSolid_24px"] = "menu_solid_24px";
  HdsIconlibraryCoreUi_24px2["MicrophoneOutline_24px"] = "microphone_outline_24px";
  HdsIconlibraryCoreUi_24px2["MicrophoneSolid_24px"] = "microphone_solid_24px";
  HdsIconlibraryCoreUi_24px2["MicrophoneOffOutline_24px"] = "microphone-off_outline_24px";
  HdsIconlibraryCoreUi_24px2["MicrophoneOffSolid_24px"] = "microphone-off_solid_24px";
  HdsIconlibraryCoreUi_24px2["MinusOutline_24px"] = "minus_outline_24px";
  HdsIconlibraryCoreUi_24px2["MinusSolid_24px"] = "minus_solid_24px";
  HdsIconlibraryCoreUi_24px2["NotificationsOutline_24px"] = "notifications_outline_24px";
  HdsIconlibraryCoreUi_24px2["NotificationsSolid_24px"] = "notifications_solid_24px";
  HdsIconlibraryCoreUi_24px2["OverflowHoriCenterOutline_24px"] = "overflow-hori-center_outline_24px";
  HdsIconlibraryCoreUi_24px2["OverflowHoriCenterSolid_24px"] = "overflow-hori-center_solid_24px";
  HdsIconlibraryCoreUi_24px2["OverflowVertCenterOutline_24px"] = "overflow-vert-center_outline_24px";
  HdsIconlibraryCoreUi_24px2["OverflowVertCenterSolid_24px"] = "overflow-vert-center_solid_24px";
  HdsIconlibraryCoreUi_24px2["OverflowVertRightOutline_24px"] = "overflow-vert-right_outline_24px";
  HdsIconlibraryCoreUi_24px2["OverflowVertRightSolid_24px"] = "overflow-vert-right_solid_24px";
  HdsIconlibraryCoreUi_24px2["PlusOutline_24px"] = "plus_outline_24px";
  HdsIconlibraryCoreUi_24px2["PlusSolid_24px"] = "plus_solid_24px";
  HdsIconlibraryCoreUi_24px2["ProfileOutline_24px"] = "profile_outline_24px";
  HdsIconlibraryCoreUi_24px2["ProfileSolid_24px"] = "profile_solid_24px";
  HdsIconlibraryCoreUi_24px2["QuestionMarkOutline_24px"] = "question-mark_outline_24px";
  HdsIconlibraryCoreUi_24px2["QuestionMarkSolid_24px"] = "question-mark_solid_24px";
  HdsIconlibraryCoreUi_24px2["RedoOutline_24px"] = "redo_outline_24px";
  HdsIconlibraryCoreUi_24px2["RedoSolid_24px"] = "redo_solid_24px";
  HdsIconlibraryCoreUi_24px2["RefreshOutline_24px"] = "refresh_outline_24px";
  HdsIconlibraryCoreUi_24px2["RefreshSolid_24px"] = "refresh_solid_24px";
  HdsIconlibraryCoreUi_24px2["ReportOutline_24px"] = "report_outline_24px";
  HdsIconlibraryCoreUi_24px2["ReportSolid_24px"] = "report_solid_24px";
  HdsIconlibraryCoreUi_24px2["ResetOutline_24px"] = "reset_outline_24px";
  HdsIconlibraryCoreUi_24px2["ResetSolid_24px"] = "reset_solid_24px";
  HdsIconlibraryCoreUi_24px2["SaveOutline_24px"] = "save_outline_24px";
  HdsIconlibraryCoreUi_24px2["SaveSolid_24px"] = "save_solid_24px";
  HdsIconlibraryCoreUi_24px2["SearchOutline_24px"] = "search_outline_24px";
  HdsIconlibraryCoreUi_24px2["SearchSolid_24px"] = "search_solid_24px";
  HdsIconlibraryCoreUi_24px2["SettingsOutline_24px"] = "settings_outline_24px";
  HdsIconlibraryCoreUi_24px2["SettingsSolid_24px"] = "settings_solid_24px";
  HdsIconlibraryCoreUi_24px2["ShowOutline_24px"] = "show_outline_24px";
  HdsIconlibraryCoreUi_24px2["ShowSolid_24px"] = "show_solid_24px";
  HdsIconlibraryCoreUi_24px2["ShowMenuOutline_24px"] = "show-menu_outline_24px";
  HdsIconlibraryCoreUi_24px2["ShowMenuSolid_24px"] = "show-menu_solid_24px";
  HdsIconlibraryCoreUi_24px2["SignInOutline_24px"] = "sign-in_outline_24px";
  HdsIconlibraryCoreUi_24px2["SignInSolid_24px"] = "sign-in_solid_24px";
  HdsIconlibraryCoreUi_24px2["SignOutOutline_24px"] = "sign-out_outline_24px";
  HdsIconlibraryCoreUi_24px2["SignOutSolid_24px"] = "sign-out_solid_24px";
  HdsIconlibraryCoreUi_24px2["SlashOutline_24px"] = "slash_outline_24px";
  HdsIconlibraryCoreUi_24px2["SlashSolid_24px"] = "slash_solid_24px";
  HdsIconlibraryCoreUi_24px2["SubmitOutline_24px"] = "submit_outline_24px";
  HdsIconlibraryCoreUi_24px2["SubmitSolid_24px"] = "submit_solid_24px";
  HdsIconlibraryCoreUi_24px2["SubstractOutline_24px"] = "substract_outline_24px";
  HdsIconlibraryCoreUi_24px2["SubstractSolid_24px"] = "substract_solid_24px";
  HdsIconlibraryCoreUi_24px2["SwitchHorizontalOutline_24px"] = "switch-horizontal_outline_24px";
  HdsIconlibraryCoreUi_24px2["SwitchHorizontalSolid_24px"] = "switch-horizontal_solid_24px";
  HdsIconlibraryCoreUi_24px2["SwitchVerticalOutline_24px"] = "switch-vertical_outline_24px";
  HdsIconlibraryCoreUi_24px2["SwitchVerticalSolid_24px"] = "switch-vertical_solid_24px";
  HdsIconlibraryCoreUi_24px2["TagOutline_24px"] = "tag_outline_24px";
  HdsIconlibraryCoreUi_24px2["TagSolid_24px"] = "tag_solid_24px";
  HdsIconlibraryCoreUi_24px2["TimeOutline_24px"] = "time_outline_24px";
  HdsIconlibraryCoreUi_24px2["TimeSolid_24px"] = "time_solid_24px";
  HdsIconlibraryCoreUi_24px2["UndoOutline_24px"] = "undo_outline_24px";
  HdsIconlibraryCoreUi_24px2["UndoSolid_24px"] = "undo_solid_24px";
  HdsIconlibraryCoreUi_24px2["UnlockOutline_24px"] = "unlock_outline_24px";
  HdsIconlibraryCoreUi_24px2["UnlockSolid_24px"] = "unlock_solid_24px";
  HdsIconlibraryCoreUi_24px2["VolumeAlertOutline_24px"] = "volume-alert_outline_24px";
  HdsIconlibraryCoreUi_24px2["VolumeAlertSolid_24px"] = "volume-alert_solid_24px";
  HdsIconlibraryCoreUi_24px2["VolumeHighOutline_24px"] = "volume-high_outline_24px";
  HdsIconlibraryCoreUi_24px2["VolumeHighSolid_24px"] = "volume-high_solid_24px";
  HdsIconlibraryCoreUi_24px2["VolumeLowOutline_24px"] = "volume-low_outline_24px";
  HdsIconlibraryCoreUi_24px2["VolumeLowSolid_24px"] = "volume-low_solid_24px";
  HdsIconlibraryCoreUi_24px2["VolumeMediumOutline_24px"] = "volume-medium_outline_24px";
  HdsIconlibraryCoreUi_24px2["VolumeMediumSolid_24px"] = "volume-medium_solid_24px";
  HdsIconlibraryCoreUi_24px2["VolumeNoSoundOutline_24px"] = "volume-no-sound_outline_24px";
  HdsIconlibraryCoreUi_24px2["VolumeNoSoundSolid_24px"] = "volume-no-sound_solid_24px";
  HdsIconlibraryCoreUi_24px2["VolumeOffOutline_24px"] = "volume-off_outline_24px";
  HdsIconlibraryCoreUi_24px2["VolumeOffSolid_24px"] = "volume-off_solid_24px";
  HdsIconlibraryCoreUi_24px2["WifiLowOutline_24px"] = "wifi-low_outline_24px";
  HdsIconlibraryCoreUi_24px2["WifiLowSolid_24px"] = "wifi-low_solid_24px";
  HdsIconlibraryCoreUi_24px2["WifiMediumOutline_24px"] = "wifi-medium_outline_24px";
  HdsIconlibraryCoreUi_24px2["WifiMediumSolid_24px"] = "wifi-medium_solid_24px";
  HdsIconlibraryCoreUi_24px2["WifiOffOutline_24px"] = "wifi-off_outline_24px";
  HdsIconlibraryCoreUi_24px2["WifiOffSolid_24px"] = "wifi-off_solid_24px";
  HdsIconlibraryCoreUi_24px2["WifiStrongOutline_24px"] = "wifi-strong_outline_24px";
  HdsIconlibraryCoreUi_24px2["WifiStrongSolid_24px"] = "wifi-strong_solid_24px";
})(HdsIconlibraryCoreUi_24px = HdsIconlibraryCoreUi_24px || (HdsIconlibraryCoreUi_24px = {}));
var HDS_ICONLIBRARY_CORE_UI_24PX_CODEPOINTS = {
  [HdsIconlibraryCoreUi_24px.AddOutline_24px]: "61697",
  [HdsIconlibraryCoreUi_24px.AddSolid_24px]: "61698",
  [HdsIconlibraryCoreUi_24px.AddUserOutline_24px]: "61699",
  [HdsIconlibraryCoreUi_24px.AddUserSolid_24px]: "61700",
  [HdsIconlibraryCoreUi_24px.AlertOutline_24px]: "61701",
  [HdsIconlibraryCoreUi_24px.AlertSolid_24px]: "61702",
  [HdsIconlibraryCoreUi_24px.ArrowDownOutline_24px]: "61703",
  [HdsIconlibraryCoreUi_24px.ArrowDownSolid_24px]: "61704",
  [HdsIconlibraryCoreUi_24px.ArrowDownLeftOutline_24px]: "61705",
  [HdsIconlibraryCoreUi_24px.ArrowDownLeftSolid_24px]: "61706",
  [HdsIconlibraryCoreUi_24px.ArrowDownRightOutline_24px]: "61707",
  [HdsIconlibraryCoreUi_24px.ArrowDownRightSolid_24px]: "61708",
  [HdsIconlibraryCoreUi_24px.ArrowLeftOutline_24px]: "61709",
  [HdsIconlibraryCoreUi_24px.ArrowLeftSolid_24px]: "61710",
  [HdsIconlibraryCoreUi_24px.ArrowRightOutline_24px]: "61711",
  [HdsIconlibraryCoreUi_24px.ArrowRightSolid_24px]: "61712",
  [HdsIconlibraryCoreUi_24px.ArrowUpOutline_24px]: "61713",
  [HdsIconlibraryCoreUi_24px.ArrowUpSolid_24px]: "61714",
  [HdsIconlibraryCoreUi_24px.ArrowUpLeftOutline_24px]: "61715",
  [HdsIconlibraryCoreUi_24px.ArrowUpLeftSolid_24px]: "61716",
  [HdsIconlibraryCoreUi_24px.ArrowUpRightOutline_24px]: "61717",
  [HdsIconlibraryCoreUi_24px.ArrowUpRightSolid_24px]: "61718",
  [HdsIconlibraryCoreUi_24px.AttentionOutline_24px]: "61719",
  [HdsIconlibraryCoreUi_24px.AttentionSolid_24px]: "61720",
  [HdsIconlibraryCoreUi_24px.BatteryChargingOutline_24px]: "61721",
  [HdsIconlibraryCoreUi_24px.BatteryChargingSolid_24px]: "61722",
  [HdsIconlibraryCoreUi_24px.BatteryEmptyOutline_24px]: "61723",
  [HdsIconlibraryCoreUi_24px.BatteryEmptySolid_24px]: "61724",
  [HdsIconlibraryCoreUi_24px.BatteryFullOutline_24px]: "61725",
  [HdsIconlibraryCoreUi_24px.BatteryFullSolid_24px]: "61726",
  [HdsIconlibraryCoreUi_24px.BatteryHalfOutline_24px]: "61727",
  [HdsIconlibraryCoreUi_24px.BatteryHalfSolid_24px]: "61728",
  [HdsIconlibraryCoreUi_24px.BatteryLowOutline_24px]: "61729",
  [HdsIconlibraryCoreUi_24px.BatteryLowSolid_24px]: "61730",
  [HdsIconlibraryCoreUi_24px.BluetoothOutline_24px]: "61731",
  [HdsIconlibraryCoreUi_24px.BluetoothSolid_24px]: "61732",
  [HdsIconlibraryCoreUi_24px.BluetoothOffOutline_24px]: "61733",
  [HdsIconlibraryCoreUi_24px.BluetoothOffSolid_24px]: "61734",
  [HdsIconlibraryCoreUi_24px.BookmarkOutline_24px]: "61735",
  [HdsIconlibraryCoreUi_24px.BookmarkSolid_24px]: "61736",
  [HdsIconlibraryCoreUi_24px.BookmarkAddOutline_24px]: "61737",
  [HdsIconlibraryCoreUi_24px.BookmarkAddSolid_24px]: "61738",
  [HdsIconlibraryCoreUi_24px.CheckmarkOutline_24px]: "61739",
  [HdsIconlibraryCoreUi_24px.CheckmarkSolid_24px]: "61740",
  [HdsIconlibraryCoreUi_24px.ChevronDownOutline_24px]: "61741",
  [HdsIconlibraryCoreUi_24px.ChevronDownSolid_24px]: "61742",
  [HdsIconlibraryCoreUi_24px.ChevronLeftOutline_24px]: "61743",
  [HdsIconlibraryCoreUi_24px.ChevronLeftSolid_24px]: "61744",
  [HdsIconlibraryCoreUi_24px.ChevronLeftDoubleOutline_24px]: "61745",
  [HdsIconlibraryCoreUi_24px.ChevronLeftDoubleSolid_24px]: "61746",
  [HdsIconlibraryCoreUi_24px.ChevronRightOutline_24px]: "61747",
  [HdsIconlibraryCoreUi_24px.ChevronRightSolid_24px]: "61748",
  [HdsIconlibraryCoreUi_24px.ChevronRightDoubleOutline_24px]: "61749",
  [HdsIconlibraryCoreUi_24px.ChevronRightDoubleSolid_24px]: "61750",
  [HdsIconlibraryCoreUi_24px.ChevronUpOutline_24px]: "61751",
  [HdsIconlibraryCoreUi_24px.ChevronUpSolid_24px]: "61752",
  [HdsIconlibraryCoreUi_24px.ChevronUpDownOutline_24px]: "61753",
  [HdsIconlibraryCoreUi_24px.ChevronUpDownSolid_24px]: "61754",
  [HdsIconlibraryCoreUi_24px.ClearOutline_24px]: "61755",
  [HdsIconlibraryCoreUi_24px.ClearSolid_24px]: "61756",
  [HdsIconlibraryCoreUi_24px.CollapseOutline_24px]: "61757",
  [HdsIconlibraryCoreUi_24px.CollapseSolid_24px]: "61758",
  [HdsIconlibraryCoreUi_24px.CommentOutline_24px]: "61759",
  [HdsIconlibraryCoreUi_24px.CommentSolid_24px]: "61760",
  [HdsIconlibraryCoreUi_24px.ConfirmOutline_24px]: "61761",
  [HdsIconlibraryCoreUi_24px.ConfirmSolid_24px]: "61762",
  [HdsIconlibraryCoreUi_24px.CrossOutline_24px]: "61763",
  [HdsIconlibraryCoreUi_24px.CrossSolid_24px]: "61764",
  [HdsIconlibraryCoreUi_24px.DeleteOutline_24px]: "61765",
  [HdsIconlibraryCoreUi_24px.DeleteSolid_24px]: "61766",
  [HdsIconlibraryCoreUi_24px.DetailsOutline_24px]: "61767",
  [HdsIconlibraryCoreUi_24px.DetailsSolid_24px]: "61768",
  [HdsIconlibraryCoreUi_24px.DragListOutline_24px]: "61769",
  [HdsIconlibraryCoreUi_24px.DragListSolid_24px]: "61770",
  [HdsIconlibraryCoreUi_24px.EditOutline_24px]: "61771",
  [HdsIconlibraryCoreUi_24px.EditSolid_24px]: "61772",
  [HdsIconlibraryCoreUi_24px.EditedOutline_24px]: "61773",
  [HdsIconlibraryCoreUi_24px.EditedSolid_24px]: "61774",
  [HdsIconlibraryCoreUi_24px.ExpandOutline_24px]: "61775",
  [HdsIconlibraryCoreUi_24px.ExpandSolid_24px]: "61776",
  [HdsIconlibraryCoreUi_24px.ExternalLinkOutline_24px]: "61777",
  [HdsIconlibraryCoreUi_24px.ExternalLinkSolid_24px]: "61778",
  [HdsIconlibraryCoreUi_24px.FallbackItemOutline_24px]: "61779",
  [HdsIconlibraryCoreUi_24px.FallbackItemSolid_24px]: "61780",
  [HdsIconlibraryCoreUi_24px.FolderClosedOutline_24px]: "61781",
  [HdsIconlibraryCoreUi_24px.FolderClosedSolid_24px]: "61782",
  [HdsIconlibraryCoreUi_24px.FolderOpenOutline_24px]: "61783",
  [HdsIconlibraryCoreUi_24px.FolderOpenSolid_24px]: "61784",
  [HdsIconlibraryCoreUi_24px.GpsOutline_24px]: "61785",
  [HdsIconlibraryCoreUi_24px.GpsSolid_24px]: "61786",
  [HdsIconlibraryCoreUi_24px.HelpOutline_24px]: "61787",
  [HdsIconlibraryCoreUi_24px.HelpSolid_24px]: "61788",
  [HdsIconlibraryCoreUi_24px.HereLogoOutline_24px]: "61789",
  [HdsIconlibraryCoreUi_24px.HereLogoSolid_24px]: "61790",
  [HdsIconlibraryCoreUi_24px.HideOutline_24px]: "61791",
  [HdsIconlibraryCoreUi_24px.HideSolid_24px]: "61792",
  [HdsIconlibraryCoreUi_24px.HideAltOutline_24px]: "61793",
  [HdsIconlibraryCoreUi_24px.HideAltSolid_24px]: "61794",
  [HdsIconlibraryCoreUi_24px.HideMenuOutline_24px]: "61795",
  [HdsIconlibraryCoreUi_24px.HideMenuSolid_24px]: "61796",
  [HdsIconlibraryCoreUi_24px.HistoryOutline_24px]: "61797",
  [HdsIconlibraryCoreUi_24px.HistorySolid_24px]: "61798",
  [HdsIconlibraryCoreUi_24px.InboxAttentionOutline_24px]: "61799",
  [HdsIconlibraryCoreUi_24px.InboxAttentionSolid_24px]: "61800",
  [HdsIconlibraryCoreUi_24px.InformationOutline_24px]: "61801",
  [HdsIconlibraryCoreUi_24px.InformationSolid_24px]: "61802",
  [HdsIconlibraryCoreUi_24px.InvalidOutline_24px]: "61803",
  [HdsIconlibraryCoreUi_24px.InvalidSolid_24px]: "61804",
  [HdsIconlibraryCoreUi_24px.LoadingOutline_24px]: "61805",
  [HdsIconlibraryCoreUi_24px.LoadingSolid_24px]: "61806",
  [HdsIconlibraryCoreUi_24px.LocationOffOutline_24px]: "61807",
  [HdsIconlibraryCoreUi_24px.LocationOffSolid_24px]: "61808",
  [HdsIconlibraryCoreUi_24px.LockOutline_24px]: "61809",
  [HdsIconlibraryCoreUi_24px.LockSolid_24px]: "61810",
  [HdsIconlibraryCoreUi_24px.LockBreakOutline_24px]: "61811",
  [HdsIconlibraryCoreUi_24px.LockBreakSolid_24px]: "61812",
  [HdsIconlibraryCoreUi_24px.MenuOutline_24px]: "61813",
  [HdsIconlibraryCoreUi_24px.MenuSolid_24px]: "61814",
  [HdsIconlibraryCoreUi_24px.MicrophoneOutline_24px]: "61815",
  [HdsIconlibraryCoreUi_24px.MicrophoneSolid_24px]: "61816",
  [HdsIconlibraryCoreUi_24px.MicrophoneOffOutline_24px]: "61817",
  [HdsIconlibraryCoreUi_24px.MicrophoneOffSolid_24px]: "61818",
  [HdsIconlibraryCoreUi_24px.MinusOutline_24px]: "61819",
  [HdsIconlibraryCoreUi_24px.MinusSolid_24px]: "61820",
  [HdsIconlibraryCoreUi_24px.NotificationsOutline_24px]: "61821",
  [HdsIconlibraryCoreUi_24px.NotificationsSolid_24px]: "61822",
  [HdsIconlibraryCoreUi_24px.OverflowHoriCenterOutline_24px]: "61823",
  [HdsIconlibraryCoreUi_24px.OverflowHoriCenterSolid_24px]: "61824",
  [HdsIconlibraryCoreUi_24px.OverflowVertCenterOutline_24px]: "61825",
  [HdsIconlibraryCoreUi_24px.OverflowVertCenterSolid_24px]: "61826",
  [HdsIconlibraryCoreUi_24px.OverflowVertRightOutline_24px]: "61827",
  [HdsIconlibraryCoreUi_24px.OverflowVertRightSolid_24px]: "61828",
  [HdsIconlibraryCoreUi_24px.PlusOutline_24px]: "61829",
  [HdsIconlibraryCoreUi_24px.PlusSolid_24px]: "61830",
  [HdsIconlibraryCoreUi_24px.ProfileOutline_24px]: "61831",
  [HdsIconlibraryCoreUi_24px.ProfileSolid_24px]: "61832",
  [HdsIconlibraryCoreUi_24px.QuestionMarkOutline_24px]: "61833",
  [HdsIconlibraryCoreUi_24px.QuestionMarkSolid_24px]: "61834",
  [HdsIconlibraryCoreUi_24px.RedoOutline_24px]: "61835",
  [HdsIconlibraryCoreUi_24px.RedoSolid_24px]: "61836",
  [HdsIconlibraryCoreUi_24px.RefreshOutline_24px]: "61837",
  [HdsIconlibraryCoreUi_24px.RefreshSolid_24px]: "61838",
  [HdsIconlibraryCoreUi_24px.ReportOutline_24px]: "61839",
  [HdsIconlibraryCoreUi_24px.ReportSolid_24px]: "61840",
  [HdsIconlibraryCoreUi_24px.ResetOutline_24px]: "61841",
  [HdsIconlibraryCoreUi_24px.ResetSolid_24px]: "61842",
  [HdsIconlibraryCoreUi_24px.SaveOutline_24px]: "61843",
  [HdsIconlibraryCoreUi_24px.SaveSolid_24px]: "61844",
  [HdsIconlibraryCoreUi_24px.SearchOutline_24px]: "61845",
  [HdsIconlibraryCoreUi_24px.SearchSolid_24px]: "61846",
  [HdsIconlibraryCoreUi_24px.SettingsOutline_24px]: "61847",
  [HdsIconlibraryCoreUi_24px.SettingsSolid_24px]: "61848",
  [HdsIconlibraryCoreUi_24px.ShowOutline_24px]: "61849",
  [HdsIconlibraryCoreUi_24px.ShowSolid_24px]: "61850",
  [HdsIconlibraryCoreUi_24px.ShowMenuOutline_24px]: "61851",
  [HdsIconlibraryCoreUi_24px.ShowMenuSolid_24px]: "61852",
  [HdsIconlibraryCoreUi_24px.SignInOutline_24px]: "61853",
  [HdsIconlibraryCoreUi_24px.SignInSolid_24px]: "61854",
  [HdsIconlibraryCoreUi_24px.SignOutOutline_24px]: "61855",
  [HdsIconlibraryCoreUi_24px.SignOutSolid_24px]: "61856",
  [HdsIconlibraryCoreUi_24px.SlashOutline_24px]: "61857",
  [HdsIconlibraryCoreUi_24px.SlashSolid_24px]: "61858",
  [HdsIconlibraryCoreUi_24px.SubmitOutline_24px]: "61859",
  [HdsIconlibraryCoreUi_24px.SubmitSolid_24px]: "61860",
  [HdsIconlibraryCoreUi_24px.SubstractOutline_24px]: "61861",
  [HdsIconlibraryCoreUi_24px.SubstractSolid_24px]: "61862",
  [HdsIconlibraryCoreUi_24px.SwitchHorizontalOutline_24px]: "61863",
  [HdsIconlibraryCoreUi_24px.SwitchHorizontalSolid_24px]: "61864",
  [HdsIconlibraryCoreUi_24px.SwitchVerticalOutline_24px]: "61865",
  [HdsIconlibraryCoreUi_24px.SwitchVerticalSolid_24px]: "61866",
  [HdsIconlibraryCoreUi_24px.TagOutline_24px]: "61867",
  [HdsIconlibraryCoreUi_24px.TagSolid_24px]: "61868",
  [HdsIconlibraryCoreUi_24px.TimeOutline_24px]: "61869",
  [HdsIconlibraryCoreUi_24px.TimeSolid_24px]: "61870",
  [HdsIconlibraryCoreUi_24px.UndoOutline_24px]: "61871",
  [HdsIconlibraryCoreUi_24px.UndoSolid_24px]: "61872",
  [HdsIconlibraryCoreUi_24px.UnlockOutline_24px]: "61873",
  [HdsIconlibraryCoreUi_24px.UnlockSolid_24px]: "61874",
  [HdsIconlibraryCoreUi_24px.VolumeAlertOutline_24px]: "61875",
  [HdsIconlibraryCoreUi_24px.VolumeAlertSolid_24px]: "61876",
  [HdsIconlibraryCoreUi_24px.VolumeHighOutline_24px]: "61877",
  [HdsIconlibraryCoreUi_24px.VolumeHighSolid_24px]: "61878",
  [HdsIconlibraryCoreUi_24px.VolumeLowOutline_24px]: "61879",
  [HdsIconlibraryCoreUi_24px.VolumeLowSolid_24px]: "61880",
  [HdsIconlibraryCoreUi_24px.VolumeMediumOutline_24px]: "61881",
  [HdsIconlibraryCoreUi_24px.VolumeMediumSolid_24px]: "61882",
  [HdsIconlibraryCoreUi_24px.VolumeNoSoundOutline_24px]: "61883",
  [HdsIconlibraryCoreUi_24px.VolumeNoSoundSolid_24px]: "61884",
  [HdsIconlibraryCoreUi_24px.VolumeOffOutline_24px]: "61885",
  [HdsIconlibraryCoreUi_24px.VolumeOffSolid_24px]: "61886",
  [HdsIconlibraryCoreUi_24px.WifiLowOutline_24px]: "61887",
  [HdsIconlibraryCoreUi_24px.WifiLowSolid_24px]: "61888",
  [HdsIconlibraryCoreUi_24px.WifiMediumOutline_24px]: "61889",
  [HdsIconlibraryCoreUi_24px.WifiMediumSolid_24px]: "61890",
  [HdsIconlibraryCoreUi_24px.WifiOffOutline_24px]: "61891",
  [HdsIconlibraryCoreUi_24px.WifiOffSolid_24px]: "61892",
  [HdsIconlibraryCoreUi_24px.WifiStrongOutline_24px]: "61893",
  [HdsIconlibraryCoreUi_24px.WifiStrongSolid_24px]: "61894"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-data-24px.js
var HdsIconlibraryData_24px;
(function(HdsIconlibraryData_24px2) {
  HdsIconlibraryData_24px2["AppOutline_24px"] = "app_outline_24px";
  HdsIconlibraryData_24px2["AppSolid_24px"] = "app_solid_24px";
  HdsIconlibraryData_24px2["CatalogOutline_24px"] = "catalog_outline_24px";
  HdsIconlibraryData_24px2["CatalogSolid_24px"] = "catalog_solid_24px";
  HdsIconlibraryData_24px2["ConflateOutline_24px"] = "conflate_outline_24px";
  HdsIconlibraryData_24px2["ConflateSolid_24px"] = "conflate_solid_24px";
  HdsIconlibraryData_24px2["DatabaseOutline_24px"] = "database_outline_24px";
  HdsIconlibraryData_24px2["DatabaseSolid_24px"] = "database_solid_24px";
  HdsIconlibraryData_24px2["DeployOutline_24px"] = "deploy_outline_24px";
  HdsIconlibraryData_24px2["DeploySolid_24px"] = "deploy_solid_24px";
  HdsIconlibraryData_24px2["ExportOutline_24px"] = "export_outline_24px";
  HdsIconlibraryData_24px2["ExportSolid_24px"] = "export_solid_24px";
  HdsIconlibraryData_24px2["IndexOutline_24px"] = "index_outline_24px";
  HdsIconlibraryData_24px2["IndexSolid_24px"] = "index_solid_24px";
  HdsIconlibraryData_24px2["InspectOutline_24px"] = "inspect_outline_24px";
  HdsIconlibraryData_24px2["InspectSolid_24px"] = "inspect_solid_24px";
  HdsIconlibraryData_24px2["InteractiveOutline_24px"] = "interactive_outline_24px";
  HdsIconlibraryData_24px2["InteractiveSolid_24px"] = "interactive_solid_24px";
  HdsIconlibraryData_24px2["LayersOutline_24px"] = "layers_outline_24px";
  HdsIconlibraryData_24px2["LayersSolid_24px"] = "layers_solid_24px";
  HdsIconlibraryData_24px2["MarketplaceOutline_24px"] = "marketplace_outline_24px";
  HdsIconlibraryData_24px2["MarketplaceSolid_24px"] = "marketplace_solid_24px";
  HdsIconlibraryData_24px2["PipelineOutline_24px"] = "pipeline_outline_24px";
  HdsIconlibraryData_24px2["PipelineSolid_24px"] = "pipeline_solid_24px";
  HdsIconlibraryData_24px2["RestOutline_24px"] = "rest_outline_24px";
  HdsIconlibraryData_24px2["RestSolid_24px"] = "rest_solid_24px";
  HdsIconlibraryData_24px2["ReviewOutline_24px"] = "review_outline_24px";
  HdsIconlibraryData_24px2["ReviewSolid_24px"] = "review_solid_24px";
  HdsIconlibraryData_24px2["SendToListOutline_24px"] = "send-to-list_outline_24px";
  HdsIconlibraryData_24px2["SendToListSolid_24px"] = "send-to-list_solid_24px";
  HdsIconlibraryData_24px2["ServicesOutline_24px"] = "services_outline_24px";
  HdsIconlibraryData_24px2["ServicesSolid_24px"] = "services_solid_24px";
  HdsIconlibraryData_24px2["StreamOutline_24px"] = "stream_outline_24px";
  HdsIconlibraryData_24px2["StreamSolid_24px"] = "stream_solid_24px";
  HdsIconlibraryData_24px2["TemplateOutline_24px"] = "template_outline_24px";
  HdsIconlibraryData_24px2["TemplateSolid_24px"] = "template_solid_24px";
  HdsIconlibraryData_24px2["VersionedOutline_24px"] = "versioned_outline_24px";
  HdsIconlibraryData_24px2["VersionedSolid_24px"] = "versioned_solid_24px";
  HdsIconlibraryData_24px2["VolatileOutline_24px"] = "volatile_outline_24px";
  HdsIconlibraryData_24px2["VolatileSolid_24px"] = "volatile_solid_24px";
})(HdsIconlibraryData_24px = HdsIconlibraryData_24px || (HdsIconlibraryData_24px = {}));
var HDS_ICONLIBRARY_DATA_24PX_CODEPOINTS = {
  [HdsIconlibraryData_24px.AppOutline_24px]: "61697",
  [HdsIconlibraryData_24px.AppSolid_24px]: "61698",
  [HdsIconlibraryData_24px.CatalogOutline_24px]: "61699",
  [HdsIconlibraryData_24px.CatalogSolid_24px]: "61700",
  [HdsIconlibraryData_24px.ConflateOutline_24px]: "61701",
  [HdsIconlibraryData_24px.ConflateSolid_24px]: "61702",
  [HdsIconlibraryData_24px.DatabaseOutline_24px]: "61703",
  [HdsIconlibraryData_24px.DatabaseSolid_24px]: "61704",
  [HdsIconlibraryData_24px.DeployOutline_24px]: "61705",
  [HdsIconlibraryData_24px.DeploySolid_24px]: "61706",
  [HdsIconlibraryData_24px.ExportOutline_24px]: "61707",
  [HdsIconlibraryData_24px.ExportSolid_24px]: "61708",
  [HdsIconlibraryData_24px.IndexOutline_24px]: "61709",
  [HdsIconlibraryData_24px.IndexSolid_24px]: "61710",
  [HdsIconlibraryData_24px.InspectOutline_24px]: "61711",
  [HdsIconlibraryData_24px.InspectSolid_24px]: "61712",
  [HdsIconlibraryData_24px.InteractiveOutline_24px]: "61713",
  [HdsIconlibraryData_24px.InteractiveSolid_24px]: "61714",
  [HdsIconlibraryData_24px.LayersOutline_24px]: "61715",
  [HdsIconlibraryData_24px.LayersSolid_24px]: "61716",
  [HdsIconlibraryData_24px.MarketplaceOutline_24px]: "61717",
  [HdsIconlibraryData_24px.MarketplaceSolid_24px]: "61718",
  [HdsIconlibraryData_24px.PipelineOutline_24px]: "61719",
  [HdsIconlibraryData_24px.PipelineSolid_24px]: "61720",
  [HdsIconlibraryData_24px.RestOutline_24px]: "61721",
  [HdsIconlibraryData_24px.RestSolid_24px]: "61722",
  [HdsIconlibraryData_24px.ReviewOutline_24px]: "61723",
  [HdsIconlibraryData_24px.ReviewSolid_24px]: "61724",
  [HdsIconlibraryData_24px.SendToListOutline_24px]: "61725",
  [HdsIconlibraryData_24px.SendToListSolid_24px]: "61726",
  [HdsIconlibraryData_24px.ServicesOutline_24px]: "61727",
  [HdsIconlibraryData_24px.ServicesSolid_24px]: "61728",
  [HdsIconlibraryData_24px.StreamOutline_24px]: "61729",
  [HdsIconlibraryData_24px.StreamSolid_24px]: "61730",
  [HdsIconlibraryData_24px.TemplateOutline_24px]: "61731",
  [HdsIconlibraryData_24px.TemplateSolid_24px]: "61732",
  [HdsIconlibraryData_24px.VersionedOutline_24px]: "61733",
  [HdsIconlibraryData_24px.VersionedSolid_24px]: "61734",
  [HdsIconlibraryData_24px.VolatileOutline_24px]: "61735",
  [HdsIconlibraryData_24px.VolatileSolid_24px]: "61736"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-devices-sensors-24px.js
var HdsIconlibraryDevicesSensors_24px;
(function(HdsIconlibraryDevicesSensors_24px2) {
  HdsIconlibraryDevicesSensors_24px2["BarcodeReaderOutline_24px"] = "barcode-reader_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["BarcodeReaderSolid_24px"] = "barcode-reader_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["CameraOutline_24px"] = "camera_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["CameraSolid_24px"] = "camera_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["ComputerChipOutline_24px"] = "computer-chip_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["ComputerChipSolid_24px"] = "computer-chip_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["DeviceConnectedOutline_24px"] = "device-connected_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["DeviceConnectedSolid_24px"] = "device-connected_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["DeviceGroupConnectedOutline_24px"] = "device-group-connected_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["DeviceGroupConnectedSolid_24px"] = "device-group-connected_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["DeviceGroupFilterOutline_24px"] = "device-group-filter_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["DeviceGroupFilterSolid_24px"] = "device-group-filter_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["DeviceGroupSmartFilterOutline_24px"] = "device-group-smart-filter_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["DeviceGroupSmartFilterSolid_24px"] = "device-group-smart-filter_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["HdtvOutline_24px"] = "hdtv_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["HdtvSolid_24px"] = "hdtv_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["KeyboardOutline_24px"] = "keyboard_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["KeyboardSolid_24px"] = "keyboard_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["LogicOutline_24px"] = "logic_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["LogicSolid_24px"] = "logic_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["MonitorOutline_24px"] = "monitor_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["MonitorSolid_24px"] = "monitor_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["PairedModeOutline_24px"] = "paired-mode_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["PairedModeSolid_24px"] = "paired-mode_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["PrinterOutline_24px"] = "printer_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["PrinterSolid_24px"] = "printer_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["ProjectorOutline_24px"] = "projector_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["ProjectorSolid_24px"] = "projector_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["ScannerOutline_24px"] = "scanner_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["ScannerSolid_24px"] = "scanner_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["SensorAirpressureOutline_24px"] = "sensor-airpressure_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["SensorAirpressureSolid_24px"] = "sensor-airpressure_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["SensorHumidityOutline_24px"] = "sensor-humidity_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["SensorHumiditySolid_24px"] = "sensor-humidity_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["SensorShockOutline_24px"] = "sensor-shock_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["SensorShockSolid_24px"] = "sensor-shock_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["SensorTemperatureOutline_24px"] = "sensor-temperature_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["SensorTemperatureSolid_24px"] = "sensor-temperature_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["SmartphoneOutline_24px"] = "smartphone_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["SmartphoneSolid_24px"] = "smartphone_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["SoftwareOutline_24px"] = "software_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["SoftwareSolid_24px"] = "software_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["SpeakerOutline_24px"] = "speaker_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["SpeakerSolid_24px"] = "speaker_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["TabletOutline_24px"] = "tablet_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["TabletSolid_24px"] = "tablet_solid_24px";
  HdsIconlibraryDevicesSensors_24px2["WhiteboardOutline_24px"] = "whiteboard_outline_24px";
  HdsIconlibraryDevicesSensors_24px2["WhiteboardSolid_24px"] = "whiteboard_solid_24px";
})(HdsIconlibraryDevicesSensors_24px = HdsIconlibraryDevicesSensors_24px || (HdsIconlibraryDevicesSensors_24px = {}));
var HDS_ICONLIBRARY_DEVICES_SENSORS_24PX_CODEPOINTS = {
  [HdsIconlibraryDevicesSensors_24px.BarcodeReaderOutline_24px]: "61697",
  [HdsIconlibraryDevicesSensors_24px.BarcodeReaderSolid_24px]: "61698",
  [HdsIconlibraryDevicesSensors_24px.CameraOutline_24px]: "61699",
  [HdsIconlibraryDevicesSensors_24px.CameraSolid_24px]: "61700",
  [HdsIconlibraryDevicesSensors_24px.ComputerChipOutline_24px]: "61701",
  [HdsIconlibraryDevicesSensors_24px.ComputerChipSolid_24px]: "61702",
  [HdsIconlibraryDevicesSensors_24px.DeviceConnectedOutline_24px]: "61703",
  [HdsIconlibraryDevicesSensors_24px.DeviceConnectedSolid_24px]: "61704",
  [HdsIconlibraryDevicesSensors_24px.DeviceGroupConnectedOutline_24px]: "61705",
  [HdsIconlibraryDevicesSensors_24px.DeviceGroupConnectedSolid_24px]: "61706",
  [HdsIconlibraryDevicesSensors_24px.DeviceGroupFilterOutline_24px]: "61707",
  [HdsIconlibraryDevicesSensors_24px.DeviceGroupFilterSolid_24px]: "61708",
  [HdsIconlibraryDevicesSensors_24px.DeviceGroupSmartFilterOutline_24px]: "61709",
  [HdsIconlibraryDevicesSensors_24px.DeviceGroupSmartFilterSolid_24px]: "61710",
  [HdsIconlibraryDevicesSensors_24px.HdtvOutline_24px]: "61711",
  [HdsIconlibraryDevicesSensors_24px.HdtvSolid_24px]: "61712",
  [HdsIconlibraryDevicesSensors_24px.KeyboardOutline_24px]: "61713",
  [HdsIconlibraryDevicesSensors_24px.KeyboardSolid_24px]: "61714",
  [HdsIconlibraryDevicesSensors_24px.LogicOutline_24px]: "61715",
  [HdsIconlibraryDevicesSensors_24px.LogicSolid_24px]: "61716",
  [HdsIconlibraryDevicesSensors_24px.MonitorOutline_24px]: "61717",
  [HdsIconlibraryDevicesSensors_24px.MonitorSolid_24px]: "61718",
  [HdsIconlibraryDevicesSensors_24px.PairedModeOutline_24px]: "61719",
  [HdsIconlibraryDevicesSensors_24px.PairedModeSolid_24px]: "61720",
  [HdsIconlibraryDevicesSensors_24px.PrinterOutline_24px]: "61721",
  [HdsIconlibraryDevicesSensors_24px.PrinterSolid_24px]: "61722",
  [HdsIconlibraryDevicesSensors_24px.ProjectorOutline_24px]: "61723",
  [HdsIconlibraryDevicesSensors_24px.ProjectorSolid_24px]: "61724",
  [HdsIconlibraryDevicesSensors_24px.ScannerOutline_24px]: "61725",
  [HdsIconlibraryDevicesSensors_24px.ScannerSolid_24px]: "61726",
  [HdsIconlibraryDevicesSensors_24px.SensorAirpressureOutline_24px]: "61727",
  [HdsIconlibraryDevicesSensors_24px.SensorAirpressureSolid_24px]: "61728",
  [HdsIconlibraryDevicesSensors_24px.SensorHumidityOutline_24px]: "61729",
  [HdsIconlibraryDevicesSensors_24px.SensorHumiditySolid_24px]: "61730",
  [HdsIconlibraryDevicesSensors_24px.SensorShockOutline_24px]: "61731",
  [HdsIconlibraryDevicesSensors_24px.SensorShockSolid_24px]: "61732",
  [HdsIconlibraryDevicesSensors_24px.SensorTemperatureOutline_24px]: "61733",
  [HdsIconlibraryDevicesSensors_24px.SensorTemperatureSolid_24px]: "61734",
  [HdsIconlibraryDevicesSensors_24px.SmartphoneOutline_24px]: "61735",
  [HdsIconlibraryDevicesSensors_24px.SmartphoneSolid_24px]: "61736",
  [HdsIconlibraryDevicesSensors_24px.SoftwareOutline_24px]: "61737",
  [HdsIconlibraryDevicesSensors_24px.SoftwareSolid_24px]: "61738",
  [HdsIconlibraryDevicesSensors_24px.SpeakerOutline_24px]: "61739",
  [HdsIconlibraryDevicesSensors_24px.SpeakerSolid_24px]: "61740",
  [HdsIconlibraryDevicesSensors_24px.TabletOutline_24px]: "61741",
  [HdsIconlibraryDevicesSensors_24px.TabletSolid_24px]: "61742",
  [HdsIconlibraryDevicesSensors_24px.WhiteboardOutline_24px]: "61743",
  [HdsIconlibraryDevicesSensors_24px.WhiteboardSolid_24px]: "61744"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-discovery-sharing-24px.js
var HdsIconlibraryDiscoverySharing_24px;
(function(HdsIconlibraryDiscoverySharing_24px2) {
  HdsIconlibraryDiscoverySharing_24px2["CalendarOutline_24px"] = "calendar_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["CalendarSolid_24px"] = "calendar_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["CalendarAddOutline_24px"] = "calendar-add_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["CalendarAddSolid_24px"] = "calendar-add_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["DetailsOutline_24px"] = "details_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["DetailsSolid_24px"] = "details_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["DistributeOutline_24px"] = "distribute_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["DistributeSolid_24px"] = "distribute_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["DownloadOutline_24px"] = "download_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["DownloadSolid_24px"] = "download_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["DownloadCloudOutline_24px"] = "download-cloud_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["DownloadCloudSolid_24px"] = "download-cloud_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["FilterOffOutline_24px"] = "filter-off_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["FilterOffSolid_24px"] = "filter-off_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["FilterOnOutline_24px"] = "filter-on_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["FilterOnSolid_24px"] = "filter-on_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["GridTypeEOutline_24px"] = "grid-type-E_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["GridTypeESolid_24px"] = "grid-type-E_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["GridTypeAOutline_24px"] = "grid-typeA_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["GridTypeASolid_24px"] = "grid-typeA_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["GridTypeBOutline_24px"] = "grid-typeB_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["GridTypeBSolid_24px"] = "grid-typeB_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["GridTypeCOutline_24px"] = "grid-typeC_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["GridTypeCSolid_24px"] = "grid-typeC_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["GridTypeDOutline_24px"] = "grid-typeD_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["GridTypeDSolid_24px"] = "grid-typeD_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["GroupOutline_24px"] = "group_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["GroupSolid_24px"] = "group_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["GroupFilterOutline_24px"] = "group-filter_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["GroupFilterSolid_24px"] = "group-filter_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["GroupSmartFilterOutline_24px"] = "group-smart-filter_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["GroupSmartFilterSolid_24px"] = "group-smart-filter_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["HideOutline_24px"] = "hide_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["HideSolid_24px"] = "hide_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["LinkOutline_24px"] = "link_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["LinkSolid_24px"] = "link_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["ListTypeAOutline_24px"] = "list-typeA_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["ListTypeASolid_24px"] = "list-typeA_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["ListTypeBOutline_24px"] = "list-typeB_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["ListTypeBSolid_24px"] = "list-typeB_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["MapsDownloadOutline_24px"] = "maps-download_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["MapsDownloadSolid_24px"] = "maps-download_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["MapsUpdateOutline_24px"] = "maps-update_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["MapsUpdateSolid_24px"] = "maps-update_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["NoContentOutline_24px"] = "no-content_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["NoContentSolid_24px"] = "no-content_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["NotInSyncOutline_24px"] = "not-in-sync_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["NotInSyncSolid_24px"] = "not-in-sync_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["ShareAndroidOutline_24px"] = "share-Android_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["ShareAndroidSolid_24px"] = "share-Android_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["ShareIOsOutline_24px"] = "share-iOS_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["ShareIOsSolid_24px"] = "share-iOS_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["ShowOutline_24px"] = "show_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["ShowSolid_24px"] = "show_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["UnlinkOutline_24px"] = "unlink_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["UnlinkSolid_24px"] = "unlink_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["UploadOutline_24px"] = "upload_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["UploadSolid_24px"] = "upload_solid_24px";
  HdsIconlibraryDiscoverySharing_24px2["UploadCloudOutline_24px"] = "upload-cloud_outline_24px";
  HdsIconlibraryDiscoverySharing_24px2["UploadCloudSolid_24px"] = "upload-cloud_solid_24px";
})(HdsIconlibraryDiscoverySharing_24px = HdsIconlibraryDiscoverySharing_24px || (HdsIconlibraryDiscoverySharing_24px = {}));
var HDS_ICONLIBRARY_DISCOVERY_SHARING_24PX_CODEPOINTS = {
  [HdsIconlibraryDiscoverySharing_24px.CalendarOutline_24px]: "61697",
  [HdsIconlibraryDiscoverySharing_24px.CalendarSolid_24px]: "61698",
  [HdsIconlibraryDiscoverySharing_24px.CalendarAddOutline_24px]: "61699",
  [HdsIconlibraryDiscoverySharing_24px.CalendarAddSolid_24px]: "61700",
  [HdsIconlibraryDiscoverySharing_24px.DetailsOutline_24px]: "61701",
  [HdsIconlibraryDiscoverySharing_24px.DetailsSolid_24px]: "61702",
  [HdsIconlibraryDiscoverySharing_24px.DistributeOutline_24px]: "61703",
  [HdsIconlibraryDiscoverySharing_24px.DistributeSolid_24px]: "61704",
  [HdsIconlibraryDiscoverySharing_24px.DownloadOutline_24px]: "61705",
  [HdsIconlibraryDiscoverySharing_24px.DownloadSolid_24px]: "61706",
  [HdsIconlibraryDiscoverySharing_24px.DownloadCloudOutline_24px]: "61707",
  [HdsIconlibraryDiscoverySharing_24px.DownloadCloudSolid_24px]: "61708",
  [HdsIconlibraryDiscoverySharing_24px.FilterOffOutline_24px]: "61709",
  [HdsIconlibraryDiscoverySharing_24px.FilterOffSolid_24px]: "61710",
  [HdsIconlibraryDiscoverySharing_24px.FilterOnOutline_24px]: "61711",
  [HdsIconlibraryDiscoverySharing_24px.FilterOnSolid_24px]: "61712",
  [HdsIconlibraryDiscoverySharing_24px.GridTypeEOutline_24px]: "61713",
  [HdsIconlibraryDiscoverySharing_24px.GridTypeESolid_24px]: "61714",
  [HdsIconlibraryDiscoverySharing_24px.GridTypeAOutline_24px]: "61715",
  [HdsIconlibraryDiscoverySharing_24px.GridTypeASolid_24px]: "61716",
  [HdsIconlibraryDiscoverySharing_24px.GridTypeBOutline_24px]: "61717",
  [HdsIconlibraryDiscoverySharing_24px.GridTypeBSolid_24px]: "61718",
  [HdsIconlibraryDiscoverySharing_24px.GridTypeCOutline_24px]: "61719",
  [HdsIconlibraryDiscoverySharing_24px.GridTypeCSolid_24px]: "61720",
  [HdsIconlibraryDiscoverySharing_24px.GridTypeDOutline_24px]: "61721",
  [HdsIconlibraryDiscoverySharing_24px.GridTypeDSolid_24px]: "61722",
  [HdsIconlibraryDiscoverySharing_24px.GroupOutline_24px]: "61723",
  [HdsIconlibraryDiscoverySharing_24px.GroupSolid_24px]: "61724",
  [HdsIconlibraryDiscoverySharing_24px.GroupFilterOutline_24px]: "61725",
  [HdsIconlibraryDiscoverySharing_24px.GroupFilterSolid_24px]: "61726",
  [HdsIconlibraryDiscoverySharing_24px.GroupSmartFilterOutline_24px]: "61727",
  [HdsIconlibraryDiscoverySharing_24px.GroupSmartFilterSolid_24px]: "61728",
  [HdsIconlibraryDiscoverySharing_24px.HideOutline_24px]: "61729",
  [HdsIconlibraryDiscoverySharing_24px.HideSolid_24px]: "61730",
  [HdsIconlibraryDiscoverySharing_24px.LinkOutline_24px]: "61731",
  [HdsIconlibraryDiscoverySharing_24px.LinkSolid_24px]: "61732",
  [HdsIconlibraryDiscoverySharing_24px.ListTypeAOutline_24px]: "61733",
  [HdsIconlibraryDiscoverySharing_24px.ListTypeASolid_24px]: "61734",
  [HdsIconlibraryDiscoverySharing_24px.ListTypeBOutline_24px]: "61735",
  [HdsIconlibraryDiscoverySharing_24px.ListTypeBSolid_24px]: "61736",
  [HdsIconlibraryDiscoverySharing_24px.MapsDownloadOutline_24px]: "61737",
  [HdsIconlibraryDiscoverySharing_24px.MapsDownloadSolid_24px]: "61738",
  [HdsIconlibraryDiscoverySharing_24px.MapsUpdateOutline_24px]: "61739",
  [HdsIconlibraryDiscoverySharing_24px.MapsUpdateSolid_24px]: "61740",
  [HdsIconlibraryDiscoverySharing_24px.NoContentOutline_24px]: "61741",
  [HdsIconlibraryDiscoverySharing_24px.NoContentSolid_24px]: "61742",
  [HdsIconlibraryDiscoverySharing_24px.NotInSyncOutline_24px]: "61743",
  [HdsIconlibraryDiscoverySharing_24px.NotInSyncSolid_24px]: "61744",
  [HdsIconlibraryDiscoverySharing_24px.ShareAndroidOutline_24px]: "61745",
  [HdsIconlibraryDiscoverySharing_24px.ShareAndroidSolid_24px]: "61746",
  [HdsIconlibraryDiscoverySharing_24px.ShareIOsOutline_24px]: "61747",
  [HdsIconlibraryDiscoverySharing_24px.ShareIOsSolid_24px]: "61748",
  [HdsIconlibraryDiscoverySharing_24px.ShowOutline_24px]: "61749",
  [HdsIconlibraryDiscoverySharing_24px.ShowSolid_24px]: "61750",
  [HdsIconlibraryDiscoverySharing_24px.UnlinkOutline_24px]: "61751",
  [HdsIconlibraryDiscoverySharing_24px.UnlinkSolid_24px]: "61752",
  [HdsIconlibraryDiscoverySharing_24px.UploadOutline_24px]: "61753",
  [HdsIconlibraryDiscoverySharing_24px.UploadSolid_24px]: "61754",
  [HdsIconlibraryDiscoverySharing_24px.UploadCloudOutline_24px]: "61755",
  [HdsIconlibraryDiscoverySharing_24px.UploadCloudSolid_24px]: "61756"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-file-24px.js
var HdsIconlibraryFile_24px;
(function(HdsIconlibraryFile_24px2) {
  HdsIconlibraryFile_24px2["ArchiveOutline_24px"] = "archive_outline_24px";
  HdsIconlibraryFile_24px2["ArchiveSolid_24px"] = "archive_solid_24px";
  HdsIconlibraryFile_24px2["CopyOutline_24px"] = "copy_outline_24px";
  HdsIconlibraryFile_24px2["CopySolid_24px"] = "copy_solid_24px";
  HdsIconlibraryFile_24px2["DocFileOutline_24px"] = "DOC-File_outline_24px";
  HdsIconlibraryFile_24px2["DocFileSolid_24px"] = "DOC-File_solid_24px";
  HdsIconlibraryFile_24px2["EpsFileOutline_24px"] = "EPS-File_outline_24px";
  HdsIconlibraryFile_24px2["EpsFileSolid_24px"] = "EPS-File_solid_24px";
  HdsIconlibraryFile_24px2["FileOutline_24px"] = "file_outline_24px";
  HdsIconlibraryFile_24px2["FileSolid_24px"] = "file_solid_24px";
  HdsIconlibraryFile_24px2["GifFileOutline_24px"] = "GIF-File_outline_24px";
  HdsIconlibraryFile_24px2["GifFileSolid_24px"] = "GIF-File_solid_24px";
  HdsIconlibraryFile_24px2["HtmlFileOutline_24px"] = "HTML-File_outline_24px";
  HdsIconlibraryFile_24px2["HtmlFileSolid_24px"] = "HTML-File_solid_24px";
  HdsIconlibraryFile_24px2["ImageOutline_24px"] = "image_outline_24px";
  HdsIconlibraryFile_24px2["ImageSolid_24px"] = "image_solid_24px";
  HdsIconlibraryFile_24px2["JpgFileOutline_24px"] = "JPG-File_outline_24px";
  HdsIconlibraryFile_24px2["JpgFileSolid_24px"] = "JPG-File_solid_24px";
  HdsIconlibraryFile_24px2["JsonFileOutline_24px"] = "JSON-File_outline_24px";
  HdsIconlibraryFile_24px2["JsonFileSolid_24px"] = "JSON-File_solid_24px";
  HdsIconlibraryFile_24px2["Mp3FileOutline_24px"] = "MP3-File_outline_24px";
  HdsIconlibraryFile_24px2["Mp3FileSolid_24px"] = "MP3-File_solid_24px";
  HdsIconlibraryFile_24px2["PdfFileOutline_24px"] = "PDF-File_outline_24px";
  HdsIconlibraryFile_24px2["PdfFileSolid_24px"] = "PDF-File_solid_24px";
  HdsIconlibraryFile_24px2["PngFileOutline_24px"] = "PNG-File_outline_24px";
  HdsIconlibraryFile_24px2["PngFileSolid_24px"] = "PNG-File_solid_24px";
  HdsIconlibraryFile_24px2["SvgFileOutline_24px"] = "SVG-File_outline_24px";
  HdsIconlibraryFile_24px2["SvgFileSolid_24px"] = "SVG-File_solid_24px";
  HdsIconlibraryFile_24px2["TiffFileOutline_24px"] = "TIFF-File_outline_24px";
  HdsIconlibraryFile_24px2["TiffFileSolid_24px"] = "TIFF-File_solid_24px";
  HdsIconlibraryFile_24px2["TxtFileOutline_24px"] = "TXT-File_outline_24px";
  HdsIconlibraryFile_24px2["TxtFileSolid_24px"] = "TXT-File_solid_24px";
  HdsIconlibraryFile_24px2["WavFileOutline_24px"] = "WAV-File_outline_24px";
  HdsIconlibraryFile_24px2["WavFileSolid_24px"] = "WAV-File_solid_24px";
  HdsIconlibraryFile_24px2["ZipOutline_24px"] = "ZIP_outline_24px";
  HdsIconlibraryFile_24px2["ZipSolid_24px"] = "ZIP_solid_24px";
})(HdsIconlibraryFile_24px = HdsIconlibraryFile_24px || (HdsIconlibraryFile_24px = {}));
var HDS_ICONLIBRARY_FILE_24PX_CODEPOINTS = {
  [HdsIconlibraryFile_24px.ArchiveOutline_24px]: "61697",
  [HdsIconlibraryFile_24px.ArchiveSolid_24px]: "61698",
  [HdsIconlibraryFile_24px.CopyOutline_24px]: "61699",
  [HdsIconlibraryFile_24px.CopySolid_24px]: "61700",
  [HdsIconlibraryFile_24px.DocFileOutline_24px]: "61701",
  [HdsIconlibraryFile_24px.DocFileSolid_24px]: "61702",
  [HdsIconlibraryFile_24px.EpsFileOutline_24px]: "61703",
  [HdsIconlibraryFile_24px.EpsFileSolid_24px]: "61704",
  [HdsIconlibraryFile_24px.FileOutline_24px]: "61705",
  [HdsIconlibraryFile_24px.FileSolid_24px]: "61706",
  [HdsIconlibraryFile_24px.GifFileOutline_24px]: "61707",
  [HdsIconlibraryFile_24px.GifFileSolid_24px]: "61708",
  [HdsIconlibraryFile_24px.HtmlFileOutline_24px]: "61709",
  [HdsIconlibraryFile_24px.HtmlFileSolid_24px]: "61710",
  [HdsIconlibraryFile_24px.ImageOutline_24px]: "61711",
  [HdsIconlibraryFile_24px.ImageSolid_24px]: "61712",
  [HdsIconlibraryFile_24px.JpgFileOutline_24px]: "61713",
  [HdsIconlibraryFile_24px.JpgFileSolid_24px]: "61714",
  [HdsIconlibraryFile_24px.JsonFileOutline_24px]: "61715",
  [HdsIconlibraryFile_24px.JsonFileSolid_24px]: "61716",
  [HdsIconlibraryFile_24px.Mp3FileOutline_24px]: "61717",
  [HdsIconlibraryFile_24px.Mp3FileSolid_24px]: "61718",
  [HdsIconlibraryFile_24px.PdfFileOutline_24px]: "61719",
  [HdsIconlibraryFile_24px.PdfFileSolid_24px]: "61720",
  [HdsIconlibraryFile_24px.PngFileOutline_24px]: "61721",
  [HdsIconlibraryFile_24px.PngFileSolid_24px]: "61722",
  [HdsIconlibraryFile_24px.SvgFileOutline_24px]: "61723",
  [HdsIconlibraryFile_24px.SvgFileSolid_24px]: "61724",
  [HdsIconlibraryFile_24px.TiffFileOutline_24px]: "61725",
  [HdsIconlibraryFile_24px.TiffFileSolid_24px]: "61726",
  [HdsIconlibraryFile_24px.TxtFileOutline_24px]: "61727",
  [HdsIconlibraryFile_24px.TxtFileSolid_24px]: "61728",
  [HdsIconlibraryFile_24px.WavFileOutline_24px]: "61729",
  [HdsIconlibraryFile_24px.WavFileSolid_24px]: "61730",
  [HdsIconlibraryFile_24px.ZipOutline_24px]: "61731",
  [HdsIconlibraryFile_24px.ZipSolid_24px]: "61732"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-map-view-24px.js
var HdsIconlibraryMapView_24px;
(function(HdsIconlibraryMapView_24px2) {
  HdsIconlibraryMapView_24px2["i2DOutline_24px"] = "2D_outline_24px";
  HdsIconlibraryMapView_24px2["i2DSolid_24px"] = "2D_solid_24px";
  HdsIconlibraryMapView_24px2["i3DOutline_24px"] = "3D_outline_24px";
  HdsIconlibraryMapView_24px2["i3DSolid_24px"] = "3D_solid_24px";
  HdsIconlibraryMapView_24px2["CameraFrustumOutline_24px"] = "camera-frustum_outline_24px";
  HdsIconlibraryMapView_24px2["CameraFrustumSolid_24px"] = "camera-frustum_solid_24px";
  HdsIconlibraryMapView_24px2["CameraOrbitOutline_24px"] = "camera-orbit_outline_24px";
  HdsIconlibraryMapView_24px2["CameraOrbitSolid_24px"] = "camera-orbit_solid_24px";
  HdsIconlibraryMapView_24px2["CameraTopdownOutline_24px"] = "camera-topdown_outline_24px";
  HdsIconlibraryMapView_24px2["CameraTopdownSolid_24px"] = "camera-topdown_solid_24px";
  HdsIconlibraryMapView_24px2["CameraViewOutline_24px"] = "camera-view_outline_24px";
  HdsIconlibraryMapView_24px2["CameraViewSolid_24px"] = "camera-view_solid_24px";
  HdsIconlibraryMapView_24px2["CompassOutline_24px"] = "compass_outline_24px";
  HdsIconlibraryMapView_24px2["CompassSolid_24px"] = "compass_solid_24px";
  HdsIconlibraryMapView_24px2["CurrentLocationOutline_24px"] = "current-location_outline_24px";
  HdsIconlibraryMapView_24px2["CurrentLocationSolid_24px"] = "current-location_solid_24px";
  HdsIconlibraryMapView_24px2["CurrentLocationOffOutline_24px"] = "current-location-off_outline_24px";
  HdsIconlibraryMapView_24px2["CurrentLocationOffSolid_24px"] = "current-location-off_solid_24px";
  HdsIconlibraryMapView_24px2["DashboardOutline_24px"] = "dashboard_outline_24px";
  HdsIconlibraryMapView_24px2["DashboardSolid_24px"] = "dashboard_solid_24px";
  HdsIconlibraryMapView_24px2["DistanceOutline_24px"] = "distance_outline_24px";
  HdsIconlibraryMapView_24px2["DistanceSolid_24px"] = "distance_solid_24px";
  HdsIconlibraryMapView_24px2["DotIndicatorOutline_24px"] = "dot-indicator_outline_24px";
  HdsIconlibraryMapView_24px2["DotIndicatorSolid_24px"] = "dot-indicator_solid_24px";
  HdsIconlibraryMapView_24px2["EastOutline_24px"] = "east_outline_24px";
  HdsIconlibraryMapView_24px2["EastSolid_24px"] = "east_solid_24px";
  HdsIconlibraryMapView_24px2["EastCharacterOutline_24px"] = "east-character_outline_24px";
  HdsIconlibraryMapView_24px2["EastCharacterSolid_24px"] = "east-character_solid_24px";
  HdsIconlibraryMapView_24px2["FlipHorizontalOutline_24px"] = "flip-horizontal_outline_24px";
  HdsIconlibraryMapView_24px2["FlipHorizontalSolid_24px"] = "flip-horizontal_solid_24px";
  HdsIconlibraryMapView_24px2["FlipVerticalOutline_24px"] = "flip-vertical_outline_24px";
  HdsIconlibraryMapView_24px2["FlipVerticalSolid_24px"] = "flip-vertical_solid_24px";
  HdsIconlibraryMapView_24px2["KeyframeOutline_24px"] = "keyframe_outline_24px";
  HdsIconlibraryMapView_24px2["KeyframeSolid_24px"] = "keyframe_solid_24px";
  HdsIconlibraryMapView_24px2["LayersOutline_24px"] = "layers_outline_24px";
  HdsIconlibraryMapView_24px2["LayersSolid_24px"] = "layers_solid_24px";
  HdsIconlibraryMapView_24px2["LegendOutline_24px"] = "legend_outline_24px";
  HdsIconlibraryMapView_24px2["LegendSolid_24px"] = "legend_solid_24px";
  HdsIconlibraryMapView_24px2["MapMarkerOutline_24px"] = "map-marker_outline_24px";
  HdsIconlibraryMapView_24px2["MapMarkerSolid_24px"] = "map-marker_solid_24px";
  HdsIconlibraryMapView_24px2["MapViewOutline_24px"] = "map-view_outline_24px";
  HdsIconlibraryMapView_24px2["MapViewSolid_24px"] = "map-view_solid_24px";
  HdsIconlibraryMapView_24px2["MarkerOutline_24px"] = "marker_outline_24px";
  HdsIconlibraryMapView_24px2["MarkerSolid_24px"] = "marker_solid_24px";
  HdsIconlibraryMapView_24px2["MaximizeOutline_24px"] = "maximize_outline_24px";
  HdsIconlibraryMapView_24px2["MaximizeSolid_24px"] = "maximize_solid_24px";
  HdsIconlibraryMapView_24px2["MinimizeOutline_24px"] = "minimize_outline_24px";
  HdsIconlibraryMapView_24px2["MinimizeSolid_24px"] = "minimize_solid_24px";
  HdsIconlibraryMapView_24px2["MinusRectangleOutline_24px"] = "minus-rectangle_outline_24px";
  HdsIconlibraryMapView_24px2["MinusRectangleSolid_24px"] = "minus-rectangle_solid_24px";
  HdsIconlibraryMapView_24px2["NorthOutline_24px"] = "north_outline_24px";
  HdsIconlibraryMapView_24px2["NorthSolid_24px"] = "north_solid_24px";
  HdsIconlibraryMapView_24px2["NorthCharacterOutline_24px"] = "north-character_outline_24px";
  HdsIconlibraryMapView_24px2["NorthCharacterSolid_24px"] = "north-character_solid_24px";
  HdsIconlibraryMapView_24px2["NorthEastCharacterOutline_24px"] = "north-east-character_outline_24px";
  HdsIconlibraryMapView_24px2["NorthEastCharacterSolid_24px"] = "north-east-character_solid_24px";
  HdsIconlibraryMapView_24px2["NorthUpOutline_24px"] = "north-up_outline_24px";
  HdsIconlibraryMapView_24px2["NorthUpSolid_24px"] = "north-up_solid_24px";
  HdsIconlibraryMapView_24px2["NorthWestCharacterOutline_24px"] = "north-west-character_outline_24px";
  HdsIconlibraryMapView_24px2["NorthWestCharacterSolid_24px"] = "north-west-character_solid_24px";
  HdsIconlibraryMapView_24px2["NotTiltedOutline_24px"] = "not-tilted_outline_24px";
  HdsIconlibraryMapView_24px2["NotTiltedSolid_24px"] = "not-tilted_solid_24px";
  HdsIconlibraryMapView_24px2["PanViewOutline_24px"] = "pan-view_outline_24px";
  HdsIconlibraryMapView_24px2["PanViewSolid_24px"] = "pan-view_solid_24px";
  HdsIconlibraryMapView_24px2["PipOutline_24px"] = "pip_outline_24px";
  HdsIconlibraryMapView_24px2["PipSolid_24px"] = "pip_solid_24px";
  HdsIconlibraryMapView_24px2["PlaceOutline_24px"] = "place_outline_24px";
  HdsIconlibraryMapView_24px2["PlaceSolid_24px"] = "place_solid_24px";
  HdsIconlibraryMapView_24px2["PlusRectangleOutline_24px"] = "plus-rectangle_outline_24px";
  HdsIconlibraryMapView_24px2["PlusRectangleSolid_24px"] = "plus-rectangle_solid_24px";
  HdsIconlibraryMapView_24px2["PopOutOutline_24px"] = "pop-out_outline_24px";
  HdsIconlibraryMapView_24px2["PopOutSolid_24px"] = "pop-out_solid_24px";
  HdsIconlibraryMapView_24px2["ProjectionGlobeOutline_24px"] = "projection-globe_outline_24px";
  HdsIconlibraryMapView_24px2["ProjectionGlobeSolid_24px"] = "projection-globe_solid_24px";
  HdsIconlibraryMapView_24px2["ProjectionMercatorOutline_24px"] = "projection-mercator_outline_24px";
  HdsIconlibraryMapView_24px2["ProjectionMercatorSolid_24px"] = "projection-mercator_solid_24px";
  HdsIconlibraryMapView_24px2["ResizeOutline_24px"] = "resize_outline_24px";
  HdsIconlibraryMapView_24px2["ResizeSolid_24px"] = "resize_solid_24px";
  HdsIconlibraryMapView_24px2["SelectSectionOutline_24px"] = "select-section_outline_24px";
  HdsIconlibraryMapView_24px2["SelectSectionSolid_24px"] = "select-section_solid_24px";
  HdsIconlibraryMapView_24px2["SingleScreenOutline_24px"] = "single-screen_outline_24px";
  HdsIconlibraryMapView_24px2["SingleScreenSolid_24px"] = "single-screen_solid_24px";
  HdsIconlibraryMapView_24px2["SouthOutline_24px"] = "south_outline_24px";
  HdsIconlibraryMapView_24px2["SouthSolid_24px"] = "south_solid_24px";
  HdsIconlibraryMapView_24px2["SouthCharacterOutline_24px"] = "south-character_outline_24px";
  HdsIconlibraryMapView_24px2["SouthCharacterSolid_24px"] = "south-character_solid_24px";
  HdsIconlibraryMapView_24px2["SouthEastCharacterOutline_24px"] = "south-east-character_outline_24px";
  HdsIconlibraryMapView_24px2["SouthEastCharacterSolid_24px"] = "south-east-character_solid_24px";
  HdsIconlibraryMapView_24px2["SouthWestCharacterOutline_24px"] = "south-west-character_outline_24px";
  HdsIconlibraryMapView_24px2["SouthWestCharacterSolid_24px"] = "south-west-character_solid_24px";
  HdsIconlibraryMapView_24px2["SplitTripleVOutline_24px"] = "split-triple-v_outline_24px";
  HdsIconlibraryMapView_24px2["SplitTripleVSolid_24px"] = "split-triple-v_solid_24px";
  HdsIconlibraryMapView_24px2["SplitscreenHOutline_24px"] = "splitscreen-h_outline_24px";
  HdsIconlibraryMapView_24px2["SplitscreenHSolid_24px"] = "splitscreen-h_solid_24px";
  HdsIconlibraryMapView_24px2["SplitscreenVOutline_24px"] = "splitscreen-v_outline_24px";
  HdsIconlibraryMapView_24px2["SplitscreenVSolid_24px"] = "splitscreen-v_solid_24px";
  HdsIconlibraryMapView_24px2["StatisticsOutline_24px"] = "statistics_outline_24px";
  HdsIconlibraryMapView_24px2["StatisticsSolid_24px"] = "statistics_solid_24px";
  HdsIconlibraryMapView_24px2["TiltedOutline_24px"] = "tilted_outline_24px";
  HdsIconlibraryMapView_24px2["TiltedSolid_24px"] = "tilted_solid_24px";
  HdsIconlibraryMapView_24px2["ValueDecreaseOutline_24px"] = "value-decrease_outline_24px";
  HdsIconlibraryMapView_24px2["ValueDecreaseSolid_24px"] = "value-decrease_solid_24px";
  HdsIconlibraryMapView_24px2["ValueDecreaseHighOutline_24px"] = "value-decrease-high_outline_24px";
  HdsIconlibraryMapView_24px2["ValueDecreaseHighSolid_24px"] = "value-decrease-high_solid_24px";
  HdsIconlibraryMapView_24px2["ValueIncreaseOutline_24px"] = "value-increase_outline_24px";
  HdsIconlibraryMapView_24px2["ValueIncreaseSolid_24px"] = "value-increase_solid_24px";
  HdsIconlibraryMapView_24px2["ValueIncreaseHighOutline_24px"] = "value-increase-high_outline_24px";
  HdsIconlibraryMapView_24px2["ValueIncreaseHighSolid_24px"] = "value-increase-high_solid_24px";
  HdsIconlibraryMapView_24px2["ViewAllOutline_24px"] = "view-all_outline_24px";
  HdsIconlibraryMapView_24px2["ViewAllSolid_24px"] = "view-all_solid_24px";
  HdsIconlibraryMapView_24px2["ViewCenterOutline_24px"] = "view-center_outline_24px";
  HdsIconlibraryMapView_24px2["ViewCenterSolid_24px"] = "view-center_solid_24px";
  HdsIconlibraryMapView_24px2["WestOutline_24px"] = "west_outline_24px";
  HdsIconlibraryMapView_24px2["WestSolid_24px"] = "west_solid_24px";
  HdsIconlibraryMapView_24px2["WestCharacterOutline_24px"] = "west-character_outline_24px";
  HdsIconlibraryMapView_24px2["WestCharacterSolid_24px"] = "west-character_solid_24px";
  HdsIconlibraryMapView_24px2["WorkspacesOutline_24px"] = "workspaces_outline_24px";
  HdsIconlibraryMapView_24px2["WorkspacesSolid_24px"] = "workspaces_solid_24px";
})(HdsIconlibraryMapView_24px = HdsIconlibraryMapView_24px || (HdsIconlibraryMapView_24px = {}));
var HDS_ICONLIBRARY_MAP_VIEW_24PX_CODEPOINTS = {
  [HdsIconlibraryMapView_24px.i2DOutline_24px]: "61697",
  [HdsIconlibraryMapView_24px.i2DSolid_24px]: "61698",
  [HdsIconlibraryMapView_24px.i3DOutline_24px]: "61699",
  [HdsIconlibraryMapView_24px.i3DSolid_24px]: "61700",
  [HdsIconlibraryMapView_24px.CameraFrustumOutline_24px]: "61701",
  [HdsIconlibraryMapView_24px.CameraFrustumSolid_24px]: "61702",
  [HdsIconlibraryMapView_24px.CameraOrbitOutline_24px]: "61703",
  [HdsIconlibraryMapView_24px.CameraOrbitSolid_24px]: "61704",
  [HdsIconlibraryMapView_24px.CameraTopdownOutline_24px]: "61705",
  [HdsIconlibraryMapView_24px.CameraTopdownSolid_24px]: "61706",
  [HdsIconlibraryMapView_24px.CameraViewOutline_24px]: "61707",
  [HdsIconlibraryMapView_24px.CameraViewSolid_24px]: "61708",
  [HdsIconlibraryMapView_24px.CompassOutline_24px]: "61709",
  [HdsIconlibraryMapView_24px.CompassSolid_24px]: "61710",
  [HdsIconlibraryMapView_24px.CurrentLocationOutline_24px]: "61711",
  [HdsIconlibraryMapView_24px.CurrentLocationSolid_24px]: "61712",
  [HdsIconlibraryMapView_24px.CurrentLocationOffOutline_24px]: "61713",
  [HdsIconlibraryMapView_24px.CurrentLocationOffSolid_24px]: "61714",
  [HdsIconlibraryMapView_24px.DashboardOutline_24px]: "61715",
  [HdsIconlibraryMapView_24px.DashboardSolid_24px]: "61716",
  [HdsIconlibraryMapView_24px.DistanceOutline_24px]: "61717",
  [HdsIconlibraryMapView_24px.DistanceSolid_24px]: "61718",
  [HdsIconlibraryMapView_24px.DotIndicatorOutline_24px]: "61719",
  [HdsIconlibraryMapView_24px.DotIndicatorSolid_24px]: "61720",
  [HdsIconlibraryMapView_24px.EastOutline_24px]: "61721",
  [HdsIconlibraryMapView_24px.EastSolid_24px]: "61722",
  [HdsIconlibraryMapView_24px.EastCharacterOutline_24px]: "61723",
  [HdsIconlibraryMapView_24px.EastCharacterSolid_24px]: "61724",
  [HdsIconlibraryMapView_24px.FlipHorizontalOutline_24px]: "61725",
  [HdsIconlibraryMapView_24px.FlipHorizontalSolid_24px]: "61726",
  [HdsIconlibraryMapView_24px.FlipVerticalOutline_24px]: "61727",
  [HdsIconlibraryMapView_24px.FlipVerticalSolid_24px]: "61728",
  [HdsIconlibraryMapView_24px.KeyframeOutline_24px]: "61729",
  [HdsIconlibraryMapView_24px.KeyframeSolid_24px]: "61730",
  [HdsIconlibraryMapView_24px.LayersOutline_24px]: "61731",
  [HdsIconlibraryMapView_24px.LayersSolid_24px]: "61732",
  [HdsIconlibraryMapView_24px.LegendOutline_24px]: "61733",
  [HdsIconlibraryMapView_24px.LegendSolid_24px]: "61734",
  [HdsIconlibraryMapView_24px.MapMarkerOutline_24px]: "61735",
  [HdsIconlibraryMapView_24px.MapMarkerSolid_24px]: "61736",
  [HdsIconlibraryMapView_24px.MapViewOutline_24px]: "61737",
  [HdsIconlibraryMapView_24px.MapViewSolid_24px]: "61738",
  [HdsIconlibraryMapView_24px.MarkerOutline_24px]: "61739",
  [HdsIconlibraryMapView_24px.MarkerSolid_24px]: "61740",
  [HdsIconlibraryMapView_24px.MaximizeOutline_24px]: "61741",
  [HdsIconlibraryMapView_24px.MaximizeSolid_24px]: "61742",
  [HdsIconlibraryMapView_24px.MinimizeOutline_24px]: "61743",
  [HdsIconlibraryMapView_24px.MinimizeSolid_24px]: "61744",
  [HdsIconlibraryMapView_24px.MinusRectangleOutline_24px]: "61745",
  [HdsIconlibraryMapView_24px.MinusRectangleSolid_24px]: "61746",
  [HdsIconlibraryMapView_24px.NorthOutline_24px]: "61747",
  [HdsIconlibraryMapView_24px.NorthSolid_24px]: "61748",
  [HdsIconlibraryMapView_24px.NorthCharacterOutline_24px]: "61749",
  [HdsIconlibraryMapView_24px.NorthCharacterSolid_24px]: "61750",
  [HdsIconlibraryMapView_24px.NorthEastCharacterOutline_24px]: "61751",
  [HdsIconlibraryMapView_24px.NorthEastCharacterSolid_24px]: "61752",
  [HdsIconlibraryMapView_24px.NorthUpOutline_24px]: "61753",
  [HdsIconlibraryMapView_24px.NorthUpSolid_24px]: "61754",
  [HdsIconlibraryMapView_24px.NorthWestCharacterOutline_24px]: "61755",
  [HdsIconlibraryMapView_24px.NorthWestCharacterSolid_24px]: "61756",
  [HdsIconlibraryMapView_24px.NotTiltedOutline_24px]: "61757",
  [HdsIconlibraryMapView_24px.NotTiltedSolid_24px]: "61758",
  [HdsIconlibraryMapView_24px.PanViewOutline_24px]: "61759",
  [HdsIconlibraryMapView_24px.PanViewSolid_24px]: "61760",
  [HdsIconlibraryMapView_24px.PipOutline_24px]: "61761",
  [HdsIconlibraryMapView_24px.PipSolid_24px]: "61762",
  [HdsIconlibraryMapView_24px.PlaceOutline_24px]: "61763",
  [HdsIconlibraryMapView_24px.PlaceSolid_24px]: "61764",
  [HdsIconlibraryMapView_24px.PlusRectangleOutline_24px]: "61765",
  [HdsIconlibraryMapView_24px.PlusRectangleSolid_24px]: "61766",
  [HdsIconlibraryMapView_24px.PopOutOutline_24px]: "61767",
  [HdsIconlibraryMapView_24px.PopOutSolid_24px]: "61768",
  [HdsIconlibraryMapView_24px.ProjectionGlobeOutline_24px]: "61769",
  [HdsIconlibraryMapView_24px.ProjectionGlobeSolid_24px]: "61770",
  [HdsIconlibraryMapView_24px.ProjectionMercatorOutline_24px]: "61771",
  [HdsIconlibraryMapView_24px.ProjectionMercatorSolid_24px]: "61772",
  [HdsIconlibraryMapView_24px.ResizeOutline_24px]: "61773",
  [HdsIconlibraryMapView_24px.ResizeSolid_24px]: "61774",
  [HdsIconlibraryMapView_24px.SelectSectionOutline_24px]: "61775",
  [HdsIconlibraryMapView_24px.SelectSectionSolid_24px]: "61776",
  [HdsIconlibraryMapView_24px.SingleScreenOutline_24px]: "61777",
  [HdsIconlibraryMapView_24px.SingleScreenSolid_24px]: "61778",
  [HdsIconlibraryMapView_24px.SouthOutline_24px]: "61779",
  [HdsIconlibraryMapView_24px.SouthSolid_24px]: "61780",
  [HdsIconlibraryMapView_24px.SouthCharacterOutline_24px]: "61781",
  [HdsIconlibraryMapView_24px.SouthCharacterSolid_24px]: "61782",
  [HdsIconlibraryMapView_24px.SouthEastCharacterOutline_24px]: "61783",
  [HdsIconlibraryMapView_24px.SouthEastCharacterSolid_24px]: "61784",
  [HdsIconlibraryMapView_24px.SouthWestCharacterOutline_24px]: "61785",
  [HdsIconlibraryMapView_24px.SouthWestCharacterSolid_24px]: "61786",
  [HdsIconlibraryMapView_24px.SplitTripleVOutline_24px]: "61787",
  [HdsIconlibraryMapView_24px.SplitTripleVSolid_24px]: "61788",
  [HdsIconlibraryMapView_24px.SplitscreenHOutline_24px]: "61789",
  [HdsIconlibraryMapView_24px.SplitscreenHSolid_24px]: "61790",
  [HdsIconlibraryMapView_24px.SplitscreenVOutline_24px]: "61791",
  [HdsIconlibraryMapView_24px.SplitscreenVSolid_24px]: "61792",
  [HdsIconlibraryMapView_24px.StatisticsOutline_24px]: "61793",
  [HdsIconlibraryMapView_24px.StatisticsSolid_24px]: "61794",
  [HdsIconlibraryMapView_24px.TiltedOutline_24px]: "61795",
  [HdsIconlibraryMapView_24px.TiltedSolid_24px]: "61796",
  [HdsIconlibraryMapView_24px.ValueDecreaseOutline_24px]: "61797",
  [HdsIconlibraryMapView_24px.ValueDecreaseSolid_24px]: "61798",
  [HdsIconlibraryMapView_24px.ValueDecreaseHighOutline_24px]: "61799",
  [HdsIconlibraryMapView_24px.ValueDecreaseHighSolid_24px]: "61800",
  [HdsIconlibraryMapView_24px.ValueIncreaseOutline_24px]: "61801",
  [HdsIconlibraryMapView_24px.ValueIncreaseSolid_24px]: "61802",
  [HdsIconlibraryMapView_24px.ValueIncreaseHighOutline_24px]: "61803",
  [HdsIconlibraryMapView_24px.ValueIncreaseHighSolid_24px]: "61804",
  [HdsIconlibraryMapView_24px.ViewAllOutline_24px]: "61805",
  [HdsIconlibraryMapView_24px.ViewAllSolid_24px]: "61806",
  [HdsIconlibraryMapView_24px.ViewCenterOutline_24px]: "61807",
  [HdsIconlibraryMapView_24px.ViewCenterSolid_24px]: "61808",
  [HdsIconlibraryMapView_24px.WestOutline_24px]: "61809",
  [HdsIconlibraryMapView_24px.WestSolid_24px]: "61810",
  [HdsIconlibraryMapView_24px.WestCharacterOutline_24px]: "61811",
  [HdsIconlibraryMapView_24px.WestCharacterSolid_24px]: "61812",
  [HdsIconlibraryMapView_24px.WorkspacesOutline_24px]: "61813",
  [HdsIconlibraryMapView_24px.WorkspacesSolid_24px]: "61814"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-misc-24px.js
var HdsIconlibraryMisc_24px;
(function(HdsIconlibraryMisc_24px2) {
  HdsIconlibraryMisc_24px2["AddAddressNumberOutline_24px"] = "add-address-number_outline_24px";
  HdsIconlibraryMisc_24px2["AddAddressNumberSolid_24px"] = "add-address-number_solid_24px";
  HdsIconlibraryMisc_24px2["AddressNumberOutline_24px"] = "address-number_outline_24px";
  HdsIconlibraryMisc_24px2["AddressNumberSolid_24px"] = "address-number_solid_24px";
  HdsIconlibraryMisc_24px2["BuildingHomeOutline_24px"] = "building-home_outline_24px";
  HdsIconlibraryMisc_24px2["BuildingHomeSolid_24px"] = "building-home_solid_24px";
  HdsIconlibraryMisc_24px2["BuildingOffOutline_24px"] = "building-off_outline_24px";
  HdsIconlibraryMisc_24px2["BuildingOffSolid_24px"] = "building-off_solid_24px";
  HdsIconlibraryMisc_24px2["BuildingOfficeOutline_24px"] = "building-office_outline_24px";
  HdsIconlibraryMisc_24px2["BuildingOfficeSolid_24px"] = "building-office_solid_24px";
  HdsIconlibraryMisc_24px2["CalculatorOutline_24px"] = "calculator_outline_24px";
  HdsIconlibraryMisc_24px2["CalculatorSolid_24px"] = "calculator_solid_24px";
  HdsIconlibraryMisc_24px2["CartOutline_24px"] = "cart_outline_24px";
  HdsIconlibraryMisc_24px2["CartSolid_24px"] = "cart_solid_24px";
  HdsIconlibraryMisc_24px2["CodeOutline_24px"] = "code_outline_24px";
  HdsIconlibraryMisc_24px2["CodeSolid_24px"] = "code_solid_24px";
  HdsIconlibraryMisc_24px2["CreditCardOutline_24px"] = "credit-card_outline_24px";
  HdsIconlibraryMisc_24px2["CreditCardSolid_24px"] = "credit-card_solid_24px";
  HdsIconlibraryMisc_24px2["DatasetOutline_24px"] = "dataset_outline_24px";
  HdsIconlibraryMisc_24px2["DatasetSolid_24px"] = "dataset_solid_24px";
  HdsIconlibraryMisc_24px2["ElevatorOutline_24px"] = "elevator_outline_24px";
  HdsIconlibraryMisc_24px2["ElevatorSolid_24px"] = "elevator_solid_24px";
  HdsIconlibraryMisc_24px2["EnvironmentOutline_24px"] = "environment_outline_24px";
  HdsIconlibraryMisc_24px2["EnvironmentSolid_24px"] = "environment_solid_24px";
  HdsIconlibraryMisc_24px2["EscalatorOutline_24px"] = "escalator_outline_24px";
  HdsIconlibraryMisc_24px2["EscalatorSolid_24px"] = "escalator_solid_24px";
  HdsIconlibraryMisc_24px2["EscalatorDownOutline_24px"] = "escalator-down_outline_24px";
  HdsIconlibraryMisc_24px2["EscalatorDownSolid_24px"] = "escalator-down_solid_24px";
  HdsIconlibraryMisc_24px2["EscalatorUpOutline_24px"] = "escalator-up_outline_24px";
  HdsIconlibraryMisc_24px2["EscalatorUpSolid_24px"] = "escalator-up_solid_24px";
  HdsIconlibraryMisc_24px2["ExpertOutline_24px"] = "expert_outline_24px";
  HdsIconlibraryMisc_24px2["ExpertSolid_24px"] = "expert_solid_24px";
  HdsIconlibraryMisc_24px2["FamilyOutline_24px"] = "family_outline_24px";
  HdsIconlibraryMisc_24px2["FamilySolid_24px"] = "family_solid_24px";
  HdsIconlibraryMisc_24px2["FlashlightOutline_24px"] = "flashlight_outline_24px";
  HdsIconlibraryMisc_24px2["FlashlightSolid_24px"] = "flashlight_solid_24px";
  HdsIconlibraryMisc_24px2["GlobalOutline_24px"] = "global_outline_24px";
  HdsIconlibraryMisc_24px2["GlobalSolid_24px"] = "global_solid_24px";
  HdsIconlibraryMisc_24px2["HandshakeOutline_24px"] = "handshake_outline_24px";
  HdsIconlibraryMisc_24px2["HandshakeSolid_24px"] = "handshake_solid_24px";
  HdsIconlibraryMisc_24px2["HardDriveOutline_24px"] = "hard-drive_outline_24px";
  HdsIconlibraryMisc_24px2["HardDriveSolid_24px"] = "hard-drive_solid_24px";
  HdsIconlibraryMisc_24px2["HeadphonesOutline_24px"] = "headphones_outline_24px";
  HdsIconlibraryMisc_24px2["HeadphonesSolid_24px"] = "headphones_solid_24px";
  HdsIconlibraryMisc_24px2["InboxOutline_24px"] = "inbox_outline_24px";
  HdsIconlibraryMisc_24px2["InboxSolid_24px"] = "inbox_solid_24px";
  HdsIconlibraryMisc_24px2["InboxAttentionOutline_24px"] = "inbox-attention_outline_24px";
  HdsIconlibraryMisc_24px2["InboxAttentionSolid_24px"] = "inbox-attention_solid_24px";
  HdsIconlibraryMisc_24px2["KeyOutline_24px"] = "key_outline_24px";
  HdsIconlibraryMisc_24px2["KeySolid_24px"] = "key_solid_24px";
  HdsIconlibraryMisc_24px2["KitchenOutline_24px"] = "kitchen_outline_24px";
  HdsIconlibraryMisc_24px2["KitchenSolid_24px"] = "kitchen_solid_24px";
  HdsIconlibraryMisc_24px2["LaboratoryOutline_24px"] = "laboratory_outline_24px";
  HdsIconlibraryMisc_24px2["LaboratorySolid_24px"] = "laboratory_solid_24px";
  HdsIconlibraryMisc_24px2["ManOutline_24px"] = "man_outline_24px";
  HdsIconlibraryMisc_24px2["ManSolid_24px"] = "man_solid_24px";
  HdsIconlibraryMisc_24px2["MeetingPointOutline_24px"] = "meeting-point_outline_24px";
  HdsIconlibraryMisc_24px2["MeetingPointSolid_24px"] = "meeting-point_solid_24px";
  HdsIconlibraryMisc_24px2["NeighbourhoodOutline_24px"] = "neighbourhood_outline_24px";
  HdsIconlibraryMisc_24px2["NeighbourhoodSolid_24px"] = "neighbourhood_solid_24px";
  HdsIconlibraryMisc_24px2["PacemakerOutline_24px"] = "pacemaker_outline_24px";
  HdsIconlibraryMisc_24px2["PacemakerSolid_24px"] = "pacemaker_solid_24px";
  HdsIconlibraryMisc_24px2["PeopleOutline_24px"] = "people_outline_24px";
  HdsIconlibraryMisc_24px2["PeopleSolid_24px"] = "people_solid_24px";
  HdsIconlibraryMisc_24px2["PoopOutline_24px"] = "poop_outline_24px";
  HdsIconlibraryMisc_24px2["PoopSolid_24px"] = "poop_solid_24px";
  HdsIconlibraryMisc_24px2["ProjectOutline_24px"] = "project_outline_24px";
  HdsIconlibraryMisc_24px2["ProjectSolid_24px"] = "project_solid_24px";
  HdsIconlibraryMisc_24px2["ProjectsOutline_24px"] = "projects_outline_24px";
  HdsIconlibraryMisc_24px2["ProjectsSolid_24px"] = "projects_solid_24px";
  HdsIconlibraryMisc_24px2["ReusableOutline_24px"] = "reusable_outline_24px";
  HdsIconlibraryMisc_24px2["ReusableSolid_24px"] = "reusable_solid_24px";
  HdsIconlibraryMisc_24px2["ServiceOutline_24px"] = "service_outline_24px";
  HdsIconlibraryMisc_24px2["ServiceSolid_24px"] = "service_solid_24px";
  HdsIconlibraryMisc_24px2["StairsOutline_24px"] = "stairs_outline_24px";
  HdsIconlibraryMisc_24px2["StairsSolid_24px"] = "stairs_solid_24px";
  HdsIconlibraryMisc_24px2["StopwatchOutline_24px"] = "stopwatch_outline_24px";
  HdsIconlibraryMisc_24px2["StopwatchSolid_24px"] = "stopwatch_solid_24px";
  HdsIconlibraryMisc_24px2["SuitcaseOutline_24px"] = "suitcase_outline_24px";
  HdsIconlibraryMisc_24px2["SuitcaseSolid_24px"] = "suitcase_solid_24px";
  HdsIconlibraryMisc_24px2["TerrainOutline_24px"] = "terrain_outline_24px";
  HdsIconlibraryMisc_24px2["TerrainSolid_24px"] = "terrain_solid_24px";
  HdsIconlibraryMisc_24px2["TicketBarrierOutline_24px"] = "ticket-barrier_outline_24px";
  HdsIconlibraryMisc_24px2["TicketBarrierSolid_24px"] = "ticket-barrier_solid_24px";
  HdsIconlibraryMisc_24px2["TrophyOutline_24px"] = "trophy_outline_24px";
  HdsIconlibraryMisc_24px2["TrophySolid_24px"] = "trophy_solid_24px";
  HdsIconlibraryMisc_24px2["VoiceCommandOutline_24px"] = "voice-command_outline_24px";
  HdsIconlibraryMisc_24px2["VoiceCommandSolid_24px"] = "voice-command_solid_24px";
  HdsIconlibraryMisc_24px2["WheelchairOutline_24px"] = "wheelchair_outline_24px";
  HdsIconlibraryMisc_24px2["WheelchairSolid_24px"] = "wheelchair_solid_24px";
  HdsIconlibraryMisc_24px2["WomanOutline_24px"] = "woman_outline_24px";
  HdsIconlibraryMisc_24px2["WomanSolid_24px"] = "woman_solid_24px";
})(HdsIconlibraryMisc_24px = HdsIconlibraryMisc_24px || (HdsIconlibraryMisc_24px = {}));
var HDS_ICONLIBRARY_MISC_24PX_CODEPOINTS = {
  [HdsIconlibraryMisc_24px.AddAddressNumberOutline_24px]: "61697",
  [HdsIconlibraryMisc_24px.AddAddressNumberSolid_24px]: "61698",
  [HdsIconlibraryMisc_24px.AddressNumberOutline_24px]: "61699",
  [HdsIconlibraryMisc_24px.AddressNumberSolid_24px]: "61700",
  [HdsIconlibraryMisc_24px.BuildingHomeOutline_24px]: "61701",
  [HdsIconlibraryMisc_24px.BuildingHomeSolid_24px]: "61702",
  [HdsIconlibraryMisc_24px.BuildingOffOutline_24px]: "61703",
  [HdsIconlibraryMisc_24px.BuildingOffSolid_24px]: "61704",
  [HdsIconlibraryMisc_24px.BuildingOfficeOutline_24px]: "61705",
  [HdsIconlibraryMisc_24px.BuildingOfficeSolid_24px]: "61706",
  [HdsIconlibraryMisc_24px.CalculatorOutline_24px]: "61707",
  [HdsIconlibraryMisc_24px.CalculatorSolid_24px]: "61708",
  [HdsIconlibraryMisc_24px.CartOutline_24px]: "61709",
  [HdsIconlibraryMisc_24px.CartSolid_24px]: "61710",
  [HdsIconlibraryMisc_24px.CodeOutline_24px]: "61711",
  [HdsIconlibraryMisc_24px.CodeSolid_24px]: "61712",
  [HdsIconlibraryMisc_24px.CreditCardOutline_24px]: "61713",
  [HdsIconlibraryMisc_24px.CreditCardSolid_24px]: "61714",
  [HdsIconlibraryMisc_24px.DatasetOutline_24px]: "61715",
  [HdsIconlibraryMisc_24px.DatasetSolid_24px]: "61716",
  [HdsIconlibraryMisc_24px.ElevatorOutline_24px]: "61717",
  [HdsIconlibraryMisc_24px.ElevatorSolid_24px]: "61718",
  [HdsIconlibraryMisc_24px.EnvironmentOutline_24px]: "61719",
  [HdsIconlibraryMisc_24px.EnvironmentSolid_24px]: "61720",
  [HdsIconlibraryMisc_24px.EscalatorOutline_24px]: "61721",
  [HdsIconlibraryMisc_24px.EscalatorSolid_24px]: "61722",
  [HdsIconlibraryMisc_24px.EscalatorDownOutline_24px]: "61723",
  [HdsIconlibraryMisc_24px.EscalatorDownSolid_24px]: "61724",
  [HdsIconlibraryMisc_24px.EscalatorUpOutline_24px]: "61725",
  [HdsIconlibraryMisc_24px.EscalatorUpSolid_24px]: "61726",
  [HdsIconlibraryMisc_24px.ExpertOutline_24px]: "61727",
  [HdsIconlibraryMisc_24px.ExpertSolid_24px]: "61728",
  [HdsIconlibraryMisc_24px.FamilyOutline_24px]: "61729",
  [HdsIconlibraryMisc_24px.FamilySolid_24px]: "61730",
  [HdsIconlibraryMisc_24px.FlashlightOutline_24px]: "61731",
  [HdsIconlibraryMisc_24px.FlashlightSolid_24px]: "61732",
  [HdsIconlibraryMisc_24px.GlobalOutline_24px]: "61733",
  [HdsIconlibraryMisc_24px.GlobalSolid_24px]: "61734",
  [HdsIconlibraryMisc_24px.HandshakeOutline_24px]: "61735",
  [HdsIconlibraryMisc_24px.HandshakeSolid_24px]: "61736",
  [HdsIconlibraryMisc_24px.HardDriveOutline_24px]: "61737",
  [HdsIconlibraryMisc_24px.HardDriveSolid_24px]: "61738",
  [HdsIconlibraryMisc_24px.HeadphonesOutline_24px]: "61739",
  [HdsIconlibraryMisc_24px.HeadphonesSolid_24px]: "61740",
  [HdsIconlibraryMisc_24px.InboxOutline_24px]: "61741",
  [HdsIconlibraryMisc_24px.InboxSolid_24px]: "61742",
  [HdsIconlibraryMisc_24px.InboxAttentionOutline_24px]: "61743",
  [HdsIconlibraryMisc_24px.InboxAttentionSolid_24px]: "61744",
  [HdsIconlibraryMisc_24px.KeyOutline_24px]: "61745",
  [HdsIconlibraryMisc_24px.KeySolid_24px]: "61746",
  [HdsIconlibraryMisc_24px.KitchenOutline_24px]: "61747",
  [HdsIconlibraryMisc_24px.KitchenSolid_24px]: "61748",
  [HdsIconlibraryMisc_24px.LaboratoryOutline_24px]: "61749",
  [HdsIconlibraryMisc_24px.LaboratorySolid_24px]: "61750",
  [HdsIconlibraryMisc_24px.ManOutline_24px]: "61751",
  [HdsIconlibraryMisc_24px.ManSolid_24px]: "61752",
  [HdsIconlibraryMisc_24px.MeetingPointOutline_24px]: "61753",
  [HdsIconlibraryMisc_24px.MeetingPointSolid_24px]: "61754",
  [HdsIconlibraryMisc_24px.NeighbourhoodOutline_24px]: "61755",
  [HdsIconlibraryMisc_24px.NeighbourhoodSolid_24px]: "61756",
  [HdsIconlibraryMisc_24px.PacemakerOutline_24px]: "61757",
  [HdsIconlibraryMisc_24px.PacemakerSolid_24px]: "61758",
  [HdsIconlibraryMisc_24px.PeopleOutline_24px]: "61759",
  [HdsIconlibraryMisc_24px.PeopleSolid_24px]: "61760",
  [HdsIconlibraryMisc_24px.PoopOutline_24px]: "61761",
  [HdsIconlibraryMisc_24px.PoopSolid_24px]: "61762",
  [HdsIconlibraryMisc_24px.ProjectOutline_24px]: "61763",
  [HdsIconlibraryMisc_24px.ProjectSolid_24px]: "61764",
  [HdsIconlibraryMisc_24px.ProjectsOutline_24px]: "61765",
  [HdsIconlibraryMisc_24px.ProjectsSolid_24px]: "61766",
  [HdsIconlibraryMisc_24px.ReusableOutline_24px]: "61767",
  [HdsIconlibraryMisc_24px.ReusableSolid_24px]: "61768",
  [HdsIconlibraryMisc_24px.ServiceOutline_24px]: "61769",
  [HdsIconlibraryMisc_24px.ServiceSolid_24px]: "61770",
  [HdsIconlibraryMisc_24px.StairsOutline_24px]: "61771",
  [HdsIconlibraryMisc_24px.StairsSolid_24px]: "61772",
  [HdsIconlibraryMisc_24px.StopwatchOutline_24px]: "61773",
  [HdsIconlibraryMisc_24px.StopwatchSolid_24px]: "61774",
  [HdsIconlibraryMisc_24px.SuitcaseOutline_24px]: "61775",
  [HdsIconlibraryMisc_24px.SuitcaseSolid_24px]: "61776",
  [HdsIconlibraryMisc_24px.TerrainOutline_24px]: "61777",
  [HdsIconlibraryMisc_24px.TerrainSolid_24px]: "61778",
  [HdsIconlibraryMisc_24px.TicketBarrierOutline_24px]: "61779",
  [HdsIconlibraryMisc_24px.TicketBarrierSolid_24px]: "61780",
  [HdsIconlibraryMisc_24px.TrophyOutline_24px]: "61781",
  [HdsIconlibraryMisc_24px.TrophySolid_24px]: "61782",
  [HdsIconlibraryMisc_24px.VoiceCommandOutline_24px]: "61783",
  [HdsIconlibraryMisc_24px.VoiceCommandSolid_24px]: "61784",
  [HdsIconlibraryMisc_24px.WheelchairOutline_24px]: "61785",
  [HdsIconlibraryMisc_24px.WheelchairSolid_24px]: "61786",
  [HdsIconlibraryMisc_24px.WomanOutline_24px]: "61787",
  [HdsIconlibraryMisc_24px.WomanSolid_24px]: "61788"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-navigation-image-24px.js
var HdsIconlibraryNavigationImage_24px;
(function(HdsIconlibraryNavigationImage_24px2) {
  HdsIconlibraryNavigationImage_24px2["BrightnessOffOutline_24px"] = "brightness-off_outline_24px";
  HdsIconlibraryNavigationImage_24px2["BrightnessOffSolid_24px"] = "brightness-off_solid_24px";
  HdsIconlibraryNavigationImage_24px2["BrightnessOnOutline_24px"] = "brightness-on_outline_24px";
  HdsIconlibraryNavigationImage_24px2["BrightnessOnSolid_24px"] = "brightness-on_solid_24px";
  HdsIconlibraryNavigationImage_24px2["ColorFullOutline_24px"] = "color-full_outline_24px";
  HdsIconlibraryNavigationImage_24px2["ColorFullSolid_24px"] = "color-full_solid_24px";
  HdsIconlibraryNavigationImage_24px2["ColorInvertAOutline_24px"] = "color-invert-A_outline_24px";
  HdsIconlibraryNavigationImage_24px2["ColorInvertASolid_24px"] = "color-invert-A_solid_24px";
  HdsIconlibraryNavigationImage_24px2["ColorInvertBOutline_24px"] = "color-invert-B_outline_24px";
  HdsIconlibraryNavigationImage_24px2["ColorInvertBSolid_24px"] = "color-invert-B_solid_24px";
  HdsIconlibraryNavigationImage_24px2["ColorOverrideOutline_24px"] = "color-override_outline_24px";
  HdsIconlibraryNavigationImage_24px2["ColorOverrideSolid_24px"] = "color-override_solid_24px";
  HdsIconlibraryNavigationImage_24px2["ColorToneOutline_24px"] = "color-tone_outline_24px";
  HdsIconlibraryNavigationImage_24px2["ColorToneSolid_24px"] = "color-tone_solid_24px";
  HdsIconlibraryNavigationImage_24px2["ContrastOutline_24px"] = "contrast_outline_24px";
  HdsIconlibraryNavigationImage_24px2["ContrastSolid_24px"] = "contrast_solid_24px";
  HdsIconlibraryNavigationImage_24px2["FirstOutline_24px"] = "first_outline_24px";
  HdsIconlibraryNavigationImage_24px2["FirstSolid_24px"] = "first_solid_24px";
  HdsIconlibraryNavigationImage_24px2["LastOutline_24px"] = "last_outline_24px";
  HdsIconlibraryNavigationImage_24px2["LastSolid_24px"] = "last_solid_24px";
  HdsIconlibraryNavigationImage_24px2["NextOutline_24px"] = "next_outline_24px";
  HdsIconlibraryNavigationImage_24px2["NextSolid_24px"] = "next_solid_24px";
  HdsIconlibraryNavigationImage_24px2["OpacityOffOutline_24px"] = "opacity-off_outline_24px";
  HdsIconlibraryNavigationImage_24px2["OpacityOffSolid_24px"] = "opacity-off_solid_24px";
  HdsIconlibraryNavigationImage_24px2["OpacityOnOutline_24px"] = "opacity-on_outline_24px";
  HdsIconlibraryNavigationImage_24px2["OpacityOnSolid_24px"] = "opacity-on_solid_24px";
  HdsIconlibraryNavigationImage_24px2["PauseOutline_24px"] = "pause_outline_24px";
  HdsIconlibraryNavigationImage_24px2["PauseSolid_24px"] = "pause_solid_24px";
  HdsIconlibraryNavigationImage_24px2["PlayOutline_24px"] = "play_outline_24px";
  HdsIconlibraryNavigationImage_24px2["PlaySolid_24px"] = "play_solid_24px";
  HdsIconlibraryNavigationImage_24px2["PlayReverseOutline_24px"] = "play-reverse_outline_24px";
  HdsIconlibraryNavigationImage_24px2["PlayReverseSolid_24px"] = "play-reverse_solid_24px";
  HdsIconlibraryNavigationImage_24px2["PlaybackSpeedOutline_24px"] = "playback-speed_outline_24px";
  HdsIconlibraryNavigationImage_24px2["PlaybackSpeedSolid_24px"] = "playback-speed_solid_24px";
  HdsIconlibraryNavigationImage_24px2["PreviousOutline_24px"] = "previous_outline_24px";
  HdsIconlibraryNavigationImage_24px2["PreviousSolid_24px"] = "previous_solid_24px";
  HdsIconlibraryNavigationImage_24px2["SkipOutline_24px"] = "skip_outline_24px";
  HdsIconlibraryNavigationImage_24px2["SkipSolid_24px"] = "skip_solid_24px";
  HdsIconlibraryNavigationImage_24px2["StopOutline_24px"] = "stop_outline_24px";
  HdsIconlibraryNavigationImage_24px2["StopSolid_24px"] = "stop_solid_24px";
})(HdsIconlibraryNavigationImage_24px = HdsIconlibraryNavigationImage_24px || (HdsIconlibraryNavigationImage_24px = {}));
var HDS_ICONLIBRARY_NAVIGATION_IMAGE_24PX_CODEPOINTS = {
  [HdsIconlibraryNavigationImage_24px.BrightnessOffOutline_24px]: "61697",
  [HdsIconlibraryNavigationImage_24px.BrightnessOffSolid_24px]: "61698",
  [HdsIconlibraryNavigationImage_24px.BrightnessOnOutline_24px]: "61699",
  [HdsIconlibraryNavigationImage_24px.BrightnessOnSolid_24px]: "61700",
  [HdsIconlibraryNavigationImage_24px.ColorFullOutline_24px]: "61701",
  [HdsIconlibraryNavigationImage_24px.ColorFullSolid_24px]: "61702",
  [HdsIconlibraryNavigationImage_24px.ColorInvertAOutline_24px]: "61703",
  [HdsIconlibraryNavigationImage_24px.ColorInvertASolid_24px]: "61704",
  [HdsIconlibraryNavigationImage_24px.ColorInvertBOutline_24px]: "61705",
  [HdsIconlibraryNavigationImage_24px.ColorInvertBSolid_24px]: "61706",
  [HdsIconlibraryNavigationImage_24px.ColorOverrideOutline_24px]: "61707",
  [HdsIconlibraryNavigationImage_24px.ColorOverrideSolid_24px]: "61708",
  [HdsIconlibraryNavigationImage_24px.ColorToneOutline_24px]: "61709",
  [HdsIconlibraryNavigationImage_24px.ColorToneSolid_24px]: "61710",
  [HdsIconlibraryNavigationImage_24px.ContrastOutline_24px]: "61711",
  [HdsIconlibraryNavigationImage_24px.ContrastSolid_24px]: "61712",
  [HdsIconlibraryNavigationImage_24px.FirstOutline_24px]: "61713",
  [HdsIconlibraryNavigationImage_24px.FirstSolid_24px]: "61714",
  [HdsIconlibraryNavigationImage_24px.LastOutline_24px]: "61715",
  [HdsIconlibraryNavigationImage_24px.LastSolid_24px]: "61716",
  [HdsIconlibraryNavigationImage_24px.NextOutline_24px]: "61717",
  [HdsIconlibraryNavigationImage_24px.NextSolid_24px]: "61718",
  [HdsIconlibraryNavigationImage_24px.OpacityOffOutline_24px]: "61719",
  [HdsIconlibraryNavigationImage_24px.OpacityOffSolid_24px]: "61720",
  [HdsIconlibraryNavigationImage_24px.OpacityOnOutline_24px]: "61721",
  [HdsIconlibraryNavigationImage_24px.OpacityOnSolid_24px]: "61722",
  [HdsIconlibraryNavigationImage_24px.PauseOutline_24px]: "61723",
  [HdsIconlibraryNavigationImage_24px.PauseSolid_24px]: "61724",
  [HdsIconlibraryNavigationImage_24px.PlayOutline_24px]: "61725",
  [HdsIconlibraryNavigationImage_24px.PlaySolid_24px]: "61726",
  [HdsIconlibraryNavigationImage_24px.PlayReverseOutline_24px]: "61727",
  [HdsIconlibraryNavigationImage_24px.PlayReverseSolid_24px]: "61728",
  [HdsIconlibraryNavigationImage_24px.PlaybackSpeedOutline_24px]: "61729",
  [HdsIconlibraryNavigationImage_24px.PlaybackSpeedSolid_24px]: "61730",
  [HdsIconlibraryNavigationImage_24px.PreviousOutline_24px]: "61731",
  [HdsIconlibraryNavigationImage_24px.PreviousSolid_24px]: "61732",
  [HdsIconlibraryNavigationImage_24px.SkipOutline_24px]: "61733",
  [HdsIconlibraryNavigationImage_24px.SkipSolid_24px]: "61734",
  [HdsIconlibraryNavigationImage_24px.StopOutline_24px]: "61735",
  [HdsIconlibraryNavigationImage_24px.StopSolid_24px]: "61736"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-poi-24px.js
var HdsIconlibraryPoi_24px;
(function(HdsIconlibraryPoi_24px2) {
  HdsIconlibraryPoi_24px2["AccommodationOutline_24px"] = "accommodation_outline_24px";
  HdsIconlibraryPoi_24px2["AccommodationSolid_24px"] = "accommodation_solid_24px";
  HdsIconlibraryPoi_24px2["AirportOutline_24px"] = "airport_outline_24px";
  HdsIconlibraryPoi_24px2["AirportSolid_24px"] = "airport_solid_24px";
  HdsIconlibraryPoi_24px2["AirportCargoOutline_24px"] = "airport-cargo_outline_24px";
  HdsIconlibraryPoi_24px2["AirportCargoSolid_24px"] = "airport-cargo_solid_24px";
  HdsIconlibraryPoi_24px2["AirportGateOutline_24px"] = "airport-gate_outline_24px";
  HdsIconlibraryPoi_24px2["AirportGateSolid_24px"] = "airport-gate_solid_24px";
  HdsIconlibraryPoi_24px2["AmusementParkOutline_24px"] = "amusement-park_outline_24px";
  HdsIconlibraryPoi_24px2["AmusementParkSolid_24px"] = "amusement-park_solid_24px";
  HdsIconlibraryPoi_24px2["AquariumOutline_24px"] = "aquarium_outline_24px";
  HdsIconlibraryPoi_24px2["AquariumSolid_24px"] = "aquarium_solid_24px";
  HdsIconlibraryPoi_24px2["ArtGalleryOutline_24px"] = "art-gallery_outline_24px";
  HdsIconlibraryPoi_24px2["ArtGallerySolid_24px"] = "art-gallery_solid_24px";
  HdsIconlibraryPoi_24px2["AshramOutline_24px"] = "ashram_outline_24px";
  HdsIconlibraryPoi_24px2["AshramSolid_24px"] = "ashram_solid_24px";
  HdsIconlibraryPoi_24px2["AtmOutline_24px"] = "atm_outline_24px";
  HdsIconlibraryPoi_24px2["AtmSolid_24px"] = "atm_solid_24px";
  HdsIconlibraryPoi_24px2["AttractionOutline_24px"] = "attraction_outline_24px";
  HdsIconlibraryPoi_24px2["AttractionSolid_24px"] = "attraction_solid_24px";
  HdsIconlibraryPoi_24px2["BakeryOutline_24px"] = "bakery_outline_24px";
  HdsIconlibraryPoi_24px2["BakerySolid_24px"] = "bakery_solid_24px";
  HdsIconlibraryPoi_24px2["BeachOutline_24px"] = "beach_outline_24px";
  HdsIconlibraryPoi_24px2["BeachSolid_24px"] = "beach_solid_24px";
  HdsIconlibraryPoi_24px2["BookstoreOutline_24px"] = "bookstore_outline_24px";
  HdsIconlibraryPoi_24px2["BookstoreSolid_24px"] = "bookstore_solid_24px";
  HdsIconlibraryPoi_24px2["BowlingOutline_24px"] = "bowling_outline_24px";
  HdsIconlibraryPoi_24px2["BowlingSolid_24px"] = "bowling_solid_24px";
  HdsIconlibraryPoi_24px2["BridgeOutline_24px"] = "bridge_outline_24px";
  HdsIconlibraryPoi_24px2["BridgeSolid_24px"] = "bridge_solid_24px";
  HdsIconlibraryPoi_24px2["BusOutline_24px"] = "bus_outline_24px";
  HdsIconlibraryPoi_24px2["BusSolid_24px"] = "bus_solid_24px";
  HdsIconlibraryPoi_24px2["BusinessOutline_24px"] = "business_outline_24px";
  HdsIconlibraryPoi_24px2["BusinessSolid_24px"] = "business_solid_24px";
  HdsIconlibraryPoi_24px2["BusinessPostJpnOutline_24px"] = "business-post-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["BusinessPostJpnSolid_24px"] = "business-post-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["ButcherOutline_24px"] = "butcher_outline_24px";
  HdsIconlibraryPoi_24px2["ButcherSolid_24px"] = "butcher_solid_24px";
  HdsIconlibraryPoi_24px2["CableWayOutline_24px"] = "cable-way_outline_24px";
  HdsIconlibraryPoi_24px2["CableWaySolid_24px"] = "cable-way_solid_24px";
  HdsIconlibraryPoi_24px2["CampingOutline_24px"] = "camping_outline_24px";
  HdsIconlibraryPoi_24px2["CampingSolid_24px"] = "camping_solid_24px";
  HdsIconlibraryPoi_24px2["CarChargingOutline_24px"] = "car-charging_outline_24px";
  HdsIconlibraryPoi_24px2["CarChargingSolid_24px"] = "car-charging_solid_24px";
  HdsIconlibraryPoi_24px2["CarChargingFastOutline_24px"] = "car-charging-fast_outline_24px";
  HdsIconlibraryPoi_24px2["CarChargingFastSolid_24px"] = "car-charging-fast_solid_24px";
  HdsIconlibraryPoi_24px2["CarDealershipOutline_24px"] = "car-dealership_outline_24px";
  HdsIconlibraryPoi_24px2["CarDealershipSolid_24px"] = "car-dealership_solid_24px";
  HdsIconlibraryPoi_24px2["CarElectricOutline_24px"] = "car-electric_outline_24px";
  HdsIconlibraryPoi_24px2["CarElectricSolid_24px"] = "car-electric_solid_24px";
  HdsIconlibraryPoi_24px2["CarRentalOutline_24px"] = "car-rental_outline_24px";
  HdsIconlibraryPoi_24px2["CarRentalSolid_24px"] = "car-rental_solid_24px";
  HdsIconlibraryPoi_24px2["CarRepairOutline_24px"] = "car-repair_outline_24px";
  HdsIconlibraryPoi_24px2["CarRepairSolid_24px"] = "car-repair_solid_24px";
  HdsIconlibraryPoi_24px2["CarWashOutline_24px"] = "car-wash_outline_24px";
  HdsIconlibraryPoi_24px2["CarWashSolid_24px"] = "car-wash_solid_24px";
  HdsIconlibraryPoi_24px2["CargoCenterOutline_24px"] = "cargo-center_outline_24px";
  HdsIconlibraryPoi_24px2["CargoCenterSolid_24px"] = "cargo-center_solid_24px";
  HdsIconlibraryPoi_24px2["CartOutline_24px"] = "cart_outline_24px";
  HdsIconlibraryPoi_24px2["CartSolid_24px"] = "cart_solid_24px";
  HdsIconlibraryPoi_24px2["CasinoOutline_24px"] = "casino_outline_24px";
  HdsIconlibraryPoi_24px2["CasinoSolid_24px"] = "casino_solid_24px";
  HdsIconlibraryPoi_24px2["CemetryOutline_24px"] = "cemetry_outline_24px";
  HdsIconlibraryPoi_24px2["CemetrySolid_24px"] = "cemetry_solid_24px";
  HdsIconlibraryPoi_24px2["ChurchOutline_24px"] = "church_outline_24px";
  HdsIconlibraryPoi_24px2["ChurchSolid_24px"] = "church_solid_24px";
  HdsIconlibraryPoi_24px2["CinemaOutline_24px"] = "cinema_outline_24px";
  HdsIconlibraryPoi_24px2["CinemaSolid_24px"] = "cinema_solid_24px";
  HdsIconlibraryPoi_24px2["ClothingOutline_24px"] = "clothing_outline_24px";
  HdsIconlibraryPoi_24px2["ClothingSolid_24px"] = "clothing_solid_24px";
  HdsIconlibraryPoi_24px2["CoachOutline_24px"] = "coach_outline_24px";
  HdsIconlibraryPoi_24px2["CoachSolid_24px"] = "coach_solid_24px";
  HdsIconlibraryPoi_24px2["CocktailOutline_24px"] = "cocktail_outline_24px";
  HdsIconlibraryPoi_24px2["CocktailSolid_24px"] = "cocktail_solid_24px";
  HdsIconlibraryPoi_24px2["CoffeeOutline_24px"] = "coffee_outline_24px";
  HdsIconlibraryPoi_24px2["CoffeeSolid_24px"] = "coffee_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyBahtOutline_24px"] = "currency-baht_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyBahtSolid_24px"] = "currency-baht_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyDollarOutline_24px"] = "currency-dollar_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyDollarSolid_24px"] = "currency-dollar_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyDongOutline_24px"] = "currency-dong_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyDongSolid_24px"] = "currency-dong_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyEuroOutline_24px"] = "currency-euro_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyEuroSolid_24px"] = "currency-euro_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyFrancOutline_24px"] = "currency-franc_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyFrancSolid_24px"] = "currency-franc_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyKroneOutline_24px"] = "currency-krone_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyKroneSolid_24px"] = "currency-krone_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyLiraOutline_24px"] = "currency-lira_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyLiraSolid_24px"] = "currency-lira_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyNairaOutline_24px"] = "currency-naira_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyNairaSolid_24px"] = "currency-naira_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyPoundOutline_24px"] = "currency-pound_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyPoundSolid_24px"] = "currency-pound_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyRubleOutline_24px"] = "currency-ruble_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyRubleSolid_24px"] = "currency-ruble_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyRupeeOutline_24px"] = "currency-rupee_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyRupeeSolid_24px"] = "currency-rupee_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyRupeesOutline_24px"] = "currency-rupees_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyRupeesSolid_24px"] = "currency-rupees_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyRupiahOutline_24px"] = "currency-rupiah_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyRupiahSolid_24px"] = "currency-rupiah_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyShekelOutline_24px"] = "currency-shekel_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyShekelSolid_24px"] = "currency-shekel_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyTakaOutline_24px"] = "currency-taka_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyTakaSolid_24px"] = "currency-taka_solid_24px";
  HdsIconlibraryPoi_24px2["CurrencyYenOutline_24px"] = "currency-yen_outline_24px";
  HdsIconlibraryPoi_24px2["CurrencyYenSolid_24px"] = "currency-yen_solid_24px";
  HdsIconlibraryPoi_24px2["DoughnutOutline_24px"] = "doughnut_outline_24px";
  HdsIconlibraryPoi_24px2["DoughnutSolid_24px"] = "doughnut_solid_24px";
  HdsIconlibraryPoi_24px2["EducationOutline_24px"] = "education_outline_24px";
  HdsIconlibraryPoi_24px2["EducationSolid_24px"] = "education_solid_24px";
  HdsIconlibraryPoi_24px2["ElevatorOutline_24px"] = "elevator_outline_24px";
  HdsIconlibraryPoi_24px2["ElevatorSolid_24px"] = "elevator_solid_24px";
  HdsIconlibraryPoi_24px2["EmergencyFiredepartmentJpnOutline_24px"] = "emergency-firedepartment-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["EmergencyFiredepartmentJpnSolid_24px"] = "emergency-firedepartment-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["EmergencyHospitalJpnOutline_24px"] = "emergency-hospital-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["EmergencyHospitalJpnSolid_24px"] = "emergency-hospital-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["EmergencyPoliceJpnOutline_24px"] = "emergency-police-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["EmergencyPoliceJpnSolid_24px"] = "emergency-police-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["EmergencyPoliceboxJpnOutline_24px"] = "emergency-policebox-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["EmergencyPoliceboxJpnSolid_24px"] = "emergency-policebox-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["EnterVenueOutline_24px"] = "enter-venue_outline_24px";
  HdsIconlibraryPoi_24px2["EnterVenueSolid_24px"] = "enter-venue_solid_24px";
  HdsIconlibraryPoi_24px2["EntranceOutline_24px"] = "entrance_outline_24px";
  HdsIconlibraryPoi_24px2["EntranceSolid_24px"] = "entrance_solid_24px";
  HdsIconlibraryPoi_24px2["EscalatorOutline_24px"] = "escalator_outline_24px";
  HdsIconlibraryPoi_24px2["EscalatorSolid_24px"] = "escalator_solid_24px";
  HdsIconlibraryPoi_24px2["ExhibitionCenterOutline_24px"] = "exhibition-center_outline_24px";
  HdsIconlibraryPoi_24px2["ExhibitionCenterSolid_24px"] = "exhibition-center_solid_24px";
  HdsIconlibraryPoi_24px2["FacilitiesOutline_24px"] = "facilities_outline_24px";
  HdsIconlibraryPoi_24px2["FacilitiesSolid_24px"] = "facilities_solid_24px";
  HdsIconlibraryPoi_24px2["FacilitiesCityhallJpnOutline_24px"] = "facilities-cityhall-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["FacilitiesCityhallJpnSolid_24px"] = "facilities-cityhall-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["FacilitiesEducationHigherJpnOutline_24px"] = "facilities-education-higher-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["FacilitiesEducationHigherJpnSolid_24px"] = "facilities-education-higher-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["FacilitiesEducationSchoolJpnOutline_24px"] = "facilities-education-school-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["FacilitiesEducationSchoolJpnSolid_24px"] = "facilities-education-school-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["FacilitiesOfficePrefecturalJpnOutline_24px"] = "facilities-office-prefectural-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["FacilitiesOfficePrefecturalJpnSolid_24px"] = "facilities-office-prefectural-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["FacilitiesOfficeTownvillageJpnOutline_24px"] = "facilities-office-townvillage-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["FacilitiesOfficeTownvillageJpnSolid_24px"] = "facilities-office-townvillage-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["FacilitiesOfficeWardJpnOutline_24px"] = "facilities-office-ward-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["FacilitiesOfficeWardJpnSolid_24px"] = "facilities-office-ward-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["FastFoodOutline_24px"] = "fast-food_outline_24px";
  HdsIconlibraryPoi_24px2["FastFoodSolid_24px"] = "fast-food_solid_24px";
  HdsIconlibraryPoi_24px2["FerryOutline_24px"] = "ferry_outline_24px";
  HdsIconlibraryPoi_24px2["FerrySolid_24px"] = "ferry_solid_24px";
  HdsIconlibraryPoi_24px2["FireDepartmentOutline_24px"] = "fire-department_outline_24px";
  HdsIconlibraryPoi_24px2["FireDepartmentSolid_24px"] = "fire-department_solid_24px";
  HdsIconlibraryPoi_24px2["FirstAidCrescentOutline_24px"] = "first-aid-crescent_outline_24px";
  HdsIconlibraryPoi_24px2["FirstAidCrescentSolid_24px"] = "first-aid-crescent_solid_24px";
  HdsIconlibraryPoi_24px2["FirstAidCrossOutline_24px"] = "first-aid-cross_outline_24px";
  HdsIconlibraryPoi_24px2["FirstAidCrossSolid_24px"] = "first-aid-cross_solid_24px";
  HdsIconlibraryPoi_24px2["FitnessOutline_24px"] = "fitness_outline_24px";
  HdsIconlibraryPoi_24px2["FitnessSolid_24px"] = "fitness_solid_24px";
  HdsIconlibraryPoi_24px2["FrontierCrossingOutline_24px"] = "frontier-crossing_outline_24px";
  HdsIconlibraryPoi_24px2["FrontierCrossingSolid_24px"] = "frontier-crossing_solid_24px";
  HdsIconlibraryPoi_24px2["GameArcadeOutline_24px"] = "game-arcade_outline_24px";
  HdsIconlibraryPoi_24px2["GameArcadeSolid_24px"] = "game-arcade_solid_24px";
  HdsIconlibraryPoi_24px2["GolfCourseOutline_24px"] = "golf-course_outline_24px";
  HdsIconlibraryPoi_24px2["GolfCourseSolid_24px"] = "golf-course_solid_24px";
  HdsIconlibraryPoi_24px2["GroceryOutline_24px"] = "grocery_outline_24px";
  HdsIconlibraryPoi_24px2["GrocerySolid_24px"] = "grocery_solid_24px";
  HdsIconlibraryPoi_24px2["GurdwaraOutline_24px"] = "gurdwara_outline_24px";
  HdsIconlibraryPoi_24px2["GurdwaraSolid_24px"] = "gurdwara_solid_24px";
  HdsIconlibraryPoi_24px2["HarborOutline_24px"] = "harbor_outline_24px";
  HdsIconlibraryPoi_24px2["HarborSolid_24px"] = "harbor_solid_24px";
  HdsIconlibraryPoi_24px2["HospitalCrescentOutline_24px"] = "hospital-crescent_outline_24px";
  HdsIconlibraryPoi_24px2["HospitalCrescentSolid_24px"] = "hospital-crescent_solid_24px";
  HdsIconlibraryPoi_24px2["HospitalCrossOutline_24px"] = "hospital-cross_outline_24px";
  HdsIconlibraryPoi_24px2["HospitalCrossSolid_24px"] = "hospital-cross_solid_24px";
  HdsIconlibraryPoi_24px2["HotSpringJpnOutline_24px"] = "hot-spring-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["HotSpringJpnSolid_24px"] = "hot-spring-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["HotelOutline_24px"] = "hotel_outline_24px";
  HdsIconlibraryPoi_24px2["HotelSolid_24px"] = "hotel_solid_24px";
  HdsIconlibraryPoi_24px2["InclinedOutline_24px"] = "inclined_outline_24px";
  HdsIconlibraryPoi_24px2["InclinedSolid_24px"] = "inclined_solid_24px";
  HdsIconlibraryPoi_24px2["IndustrialComplexOutline_24px"] = "industrial-complex_outline_24px";
  HdsIconlibraryPoi_24px2["IndustrialComplexSolid_24px"] = "industrial-complex_solid_24px";
  HdsIconlibraryPoi_24px2["KaraokeOutline_24px"] = "karaoke_outline_24px";
  HdsIconlibraryPoi_24px2["KaraokeSolid_24px"] = "karaoke_solid_24px";
  HdsIconlibraryPoi_24px2["LaundryOutline_24px"] = "laundry_outline_24px";
  HdsIconlibraryPoi_24px2["LaundrySolid_24px"] = "laundry_solid_24px";
  HdsIconlibraryPoi_24px2["LibraryOutline_24px"] = "library_outline_24px";
  HdsIconlibraryPoi_24px2["LibrarySolid_24px"] = "library_solid_24px";
  HdsIconlibraryPoi_24px2["LiquorOutline_24px"] = "liquor_outline_24px";
  HdsIconlibraryPoi_24px2["LiquorSolid_24px"] = "liquor_solid_24px";
  HdsIconlibraryPoi_24px2["LoadingDockOutline_24px"] = "loading-dock_outline_24px";
  HdsIconlibraryPoi_24px2["LoadingDockSolid_24px"] = "loading-dock_solid_24px";
  HdsIconlibraryPoi_24px2["LoadingZoneOutline_24px"] = "loading-zone_outline_24px";
  HdsIconlibraryPoi_24px2["LoadingZoneSolid_24px"] = "loading-zone_solid_24px";
  HdsIconlibraryPoi_24px2["MetroOutline_24px"] = "metro_outline_24px";
  HdsIconlibraryPoi_24px2["MetroSolid_24px"] = "metro_solid_24px";
  HdsIconlibraryPoi_24px2["MonorailOutline_24px"] = "monorail_outline_24px";
  HdsIconlibraryPoi_24px2["MonorailSolid_24px"] = "monorail_solid_24px";
  HdsIconlibraryPoi_24px2["MosqueOutline_24px"] = "mosque_outline_24px";
  HdsIconlibraryPoi_24px2["MosqueSolid_24px"] = "mosque_solid_24px";
  HdsIconlibraryPoi_24px2["MountainOutline_24px"] = "mountain_outline_24px";
  HdsIconlibraryPoi_24px2["MountainSolid_24px"] = "mountain_solid_24px";
  HdsIconlibraryPoi_24px2["MountainPassOutline_24px"] = "mountain-pass_outline_24px";
  HdsIconlibraryPoi_24px2["MountainPassSolid_24px"] = "mountain-pass_solid_24px";
  HdsIconlibraryPoi_24px2["MuseumOutline_24px"] = "museum_outline_24px";
  HdsIconlibraryPoi_24px2["MuseumSolid_24px"] = "museum_solid_24px";
  HdsIconlibraryPoi_24px2["MuseumArtOutline_24px"] = "museum-art_outline_24px";
  HdsIconlibraryPoi_24px2["MuseumArtSolid_24px"] = "museum-art_solid_24px";
  HdsIconlibraryPoi_24px2["NatureOutline_24px"] = "nature_outline_24px";
  HdsIconlibraryPoi_24px2["NatureSolid_24px"] = "nature_solid_24px";
  HdsIconlibraryPoi_24px2["NatureOverlookOutline_24px"] = "nature-overlook_outline_24px";
  HdsIconlibraryPoi_24px2["NatureOverlookSolid_24px"] = "nature-overlook_solid_24px";
  HdsIconlibraryPoi_24px2["NightClubOutline_24px"] = "night-club_outline_24px";
  HdsIconlibraryPoi_24px2["NightClubSolid_24px"] = "night-club_solid_24px";
  HdsIconlibraryPoi_24px2["PagodaOutline_24px"] = "pagoda_outline_24px";
  HdsIconlibraryPoi_24px2["PagodaSolid_24px"] = "pagoda_solid_24px";
  HdsIconlibraryPoi_24px2["ParkAndRideOutline_24px"] = "park-and-ride_outline_24px";
  HdsIconlibraryPoi_24px2["ParkAndRideSolid_24px"] = "park-and-ride_solid_24px";
  HdsIconlibraryPoi_24px2["ParkingOutline_24px"] = "parking_outline_24px";
  HdsIconlibraryPoi_24px2["ParkingSolid_24px"] = "parking_solid_24px";
  HdsIconlibraryPoi_24px2["ParkingBicycleOutline_24px"] = "parking-bicycle_outline_24px";
  HdsIconlibraryPoi_24px2["ParkingBicycleSolid_24px"] = "parking-bicycle_solid_24px";
  HdsIconlibraryPoi_24px2["ParkingGarageOutline_24px"] = "parking-garage_outline_24px";
  HdsIconlibraryPoi_24px2["ParkingGarageSolid_24px"] = "parking-garage_solid_24px";
  HdsIconlibraryPoi_24px2["ParkingMotorcycleOutline_24px"] = "parking-motorcycle_outline_24px";
  HdsIconlibraryPoi_24px2["ParkingMotorcycleSolid_24px"] = "parking-motorcycle_solid_24px";
  HdsIconlibraryPoi_24px2["PetrolStationOutline_24px"] = "petrol-station_outline_24px";
  HdsIconlibraryPoi_24px2["PetrolStationSolid_24px"] = "petrol-station_solid_24px";
  HdsIconlibraryPoi_24px2["PharmacyCrescentOutline_24px"] = "pharmacy-crescent_outline_24px";
  HdsIconlibraryPoi_24px2["PharmacyCrescentSolid_24px"] = "pharmacy-crescent_solid_24px";
  HdsIconlibraryPoi_24px2["PharmacyCrossOutline_24px"] = "pharmacy-cross_outline_24px";
  HdsIconlibraryPoi_24px2["PharmacyCrossSolid_24px"] = "pharmacy-cross_solid_24px";
  HdsIconlibraryPoi_24px2["PicnicAreaOutline_24px"] = "picnic-area_outline_24px";
  HdsIconlibraryPoi_24px2["PicnicAreaSolid_24px"] = "picnic-area_solid_24px";
  HdsIconlibraryPoi_24px2["PlaygroundOutline_24px"] = "playground_outline_24px";
  HdsIconlibraryPoi_24px2["PlaygroundSolid_24px"] = "playground_solid_24px";
  HdsIconlibraryPoi_24px2["PointOutline_24px"] = "point_outline_24px";
  HdsIconlibraryPoi_24px2["PointSolid_24px"] = "point_solid_24px";
  HdsIconlibraryPoi_24px2["PoliceOutline_24px"] = "police_outline_24px";
  HdsIconlibraryPoi_24px2["PoliceSolid_24px"] = "police_solid_24px";
  HdsIconlibraryPoi_24px2["PoolOutline_24px"] = "pool_outline_24px";
  HdsIconlibraryPoi_24px2["PoolSolid_24px"] = "pool_solid_24px";
  HdsIconlibraryPoi_24px2["PostOutline_24px"] = "post_outline_24px";
  HdsIconlibraryPoi_24px2["PostSolid_24px"] = "post_solid_24px";
  HdsIconlibraryPoi_24px2["PubOutline_24px"] = "pub_outline_24px";
  HdsIconlibraryPoi_24px2["PubSolid_24px"] = "pub_solid_24px";
  HdsIconlibraryPoi_24px2["PublicToiletOutline_24px"] = "public-toilet_outline_24px";
  HdsIconlibraryPoi_24px2["PublicToiletSolid_24px"] = "public-toilet_solid_24px";
  HdsIconlibraryPoi_24px2["PublicTransportOutline_24px"] = "public-transport_outline_24px";
  HdsIconlibraryPoi_24px2["PublicTransportSolid_24px"] = "public-transport_solid_24px";
  HdsIconlibraryPoi_24px2["RailLightOutline_24px"] = "rail-light_outline_24px";
  HdsIconlibraryPoi_24px2["RailLightSolid_24px"] = "rail-light_solid_24px";
  HdsIconlibraryPoi_24px2["RailRegionalOutline_24px"] = "rail-regional_outline_24px";
  HdsIconlibraryPoi_24px2["RailRegionalSolid_24px"] = "rail-regional_solid_24px";
  HdsIconlibraryPoi_24px2["RailYardOutline_24px"] = "rail-yard_outline_24px";
  HdsIconlibraryPoi_24px2["RailYardSolid_24px"] = "rail-yard_solid_24px";
  HdsIconlibraryPoi_24px2["RampOutline_24px"] = "ramp_outline_24px";
  HdsIconlibraryPoi_24px2["RampSolid_24px"] = "ramp_solid_24px";
  HdsIconlibraryPoi_24px2["ReligiousPlaceOutline_24px"] = "religious-place_outline_24px";
  HdsIconlibraryPoi_24px2["ReligiousPlaceSolid_24px"] = "religious-place_solid_24px";
  HdsIconlibraryPoi_24px2["ReligiousShintoJpnOutline_24px"] = "religious-shinto-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["ReligiousShintoJpnSolid_24px"] = "religious-shinto-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["ReligiousTempleBuddhistJpnOutline_24px"] = "religious-temple-buddhist-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["ReligiousTempleBuddhistJpnSolid_24px"] = "religious-temple-buddhist-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["RestaurantOutline_24px"] = "restaurant_outline_24px";
  HdsIconlibraryPoi_24px2["RestaurantSolid_24px"] = "restaurant_solid_24px";
  HdsIconlibraryPoi_24px2["SeaportHarborOutline_24px"] = "seaport-harbor_outline_24px";
  HdsIconlibraryPoi_24px2["SeaportHarborSolid_24px"] = "seaport-harbor_solid_24px";
  HdsIconlibraryPoi_24px2["ShoesOutline_24px"] = "shoes_outline_24px";
  HdsIconlibraryPoi_24px2["ShoesSolid_24px"] = "shoes_solid_24px";
  HdsIconlibraryPoi_24px2["ShoppingOutline_24px"] = "shopping_outline_24px";
  HdsIconlibraryPoi_24px2["ShoppingSolid_24px"] = "shopping_solid_24px";
  HdsIconlibraryPoi_24px2["ShrineGenericOutline_24px"] = "shrine-generic_outline_24px";
  HdsIconlibraryPoi_24px2["ShrineGenericSolid_24px"] = "shrine-generic_solid_24px";
  HdsIconlibraryPoi_24px2["SkiRunOutline_24px"] = "ski-run_outline_24px";
  HdsIconlibraryPoi_24px2["SkiRunSolid_24px"] = "ski-run_solid_24px";
  HdsIconlibraryPoi_24px2["SkywalkOutline_24px"] = "skywalk_outline_24px";
  HdsIconlibraryPoi_24px2["SkywalkSolid_24px"] = "skywalk_solid_24px";
  HdsIconlibraryPoi_24px2["StadiumOutline_24px"] = "stadium_outline_24px";
  HdsIconlibraryPoi_24px2["StadiumSolid_24px"] = "stadium_solid_24px";
  HdsIconlibraryPoi_24px2["StairsOutline_24px"] = "stairs_outline_24px";
  HdsIconlibraryPoi_24px2["StairsSolid_24px"] = "stairs_solid_24px";
  HdsIconlibraryPoi_24px2["SweetsOutline_24px"] = "sweets_outline_24px";
  HdsIconlibraryPoi_24px2["SweetsSolid_24px"] = "sweets_solid_24px";
  HdsIconlibraryPoi_24px2["SwimmingOutline_24px"] = "swimming_outline_24px";
  HdsIconlibraryPoi_24px2["SwimmingSolid_24px"] = "swimming_solid_24px";
  HdsIconlibraryPoi_24px2["SynagogueOutline_24px"] = "synagogue_outline_24px";
  HdsIconlibraryPoi_24px2["SynagogueSolid_24px"] = "synagogue_solid_24px";
  HdsIconlibraryPoi_24px2["TaxiOutline_24px"] = "taxi_outline_24px";
  HdsIconlibraryPoi_24px2["TaxiSolid_24px"] = "taxi_solid_24px";
  HdsIconlibraryPoi_24px2["TheaterOutline_24px"] = "theater_outline_24px";
  HdsIconlibraryPoi_24px2["TheaterSolid_24px"] = "theater_solid_24px";
  HdsIconlibraryPoi_24px2["TollBoothOutline_24px"] = "toll-booth_outline_24px";
  HdsIconlibraryPoi_24px2["TollBoothSolid_24px"] = "toll-booth_solid_24px";
  HdsIconlibraryPoi_24px2["TouristInformationOutline_24px"] = "tourist-information_outline_24px";
  HdsIconlibraryPoi_24px2["TouristInformationSolid_24px"] = "tourist-information_solid_24px";
  HdsIconlibraryPoi_24px2["TrainOutline_24px"] = "train_outline_24px";
  HdsIconlibraryPoi_24px2["TrainSolid_24px"] = "train_solid_24px";
  HdsIconlibraryPoi_24px2["TransportShinkansenJpnOutline_24px"] = "transport-shinkansen-jpn_outline_24px";
  HdsIconlibraryPoi_24px2["TransportShinkansenJpnSolid_24px"] = "transport-shinkansen-jpn_solid_24px";
  HdsIconlibraryPoi_24px2["TravelAgentTicketingOutline_24px"] = "travel-agent-ticketing_outline_24px";
  HdsIconlibraryPoi_24px2["TravelAgentTicketingSolid_24px"] = "travel-agent-ticketing_solid_24px";
  HdsIconlibraryPoi_24px2["TruckDealershipOutline_24px"] = "truck-dealership_outline_24px";
  HdsIconlibraryPoi_24px2["TruckDealershipSolid_24px"] = "truck-dealership_solid_24px";
  HdsIconlibraryPoi_24px2["TruckParkingOutline_24px"] = "truck-parking_outline_24px";
  HdsIconlibraryPoi_24px2["TruckParkingSolid_24px"] = "truck-parking_solid_24px";
  HdsIconlibraryPoi_24px2["TruckRepairOutline_24px"] = "truck-repair_outline_24px";
  HdsIconlibraryPoi_24px2["TruckRepairSolid_24px"] = "truck-repair_solid_24px";
  HdsIconlibraryPoi_24px2["TruckStopPlazaOutline_24px"] = "truck-stop-plaza_outline_24px";
  HdsIconlibraryPoi_24px2["TruckStopPlazaSolid_24px"] = "truck-stop-plaza_solid_24px";
  HdsIconlibraryPoi_24px2["TruckWashOutline_24px"] = "truck-wash_outline_24px";
  HdsIconlibraryPoi_24px2["TruckWashSolid_24px"] = "truck-wash_solid_24px";
  HdsIconlibraryPoi_24px2["TunnelOutline_24px"] = "tunnel_outline_24px";
  HdsIconlibraryPoi_24px2["TunnelSolid_24px"] = "tunnel_solid_24px";
  HdsIconlibraryPoi_24px2["WaterfallOutline_24px"] = "waterfall_outline_24px";
  HdsIconlibraryPoi_24px2["WaterfallSolid_24px"] = "waterfall_solid_24px";
  HdsIconlibraryPoi_24px2["WeighStationOutline_24px"] = "weigh-station_outline_24px";
  HdsIconlibraryPoi_24px2["WeighStationSolid_24px"] = "weigh-station_solid_24px";
  HdsIconlibraryPoi_24px2["ZooOutline_24px"] = "zoo_outline_24px";
  HdsIconlibraryPoi_24px2["ZooSolid_24px"] = "zoo_solid_24px";
})(HdsIconlibraryPoi_24px = HdsIconlibraryPoi_24px || (HdsIconlibraryPoi_24px = {}));
var HDS_ICONLIBRARY_POI_24PX_CODEPOINTS = {
  [HdsIconlibraryPoi_24px.AccommodationOutline_24px]: "61697",
  [HdsIconlibraryPoi_24px.AccommodationSolid_24px]: "61698",
  [HdsIconlibraryPoi_24px.AirportOutline_24px]: "61699",
  [HdsIconlibraryPoi_24px.AirportSolid_24px]: "61700",
  [HdsIconlibraryPoi_24px.AirportCargoOutline_24px]: "61701",
  [HdsIconlibraryPoi_24px.AirportCargoSolid_24px]: "61702",
  [HdsIconlibraryPoi_24px.AirportGateOutline_24px]: "61703",
  [HdsIconlibraryPoi_24px.AirportGateSolid_24px]: "61704",
  [HdsIconlibraryPoi_24px.AmusementParkOutline_24px]: "61705",
  [HdsIconlibraryPoi_24px.AmusementParkSolid_24px]: "61706",
  [HdsIconlibraryPoi_24px.AquariumOutline_24px]: "61707",
  [HdsIconlibraryPoi_24px.AquariumSolid_24px]: "61708",
  [HdsIconlibraryPoi_24px.ArtGalleryOutline_24px]: "61709",
  [HdsIconlibraryPoi_24px.ArtGallerySolid_24px]: "61710",
  [HdsIconlibraryPoi_24px.AshramOutline_24px]: "61711",
  [HdsIconlibraryPoi_24px.AshramSolid_24px]: "61712",
  [HdsIconlibraryPoi_24px.AtmOutline_24px]: "61713",
  [HdsIconlibraryPoi_24px.AtmSolid_24px]: "61714",
  [HdsIconlibraryPoi_24px.AttractionOutline_24px]: "61715",
  [HdsIconlibraryPoi_24px.AttractionSolid_24px]: "61716",
  [HdsIconlibraryPoi_24px.BakeryOutline_24px]: "61717",
  [HdsIconlibraryPoi_24px.BakerySolid_24px]: "61718",
  [HdsIconlibraryPoi_24px.BeachOutline_24px]: "61719",
  [HdsIconlibraryPoi_24px.BeachSolid_24px]: "61720",
  [HdsIconlibraryPoi_24px.BookstoreOutline_24px]: "61721",
  [HdsIconlibraryPoi_24px.BookstoreSolid_24px]: "61722",
  [HdsIconlibraryPoi_24px.BowlingOutline_24px]: "61723",
  [HdsIconlibraryPoi_24px.BowlingSolid_24px]: "61724",
  [HdsIconlibraryPoi_24px.BridgeOutline_24px]: "61725",
  [HdsIconlibraryPoi_24px.BridgeSolid_24px]: "61726",
  [HdsIconlibraryPoi_24px.BusOutline_24px]: "61727",
  [HdsIconlibraryPoi_24px.BusSolid_24px]: "61728",
  [HdsIconlibraryPoi_24px.BusinessOutline_24px]: "61729",
  [HdsIconlibraryPoi_24px.BusinessSolid_24px]: "61730",
  [HdsIconlibraryPoi_24px.BusinessPostJpnOutline_24px]: "61731",
  [HdsIconlibraryPoi_24px.BusinessPostJpnSolid_24px]: "61732",
  [HdsIconlibraryPoi_24px.ButcherOutline_24px]: "61733",
  [HdsIconlibraryPoi_24px.ButcherSolid_24px]: "61734",
  [HdsIconlibraryPoi_24px.CableWayOutline_24px]: "61735",
  [HdsIconlibraryPoi_24px.CableWaySolid_24px]: "61736",
  [HdsIconlibraryPoi_24px.CampingOutline_24px]: "61737",
  [HdsIconlibraryPoi_24px.CampingSolid_24px]: "61738",
  [HdsIconlibraryPoi_24px.CarChargingOutline_24px]: "61739",
  [HdsIconlibraryPoi_24px.CarChargingSolid_24px]: "61740",
  [HdsIconlibraryPoi_24px.CarChargingFastOutline_24px]: "61741",
  [HdsIconlibraryPoi_24px.CarChargingFastSolid_24px]: "61742",
  [HdsIconlibraryPoi_24px.CarDealershipOutline_24px]: "61743",
  [HdsIconlibraryPoi_24px.CarDealershipSolid_24px]: "61744",
  [HdsIconlibraryPoi_24px.CarElectricOutline_24px]: "61745",
  [HdsIconlibraryPoi_24px.CarElectricSolid_24px]: "61746",
  [HdsIconlibraryPoi_24px.CarRentalOutline_24px]: "61747",
  [HdsIconlibraryPoi_24px.CarRentalSolid_24px]: "61748",
  [HdsIconlibraryPoi_24px.CarRepairOutline_24px]: "61749",
  [HdsIconlibraryPoi_24px.CarRepairSolid_24px]: "61750",
  [HdsIconlibraryPoi_24px.CarWashOutline_24px]: "61751",
  [HdsIconlibraryPoi_24px.CarWashSolid_24px]: "61752",
  [HdsIconlibraryPoi_24px.CargoCenterOutline_24px]: "61753",
  [HdsIconlibraryPoi_24px.CargoCenterSolid_24px]: "61754",
  [HdsIconlibraryPoi_24px.CartOutline_24px]: "61755",
  [HdsIconlibraryPoi_24px.CartSolid_24px]: "61756",
  [HdsIconlibraryPoi_24px.CasinoOutline_24px]: "61757",
  [HdsIconlibraryPoi_24px.CasinoSolid_24px]: "61758",
  [HdsIconlibraryPoi_24px.CemetryOutline_24px]: "61759",
  [HdsIconlibraryPoi_24px.CemetrySolid_24px]: "61760",
  [HdsIconlibraryPoi_24px.ChurchOutline_24px]: "61761",
  [HdsIconlibraryPoi_24px.ChurchSolid_24px]: "61762",
  [HdsIconlibraryPoi_24px.CinemaOutline_24px]: "61763",
  [HdsIconlibraryPoi_24px.CinemaSolid_24px]: "61764",
  [HdsIconlibraryPoi_24px.ClothingOutline_24px]: "61765",
  [HdsIconlibraryPoi_24px.ClothingSolid_24px]: "61766",
  [HdsIconlibraryPoi_24px.CoachOutline_24px]: "61767",
  [HdsIconlibraryPoi_24px.CoachSolid_24px]: "61768",
  [HdsIconlibraryPoi_24px.CocktailOutline_24px]: "61769",
  [HdsIconlibraryPoi_24px.CocktailSolid_24px]: "61770",
  [HdsIconlibraryPoi_24px.CoffeeOutline_24px]: "61771",
  [HdsIconlibraryPoi_24px.CoffeeSolid_24px]: "61772",
  [HdsIconlibraryPoi_24px.CurrencyBahtOutline_24px]: "61773",
  [HdsIconlibraryPoi_24px.CurrencyBahtSolid_24px]: "61774",
  [HdsIconlibraryPoi_24px.CurrencyDollarOutline_24px]: "61775",
  [HdsIconlibraryPoi_24px.CurrencyDollarSolid_24px]: "61776",
  [HdsIconlibraryPoi_24px.CurrencyDongOutline_24px]: "61777",
  [HdsIconlibraryPoi_24px.CurrencyDongSolid_24px]: "61778",
  [HdsIconlibraryPoi_24px.CurrencyEuroOutline_24px]: "61779",
  [HdsIconlibraryPoi_24px.CurrencyEuroSolid_24px]: "61780",
  [HdsIconlibraryPoi_24px.CurrencyFrancOutline_24px]: "61781",
  [HdsIconlibraryPoi_24px.CurrencyFrancSolid_24px]: "61782",
  [HdsIconlibraryPoi_24px.CurrencyKroneOutline_24px]: "61783",
  [HdsIconlibraryPoi_24px.CurrencyKroneSolid_24px]: "61784",
  [HdsIconlibraryPoi_24px.CurrencyLiraOutline_24px]: "61785",
  [HdsIconlibraryPoi_24px.CurrencyLiraSolid_24px]: "61786",
  [HdsIconlibraryPoi_24px.CurrencyNairaOutline_24px]: "61787",
  [HdsIconlibraryPoi_24px.CurrencyNairaSolid_24px]: "61788",
  [HdsIconlibraryPoi_24px.CurrencyPoundOutline_24px]: "61789",
  [HdsIconlibraryPoi_24px.CurrencyPoundSolid_24px]: "61790",
  [HdsIconlibraryPoi_24px.CurrencyRubleOutline_24px]: "61791",
  [HdsIconlibraryPoi_24px.CurrencyRubleSolid_24px]: "61792",
  [HdsIconlibraryPoi_24px.CurrencyRupeeOutline_24px]: "61793",
  [HdsIconlibraryPoi_24px.CurrencyRupeeSolid_24px]: "61794",
  [HdsIconlibraryPoi_24px.CurrencyRupeesOutline_24px]: "61795",
  [HdsIconlibraryPoi_24px.CurrencyRupeesSolid_24px]: "61796",
  [HdsIconlibraryPoi_24px.CurrencyRupiahOutline_24px]: "61797",
  [HdsIconlibraryPoi_24px.CurrencyRupiahSolid_24px]: "61798",
  [HdsIconlibraryPoi_24px.CurrencyShekelOutline_24px]: "61799",
  [HdsIconlibraryPoi_24px.CurrencyShekelSolid_24px]: "61800",
  [HdsIconlibraryPoi_24px.CurrencyTakaOutline_24px]: "61801",
  [HdsIconlibraryPoi_24px.CurrencyTakaSolid_24px]: "61802",
  [HdsIconlibraryPoi_24px.CurrencyYenOutline_24px]: "61803",
  [HdsIconlibraryPoi_24px.CurrencyYenSolid_24px]: "61804",
  [HdsIconlibraryPoi_24px.DoughnutOutline_24px]: "61805",
  [HdsIconlibraryPoi_24px.DoughnutSolid_24px]: "61806",
  [HdsIconlibraryPoi_24px.EducationOutline_24px]: "61807",
  [HdsIconlibraryPoi_24px.EducationSolid_24px]: "61808",
  [HdsIconlibraryPoi_24px.ElevatorOutline_24px]: "61809",
  [HdsIconlibraryPoi_24px.ElevatorSolid_24px]: "61810",
  [HdsIconlibraryPoi_24px.EmergencyFiredepartmentJpnOutline_24px]: "61811",
  [HdsIconlibraryPoi_24px.EmergencyFiredepartmentJpnSolid_24px]: "61812",
  [HdsIconlibraryPoi_24px.EmergencyHospitalJpnOutline_24px]: "61813",
  [HdsIconlibraryPoi_24px.EmergencyHospitalJpnSolid_24px]: "61814",
  [HdsIconlibraryPoi_24px.EmergencyPoliceJpnOutline_24px]: "61815",
  [HdsIconlibraryPoi_24px.EmergencyPoliceJpnSolid_24px]: "61816",
  [HdsIconlibraryPoi_24px.EmergencyPoliceboxJpnOutline_24px]: "61817",
  [HdsIconlibraryPoi_24px.EmergencyPoliceboxJpnSolid_24px]: "61818",
  [HdsIconlibraryPoi_24px.EnterVenueOutline_24px]: "61819",
  [HdsIconlibraryPoi_24px.EnterVenueSolid_24px]: "61820",
  [HdsIconlibraryPoi_24px.EntranceOutline_24px]: "61821",
  [HdsIconlibraryPoi_24px.EntranceSolid_24px]: "61822",
  [HdsIconlibraryPoi_24px.EscalatorOutline_24px]: "61823",
  [HdsIconlibraryPoi_24px.EscalatorSolid_24px]: "61824",
  [HdsIconlibraryPoi_24px.ExhibitionCenterOutline_24px]: "61825",
  [HdsIconlibraryPoi_24px.ExhibitionCenterSolid_24px]: "61826",
  [HdsIconlibraryPoi_24px.FacilitiesOutline_24px]: "61827",
  [HdsIconlibraryPoi_24px.FacilitiesSolid_24px]: "61828",
  [HdsIconlibraryPoi_24px.FacilitiesCityhallJpnOutline_24px]: "61829",
  [HdsIconlibraryPoi_24px.FacilitiesCityhallJpnSolid_24px]: "61830",
  [HdsIconlibraryPoi_24px.FacilitiesEducationHigherJpnOutline_24px]: "61831",
  [HdsIconlibraryPoi_24px.FacilitiesEducationHigherJpnSolid_24px]: "61832",
  [HdsIconlibraryPoi_24px.FacilitiesEducationSchoolJpnOutline_24px]: "61833",
  [HdsIconlibraryPoi_24px.FacilitiesEducationSchoolJpnSolid_24px]: "61834",
  [HdsIconlibraryPoi_24px.FacilitiesOfficePrefecturalJpnOutline_24px]: "61835",
  [HdsIconlibraryPoi_24px.FacilitiesOfficePrefecturalJpnSolid_24px]: "61836",
  [HdsIconlibraryPoi_24px.FacilitiesOfficeTownvillageJpnOutline_24px]: "61837",
  [HdsIconlibraryPoi_24px.FacilitiesOfficeTownvillageJpnSolid_24px]: "61838",
  [HdsIconlibraryPoi_24px.FacilitiesOfficeWardJpnOutline_24px]: "61839",
  [HdsIconlibraryPoi_24px.FacilitiesOfficeWardJpnSolid_24px]: "61840",
  [HdsIconlibraryPoi_24px.FastFoodOutline_24px]: "61841",
  [HdsIconlibraryPoi_24px.FastFoodSolid_24px]: "61842",
  [HdsIconlibraryPoi_24px.FerryOutline_24px]: "61843",
  [HdsIconlibraryPoi_24px.FerrySolid_24px]: "61844",
  [HdsIconlibraryPoi_24px.FireDepartmentOutline_24px]: "61845",
  [HdsIconlibraryPoi_24px.FireDepartmentSolid_24px]: "61846",
  [HdsIconlibraryPoi_24px.FirstAidCrescentOutline_24px]: "61847",
  [HdsIconlibraryPoi_24px.FirstAidCrescentSolid_24px]: "61848",
  [HdsIconlibraryPoi_24px.FirstAidCrossOutline_24px]: "61849",
  [HdsIconlibraryPoi_24px.FirstAidCrossSolid_24px]: "61850",
  [HdsIconlibraryPoi_24px.FitnessOutline_24px]: "61851",
  [HdsIconlibraryPoi_24px.FitnessSolid_24px]: "61852",
  [HdsIconlibraryPoi_24px.FrontierCrossingOutline_24px]: "61853",
  [HdsIconlibraryPoi_24px.FrontierCrossingSolid_24px]: "61854",
  [HdsIconlibraryPoi_24px.GameArcadeOutline_24px]: "61855",
  [HdsIconlibraryPoi_24px.GameArcadeSolid_24px]: "61856",
  [HdsIconlibraryPoi_24px.GolfCourseOutline_24px]: "61857",
  [HdsIconlibraryPoi_24px.GolfCourseSolid_24px]: "61858",
  [HdsIconlibraryPoi_24px.GroceryOutline_24px]: "61859",
  [HdsIconlibraryPoi_24px.GrocerySolid_24px]: "61860",
  [HdsIconlibraryPoi_24px.GurdwaraOutline_24px]: "61861",
  [HdsIconlibraryPoi_24px.GurdwaraSolid_24px]: "61862",
  [HdsIconlibraryPoi_24px.HarborOutline_24px]: "61863",
  [HdsIconlibraryPoi_24px.HarborSolid_24px]: "61864",
  [HdsIconlibraryPoi_24px.HospitalCrescentOutline_24px]: "61865",
  [HdsIconlibraryPoi_24px.HospitalCrescentSolid_24px]: "61866",
  [HdsIconlibraryPoi_24px.HospitalCrossOutline_24px]: "61867",
  [HdsIconlibraryPoi_24px.HospitalCrossSolid_24px]: "61868",
  [HdsIconlibraryPoi_24px.HotSpringJpnOutline_24px]: "61869",
  [HdsIconlibraryPoi_24px.HotSpringJpnSolid_24px]: "61870",
  [HdsIconlibraryPoi_24px.HotelOutline_24px]: "61871",
  [HdsIconlibraryPoi_24px.HotelSolid_24px]: "61872",
  [HdsIconlibraryPoi_24px.InclinedOutline_24px]: "61873",
  [HdsIconlibraryPoi_24px.InclinedSolid_24px]: "61874",
  [HdsIconlibraryPoi_24px.IndustrialComplexOutline_24px]: "61875",
  [HdsIconlibraryPoi_24px.IndustrialComplexSolid_24px]: "61876",
  [HdsIconlibraryPoi_24px.KaraokeOutline_24px]: "61877",
  [HdsIconlibraryPoi_24px.KaraokeSolid_24px]: "61878",
  [HdsIconlibraryPoi_24px.LaundryOutline_24px]: "61879",
  [HdsIconlibraryPoi_24px.LaundrySolid_24px]: "61880",
  [HdsIconlibraryPoi_24px.LibraryOutline_24px]: "61881",
  [HdsIconlibraryPoi_24px.LibrarySolid_24px]: "61882",
  [HdsIconlibraryPoi_24px.LiquorOutline_24px]: "61883",
  [HdsIconlibraryPoi_24px.LiquorSolid_24px]: "61884",
  [HdsIconlibraryPoi_24px.LoadingDockOutline_24px]: "61885",
  [HdsIconlibraryPoi_24px.LoadingDockSolid_24px]: "61886",
  [HdsIconlibraryPoi_24px.LoadingZoneOutline_24px]: "61887",
  [HdsIconlibraryPoi_24px.LoadingZoneSolid_24px]: "61888",
  [HdsIconlibraryPoi_24px.MetroOutline_24px]: "61889",
  [HdsIconlibraryPoi_24px.MetroSolid_24px]: "61890",
  [HdsIconlibraryPoi_24px.MonorailOutline_24px]: "61891",
  [HdsIconlibraryPoi_24px.MonorailSolid_24px]: "61892",
  [HdsIconlibraryPoi_24px.MosqueOutline_24px]: "61893",
  [HdsIconlibraryPoi_24px.MosqueSolid_24px]: "61894",
  [HdsIconlibraryPoi_24px.MountainOutline_24px]: "61895",
  [HdsIconlibraryPoi_24px.MountainSolid_24px]: "61896",
  [HdsIconlibraryPoi_24px.MountainPassOutline_24px]: "61897",
  [HdsIconlibraryPoi_24px.MountainPassSolid_24px]: "61898",
  [HdsIconlibraryPoi_24px.MuseumOutline_24px]: "61899",
  [HdsIconlibraryPoi_24px.MuseumSolid_24px]: "61900",
  [HdsIconlibraryPoi_24px.MuseumArtOutline_24px]: "61901",
  [HdsIconlibraryPoi_24px.MuseumArtSolid_24px]: "61902",
  [HdsIconlibraryPoi_24px.NatureOutline_24px]: "61903",
  [HdsIconlibraryPoi_24px.NatureSolid_24px]: "61904",
  [HdsIconlibraryPoi_24px.NatureOverlookOutline_24px]: "61905",
  [HdsIconlibraryPoi_24px.NatureOverlookSolid_24px]: "61906",
  [HdsIconlibraryPoi_24px.NightClubOutline_24px]: "61907",
  [HdsIconlibraryPoi_24px.NightClubSolid_24px]: "61908",
  [HdsIconlibraryPoi_24px.PagodaOutline_24px]: "61909",
  [HdsIconlibraryPoi_24px.PagodaSolid_24px]: "61910",
  [HdsIconlibraryPoi_24px.ParkAndRideOutline_24px]: "61911",
  [HdsIconlibraryPoi_24px.ParkAndRideSolid_24px]: "61912",
  [HdsIconlibraryPoi_24px.ParkingOutline_24px]: "61913",
  [HdsIconlibraryPoi_24px.ParkingSolid_24px]: "61914",
  [HdsIconlibraryPoi_24px.ParkingBicycleOutline_24px]: "61915",
  [HdsIconlibraryPoi_24px.ParkingBicycleSolid_24px]: "61916",
  [HdsIconlibraryPoi_24px.ParkingGarageOutline_24px]: "61917",
  [HdsIconlibraryPoi_24px.ParkingGarageSolid_24px]: "61918",
  [HdsIconlibraryPoi_24px.ParkingMotorcycleOutline_24px]: "61919",
  [HdsIconlibraryPoi_24px.ParkingMotorcycleSolid_24px]: "61920",
  [HdsIconlibraryPoi_24px.PetrolStationOutline_24px]: "61921",
  [HdsIconlibraryPoi_24px.PetrolStationSolid_24px]: "61922",
  [HdsIconlibraryPoi_24px.PharmacyCrescentOutline_24px]: "61923",
  [HdsIconlibraryPoi_24px.PharmacyCrescentSolid_24px]: "61924",
  [HdsIconlibraryPoi_24px.PharmacyCrossOutline_24px]: "61925",
  [HdsIconlibraryPoi_24px.PharmacyCrossSolid_24px]: "61926",
  [HdsIconlibraryPoi_24px.PicnicAreaOutline_24px]: "61927",
  [HdsIconlibraryPoi_24px.PicnicAreaSolid_24px]: "61928",
  [HdsIconlibraryPoi_24px.PlaygroundOutline_24px]: "61929",
  [HdsIconlibraryPoi_24px.PlaygroundSolid_24px]: "61930",
  [HdsIconlibraryPoi_24px.PointOutline_24px]: "61931",
  [HdsIconlibraryPoi_24px.PointSolid_24px]: "61932",
  [HdsIconlibraryPoi_24px.PoliceOutline_24px]: "61933",
  [HdsIconlibraryPoi_24px.PoliceSolid_24px]: "61934",
  [HdsIconlibraryPoi_24px.PoolOutline_24px]: "61935",
  [HdsIconlibraryPoi_24px.PoolSolid_24px]: "61936",
  [HdsIconlibraryPoi_24px.PostOutline_24px]: "61937",
  [HdsIconlibraryPoi_24px.PostSolid_24px]: "61938",
  [HdsIconlibraryPoi_24px.PubOutline_24px]: "61939",
  [HdsIconlibraryPoi_24px.PubSolid_24px]: "61940",
  [HdsIconlibraryPoi_24px.PublicToiletOutline_24px]: "61941",
  [HdsIconlibraryPoi_24px.PublicToiletSolid_24px]: "61942",
  [HdsIconlibraryPoi_24px.PublicTransportOutline_24px]: "61943",
  [HdsIconlibraryPoi_24px.PublicTransportSolid_24px]: "61944",
  [HdsIconlibraryPoi_24px.RailLightOutline_24px]: "61945",
  [HdsIconlibraryPoi_24px.RailLightSolid_24px]: "61946",
  [HdsIconlibraryPoi_24px.RailRegionalOutline_24px]: "61947",
  [HdsIconlibraryPoi_24px.RailRegionalSolid_24px]: "61948",
  [HdsIconlibraryPoi_24px.RailYardOutline_24px]: "61949",
  [HdsIconlibraryPoi_24px.RailYardSolid_24px]: "61950",
  [HdsIconlibraryPoi_24px.RampOutline_24px]: "61951",
  [HdsIconlibraryPoi_24px.RampSolid_24px]: "61952",
  [HdsIconlibraryPoi_24px.ReligiousPlaceOutline_24px]: "61953",
  [HdsIconlibraryPoi_24px.ReligiousPlaceSolid_24px]: "61954",
  [HdsIconlibraryPoi_24px.ReligiousShintoJpnOutline_24px]: "61955",
  [HdsIconlibraryPoi_24px.ReligiousShintoJpnSolid_24px]: "61956",
  [HdsIconlibraryPoi_24px.ReligiousTempleBuddhistJpnOutline_24px]: "61957",
  [HdsIconlibraryPoi_24px.ReligiousTempleBuddhistJpnSolid_24px]: "61958",
  [HdsIconlibraryPoi_24px.RestaurantOutline_24px]: "61959",
  [HdsIconlibraryPoi_24px.RestaurantSolid_24px]: "61960",
  [HdsIconlibraryPoi_24px.SeaportHarborOutline_24px]: "61961",
  [HdsIconlibraryPoi_24px.SeaportHarborSolid_24px]: "61962",
  [HdsIconlibraryPoi_24px.ShoesOutline_24px]: "61963",
  [HdsIconlibraryPoi_24px.ShoesSolid_24px]: "61964",
  [HdsIconlibraryPoi_24px.ShoppingOutline_24px]: "61965",
  [HdsIconlibraryPoi_24px.ShoppingSolid_24px]: "61966",
  [HdsIconlibraryPoi_24px.ShrineGenericOutline_24px]: "61967",
  [HdsIconlibraryPoi_24px.ShrineGenericSolid_24px]: "61968",
  [HdsIconlibraryPoi_24px.SkiRunOutline_24px]: "61969",
  [HdsIconlibraryPoi_24px.SkiRunSolid_24px]: "61970",
  [HdsIconlibraryPoi_24px.SkywalkOutline_24px]: "61971",
  [HdsIconlibraryPoi_24px.SkywalkSolid_24px]: "61972",
  [HdsIconlibraryPoi_24px.StadiumOutline_24px]: "61973",
  [HdsIconlibraryPoi_24px.StadiumSolid_24px]: "61974",
  [HdsIconlibraryPoi_24px.StairsOutline_24px]: "61975",
  [HdsIconlibraryPoi_24px.StairsSolid_24px]: "61976",
  [HdsIconlibraryPoi_24px.SweetsOutline_24px]: "61977",
  [HdsIconlibraryPoi_24px.SweetsSolid_24px]: "61978",
  [HdsIconlibraryPoi_24px.SwimmingOutline_24px]: "61979",
  [HdsIconlibraryPoi_24px.SwimmingSolid_24px]: "61980",
  [HdsIconlibraryPoi_24px.SynagogueOutline_24px]: "61981",
  [HdsIconlibraryPoi_24px.SynagogueSolid_24px]: "61982",
  [HdsIconlibraryPoi_24px.TaxiOutline_24px]: "61983",
  [HdsIconlibraryPoi_24px.TaxiSolid_24px]: "61984",
  [HdsIconlibraryPoi_24px.TheaterOutline_24px]: "61985",
  [HdsIconlibraryPoi_24px.TheaterSolid_24px]: "61986",
  [HdsIconlibraryPoi_24px.TollBoothOutline_24px]: "61987",
  [HdsIconlibraryPoi_24px.TollBoothSolid_24px]: "61988",
  [HdsIconlibraryPoi_24px.TouristInformationOutline_24px]: "61989",
  [HdsIconlibraryPoi_24px.TouristInformationSolid_24px]: "61990",
  [HdsIconlibraryPoi_24px.TrainOutline_24px]: "61991",
  [HdsIconlibraryPoi_24px.TrainSolid_24px]: "61992",
  [HdsIconlibraryPoi_24px.TransportShinkansenJpnOutline_24px]: "61993",
  [HdsIconlibraryPoi_24px.TransportShinkansenJpnSolid_24px]: "61994",
  [HdsIconlibraryPoi_24px.TravelAgentTicketingOutline_24px]: "61995",
  [HdsIconlibraryPoi_24px.TravelAgentTicketingSolid_24px]: "61996",
  [HdsIconlibraryPoi_24px.TruckDealershipOutline_24px]: "61997",
  [HdsIconlibraryPoi_24px.TruckDealershipSolid_24px]: "61998",
  [HdsIconlibraryPoi_24px.TruckParkingOutline_24px]: "61999",
  [HdsIconlibraryPoi_24px.TruckParkingSolid_24px]: "62000",
  [HdsIconlibraryPoi_24px.TruckRepairOutline_24px]: "62001",
  [HdsIconlibraryPoi_24px.TruckRepairSolid_24px]: "62002",
  [HdsIconlibraryPoi_24px.TruckStopPlazaOutline_24px]: "62003",
  [HdsIconlibraryPoi_24px.TruckStopPlazaSolid_24px]: "62004",
  [HdsIconlibraryPoi_24px.TruckWashOutline_24px]: "62005",
  [HdsIconlibraryPoi_24px.TruckWashSolid_24px]: "62006",
  [HdsIconlibraryPoi_24px.TunnelOutline_24px]: "62007",
  [HdsIconlibraryPoi_24px.TunnelSolid_24px]: "62008",
  [HdsIconlibraryPoi_24px.WaterfallOutline_24px]: "62009",
  [HdsIconlibraryPoi_24px.WaterfallSolid_24px]: "62010",
  [HdsIconlibraryPoi_24px.WeighStationOutline_24px]: "62011",
  [HdsIconlibraryPoi_24px.WeighStationSolid_24px]: "62012",
  [HdsIconlibraryPoi_24px.ZooOutline_24px]: "62013",
  [HdsIconlibraryPoi_24px.ZooSolid_24px]: "62014"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-social-24px.js
var HdsIconlibrarySocial_24px;
(function(HdsIconlibrarySocial_24px2) {
  HdsIconlibrarySocial_24px2["CameraOutline_24px"] = "camera_outline_24px";
  HdsIconlibrarySocial_24px2["CameraSolid_24px"] = "camera_solid_24px";
  HdsIconlibrarySocial_24px2["ChatOutline_24px"] = "chat_outline_24px";
  HdsIconlibrarySocial_24px2["ChatSolid_24px"] = "chat_solid_24px";
  HdsIconlibrarySocial_24px2["EditImageOutline_24px"] = "edit-image_outline_24px";
  HdsIconlibrarySocial_24px2["EditImageSolid_24px"] = "edit-image_solid_24px";
  HdsIconlibrarySocial_24px2["HeartOutline_24px"] = "heart_outline_24px";
  HdsIconlibrarySocial_24px2["HeartSolid_24px"] = "heart_solid_24px";
  HdsIconlibrarySocial_24px2["LiveOutline_24px"] = "live_outline_24px";
  HdsIconlibrarySocial_24px2["LiveSolid_24px"] = "live_solid_24px";
  HdsIconlibrarySocial_24px2["MailOutline_24px"] = "mail_outline_24px";
  HdsIconlibrarySocial_24px2["MailSolid_24px"] = "mail_solid_24px";
  HdsIconlibrarySocial_24px2["MaskingOutline_24px"] = "masking_outline_24px";
  HdsIconlibrarySocial_24px2["MaskingSolid_24px"] = "masking_solid_24px";
  HdsIconlibrarySocial_24px2["StarOutline_24px"] = "star_outline_24px";
  HdsIconlibrarySocial_24px2["StarSolid_24px"] = "star_solid_24px";
  HdsIconlibrarySocial_24px2["StarEmptyOutline_24px"] = "star-empty_outline_24px";
  HdsIconlibrarySocial_24px2["StarEmptySolid_24px"] = "star-empty_solid_24px";
  HdsIconlibrarySocial_24px2["TagHeartedOutline_24px"] = "tag-hearted_outline_24px";
  HdsIconlibrarySocial_24px2["TagHeartedSolid_24px"] = "tag-hearted_solid_24px";
  HdsIconlibrarySocial_24px2["TelephoneOutline_24px"] = "telephone_outline_24px";
  HdsIconlibrarySocial_24px2["TelephoneSolid_24px"] = "telephone_solid_24px";
  HdsIconlibrarySocial_24px2["ThumbsDownOutline_24px"] = "thumbs-down_outline_24px";
  HdsIconlibrarySocial_24px2["ThumbsDownSolid_24px"] = "thumbs-down_solid_24px";
  HdsIconlibrarySocial_24px2["ThumbsUpOutline_24px"] = "thumbs-up_outline_24px";
  HdsIconlibrarySocial_24px2["ThumbsUpSolid_24px"] = "thumbs-up_solid_24px";
})(HdsIconlibrarySocial_24px = HdsIconlibrarySocial_24px || (HdsIconlibrarySocial_24px = {}));
var HDS_ICONLIBRARY_SOCIAL_24PX_CODEPOINTS = {
  [HdsIconlibrarySocial_24px.CameraOutline_24px]: "61697",
  [HdsIconlibrarySocial_24px.CameraSolid_24px]: "61698",
  [HdsIconlibrarySocial_24px.ChatOutline_24px]: "61699",
  [HdsIconlibrarySocial_24px.ChatSolid_24px]: "61700",
  [HdsIconlibrarySocial_24px.EditImageOutline_24px]: "61701",
  [HdsIconlibrarySocial_24px.EditImageSolid_24px]: "61702",
  [HdsIconlibrarySocial_24px.HeartOutline_24px]: "61703",
  [HdsIconlibrarySocial_24px.HeartSolid_24px]: "61704",
  [HdsIconlibrarySocial_24px.LiveOutline_24px]: "61705",
  [HdsIconlibrarySocial_24px.LiveSolid_24px]: "61706",
  [HdsIconlibrarySocial_24px.MailOutline_24px]: "61707",
  [HdsIconlibrarySocial_24px.MailSolid_24px]: "61708",
  [HdsIconlibrarySocial_24px.MaskingOutline_24px]: "61709",
  [HdsIconlibrarySocial_24px.MaskingSolid_24px]: "61710",
  [HdsIconlibrarySocial_24px.StarOutline_24px]: "61711",
  [HdsIconlibrarySocial_24px.StarSolid_24px]: "61712",
  [HdsIconlibrarySocial_24px.StarEmptyOutline_24px]: "61713",
  [HdsIconlibrarySocial_24px.StarEmptySolid_24px]: "61714",
  [HdsIconlibrarySocial_24px.TagHeartedOutline_24px]: "61715",
  [HdsIconlibrarySocial_24px.TagHeartedSolid_24px]: "61716",
  [HdsIconlibrarySocial_24px.TelephoneOutline_24px]: "61717",
  [HdsIconlibrarySocial_24px.TelephoneSolid_24px]: "61718",
  [HdsIconlibrarySocial_24px.ThumbsDownOutline_24px]: "61719",
  [HdsIconlibrarySocial_24px.ThumbsDownSolid_24px]: "61720",
  [HdsIconlibrarySocial_24px.ThumbsUpOutline_24px]: "61721",
  [HdsIconlibrarySocial_24px.ThumbsUpSolid_24px]: "61722"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-stats-24px.js
var HdsIconlibraryStats_24px;
(function(HdsIconlibraryStats_24px2) {
  HdsIconlibraryStats_24px2["ActivityOutline_24px"] = "activity_outline_24px";
  HdsIconlibraryStats_24px2["ActivitySolid_24px"] = "activity_solid_24px";
  HdsIconlibraryStats_24px2["BarChartOutline_24px"] = "bar-chart_outline_24px";
  HdsIconlibraryStats_24px2["BarChartSolid_24px"] = "bar-chart_solid_24px";
  HdsIconlibraryStats_24px2["DashboardOutline_24px"] = "dashboard_outline_24px";
  HdsIconlibraryStats_24px2["DashboardSolid_24px"] = "dashboard_solid_24px";
  HdsIconlibraryStats_24px2["EastOutline_24px"] = "east_outline_24px";
  HdsIconlibraryStats_24px2["EastSolid_24px"] = "east_solid_24px";
  HdsIconlibraryStats_24px2["MarkerOutline_24px"] = "marker_outline_24px";
  HdsIconlibraryStats_24px2["MarkerSolid_24px"] = "marker_solid_24px";
  HdsIconlibraryStats_24px2["NorthEastOutline_24px"] = "north-east_outline_24px";
  HdsIconlibraryStats_24px2["NorthEastSolid_24px"] = "north-east_solid_24px";
  HdsIconlibraryStats_24px2["NorthWestOutline_24px"] = "north-west_outline_24px";
  HdsIconlibraryStats_24px2["NorthWestSolid_24px"] = "north-west_solid_24px";
  HdsIconlibraryStats_24px2["PieChartOutline_24px"] = "pie-chart_outline_24px";
  HdsIconlibraryStats_24px2["PieChartSolid_24px"] = "pie-chart_solid_24px";
  HdsIconlibraryStats_24px2["SouthEastOutline_24px"] = "south-east_outline_24px";
  HdsIconlibraryStats_24px2["SouthEastSolid_24px"] = "south-east_solid_24px";
  HdsIconlibraryStats_24px2["SouthWestOutline_24px"] = "south-west_outline_24px";
  HdsIconlibraryStats_24px2["SouthWestSolid_24px"] = "south-west_solid_24px";
  HdsIconlibraryStats_24px2["StatisticsOutline_24px"] = "statistics_outline_24px";
  HdsIconlibraryStats_24px2["StatisticsSolid_24px"] = "statistics_solid_24px";
  HdsIconlibraryStats_24px2["ValueOutline_24px"] = "value_outline_24px";
  HdsIconlibraryStats_24px2["ValueSolid_24px"] = "value_solid_24px";
  HdsIconlibraryStats_24px2["ValueDecreaseOutline_24px"] = "value-decrease_outline_24px";
  HdsIconlibraryStats_24px2["ValueDecreaseSolid_24px"] = "value-decrease_solid_24px";
  HdsIconlibraryStats_24px2["ValueDecreaseHighOutline_24px"] = "value-decrease-high_outline_24px";
  HdsIconlibraryStats_24px2["ValueDecreaseHighSolid_24px"] = "value-decrease-high_solid_24px";
  HdsIconlibraryStats_24px2["ValueIncreaseOutline_24px"] = "value-increase_outline_24px";
  HdsIconlibraryStats_24px2["ValueIncreaseSolid_24px"] = "value-increase_solid_24px";
  HdsIconlibraryStats_24px2["ValueIncreaseHighOutline_24px"] = "value-increase-high_outline_24px";
  HdsIconlibraryStats_24px2["ValueIncreaseHighSolid_24px"] = "value-increase-high_solid_24px";
  HdsIconlibraryStats_24px2["WestOutline_24px"] = "west_outline_24px";
  HdsIconlibraryStats_24px2["WestSolid_24px"] = "west_solid_24px";
})(HdsIconlibraryStats_24px = HdsIconlibraryStats_24px || (HdsIconlibraryStats_24px = {}));
var HDS_ICONLIBRARY_STATS_24PX_CODEPOINTS = {
  [HdsIconlibraryStats_24px.ActivityOutline_24px]: "61697",
  [HdsIconlibraryStats_24px.ActivitySolid_24px]: "61698",
  [HdsIconlibraryStats_24px.BarChartOutline_24px]: "61699",
  [HdsIconlibraryStats_24px.BarChartSolid_24px]: "61700",
  [HdsIconlibraryStats_24px.DashboardOutline_24px]: "61701",
  [HdsIconlibraryStats_24px.DashboardSolid_24px]: "61702",
  [HdsIconlibraryStats_24px.EastOutline_24px]: "61703",
  [HdsIconlibraryStats_24px.EastSolid_24px]: "61704",
  [HdsIconlibraryStats_24px.MarkerOutline_24px]: "61705",
  [HdsIconlibraryStats_24px.MarkerSolid_24px]: "61706",
  [HdsIconlibraryStats_24px.NorthEastOutline_24px]: "61707",
  [HdsIconlibraryStats_24px.NorthEastSolid_24px]: "61708",
  [HdsIconlibraryStats_24px.NorthWestOutline_24px]: "61709",
  [HdsIconlibraryStats_24px.NorthWestSolid_24px]: "61710",
  [HdsIconlibraryStats_24px.PieChartOutline_24px]: "61711",
  [HdsIconlibraryStats_24px.PieChartSolid_24px]: "61712",
  [HdsIconlibraryStats_24px.SouthEastOutline_24px]: "61713",
  [HdsIconlibraryStats_24px.SouthEastSolid_24px]: "61714",
  [HdsIconlibraryStats_24px.SouthWestOutline_24px]: "61715",
  [HdsIconlibraryStats_24px.SouthWestSolid_24px]: "61716",
  [HdsIconlibraryStats_24px.StatisticsOutline_24px]: "61717",
  [HdsIconlibraryStats_24px.StatisticsSolid_24px]: "61718",
  [HdsIconlibraryStats_24px.ValueOutline_24px]: "61719",
  [HdsIconlibraryStats_24px.ValueSolid_24px]: "61720",
  [HdsIconlibraryStats_24px.ValueDecreaseOutline_24px]: "61721",
  [HdsIconlibraryStats_24px.ValueDecreaseSolid_24px]: "61722",
  [HdsIconlibraryStats_24px.ValueDecreaseHighOutline_24px]: "61723",
  [HdsIconlibraryStats_24px.ValueDecreaseHighSolid_24px]: "61724",
  [HdsIconlibraryStats_24px.ValueIncreaseOutline_24px]: "61725",
  [HdsIconlibraryStats_24px.ValueIncreaseSolid_24px]: "61726",
  [HdsIconlibraryStats_24px.ValueIncreaseHighOutline_24px]: "61727",
  [HdsIconlibraryStats_24px.ValueIncreaseHighSolid_24px]: "61728",
  [HdsIconlibraryStats_24px.WestOutline_24px]: "61729",
  [HdsIconlibraryStats_24px.WestSolid_24px]: "61730"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-third-party-logos-24px.js
var HdsIconlibraryThirdPartyLogos_24px;
(function(HdsIconlibraryThirdPartyLogos_24px2) {
  HdsIconlibraryThirdPartyLogos_24px2["i360Outline_24px"] = "360_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["i360Solid_24px"] = "360_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["AlexaOutline_24px"] = "alexa_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["AlexaSolid_24px"] = "alexa_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["AmexOutline_24px"] = "amex_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["AmexSolid_24px"] = "amex_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["DinersOutline_24px"] = "diners_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["DinersSolid_24px"] = "diners_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["DiscoverOutline_24px"] = "discover_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["DiscoverSolid_24px"] = "discover_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["FacebookOutline_24px"] = "facebook_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["FacebookSolid_24px"] = "facebook_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["FigmaOutline_24px"] = "figma_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["FigmaSolid_24px"] = "figma_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["GithubOutline_24px"] = "github_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["GithubSolid_24px"] = "github_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["GitlabOutline_24px"] = "gitlab_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["GitlabSolid_24px"] = "gitlab_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["InstagramOutline_24px"] = "instagram_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["InstagramSolid_24px"] = "instagram_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["LinkedinOutline_24px"] = "linkedin_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["LinkedinSolid_24px"] = "linkedin_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["MastercardOutline_24px"] = "mastercard_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["MastercardSolid_24px"] = "mastercard_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["RedditOutline_24px"] = "reddit_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["RedditSolid_24px"] = "reddit_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["StorybookOutline_24px"] = "storybook_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["StorybookSolid_24px"] = "storybook_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["TwitterOutline_24px"] = "twitter_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["TwitterSolid_24px"] = "twitter_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["VisaOutline_24px"] = "visa_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["VisaSolid_24px"] = "visa_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["What_3WordsOutline_24px"] = "what-3-words_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["What_3WordsSolid_24px"] = "what-3-words_solid_24px";
  HdsIconlibraryThirdPartyLogos_24px2["YoutubeOutline_24px"] = "youtube_outline_24px";
  HdsIconlibraryThirdPartyLogos_24px2["YoutubeSolid_24px"] = "youtube_solid_24px";
})(HdsIconlibraryThirdPartyLogos_24px = HdsIconlibraryThirdPartyLogos_24px || (HdsIconlibraryThirdPartyLogos_24px = {}));
var HDS_ICONLIBRARY_THIRD_PARTY_LOGOS_24PX_CODEPOINTS = {
  [HdsIconlibraryThirdPartyLogos_24px.i360Outline_24px]: "61697",
  [HdsIconlibraryThirdPartyLogos_24px.i360Solid_24px]: "61698",
  [HdsIconlibraryThirdPartyLogos_24px.AlexaOutline_24px]: "61699",
  [HdsIconlibraryThirdPartyLogos_24px.AlexaSolid_24px]: "61700",
  [HdsIconlibraryThirdPartyLogos_24px.AmexOutline_24px]: "61701",
  [HdsIconlibraryThirdPartyLogos_24px.AmexSolid_24px]: "61702",
  [HdsIconlibraryThirdPartyLogos_24px.DinersOutline_24px]: "61703",
  [HdsIconlibraryThirdPartyLogos_24px.DinersSolid_24px]: "61704",
  [HdsIconlibraryThirdPartyLogos_24px.DiscoverOutline_24px]: "61705",
  [HdsIconlibraryThirdPartyLogos_24px.DiscoverSolid_24px]: "61706",
  [HdsIconlibraryThirdPartyLogos_24px.FacebookOutline_24px]: "61707",
  [HdsIconlibraryThirdPartyLogos_24px.FacebookSolid_24px]: "61708",
  [HdsIconlibraryThirdPartyLogos_24px.FigmaOutline_24px]: "61709",
  [HdsIconlibraryThirdPartyLogos_24px.FigmaSolid_24px]: "61710",
  [HdsIconlibraryThirdPartyLogos_24px.GithubOutline_24px]: "61711",
  [HdsIconlibraryThirdPartyLogos_24px.GithubSolid_24px]: "61712",
  [HdsIconlibraryThirdPartyLogos_24px.GitlabOutline_24px]: "61713",
  [HdsIconlibraryThirdPartyLogos_24px.GitlabSolid_24px]: "61714",
  [HdsIconlibraryThirdPartyLogos_24px.InstagramOutline_24px]: "61715",
  [HdsIconlibraryThirdPartyLogos_24px.InstagramSolid_24px]: "61716",
  [HdsIconlibraryThirdPartyLogos_24px.LinkedinOutline_24px]: "61717",
  [HdsIconlibraryThirdPartyLogos_24px.LinkedinSolid_24px]: "61718",
  [HdsIconlibraryThirdPartyLogos_24px.MastercardOutline_24px]: "61719",
  [HdsIconlibraryThirdPartyLogos_24px.MastercardSolid_24px]: "61720",
  [HdsIconlibraryThirdPartyLogos_24px.RedditOutline_24px]: "61721",
  [HdsIconlibraryThirdPartyLogos_24px.RedditSolid_24px]: "61722",
  [HdsIconlibraryThirdPartyLogos_24px.StorybookOutline_24px]: "61723",
  [HdsIconlibraryThirdPartyLogos_24px.StorybookSolid_24px]: "61724",
  [HdsIconlibraryThirdPartyLogos_24px.TwitterOutline_24px]: "61725",
  [HdsIconlibraryThirdPartyLogos_24px.TwitterSolid_24px]: "61726",
  [HdsIconlibraryThirdPartyLogos_24px.VisaOutline_24px]: "61727",
  [HdsIconlibraryThirdPartyLogos_24px.VisaSolid_24px]: "61728",
  [HdsIconlibraryThirdPartyLogos_24px.What_3WordsOutline_24px]: "61729",
  [HdsIconlibraryThirdPartyLogos_24px.What_3WordsSolid_24px]: "61730",
  [HdsIconlibraryThirdPartyLogos_24px.YoutubeOutline_24px]: "61731",
  [HdsIconlibraryThirdPartyLogos_24px.YoutubeSolid_24px]: "61732"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-tools-24px.js
var HdsIconlibraryTools_24px;
(function(HdsIconlibraryTools_24px2) {
  HdsIconlibraryTools_24px2["AddCamOutline_24px"] = "add-cam_outline_24px";
  HdsIconlibraryTools_24px2["AddCamSolid_24px"] = "add-cam_solid_24px";
  HdsIconlibraryTools_24px2["AddMapMarkerOutline_24px"] = "add-map-marker_outline_24px";
  HdsIconlibraryTools_24px2["AddMapMarkerSolid_24px"] = "add-map-marker_solid_24px";
  HdsIconlibraryTools_24px2["AddPlaceOutline_24px"] = "add-place_outline_24px";
  HdsIconlibraryTools_24px2["AddPlaceSolid_24px"] = "add-place_solid_24px";
  HdsIconlibraryTools_24px2["AddRoadOutline_24px"] = "add-road_outline_24px";
  HdsIconlibraryTools_24px2["AddRoadSolid_24px"] = "add-road_solid_24px";
  HdsIconlibraryTools_24px2["AddRoadSignOutline_24px"] = "add-road-sign_outline_24px";
  HdsIconlibraryTools_24px2["AddRoadSignSolid_24px"] = "add-road-sign_solid_24px";
  HdsIconlibraryTools_24px2["AddShapeOutline_24px"] = "add-shape_outline_24px";
  HdsIconlibraryTools_24px2["AddShapeSolid_24px"] = "add-shape_solid_24px";
  HdsIconlibraryTools_24px2["BrushSelectionOutline_24px"] = "brush-selection_outline_24px";
  HdsIconlibraryTools_24px2["BrushSelectionSolid_24px"] = "brush-selection_solid_24px";
  HdsIconlibraryTools_24px2["CenterLineOutline_24px"] = "center-line_outline_24px";
  HdsIconlibraryTools_24px2["CenterLineSolid_24px"] = "center-line_solid_24px";
  HdsIconlibraryTools_24px2["ColorPaletteOutline_24px"] = "color-palette_outline_24px";
  HdsIconlibraryTools_24px2["ColorPaletteSolid_24px"] = "color-palette_solid_24px";
  HdsIconlibraryTools_24px2["CompassBOutline_24px"] = "compass-b_outline_24px";
  HdsIconlibraryTools_24px2["CompassBSolid_24px"] = "compass-b_solid_24px";
  HdsIconlibraryTools_24px2["ConnectorOutline_24px"] = "connector_outline_24px";
  HdsIconlibraryTools_24px2["ConnectorSolid_24px"] = "connector_solid_24px";
  HdsIconlibraryTools_24px2["CursorArrowOutline_24px"] = "cursor-arrow_outline_24px";
  HdsIconlibraryTools_24px2["CursorArrowSolid_24px"] = "cursor-arrow_solid_24px";
  HdsIconlibraryTools_24px2["CursorPointerOutline_24px"] = "cursor-pointer_outline_24px";
  HdsIconlibraryTools_24px2["CursorPointerSolid_24px"] = "cursor-pointer_solid_24px";
  HdsIconlibraryTools_24px2["CursorSelectorOutline_24px"] = "cursor-selector_outline_24px";
  HdsIconlibraryTools_24px2["CursorSelectorSolid_24px"] = "cursor-selector_solid_24px";
  HdsIconlibraryTools_24px2["DisconnectedOutline_24px"] = "disconnected_outline_24px";
  HdsIconlibraryTools_24px2["DisconnectedSolid_24px"] = "disconnected_solid_24px";
  HdsIconlibraryTools_24px2["EditCurvesOutline_24px"] = "edit-curves_outline_24px";
  HdsIconlibraryTools_24px2["EditCurvesSolid_24px"] = "edit-curves_solid_24px";
  HdsIconlibraryTools_24px2["FinetuneOutline_24px"] = "finetune_outline_24px";
  HdsIconlibraryTools_24px2["FinetuneSolid_24px"] = "finetune_solid_24px";
  HdsIconlibraryTools_24px2["FontOutline_24px"] = "font_outline_24px";
  HdsIconlibraryTools_24px2["FontSolid_24px"] = "font_solid_24px";
  HdsIconlibraryTools_24px2["GuidesOutline_24px"] = "guides_outline_24px";
  HdsIconlibraryTools_24px2["GuidesSolid_24px"] = "guides_solid_24px";
  HdsIconlibraryTools_24px2["JoinBevelOutline_24px"] = "join-bevel_outline_24px";
  HdsIconlibraryTools_24px2["JoinBevelSolid_24px"] = "join-bevel_solid_24px";
  HdsIconlibraryTools_24px2["JoinMiterOutline_24px"] = "join-miter_outline_24px";
  HdsIconlibraryTools_24px2["JoinMiterSolid_24px"] = "join-miter_solid_24px";
  HdsIconlibraryTools_24px2["JoinRoundOutline_24px"] = "join-round_outline_24px";
  HdsIconlibraryTools_24px2["JoinRoundSolid_24px"] = "join-round_solid_24px";
  HdsIconlibraryTools_24px2["LineDashedOutline_24px"] = "line-dashed_outline_24px";
  HdsIconlibraryTools_24px2["LineDashedSolid_24px"] = "line-dashed_solid_24px";
  HdsIconlibraryTools_24px2["LineSolidOutline_24px"] = "line-solid_outline_24px";
  HdsIconlibraryTools_24px2["LineSolidSolid_24px"] = "line-solid_solid_24px";
  HdsIconlibraryTools_24px2["LineVariousOutline_24px"] = "line-various_outline_24px";
  HdsIconlibraryTools_24px2["LineVariousSolid_24px"] = "line-various_solid_24px";
  HdsIconlibraryTools_24px2["MapPlannerOutline_24px"] = "map-planner_outline_24px";
  HdsIconlibraryTools_24px2["MapPlannerSolid_24px"] = "map-planner_solid_24px";
  HdsIconlibraryTools_24px2["MergeOutline_24px"] = "merge_outline_24px";
  HdsIconlibraryTools_24px2["MergeSolid_24px"] = "merge_solid_24px";
  HdsIconlibraryTools_24px2["NumbersOutline_24px"] = "numbers_outline_24px";
  HdsIconlibraryTools_24px2["NumbersSolid_24px"] = "numbers_solid_24px";
  HdsIconlibraryTools_24px2["OutlineOutline_24px"] = "outline_outline_24px";
  HdsIconlibraryTools_24px2["OutlineSolid_24px"] = "outline_solid_24px";
  HdsIconlibraryTools_24px2["OutlinePlusOutline_24px"] = "outline-plus_outline_24px";
  HdsIconlibraryTools_24px2["OutlinePlusSolid_24px"] = "outline-plus_solid_24px";
  HdsIconlibraryTools_24px2["PathOutline_24px"] = "path_outline_24px";
  HdsIconlibraryTools_24px2["PathSolid_24px"] = "path_solid_24px";
  HdsIconlibraryTools_24px2["PickerOutline_24px"] = "picker_outline_24px";
  HdsIconlibraryTools_24px2["PickerSolid_24px"] = "picker_solid_24px";
  HdsIconlibraryTools_24px2["PolygonOutline_24px"] = "polygon_outline_24px";
  HdsIconlibraryTools_24px2["PolygonSolid_24px"] = "polygon_solid_24px";
  HdsIconlibraryTools_24px2["PolylineOutline_24px"] = "polyline_outline_24px";
  HdsIconlibraryTools_24px2["PolylineSolid_24px"] = "polyline_solid_24px";
  HdsIconlibraryTools_24px2["RoadOutline_24px"] = "road_outline_24px";
  HdsIconlibraryTools_24px2["RoadSolid_24px"] = "road_solid_24px";
  HdsIconlibraryTools_24px2["SelectorFreeformOutline_24px"] = "selector-freeform_outline_24px";
  HdsIconlibraryTools_24px2["SelectorFreeformSolid_24px"] = "selector-freeform_solid_24px";
  HdsIconlibraryTools_24px2["SelectorPointerOutline_24px"] = "selector-pointer_outline_24px";
  HdsIconlibraryTools_24px2["SelectorPointerSolid_24px"] = "selector-pointer_solid_24px";
  HdsIconlibraryTools_24px2["SelectorPolygonOutline_24px"] = "selector-polygon_outline_24px";
  HdsIconlibraryTools_24px2["SelectorPolygonSolid_24px"] = "selector-polygon_solid_24px";
  HdsIconlibraryTools_24px2["ShapeOutline_24px"] = "shape_outline_24px";
  HdsIconlibraryTools_24px2["ShapeSolid_24px"] = "shape_solid_24px";
  HdsIconlibraryTools_24px2["SkipPointOutline_24px"] = "skip-point_outline_24px";
  HdsIconlibraryTools_24px2["SkipPointSolid_24px"] = "skip-point_solid_24px";
  HdsIconlibraryTools_24px2["SplitObjectOutline_24px"] = "split-object_outline_24px";
  HdsIconlibraryTools_24px2["SplitObjectSolid_24px"] = "split-object_solid_24px";
  HdsIconlibraryTools_24px2["TextOutline_24px"] = "text_outline_24px";
  HdsIconlibraryTools_24px2["TextSolid_24px"] = "text_solid_24px";
  HdsIconlibraryTools_24px2["TiePointOutline_24px"] = "tie-point_outline_24px";
  HdsIconlibraryTools_24px2["TiePointSolid_24px"] = "tie-point_solid_24px";
  HdsIconlibraryTools_24px2["TunerOutline_24px"] = "tuner_outline_24px";
  HdsIconlibraryTools_24px2["TunerSolid_24px"] = "tuner_solid_24px";
  HdsIconlibraryTools_24px2["VectorPointOutline_24px"] = "vector-point_outline_24px";
  HdsIconlibraryTools_24px2["VectorPointSolid_24px"] = "vector-point_solid_24px";
  HdsIconlibraryTools_24px2["WrenchOutline_24px"] = "wrench_outline_24px";
  HdsIconlibraryTools_24px2["WrenchSolid_24px"] = "wrench_solid_24px";
})(HdsIconlibraryTools_24px = HdsIconlibraryTools_24px || (HdsIconlibraryTools_24px = {}));
var HDS_ICONLIBRARY_TOOLS_24PX_CODEPOINTS = {
  [HdsIconlibraryTools_24px.AddCamOutline_24px]: "61697",
  [HdsIconlibraryTools_24px.AddCamSolid_24px]: "61698",
  [HdsIconlibraryTools_24px.AddMapMarkerOutline_24px]: "61699",
  [HdsIconlibraryTools_24px.AddMapMarkerSolid_24px]: "61700",
  [HdsIconlibraryTools_24px.AddPlaceOutline_24px]: "61701",
  [HdsIconlibraryTools_24px.AddPlaceSolid_24px]: "61702",
  [HdsIconlibraryTools_24px.AddRoadOutline_24px]: "61703",
  [HdsIconlibraryTools_24px.AddRoadSolid_24px]: "61704",
  [HdsIconlibraryTools_24px.AddRoadSignOutline_24px]: "61705",
  [HdsIconlibraryTools_24px.AddRoadSignSolid_24px]: "61706",
  [HdsIconlibraryTools_24px.AddShapeOutline_24px]: "61707",
  [HdsIconlibraryTools_24px.AddShapeSolid_24px]: "61708",
  [HdsIconlibraryTools_24px.BrushSelectionOutline_24px]: "61709",
  [HdsIconlibraryTools_24px.BrushSelectionSolid_24px]: "61710",
  [HdsIconlibraryTools_24px.CenterLineOutline_24px]: "61711",
  [HdsIconlibraryTools_24px.CenterLineSolid_24px]: "61712",
  [HdsIconlibraryTools_24px.ColorPaletteOutline_24px]: "61713",
  [HdsIconlibraryTools_24px.ColorPaletteSolid_24px]: "61714",
  [HdsIconlibraryTools_24px.CompassBOutline_24px]: "61715",
  [HdsIconlibraryTools_24px.CompassBSolid_24px]: "61716",
  [HdsIconlibraryTools_24px.ConnectorOutline_24px]: "61717",
  [HdsIconlibraryTools_24px.ConnectorSolid_24px]: "61718",
  [HdsIconlibraryTools_24px.CursorArrowOutline_24px]: "61719",
  [HdsIconlibraryTools_24px.CursorArrowSolid_24px]: "61720",
  [HdsIconlibraryTools_24px.CursorPointerOutline_24px]: "61721",
  [HdsIconlibraryTools_24px.CursorPointerSolid_24px]: "61722",
  [HdsIconlibraryTools_24px.CursorSelectorOutline_24px]: "61723",
  [HdsIconlibraryTools_24px.CursorSelectorSolid_24px]: "61724",
  [HdsIconlibraryTools_24px.DisconnectedOutline_24px]: "61725",
  [HdsIconlibraryTools_24px.DisconnectedSolid_24px]: "61726",
  [HdsIconlibraryTools_24px.EditCurvesOutline_24px]: "61727",
  [HdsIconlibraryTools_24px.EditCurvesSolid_24px]: "61728",
  [HdsIconlibraryTools_24px.FinetuneOutline_24px]: "61729",
  [HdsIconlibraryTools_24px.FinetuneSolid_24px]: "61730",
  [HdsIconlibraryTools_24px.FontOutline_24px]: "61731",
  [HdsIconlibraryTools_24px.FontSolid_24px]: "61732",
  [HdsIconlibraryTools_24px.GuidesOutline_24px]: "61733",
  [HdsIconlibraryTools_24px.GuidesSolid_24px]: "61734",
  [HdsIconlibraryTools_24px.JoinBevelOutline_24px]: "61735",
  [HdsIconlibraryTools_24px.JoinBevelSolid_24px]: "61736",
  [HdsIconlibraryTools_24px.JoinMiterOutline_24px]: "61737",
  [HdsIconlibraryTools_24px.JoinMiterSolid_24px]: "61738",
  [HdsIconlibraryTools_24px.JoinRoundOutline_24px]: "61739",
  [HdsIconlibraryTools_24px.JoinRoundSolid_24px]: "61740",
  [HdsIconlibraryTools_24px.LineDashedOutline_24px]: "61741",
  [HdsIconlibraryTools_24px.LineDashedSolid_24px]: "61742",
  [HdsIconlibraryTools_24px.LineSolidOutline_24px]: "61743",
  [HdsIconlibraryTools_24px.LineSolidSolid_24px]: "61744",
  [HdsIconlibraryTools_24px.LineVariousOutline_24px]: "61745",
  [HdsIconlibraryTools_24px.LineVariousSolid_24px]: "61746",
  [HdsIconlibraryTools_24px.MapPlannerOutline_24px]: "61747",
  [HdsIconlibraryTools_24px.MapPlannerSolid_24px]: "61748",
  [HdsIconlibraryTools_24px.MergeOutline_24px]: "61749",
  [HdsIconlibraryTools_24px.MergeSolid_24px]: "61750",
  [HdsIconlibraryTools_24px.NumbersOutline_24px]: "61751",
  [HdsIconlibraryTools_24px.NumbersSolid_24px]: "61752",
  [HdsIconlibraryTools_24px.OutlineOutline_24px]: "61753",
  [HdsIconlibraryTools_24px.OutlineSolid_24px]: "61754",
  [HdsIconlibraryTools_24px.OutlinePlusOutline_24px]: "61755",
  [HdsIconlibraryTools_24px.OutlinePlusSolid_24px]: "61756",
  [HdsIconlibraryTools_24px.PathOutline_24px]: "61757",
  [HdsIconlibraryTools_24px.PathSolid_24px]: "61758",
  [HdsIconlibraryTools_24px.PickerOutline_24px]: "61759",
  [HdsIconlibraryTools_24px.PickerSolid_24px]: "61760",
  [HdsIconlibraryTools_24px.PolygonOutline_24px]: "61761",
  [HdsIconlibraryTools_24px.PolygonSolid_24px]: "61762",
  [HdsIconlibraryTools_24px.PolylineOutline_24px]: "61763",
  [HdsIconlibraryTools_24px.PolylineSolid_24px]: "61764",
  [HdsIconlibraryTools_24px.RoadOutline_24px]: "61765",
  [HdsIconlibraryTools_24px.RoadSolid_24px]: "61766",
  [HdsIconlibraryTools_24px.SelectorFreeformOutline_24px]: "61767",
  [HdsIconlibraryTools_24px.SelectorFreeformSolid_24px]: "61768",
  [HdsIconlibraryTools_24px.SelectorPointerOutline_24px]: "61769",
  [HdsIconlibraryTools_24px.SelectorPointerSolid_24px]: "61770",
  [HdsIconlibraryTools_24px.SelectorPolygonOutline_24px]: "61771",
  [HdsIconlibraryTools_24px.SelectorPolygonSolid_24px]: "61772",
  [HdsIconlibraryTools_24px.ShapeOutline_24px]: "61773",
  [HdsIconlibraryTools_24px.ShapeSolid_24px]: "61774",
  [HdsIconlibraryTools_24px.SkipPointOutline_24px]: "61775",
  [HdsIconlibraryTools_24px.SkipPointSolid_24px]: "61776",
  [HdsIconlibraryTools_24px.SplitObjectOutline_24px]: "61777",
  [HdsIconlibraryTools_24px.SplitObjectSolid_24px]: "61778",
  [HdsIconlibraryTools_24px.TextOutline_24px]: "61779",
  [HdsIconlibraryTools_24px.TextSolid_24px]: "61780",
  [HdsIconlibraryTools_24px.TiePointOutline_24px]: "61781",
  [HdsIconlibraryTools_24px.TiePointSolid_24px]: "61782",
  [HdsIconlibraryTools_24px.TunerOutline_24px]: "61783",
  [HdsIconlibraryTools_24px.TunerSolid_24px]: "61784",
  [HdsIconlibraryTools_24px.VectorPointOutline_24px]: "61785",
  [HdsIconlibraryTools_24px.VectorPointSolid_24px]: "61786",
  [HdsIconlibraryTools_24px.WrenchOutline_24px]: "61787",
  [HdsIconlibraryTools_24px.WrenchSolid_24px]: "61788"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-travel-transport-tracking-24px.js
var HdsIconlibraryTravelTransportTracking_24px;
(function(HdsIconlibraryTravelTransportTracking_24px2) {
  HdsIconlibraryTravelTransportTracking_24px2["AccidentCarOutline_24px"] = "accident-car_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["AccidentCarSolid_24px"] = "accident-car_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["AirportOutline_24px"] = "airport_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["AirportSolid_24px"] = "airport_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["AmbulanceOutline_24px"] = "ambulance_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["AmbulanceSolid_24px"] = "ambulance_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["ArrivalAirportOutline_24px"] = "arrival-airport_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["ArrivalAirportSolid_24px"] = "arrival-airport_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["AttentionOutline_24px"] = "attention_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["AttentionSolid_24px"] = "attention_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["AutoCaravanOutline_24px"] = "auto-caravan_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["AutoCaravanSolid_24px"] = "auto-caravan_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["AutoTrailerOutline_24px"] = "auto-trailer_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["AutoTrailerSolid_24px"] = "auto-trailer_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BeamLightOutline_24px"] = "beam-light_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BeamLightSolid_24px"] = "beam-light_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BicycleOutline_24px"] = "bicycle_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BicycleSolid_24px"] = "bicycle_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BicyclePaceOutline_24px"] = "bicycle-pace_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BicyclePaceSolid_24px"] = "bicycle-pace_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BoatTrailerOutline_24px"] = "boat-trailer_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BoatTrailerSolid_24px"] = "boat-trailer_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BumpsOutline_24px"] = "bumps_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BumpsSolid_24px"] = "bumps_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BusOutline_24px"] = "bus_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BusSolid_24px"] = "bus_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BusRapidOutline_24px"] = "bus-rapid_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["BusRapidSolid_24px"] = "bus-rapid_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CableWayOutline_24px"] = "cable-way_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CableWaySolid_24px"] = "cable-way_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CarFuelAltOutline_24px"] = "car-fuel-alt_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CarFuelAltSolid_24px"] = "car-fuel-alt_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CarRentalOutline_24px"] = "car-rental_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CarRentalSolid_24px"] = "car-rental_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CarRigOutline_24px"] = "car-rig_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CarRigSolid_24px"] = "car-rig_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CarWifiOffOutline_24px"] = "car-wifi-off_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CarWifiOffSolid_24px"] = "car-wifi-off_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CarWifiOnOutline_24px"] = "car-wifi-on_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CarWifiOnSolid_24px"] = "car-wifi-on_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CaravanOutline_24px"] = "caravan_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CaravanSolid_24px"] = "caravan_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["ChargingOutline_24px"] = "charging_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["ChargingSolid_24px"] = "charging_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["ClosureOutline_24px"] = "closure_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["ClosureSolid_24px"] = "closure_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CoachOutline_24px"] = "coach_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["CoachSolid_24px"] = "coach_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DeliveryVanOutline_24px"] = "delivery-van_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DeliveryVanSolid_24px"] = "delivery-van_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DepartureAirportOutline_24px"] = "departure-airport_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DepartureAirportSolid_24px"] = "departure-airport_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DestinationOutline_24px"] = "destination_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DestinationSolid_24px"] = "destination_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DiagonalOutline_24px"] = "diagonal_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DiagonalSolid_24px"] = "diagonal_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DirectionsOutline_24px"] = "directions_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DirectionsSolid_24px"] = "directions_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DisabledVehicleOutline_24px"] = "disabled-vehicle_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DisabledVehicleSolid_24px"] = "disabled-vehicle_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DrivingOutline_24px"] = "driving_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DrivingSolid_24px"] = "driving_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DrivingOffOutline_24px"] = "driving-off_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DrivingOffSolid_24px"] = "driving-off_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DynamicRoutingOutline_24px"] = "dynamic-routing_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["DynamicRoutingSolid_24px"] = "dynamic-routing_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["EvRangeOutline_24px"] = "ev-range_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["EvRangeSolid_24px"] = "ev-range_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["FerryOutline_24px"] = "ferry_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["FerrySolid_24px"] = "ferry_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["FerryOffOutline_24px"] = "ferry-off_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["FerryOffSolid_24px"] = "ferry-off_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["FlightMonitorOutline_24px"] = "flight-monitor_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["FlightMonitorSolid_24px"] = "flight-monitor_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["FullContainerLoadOutline_24px"] = "full-container-load_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["FullContainerLoadSolid_24px"] = "full-container-load_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["FullTruckLoadOutline_24px"] = "full-truck-load_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["FullTruckLoadSolid_24px"] = "full-truck-load_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["GeofenceOutline_24px"] = "geofence_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["GeofenceSolid_24px"] = "geofence_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["HandsfreeDrivingOutline_24px"] = "handsfree-driving_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["HandsfreeDrivingSolid_24px"] = "handsfree-driving_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["HeadLightOutline_24px"] = "head-light_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["HeadLightSolid_24px"] = "head-light_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["HeavyMachineryOutline_24px"] = "heavy-machinery_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["HeavyMachinerySolid_24px"] = "heavy-machinery_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["HeightOutline_24px"] = "height_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["HeightSolid_24px"] = "height_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["HighwaysOutline_24px"] = "highways_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["HighwaysSolid_24px"] = "highways_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["InclinedOutline_24px"] = "inclined_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["InclinedSolid_24px"] = "inclined_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["JourneyOutline_24px"] = "journey_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["JourneySolid_24px"] = "journey_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["LaneRestrictionOutline_24px"] = "lane-restriction_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["LaneRestrictionSolid_24px"] = "lane-restriction_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["LessContainerLoadOutline_24px"] = "less-container-load_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["LessContainerLoadSolid_24px"] = "less-container-load_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["LessTruckLoadOutline_24px"] = "less-truck-load_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["LessTruckLoadSolid_24px"] = "less-truck-load_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["LightRailOutline_24px"] = "light-rail_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["LightRailSolid_24px"] = "light-rail_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["LightrailOutline_24px"] = "lightrail_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["LightrailSolid_24px"] = "lightrail_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["LocationTrackingOutline_24px"] = "location-tracking_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["LocationTrackingSolid_24px"] = "location-tracking_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MassTransitOutline_24px"] = "mass-transit_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MassTransitSolid_24px"] = "mass-transit_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MaxHeightOutline_24px"] = "max-height_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MaxHeightSolid_24px"] = "max-height_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MaxWidthOutline_24px"] = "max-width_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MaxWidthSolid_24px"] = "max-width_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MetroOutline_24px"] = "metro_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MetroSolid_24px"] = "metro_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MonorailOutline_24px"] = "monorail_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MonorailSolid_24px"] = "monorail_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MotorcycleOutline_24px"] = "motorcycle_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MotorcycleSolid_24px"] = "motorcycle_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MotorhomeOutline_24px"] = "motorhome_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MotorhomeSolid_24px"] = "motorhome_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MotorscooterOutline_24px"] = "motorscooter_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MotorscooterSolid_24px"] = "motorscooter_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MultimodalOutline_24px"] = "multimodal_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["MultimodalSolid_24px"] = "multimodal_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["NavigationOutline_24px"] = "navigation_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["NavigationSolid_24px"] = "navigation_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["NoContainerLoadOutline_24px"] = "no-container-load_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["NoContainerLoadSolid_24px"] = "no-container-load_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["NoTruckLoadOutline_24px"] = "no-truck-load_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["NoTruckLoadSolid_24px"] = "no-truck-load_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlannedTourOutline_24px"] = "planned-tour_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlannedTourSolid_24px"] = "planned-tour_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeAOutline_24px"] = "plug-type-a_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeASolid_24px"] = "plug-type-a_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeBNema_14_50Outline_24px"] = "plug-type-b-nema-14-50_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeBNema_14_50Solid_24px"] = "plug-type-b-nema-14-50_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeBNema_5_15Outline_24px"] = "plug-type-b-nema-5-15_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeBNema_5_15Solid_24px"] = "plug-type-b-nema-5-15_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeCOutline_24px"] = "plug-type-c_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeCSolid_24px"] = "plug-type-c_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeChademoOutline_24px"] = "plug-type-chademo_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeChademoSolid_24px"] = "plug-type-chademo_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeEOutline_24px"] = "plug-type-e_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeESolid_24px"] = "plug-type-e_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeFOutline_24px"] = "plug-type-f_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeFSolid_24px"] = "plug-type-f_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeGOutline_24px"] = "plug-type-g_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeGSolid_24px"] = "plug-type-g_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeIOutline_24px"] = "plug-type-I_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeISolid_24px"] = "plug-type-I_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeIndustrialOutline_24px"] = "plug-type-industrial_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeIndustrialSolid_24px"] = "plug-type-industrial_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeJOutline_24px"] = "plug-type-j_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeJSolid_24px"] = "plug-type-j_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeJ1772Outline_24px"] = "plug-type-j1772_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeJ1772Solid_24px"] = "plug-type-j1772_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeJ1772ComboOutline_24px"] = "plug-type-j1772-combo_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeJ1772ComboSolid_24px"] = "plug-type-j1772-combo_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeMarechalOutline_24px"] = "plug-type-marechal_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeMarechalSolid_24px"] = "plug-type-marechal_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeMennekesOutline_24px"] = "plug-type-mennekes_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeMennekesSolid_24px"] = "plug-type-mennekes_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeMennekesComboOutline_24px"] = "plug-type-mennekes-combo_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeMennekesComboSolid_24px"] = "plug-type-mennekes-combo_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeTeslaOutline_24px"] = "plug-type-tesla_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["PlugTypeTeslaSolid_24px"] = "plug-type-tesla_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RailHighspeedOutline_24px"] = "rail-highspeed_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RailHighspeedSolid_24px"] = "rail-highspeed_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RailHighspeedOffOutline_24px"] = "rail-highspeed-off_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RailHighspeedOffSolid_24px"] = "rail-highspeed-off_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RailIntercityOutline_24px"] = "rail-intercity_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RailIntercitySolid_24px"] = "rail-intercity_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RailLocalOutline_24px"] = "rail-local_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RailLocalSolid_24px"] = "rail-local_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RailRegionalOutline_24px"] = "rail-regional_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RailRegionalSolid_24px"] = "rail-regional_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RedLightCameraOutline_24px"] = "red-light-camera_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RedLightCameraSolid_24px"] = "red-light-camera_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RideHailingOutline_24px"] = "ride-hailing_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RideHailingSolid_24px"] = "ride-hailing_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RideshareOutline_24px"] = "rideshare_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RideshareSolid_24px"] = "rideshare_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadClosureOutline_24px"] = "road-closure_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadClosureSolid_24px"] = "road-closure_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadHazardOutline_24px"] = "road-hazard_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadHazardSolid_24px"] = "road-hazard_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadTollsOutline_24px"] = "road-tolls_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadTollsSolid_24px"] = "road-tolls_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadTollsOffOutline_24px"] = "road-tolls-off_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadTollsOffSolid_24px"] = "road-tolls-off_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadUnpavedOutline_24px"] = "road-unpaved_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadUnpavedSolid_24px"] = "road-unpaved_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadUnpavedBicycleOutline_24px"] = "road-unpaved-bicycle_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadUnpavedBicycleSolid_24px"] = "road-unpaved-bicycle_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadUnpavedMotorcycleOutline_24px"] = "road-unpaved-motorcycle_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadUnpavedMotorcycleSolid_24px"] = "road-unpaved-motorcycle_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadUnpavedOffOutline_24px"] = "road-unpaved-off_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadUnpavedOffSolid_24px"] = "road-unpaved-off_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadsideJpOutline_24px"] = "Roadside-jp_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadsideJpSolid_24px"] = "Roadside-jp_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadworksOutline_24px"] = "roadworks_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RoadworksSolid_24px"] = "roadworks_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RouteOutline_24px"] = "route_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RouteSolid_24px"] = "route_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RunnerPaceOutline_24px"] = "runner-pace_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["RunnerPaceSolid_24px"] = "runner-pace_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SchoolZoneUsOutline_24px"] = "school-zone-us_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SchoolZoneUsSolid_24px"] = "school-zone-us_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["ScooterOutline_24px"] = "scooter_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["ScooterSolid_24px"] = "scooter_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SecurityCameraOutline_24px"] = "security-camera_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SecurityCameraSolid_24px"] = "security-camera_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SemiTrailerOutline_24px"] = "semi-trailer_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SemiTrailerSolid_24px"] = "semi-trailer_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["ServiceDeskOutline_24px"] = "service-desk_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["ServiceDeskSolid_24px"] = "service-desk_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["ShipmentOutline_24px"] = "shipment_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["ShipmentSolid_24px"] = "shipment_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SpeedCameraOutline_24px"] = "speed-camera_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SpeedCameraSolid_24px"] = "speed-camera_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SpeedLimitOutline_24px"] = "speed-limit_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SpeedLimitSolid_24px"] = "speed-limit_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SpeedZoneOutline_24px"] = "speed-zone_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SpeedZoneSolid_24px"] = "speed-zone_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SpeedalertOutline_24px"] = "speedalert_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SpeedalertSolid_24px"] = "speedalert_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SpeedalertOffOutline_24px"] = "speedalert-off_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["SpeedalertOffSolid_24px"] = "speedalert-off_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TaxiOutline_24px"] = "taxi_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TaxiSolid_24px"] = "taxi_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TaxiOffOutline_24px"] = "taxi-off_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TaxiOffSolid_24px"] = "taxi-off_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TicketOutline_24px"] = "ticket_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TicketSolid_24px"] = "ticket_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TourOutline_24px"] = "tour_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TourSolid_24px"] = "tour_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TrackerOutline_24px"] = "tracker_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TrackerSolid_24px"] = "tracker_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TrafficOutline_24px"] = "traffic_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TrafficSolid_24px"] = "traffic_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TrafficLightsOutline_24px"] = "traffic-lights_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TrafficLightsSolid_24px"] = "traffic-lights_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TrafficOffOutline_24px"] = "traffic-off_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TrafficOffSolid_24px"] = "traffic-off_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TrailerOutline_24px"] = "trailer_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TrailerSolid_24px"] = "trailer_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TrainOutline_24px"] = "train_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TrainSolid_24px"] = "train_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TramOutline_24px"] = "tram_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TramSolid_24px"] = "tram_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TruckOutline_24px"] = "truck_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TruckSolid_24px"] = "truck_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TruckAxleOutline_24px"] = "truck-axle_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["TruckAxleSolid_24px"] = "truck-axle_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["UnpavedRoadPedestrianOutline_24px"] = "unpaved-road-pedestrian_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["UnpavedRoadPedestrianSolid_24px"] = "unpaved-road-pedestrian_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["UnpavedRoadTruckOutline_24px"] = "unpaved-road-truck_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["UnpavedRoadTruckSolid_24px"] = "unpaved-road-truck_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["WaitPedestrianOutline_24px"] = "wait-pedestrian_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["WaitPedestrianSolid_24px"] = "wait-pedestrian_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["WalkingOutline_24px"] = "walking_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["WalkingSolid_24px"] = "walking_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["WalkingOffOutline_24px"] = "walking-off_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["WalkingOffSolid_24px"] = "walking-off_solid_24px";
  HdsIconlibraryTravelTransportTracking_24px2["WidthOutline_24px"] = "width_outline_24px";
  HdsIconlibraryTravelTransportTracking_24px2["WidthSolid_24px"] = "width_solid_24px";
})(HdsIconlibraryTravelTransportTracking_24px = HdsIconlibraryTravelTransportTracking_24px || (HdsIconlibraryTravelTransportTracking_24px = {}));
var HDS_ICONLIBRARY_TRAVEL_TRANSPORT_TRACKING_24PX_CODEPOINTS = {
  [HdsIconlibraryTravelTransportTracking_24px.AccidentCarOutline_24px]: "61697",
  [HdsIconlibraryTravelTransportTracking_24px.AccidentCarSolid_24px]: "61698",
  [HdsIconlibraryTravelTransportTracking_24px.AirportOutline_24px]: "61699",
  [HdsIconlibraryTravelTransportTracking_24px.AirportSolid_24px]: "61700",
  [HdsIconlibraryTravelTransportTracking_24px.AmbulanceOutline_24px]: "61701",
  [HdsIconlibraryTravelTransportTracking_24px.AmbulanceSolid_24px]: "61702",
  [HdsIconlibraryTravelTransportTracking_24px.ArrivalAirportOutline_24px]: "61703",
  [HdsIconlibraryTravelTransportTracking_24px.ArrivalAirportSolid_24px]: "61704",
  [HdsIconlibraryTravelTransportTracking_24px.AttentionOutline_24px]: "61705",
  [HdsIconlibraryTravelTransportTracking_24px.AttentionSolid_24px]: "61706",
  [HdsIconlibraryTravelTransportTracking_24px.AutoCaravanOutline_24px]: "61707",
  [HdsIconlibraryTravelTransportTracking_24px.AutoCaravanSolid_24px]: "61708",
  [HdsIconlibraryTravelTransportTracking_24px.AutoTrailerOutline_24px]: "61709",
  [HdsIconlibraryTravelTransportTracking_24px.AutoTrailerSolid_24px]: "61710",
  [HdsIconlibraryTravelTransportTracking_24px.BeamLightOutline_24px]: "61711",
  [HdsIconlibraryTravelTransportTracking_24px.BeamLightSolid_24px]: "61712",
  [HdsIconlibraryTravelTransportTracking_24px.BicycleOutline_24px]: "61713",
  [HdsIconlibraryTravelTransportTracking_24px.BicycleSolid_24px]: "61714",
  [HdsIconlibraryTravelTransportTracking_24px.BicyclePaceOutline_24px]: "61715",
  [HdsIconlibraryTravelTransportTracking_24px.BicyclePaceSolid_24px]: "61716",
  [HdsIconlibraryTravelTransportTracking_24px.BoatTrailerOutline_24px]: "61717",
  [HdsIconlibraryTravelTransportTracking_24px.BoatTrailerSolid_24px]: "61718",
  [HdsIconlibraryTravelTransportTracking_24px.BumpsOutline_24px]: "61719",
  [HdsIconlibraryTravelTransportTracking_24px.BumpsSolid_24px]: "61720",
  [HdsIconlibraryTravelTransportTracking_24px.BusOutline_24px]: "61721",
  [HdsIconlibraryTravelTransportTracking_24px.BusSolid_24px]: "61722",
  [HdsIconlibraryTravelTransportTracking_24px.BusRapidOutline_24px]: "61723",
  [HdsIconlibraryTravelTransportTracking_24px.BusRapidSolid_24px]: "61724",
  [HdsIconlibraryTravelTransportTracking_24px.CableWayOutline_24px]: "61725",
  [HdsIconlibraryTravelTransportTracking_24px.CableWaySolid_24px]: "61726",
  [HdsIconlibraryTravelTransportTracking_24px.CarFuelAltOutline_24px]: "61727",
  [HdsIconlibraryTravelTransportTracking_24px.CarFuelAltSolid_24px]: "61728",
  [HdsIconlibraryTravelTransportTracking_24px.CarRentalOutline_24px]: "61729",
  [HdsIconlibraryTravelTransportTracking_24px.CarRentalSolid_24px]: "61730",
  [HdsIconlibraryTravelTransportTracking_24px.CarRigOutline_24px]: "61731",
  [HdsIconlibraryTravelTransportTracking_24px.CarRigSolid_24px]: "61732",
  [HdsIconlibraryTravelTransportTracking_24px.CarWifiOffOutline_24px]: "61733",
  [HdsIconlibraryTravelTransportTracking_24px.CarWifiOffSolid_24px]: "61734",
  [HdsIconlibraryTravelTransportTracking_24px.CarWifiOnOutline_24px]: "61735",
  [HdsIconlibraryTravelTransportTracking_24px.CarWifiOnSolid_24px]: "61736",
  [HdsIconlibraryTravelTransportTracking_24px.CaravanOutline_24px]: "61737",
  [HdsIconlibraryTravelTransportTracking_24px.CaravanSolid_24px]: "61738",
  [HdsIconlibraryTravelTransportTracking_24px.ChargingOutline_24px]: "61739",
  [HdsIconlibraryTravelTransportTracking_24px.ChargingSolid_24px]: "61740",
  [HdsIconlibraryTravelTransportTracking_24px.ClosureOutline_24px]: "61741",
  [HdsIconlibraryTravelTransportTracking_24px.ClosureSolid_24px]: "61742",
  [HdsIconlibraryTravelTransportTracking_24px.CoachOutline_24px]: "61743",
  [HdsIconlibraryTravelTransportTracking_24px.CoachSolid_24px]: "61744",
  [HdsIconlibraryTravelTransportTracking_24px.DeliveryVanOutline_24px]: "61745",
  [HdsIconlibraryTravelTransportTracking_24px.DeliveryVanSolid_24px]: "61746",
  [HdsIconlibraryTravelTransportTracking_24px.DepartureAirportOutline_24px]: "61747",
  [HdsIconlibraryTravelTransportTracking_24px.DepartureAirportSolid_24px]: "61748",
  [HdsIconlibraryTravelTransportTracking_24px.DestinationOutline_24px]: "61749",
  [HdsIconlibraryTravelTransportTracking_24px.DestinationSolid_24px]: "61750",
  [HdsIconlibraryTravelTransportTracking_24px.DiagonalOutline_24px]: "61751",
  [HdsIconlibraryTravelTransportTracking_24px.DiagonalSolid_24px]: "61752",
  [HdsIconlibraryTravelTransportTracking_24px.DirectionsOutline_24px]: "61753",
  [HdsIconlibraryTravelTransportTracking_24px.DirectionsSolid_24px]: "61754",
  [HdsIconlibraryTravelTransportTracking_24px.DisabledVehicleOutline_24px]: "61755",
  [HdsIconlibraryTravelTransportTracking_24px.DisabledVehicleSolid_24px]: "61756",
  [HdsIconlibraryTravelTransportTracking_24px.DrivingOutline_24px]: "61757",
  [HdsIconlibraryTravelTransportTracking_24px.DrivingSolid_24px]: "61758",
  [HdsIconlibraryTravelTransportTracking_24px.DrivingOffOutline_24px]: "61759",
  [HdsIconlibraryTravelTransportTracking_24px.DrivingOffSolid_24px]: "61760",
  [HdsIconlibraryTravelTransportTracking_24px.DynamicRoutingOutline_24px]: "61761",
  [HdsIconlibraryTravelTransportTracking_24px.DynamicRoutingSolid_24px]: "61762",
  [HdsIconlibraryTravelTransportTracking_24px.EvRangeOutline_24px]: "61763",
  [HdsIconlibraryTravelTransportTracking_24px.EvRangeSolid_24px]: "61764",
  [HdsIconlibraryTravelTransportTracking_24px.FerryOutline_24px]: "61765",
  [HdsIconlibraryTravelTransportTracking_24px.FerrySolid_24px]: "61766",
  [HdsIconlibraryTravelTransportTracking_24px.FerryOffOutline_24px]: "61767",
  [HdsIconlibraryTravelTransportTracking_24px.FerryOffSolid_24px]: "61768",
  [HdsIconlibraryTravelTransportTracking_24px.FlightMonitorOutline_24px]: "61769",
  [HdsIconlibraryTravelTransportTracking_24px.FlightMonitorSolid_24px]: "61770",
  [HdsIconlibraryTravelTransportTracking_24px.FullContainerLoadOutline_24px]: "61771",
  [HdsIconlibraryTravelTransportTracking_24px.FullContainerLoadSolid_24px]: "61772",
  [HdsIconlibraryTravelTransportTracking_24px.FullTruckLoadOutline_24px]: "61773",
  [HdsIconlibraryTravelTransportTracking_24px.FullTruckLoadSolid_24px]: "61774",
  [HdsIconlibraryTravelTransportTracking_24px.GeofenceOutline_24px]: "61775",
  [HdsIconlibraryTravelTransportTracking_24px.GeofenceSolid_24px]: "61776",
  [HdsIconlibraryTravelTransportTracking_24px.HandsfreeDrivingOutline_24px]: "61777",
  [HdsIconlibraryTravelTransportTracking_24px.HandsfreeDrivingSolid_24px]: "61778",
  [HdsIconlibraryTravelTransportTracking_24px.HeadLightOutline_24px]: "61779",
  [HdsIconlibraryTravelTransportTracking_24px.HeadLightSolid_24px]: "61780",
  [HdsIconlibraryTravelTransportTracking_24px.HeavyMachineryOutline_24px]: "61781",
  [HdsIconlibraryTravelTransportTracking_24px.HeavyMachinerySolid_24px]: "61782",
  [HdsIconlibraryTravelTransportTracking_24px.HeightOutline_24px]: "61783",
  [HdsIconlibraryTravelTransportTracking_24px.HeightSolid_24px]: "61784",
  [HdsIconlibraryTravelTransportTracking_24px.HighwaysOutline_24px]: "61785",
  [HdsIconlibraryTravelTransportTracking_24px.HighwaysSolid_24px]: "61786",
  [HdsIconlibraryTravelTransportTracking_24px.InclinedOutline_24px]: "61787",
  [HdsIconlibraryTravelTransportTracking_24px.InclinedSolid_24px]: "61788",
  [HdsIconlibraryTravelTransportTracking_24px.JourneyOutline_24px]: "61789",
  [HdsIconlibraryTravelTransportTracking_24px.JourneySolid_24px]: "61790",
  [HdsIconlibraryTravelTransportTracking_24px.LaneRestrictionOutline_24px]: "61791",
  [HdsIconlibraryTravelTransportTracking_24px.LaneRestrictionSolid_24px]: "61792",
  [HdsIconlibraryTravelTransportTracking_24px.LessContainerLoadOutline_24px]: "61793",
  [HdsIconlibraryTravelTransportTracking_24px.LessContainerLoadSolid_24px]: "61794",
  [HdsIconlibraryTravelTransportTracking_24px.LessTruckLoadOutline_24px]: "61795",
  [HdsIconlibraryTravelTransportTracking_24px.LessTruckLoadSolid_24px]: "61796",
  [HdsIconlibraryTravelTransportTracking_24px.LightRailOutline_24px]: "61797",
  [HdsIconlibraryTravelTransportTracking_24px.LightRailSolid_24px]: "61798",
  [HdsIconlibraryTravelTransportTracking_24px.LightrailOutline_24px]: "61799",
  [HdsIconlibraryTravelTransportTracking_24px.LightrailSolid_24px]: "61800",
  [HdsIconlibraryTravelTransportTracking_24px.LocationTrackingOutline_24px]: "61801",
  [HdsIconlibraryTravelTransportTracking_24px.LocationTrackingSolid_24px]: "61802",
  [HdsIconlibraryTravelTransportTracking_24px.MassTransitOutline_24px]: "61803",
  [HdsIconlibraryTravelTransportTracking_24px.MassTransitSolid_24px]: "61804",
  [HdsIconlibraryTravelTransportTracking_24px.MaxHeightOutline_24px]: "61805",
  [HdsIconlibraryTravelTransportTracking_24px.MaxHeightSolid_24px]: "61806",
  [HdsIconlibraryTravelTransportTracking_24px.MaxWidthOutline_24px]: "61807",
  [HdsIconlibraryTravelTransportTracking_24px.MaxWidthSolid_24px]: "61808",
  [HdsIconlibraryTravelTransportTracking_24px.MetroOutline_24px]: "61809",
  [HdsIconlibraryTravelTransportTracking_24px.MetroSolid_24px]: "61810",
  [HdsIconlibraryTravelTransportTracking_24px.MonorailOutline_24px]: "61811",
  [HdsIconlibraryTravelTransportTracking_24px.MonorailSolid_24px]: "61812",
  [HdsIconlibraryTravelTransportTracking_24px.MotorcycleOutline_24px]: "61813",
  [HdsIconlibraryTravelTransportTracking_24px.MotorcycleSolid_24px]: "61814",
  [HdsIconlibraryTravelTransportTracking_24px.MotorhomeOutline_24px]: "61815",
  [HdsIconlibraryTravelTransportTracking_24px.MotorhomeSolid_24px]: "61816",
  [HdsIconlibraryTravelTransportTracking_24px.MotorscooterOutline_24px]: "61817",
  [HdsIconlibraryTravelTransportTracking_24px.MotorscooterSolid_24px]: "61818",
  [HdsIconlibraryTravelTransportTracking_24px.MultimodalOutline_24px]: "61819",
  [HdsIconlibraryTravelTransportTracking_24px.MultimodalSolid_24px]: "61820",
  [HdsIconlibraryTravelTransportTracking_24px.NavigationOutline_24px]: "61821",
  [HdsIconlibraryTravelTransportTracking_24px.NavigationSolid_24px]: "61822",
  [HdsIconlibraryTravelTransportTracking_24px.NoContainerLoadOutline_24px]: "61823",
  [HdsIconlibraryTravelTransportTracking_24px.NoContainerLoadSolid_24px]: "61824",
  [HdsIconlibraryTravelTransportTracking_24px.NoTruckLoadOutline_24px]: "61825",
  [HdsIconlibraryTravelTransportTracking_24px.NoTruckLoadSolid_24px]: "61826",
  [HdsIconlibraryTravelTransportTracking_24px.PlannedTourOutline_24px]: "61827",
  [HdsIconlibraryTravelTransportTracking_24px.PlannedTourSolid_24px]: "61828",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeAOutline_24px]: "61829",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeASolid_24px]: "61830",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeBNema_14_50Outline_24px]: "61831",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeBNema_14_50Solid_24px]: "61832",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeBNema_5_15Outline_24px]: "61833",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeBNema_5_15Solid_24px]: "61834",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeCOutline_24px]: "61835",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeCSolid_24px]: "61836",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeChademoOutline_24px]: "61837",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeChademoSolid_24px]: "61838",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeEOutline_24px]: "61839",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeESolid_24px]: "61840",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeFOutline_24px]: "61841",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeFSolid_24px]: "61842",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeGOutline_24px]: "61843",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeGSolid_24px]: "61844",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeIOutline_24px]: "61845",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeISolid_24px]: "61846",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeIndustrialOutline_24px]: "61847",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeIndustrialSolid_24px]: "61848",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeJOutline_24px]: "61849",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeJSolid_24px]: "61850",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeJ1772Outline_24px]: "61851",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeJ1772Solid_24px]: "61852",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeJ1772ComboOutline_24px]: "61853",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeJ1772ComboSolid_24px]: "61854",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeMarechalOutline_24px]: "61855",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeMarechalSolid_24px]: "61856",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeMennekesOutline_24px]: "61857",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeMennekesSolid_24px]: "61858",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeMennekesComboOutline_24px]: "61859",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeMennekesComboSolid_24px]: "61860",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeTeslaOutline_24px]: "61861",
  [HdsIconlibraryTravelTransportTracking_24px.PlugTypeTeslaSolid_24px]: "61862",
  [HdsIconlibraryTravelTransportTracking_24px.RailHighspeedOutline_24px]: "61863",
  [HdsIconlibraryTravelTransportTracking_24px.RailHighspeedSolid_24px]: "61864",
  [HdsIconlibraryTravelTransportTracking_24px.RailHighspeedOffOutline_24px]: "61865",
  [HdsIconlibraryTravelTransportTracking_24px.RailHighspeedOffSolid_24px]: "61866",
  [HdsIconlibraryTravelTransportTracking_24px.RailIntercityOutline_24px]: "61867",
  [HdsIconlibraryTravelTransportTracking_24px.RailIntercitySolid_24px]: "61868",
  [HdsIconlibraryTravelTransportTracking_24px.RailLocalOutline_24px]: "61869",
  [HdsIconlibraryTravelTransportTracking_24px.RailLocalSolid_24px]: "61870",
  [HdsIconlibraryTravelTransportTracking_24px.RailRegionalOutline_24px]: "61871",
  [HdsIconlibraryTravelTransportTracking_24px.RailRegionalSolid_24px]: "61872",
  [HdsIconlibraryTravelTransportTracking_24px.RedLightCameraOutline_24px]: "61873",
  [HdsIconlibraryTravelTransportTracking_24px.RedLightCameraSolid_24px]: "61874",
  [HdsIconlibraryTravelTransportTracking_24px.RideHailingOutline_24px]: "61875",
  [HdsIconlibraryTravelTransportTracking_24px.RideHailingSolid_24px]: "61876",
  [HdsIconlibraryTravelTransportTracking_24px.RideshareOutline_24px]: "61877",
  [HdsIconlibraryTravelTransportTracking_24px.RideshareSolid_24px]: "61878",
  [HdsIconlibraryTravelTransportTracking_24px.RoadClosureOutline_24px]: "61879",
  [HdsIconlibraryTravelTransportTracking_24px.RoadClosureSolid_24px]: "61880",
  [HdsIconlibraryTravelTransportTracking_24px.RoadHazardOutline_24px]: "61881",
  [HdsIconlibraryTravelTransportTracking_24px.RoadHazardSolid_24px]: "61882",
  [HdsIconlibraryTravelTransportTracking_24px.RoadTollsOutline_24px]: "61883",
  [HdsIconlibraryTravelTransportTracking_24px.RoadTollsSolid_24px]: "61884",
  [HdsIconlibraryTravelTransportTracking_24px.RoadTollsOffOutline_24px]: "61885",
  [HdsIconlibraryTravelTransportTracking_24px.RoadTollsOffSolid_24px]: "61886",
  [HdsIconlibraryTravelTransportTracking_24px.RoadUnpavedOutline_24px]: "61887",
  [HdsIconlibraryTravelTransportTracking_24px.RoadUnpavedSolid_24px]: "61888",
  [HdsIconlibraryTravelTransportTracking_24px.RoadUnpavedBicycleOutline_24px]: "61889",
  [HdsIconlibraryTravelTransportTracking_24px.RoadUnpavedBicycleSolid_24px]: "61890",
  [HdsIconlibraryTravelTransportTracking_24px.RoadUnpavedMotorcycleOutline_24px]: "61891",
  [HdsIconlibraryTravelTransportTracking_24px.RoadUnpavedMotorcycleSolid_24px]: "61892",
  [HdsIconlibraryTravelTransportTracking_24px.RoadUnpavedOffOutline_24px]: "61893",
  [HdsIconlibraryTravelTransportTracking_24px.RoadUnpavedOffSolid_24px]: "61894",
  [HdsIconlibraryTravelTransportTracking_24px.RoadsideJpOutline_24px]: "61895",
  [HdsIconlibraryTravelTransportTracking_24px.RoadsideJpSolid_24px]: "61896",
  [HdsIconlibraryTravelTransportTracking_24px.RoadworksOutline_24px]: "61897",
  [HdsIconlibraryTravelTransportTracking_24px.RoadworksSolid_24px]: "61898",
  [HdsIconlibraryTravelTransportTracking_24px.RouteOutline_24px]: "61899",
  [HdsIconlibraryTravelTransportTracking_24px.RouteSolid_24px]: "61900",
  [HdsIconlibraryTravelTransportTracking_24px.RunnerPaceOutline_24px]: "61901",
  [HdsIconlibraryTravelTransportTracking_24px.RunnerPaceSolid_24px]: "61902",
  [HdsIconlibraryTravelTransportTracking_24px.SchoolZoneUsOutline_24px]: "61903",
  [HdsIconlibraryTravelTransportTracking_24px.SchoolZoneUsSolid_24px]: "61904",
  [HdsIconlibraryTravelTransportTracking_24px.ScooterOutline_24px]: "61905",
  [HdsIconlibraryTravelTransportTracking_24px.ScooterSolid_24px]: "61906",
  [HdsIconlibraryTravelTransportTracking_24px.SecurityCameraOutline_24px]: "61907",
  [HdsIconlibraryTravelTransportTracking_24px.SecurityCameraSolid_24px]: "61908",
  [HdsIconlibraryTravelTransportTracking_24px.SemiTrailerOutline_24px]: "61909",
  [HdsIconlibraryTravelTransportTracking_24px.SemiTrailerSolid_24px]: "61910",
  [HdsIconlibraryTravelTransportTracking_24px.ServiceDeskOutline_24px]: "61911",
  [HdsIconlibraryTravelTransportTracking_24px.ServiceDeskSolid_24px]: "61912",
  [HdsIconlibraryTravelTransportTracking_24px.ShipmentOutline_24px]: "61913",
  [HdsIconlibraryTravelTransportTracking_24px.ShipmentSolid_24px]: "61914",
  [HdsIconlibraryTravelTransportTracking_24px.SpeedCameraOutline_24px]: "61915",
  [HdsIconlibraryTravelTransportTracking_24px.SpeedCameraSolid_24px]: "61916",
  [HdsIconlibraryTravelTransportTracking_24px.SpeedLimitOutline_24px]: "61917",
  [HdsIconlibraryTravelTransportTracking_24px.SpeedLimitSolid_24px]: "61918",
  [HdsIconlibraryTravelTransportTracking_24px.SpeedZoneOutline_24px]: "61919",
  [HdsIconlibraryTravelTransportTracking_24px.SpeedZoneSolid_24px]: "61920",
  [HdsIconlibraryTravelTransportTracking_24px.SpeedalertOutline_24px]: "61921",
  [HdsIconlibraryTravelTransportTracking_24px.SpeedalertSolid_24px]: "61922",
  [HdsIconlibraryTravelTransportTracking_24px.SpeedalertOffOutline_24px]: "61923",
  [HdsIconlibraryTravelTransportTracking_24px.SpeedalertOffSolid_24px]: "61924",
  [HdsIconlibraryTravelTransportTracking_24px.TaxiOutline_24px]: "61925",
  [HdsIconlibraryTravelTransportTracking_24px.TaxiSolid_24px]: "61926",
  [HdsIconlibraryTravelTransportTracking_24px.TaxiOffOutline_24px]: "61927",
  [HdsIconlibraryTravelTransportTracking_24px.TaxiOffSolid_24px]: "61928",
  [HdsIconlibraryTravelTransportTracking_24px.TicketOutline_24px]: "61929",
  [HdsIconlibraryTravelTransportTracking_24px.TicketSolid_24px]: "61930",
  [HdsIconlibraryTravelTransportTracking_24px.TourOutline_24px]: "61931",
  [HdsIconlibraryTravelTransportTracking_24px.TourSolid_24px]: "61932",
  [HdsIconlibraryTravelTransportTracking_24px.TrackerOutline_24px]: "61933",
  [HdsIconlibraryTravelTransportTracking_24px.TrackerSolid_24px]: "61934",
  [HdsIconlibraryTravelTransportTracking_24px.TrafficOutline_24px]: "61935",
  [HdsIconlibraryTravelTransportTracking_24px.TrafficSolid_24px]: "61936",
  [HdsIconlibraryTravelTransportTracking_24px.TrafficLightsOutline_24px]: "61937",
  [HdsIconlibraryTravelTransportTracking_24px.TrafficLightsSolid_24px]: "61938",
  [HdsIconlibraryTravelTransportTracking_24px.TrafficOffOutline_24px]: "61939",
  [HdsIconlibraryTravelTransportTracking_24px.TrafficOffSolid_24px]: "61940",
  [HdsIconlibraryTravelTransportTracking_24px.TrailerOutline_24px]: "61941",
  [HdsIconlibraryTravelTransportTracking_24px.TrailerSolid_24px]: "61942",
  [HdsIconlibraryTravelTransportTracking_24px.TrainOutline_24px]: "61943",
  [HdsIconlibraryTravelTransportTracking_24px.TrainSolid_24px]: "61944",
  [HdsIconlibraryTravelTransportTracking_24px.TramOutline_24px]: "61945",
  [HdsIconlibraryTravelTransportTracking_24px.TramSolid_24px]: "61946",
  [HdsIconlibraryTravelTransportTracking_24px.TruckOutline_24px]: "61947",
  [HdsIconlibraryTravelTransportTracking_24px.TruckSolid_24px]: "61948",
  [HdsIconlibraryTravelTransportTracking_24px.TruckAxleOutline_24px]: "61949",
  [HdsIconlibraryTravelTransportTracking_24px.TruckAxleSolid_24px]: "61950",
  [HdsIconlibraryTravelTransportTracking_24px.UnpavedRoadPedestrianOutline_24px]: "61951",
  [HdsIconlibraryTravelTransportTracking_24px.UnpavedRoadPedestrianSolid_24px]: "61952",
  [HdsIconlibraryTravelTransportTracking_24px.UnpavedRoadTruckOutline_24px]: "61953",
  [HdsIconlibraryTravelTransportTracking_24px.UnpavedRoadTruckSolid_24px]: "61954",
  [HdsIconlibraryTravelTransportTracking_24px.WaitPedestrianOutline_24px]: "61955",
  [HdsIconlibraryTravelTransportTracking_24px.WaitPedestrianSolid_24px]: "61956",
  [HdsIconlibraryTravelTransportTracking_24px.WalkingOutline_24px]: "61957",
  [HdsIconlibraryTravelTransportTracking_24px.WalkingSolid_24px]: "61958",
  [HdsIconlibraryTravelTransportTracking_24px.WalkingOffOutline_24px]: "61959",
  [HdsIconlibraryTravelTransportTracking_24px.WalkingOffSolid_24px]: "61960",
  [HdsIconlibraryTravelTransportTracking_24px.WidthOutline_24px]: "61961",
  [HdsIconlibraryTravelTransportTracking_24px.WidthSolid_24px]: "61962"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-weather-24px.js
var HdsIconlibraryWeather_24px;
(function(HdsIconlibraryWeather_24px2) {
  HdsIconlibraryWeather_24px2["ClearNightOutline_24px"] = "clear-night_outline_24px";
  HdsIconlibraryWeather_24px2["ClearNightSolid_24px"] = "clear-night_solid_24px";
  HdsIconlibraryWeather_24px2["CloudyDayOutline_24px"] = "cloudy-day_outline_24px";
  HdsIconlibraryWeather_24px2["CloudyDaySolid_24px"] = "cloudy-day_solid_24px";
  HdsIconlibraryWeather_24px2["CloudyNightOutline_24px"] = "cloudy-night_outline_24px";
  HdsIconlibraryWeather_24px2["CloudyNightSolid_24px"] = "cloudy-night_solid_24px";
  HdsIconlibraryWeather_24px2["FloodOutline_24px"] = "flood_outline_24px";
  HdsIconlibraryWeather_24px2["FloodSolid_24px"] = "flood_solid_24px";
  HdsIconlibraryWeather_24px2["FogOutline_24px"] = "fog_outline_24px";
  HdsIconlibraryWeather_24px2["FogSolid_24px"] = "fog_solid_24px";
  HdsIconlibraryWeather_24px2["HurricaneOutline_24px"] = "hurricane_outline_24px";
  HdsIconlibraryWeather_24px2["HurricaneSolid_24px"] = "hurricane_solid_24px";
  HdsIconlibraryWeather_24px2["OvercastOutline_24px"] = "overcast_outline_24px";
  HdsIconlibraryWeather_24px2["OvercastSolid_24px"] = "overcast_solid_24px";
  HdsIconlibraryWeather_24px2["RainOutline_24px"] = "rain_outline_24px";
  HdsIconlibraryWeather_24px2["RainSolid_24px"] = "rain_solid_24px";
  HdsIconlibraryWeather_24px2["RainFreezingOutline_24px"] = "rain-freezing_outline_24px";
  HdsIconlibraryWeather_24px2["RainFreezingSolid_24px"] = "rain-freezing_solid_24px";
  HdsIconlibraryWeather_24px2["RainSnowOutline_24px"] = "rain-snow_outline_24px";
  HdsIconlibraryWeather_24px2["RainSnowSolid_24px"] = "rain-snow_solid_24px";
  HdsIconlibraryWeather_24px2["ShowerDayOutline_24px"] = "shower-day_outline_24px";
  HdsIconlibraryWeather_24px2["ShowerDaySolid_24px"] = "shower-day_solid_24px";
  HdsIconlibraryWeather_24px2["ShowerNightOutline_24px"] = "shower-night_outline_24px";
  HdsIconlibraryWeather_24px2["ShowerNightSolid_24px"] = "shower-night_solid_24px";
  HdsIconlibraryWeather_24px2["SmogOutline_24px"] = "smog_outline_24px";
  HdsIconlibraryWeather_24px2["SmogSolid_24px"] = "smog_solid_24px";
  HdsIconlibraryWeather_24px2["SnowfallOutline_24px"] = "snowfall_outline_24px";
  HdsIconlibraryWeather_24px2["SnowfallSolid_24px"] = "snowfall_solid_24px";
  HdsIconlibraryWeather_24px2["StormOutline_24px"] = "storm_outline_24px";
  HdsIconlibraryWeather_24px2["StormSolid_24px"] = "storm_solid_24px";
  HdsIconlibraryWeather_24px2["StormyDayOutline_24px"] = "stormy-day_outline_24px";
  HdsIconlibraryWeather_24px2["StormyDaySolid_24px"] = "stormy-day_solid_24px";
  HdsIconlibraryWeather_24px2["StormyNightOutline_24px"] = "stormy-night_outline_24px";
  HdsIconlibraryWeather_24px2["StormyNightSolid_24px"] = "stormy-night_solid_24px";
  HdsIconlibraryWeather_24px2["WeatherClearDayOutline_24px"] = "weather-clear-day_outline_24px";
  HdsIconlibraryWeather_24px2["WeatherClearDaySolid_24px"] = "weather-clear-day_solid_24px";
  HdsIconlibraryWeather_24px2["WindyOutline_24px"] = "windy_outline_24px";
  HdsIconlibraryWeather_24px2["WindySolid_24px"] = "windy_solid_24px";
})(HdsIconlibraryWeather_24px = HdsIconlibraryWeather_24px || (HdsIconlibraryWeather_24px = {}));
var HDS_ICONLIBRARY_WEATHER_24PX_CODEPOINTS = {
  [HdsIconlibraryWeather_24px.ClearNightOutline_24px]: "61697",
  [HdsIconlibraryWeather_24px.ClearNightSolid_24px]: "61698",
  [HdsIconlibraryWeather_24px.CloudyDayOutline_24px]: "61699",
  [HdsIconlibraryWeather_24px.CloudyDaySolid_24px]: "61700",
  [HdsIconlibraryWeather_24px.CloudyNightOutline_24px]: "61701",
  [HdsIconlibraryWeather_24px.CloudyNightSolid_24px]: "61702",
  [HdsIconlibraryWeather_24px.FloodOutline_24px]: "61703",
  [HdsIconlibraryWeather_24px.FloodSolid_24px]: "61704",
  [HdsIconlibraryWeather_24px.FogOutline_24px]: "61705",
  [HdsIconlibraryWeather_24px.FogSolid_24px]: "61706",
  [HdsIconlibraryWeather_24px.HurricaneOutline_24px]: "61707",
  [HdsIconlibraryWeather_24px.HurricaneSolid_24px]: "61708",
  [HdsIconlibraryWeather_24px.OvercastOutline_24px]: "61709",
  [HdsIconlibraryWeather_24px.OvercastSolid_24px]: "61710",
  [HdsIconlibraryWeather_24px.RainOutline_24px]: "61711",
  [HdsIconlibraryWeather_24px.RainSolid_24px]: "61712",
  [HdsIconlibraryWeather_24px.RainFreezingOutline_24px]: "61713",
  [HdsIconlibraryWeather_24px.RainFreezingSolid_24px]: "61714",
  [HdsIconlibraryWeather_24px.RainSnowOutline_24px]: "61715",
  [HdsIconlibraryWeather_24px.RainSnowSolid_24px]: "61716",
  [HdsIconlibraryWeather_24px.ShowerDayOutline_24px]: "61717",
  [HdsIconlibraryWeather_24px.ShowerDaySolid_24px]: "61718",
  [HdsIconlibraryWeather_24px.ShowerNightOutline_24px]: "61719",
  [HdsIconlibraryWeather_24px.ShowerNightSolid_24px]: "61720",
  [HdsIconlibraryWeather_24px.SmogOutline_24px]: "61721",
  [HdsIconlibraryWeather_24px.SmogSolid_24px]: "61722",
  [HdsIconlibraryWeather_24px.SnowfallOutline_24px]: "61723",
  [HdsIconlibraryWeather_24px.SnowfallSolid_24px]: "61724",
  [HdsIconlibraryWeather_24px.StormOutline_24px]: "61725",
  [HdsIconlibraryWeather_24px.StormSolid_24px]: "61726",
  [HdsIconlibraryWeather_24px.StormyDayOutline_24px]: "61727",
  [HdsIconlibraryWeather_24px.StormyDaySolid_24px]: "61728",
  [HdsIconlibraryWeather_24px.StormyNightOutline_24px]: "61729",
  [HdsIconlibraryWeather_24px.StormyNightSolid_24px]: "61730",
  [HdsIconlibraryWeather_24px.WeatherClearDayOutline_24px]: "61731",
  [HdsIconlibraryWeather_24px.WeatherClearDaySolid_24px]: "61732",
  [HdsIconlibraryWeather_24px.WindyOutline_24px]: "61733",
  [HdsIconlibraryWeather_24px.WindySolid_24px]: "61734"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-8px.js
var HdsIconlibrary_8px;
(function(HdsIconlibrary_8px2) {
  HdsIconlibrary_8px2["CoreUiCheckmarkSolid_8px"] = "core-ui-checkmark_solid_8px";
  HdsIconlibrary_8px2["CoreUiChevronDownSolid_8px"] = "core-ui-chevron-down_solid_8px";
  HdsIconlibrary_8px2["CoreUiChevronLeftSolid_8px"] = "core-ui-chevron-left_solid_8px";
  HdsIconlibrary_8px2["CoreUiChevronRightSolid_8px"] = "core-ui-chevron-right_solid_8px";
  HdsIconlibrary_8px2["CoreUiChevronUpSolid_8px"] = "core-ui-chevron-up_solid_8px";
  HdsIconlibrary_8px2["CoreUiCrossSolid_8px"] = "core-ui-cross_solid_8px";
  HdsIconlibrary_8px2["CoreUiExternalLinkSolid_8px"] = "core-ui-external-link_solid_8px";
  HdsIconlibrary_8px2["CoreUiInformationSolid_8px"] = "core-ui-information_solid_8px";
  HdsIconlibrary_8px2["CoreUiLockSolid_8px"] = "core-ui-lock_solid_8px";
  HdsIconlibrary_8px2["CoreUiMinusSolid_8px"] = "core-ui-minus_solid_8px";
  HdsIconlibrary_8px2["CoreUiOverflowHoriCenterSolid_8px"] = "core-ui-overflow-hori-center_solid_8px";
  HdsIconlibrary_8px2["CoreUiOverflowVertCenterSolid_8px"] = "core-ui-overflow-vert-center_solid_8px";
  HdsIconlibrary_8px2["CoreUiOverflowVertRightSolid_8px"] = "core-ui-overflow-vert-right_solid_8px";
  HdsIconlibrary_8px2["CoreUiPlusSolid_8px"] = "core-ui-plus_solid_8px";
  HdsIconlibrary_8px2["CoreUiProfileSolid_8px"] = "core-ui-profile_solid_8px";
  HdsIconlibrary_8px2["CoreUiUnlockSolid_8px"] = "core-ui-unlock_solid_8px";
  HdsIconlibrary_8px2["FileCopySolid_8px"] = "file-copy_solid_8px";
  HdsIconlibrary_8px2["MapViewDotIndicatorSolid_8px"] = "map-view-dot-indicator_solid_8px";
  HdsIconlibrary_8px2["MapViewEastCharacterSolid_8px"] = "map-view-east-character_solid_8px";
  HdsIconlibrary_8px2["MapViewNorthCharacterSolid_8px"] = "map-view-north-character_solid_8px";
  HdsIconlibrary_8px2["MapViewNorthUpSolid_8px"] = "map-view-north-up_solid_8px";
  HdsIconlibrary_8px2["MapViewSouthCharacterSolid_8px"] = "map-view-south-character_solid_8px";
  HdsIconlibrary_8px2["MapViewWestCharacterSolid_8px"] = "map-view-west-character_solid_8px";
  HdsIconlibrary_8px2["NavigationImagePauseSolid_8px"] = "navigation-image-pause_solid_8px";
  HdsIconlibrary_8px2["NavigationImagePlaySolid_8px"] = "navigation-image-play_solid_8px";
  HdsIconlibrary_8px2["NavigationImagePlayReverseSolid_8px"] = "navigation-image-play-reverse_solid_8px";
  HdsIconlibrary_8px2["NavigationImageStopSolid_8px"] = "navigation-image-stop_solid_8px";
  HdsIconlibrary_8px2["StatsMarkerSolid_8px"] = "stats-marker_solid_8px";
  HdsIconlibrary_8px2["ThirdPartyLogosWhat_3WordsOutline_8px"] = "third-party-logos-what-3-words_outline_8px";
  HdsIconlibrary_8px2["ThirdPartyLogosWhat_3WordsSolid_8px"] = "third-party-logos-what-3-words_solid_8px";
  HdsIconlibrary_8px2["TravelTransportTrackingAttentionSolid_8px"] = "travel-transport-tracking-attention_solid_8px";
})(HdsIconlibrary_8px = HdsIconlibrary_8px || (HdsIconlibrary_8px = {}));
var HDS_ICONLIBRARY_8PX_CODEPOINTS = {
  [HdsIconlibrary_8px.CoreUiCheckmarkSolid_8px]: "61697",
  [HdsIconlibrary_8px.CoreUiChevronDownSolid_8px]: "61698",
  [HdsIconlibrary_8px.CoreUiChevronLeftSolid_8px]: "61699",
  [HdsIconlibrary_8px.CoreUiChevronRightSolid_8px]: "61700",
  [HdsIconlibrary_8px.CoreUiChevronUpSolid_8px]: "61701",
  [HdsIconlibrary_8px.CoreUiCrossSolid_8px]: "61702",
  [HdsIconlibrary_8px.CoreUiExternalLinkSolid_8px]: "61703",
  [HdsIconlibrary_8px.CoreUiInformationSolid_8px]: "61704",
  [HdsIconlibrary_8px.CoreUiLockSolid_8px]: "61705",
  [HdsIconlibrary_8px.CoreUiMinusSolid_8px]: "61706",
  [HdsIconlibrary_8px.CoreUiOverflowHoriCenterSolid_8px]: "61707",
  [HdsIconlibrary_8px.CoreUiOverflowVertCenterSolid_8px]: "61708",
  [HdsIconlibrary_8px.CoreUiOverflowVertRightSolid_8px]: "61709",
  [HdsIconlibrary_8px.CoreUiPlusSolid_8px]: "61710",
  [HdsIconlibrary_8px.CoreUiProfileSolid_8px]: "61711",
  [HdsIconlibrary_8px.CoreUiUnlockSolid_8px]: "61712",
  [HdsIconlibrary_8px.FileCopySolid_8px]: "61713",
  [HdsIconlibrary_8px.MapViewDotIndicatorSolid_8px]: "61714",
  [HdsIconlibrary_8px.MapViewEastCharacterSolid_8px]: "61715",
  [HdsIconlibrary_8px.MapViewNorthCharacterSolid_8px]: "61716",
  [HdsIconlibrary_8px.MapViewNorthUpSolid_8px]: "61717",
  [HdsIconlibrary_8px.MapViewSouthCharacterSolid_8px]: "61718",
  [HdsIconlibrary_8px.MapViewWestCharacterSolid_8px]: "61719",
  [HdsIconlibrary_8px.NavigationImagePauseSolid_8px]: "61720",
  [HdsIconlibrary_8px.NavigationImagePlaySolid_8px]: "61721",
  [HdsIconlibrary_8px.NavigationImagePlayReverseSolid_8px]: "61722",
  [HdsIconlibrary_8px.NavigationImageStopSolid_8px]: "61723",
  [HdsIconlibrary_8px.StatsMarkerSolid_8px]: "61724",
  [HdsIconlibrary_8px.ThirdPartyLogosWhat_3WordsOutline_8px]: "61725",
  [HdsIconlibrary_8px.ThirdPartyLogosWhat_3WordsSolid_8px]: "61726",
  [HdsIconlibrary_8px.TravelTransportTrackingAttentionSolid_8px]: "61727"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-16px.js
var HdsIconlibrary_16px;
(function(HdsIconlibrary_16px2) {
  HdsIconlibrary_16px2["CoreUiAddSolid_16px"] = "core-ui-add_solid_16px";
  HdsIconlibrary_16px2["CoreUiAddUserOutline_16px"] = "core-ui-add-user_outline_16px";
  HdsIconlibrary_16px2["CoreUiAddUserSolid_16px"] = "core-ui-add-user_solid_16px";
  HdsIconlibrary_16px2["CoreUiAlertSolid_16px"] = "core-ui-alert_solid_16px";
  HdsIconlibrary_16px2["CoreUiArrowDownSolid_16px"] = "core-ui-arrow-down_solid_16px";
  HdsIconlibrary_16px2["CoreUiArrowDownLeftSolid_16px"] = "core-ui-arrow-down-left_solid_16px";
  HdsIconlibrary_16px2["CoreUiArrowDownRightSolid_16px"] = "core-ui-arrow-down-right_solid_16px";
  HdsIconlibrary_16px2["CoreUiArrowLeftSolid_16px"] = "core-ui-arrow-left_solid_16px";
  HdsIconlibrary_16px2["CoreUiArrowRightSolid_16px"] = "core-ui-arrow-right_solid_16px";
  HdsIconlibrary_16px2["CoreUiArrowUpSolid_16px"] = "core-ui-arrow-up_solid_16px";
  HdsIconlibrary_16px2["CoreUiArrowUpLeftSolid_16px"] = "core-ui-arrow-up-left_solid_16px";
  HdsIconlibrary_16px2["CoreUiArrowUpRightSolid_16px"] = "core-ui-arrow-up-right_solid_16px";
  HdsIconlibrary_16px2["CoreUiAttentionSolid_16px"] = "core-ui-attention_solid_16px";
  HdsIconlibrary_16px2["CoreUiBatteryChargingSolid_16px"] = "core-ui-battery-charging_solid_16px";
  HdsIconlibrary_16px2["CoreUiBatteryEmptySolid_16px"] = "core-ui-battery-empty_solid_16px";
  HdsIconlibrary_16px2["CoreUiBatteryFullSolid_16px"] = "core-ui-battery-full_solid_16px";
  HdsIconlibrary_16px2["CoreUiBatteryHalfSolid_16px"] = "core-ui-battery-half_solid_16px";
  HdsIconlibrary_16px2["CoreUiBatteryLowSolid_16px"] = "core-ui-battery-low_solid_16px";
  HdsIconlibrary_16px2["CoreUiBluetoothSolid_16px"] = "core-ui-bluetooth_solid_16px";
  HdsIconlibrary_16px2["CoreUiBluetoothOffSolid_16px"] = "core-ui-bluetooth-off_solid_16px";
  HdsIconlibrary_16px2["CoreUiBookmarkSolid_16px"] = "core-ui-bookmark_solid_16px";
  HdsIconlibrary_16px2["CoreUiBookmarkAddSolid_16px"] = "core-ui-bookmark-add_solid_16px";
  HdsIconlibrary_16px2["CoreUiCheckmarkSolid_16px"] = "core-ui-checkmark_solid_16px";
  HdsIconlibrary_16px2["CoreUiChevronDownSolid_16px"] = "core-ui-chevron-down_solid_16px";
  HdsIconlibrary_16px2["CoreUiChevronLeftSolid_16px"] = "core-ui-chevron-left_solid_16px";
  HdsIconlibrary_16px2["CoreUiChevronLeftDoubleSolid_16px"] = "core-ui-chevron-left-double_solid_16px";
  HdsIconlibrary_16px2["CoreUiChevronRightSolid_16px"] = "core-ui-chevron-right_solid_16px";
  HdsIconlibrary_16px2["CoreUiChevronRightDoubleSolid_16px"] = "core-ui-chevron-right-double_solid_16px";
  HdsIconlibrary_16px2["CoreUiChevronUpSolid_16px"] = "core-ui-chevron-up_solid_16px";
  HdsIconlibrary_16px2["CoreUiChevronUpDownSolid_16px"] = "core-ui-chevron-up-down_solid_16px";
  HdsIconlibrary_16px2["CoreUiClearSolid_16px"] = "core-ui-clear_solid_16px";
  HdsIconlibrary_16px2["CoreUiCollapseSolid_16px"] = "core-ui-collapse_solid_16px";
  HdsIconlibrary_16px2["CoreUiCommentSolid_16px"] = "core-ui-comment_solid_16px";
  HdsIconlibrary_16px2["CoreUiConfirmSolid_16px"] = "core-ui-confirm_solid_16px";
  HdsIconlibrary_16px2["CoreUiCrossSolid_16px"] = "core-ui-cross_solid_16px";
  HdsIconlibrary_16px2["CoreUiDeleteSolid_16px"] = "core-ui-delete_solid_16px";
  HdsIconlibrary_16px2["CoreUiDetailsSolid_16px"] = "core-ui-details_solid_16px";
  HdsIconlibrary_16px2["CoreUiDragListSolid_16px"] = "core-ui-drag-list_solid_16px";
  HdsIconlibrary_16px2["CoreUiEditSolid_16px"] = "core-ui-edit_solid_16px";
  HdsIconlibrary_16px2["CoreUiEditedSolid_16px"] = "core-ui-edited_solid_16px";
  HdsIconlibrary_16px2["CoreUiExpandSolid_16px"] = "core-ui-expand_solid_16px";
  HdsIconlibrary_16px2["CoreUiExternalLinkSolid_16px"] = "core-ui-external-link_solid_16px";
  HdsIconlibrary_16px2["CoreUiFallbackItemSolid_16px"] = "core-ui-fallback-item_solid_16px";
  HdsIconlibrary_16px2["CoreUiFolderClosedSolid_16px"] = "core-ui-folder-closed_solid_16px";
  HdsIconlibrary_16px2["CoreUiFolderOpenSolid_16px"] = "core-ui-folder-open_solid_16px";
  HdsIconlibrary_16px2["CoreUiGpsSolid_16px"] = "core-ui-gps_solid_16px";
  HdsIconlibrary_16px2["CoreUiHelpSolid_16px"] = "core-ui-help_solid_16px";
  HdsIconlibrary_16px2["CoreUiHereLogoSolid_16px"] = "core-ui-HERE-logo_solid_16px";
  HdsIconlibrary_16px2["CoreUiHideSolid_16px"] = "core-ui-hide_solid_16px";
  HdsIconlibrary_16px2["CoreUiHideAltSolid_16px"] = "core-ui-hide-alt_solid_16px";
  HdsIconlibrary_16px2["CoreUiHideMenuSolid_16px"] = "core-ui-hide-menu_solid_16px";
  HdsIconlibrary_16px2["CoreUiHistorySolid_16px"] = "core-ui-history_solid_16px";
  HdsIconlibrary_16px2["CoreUiInboxAttentionSolid_16px"] = "core-ui-inbox-attention_solid_16px";
  HdsIconlibrary_16px2["CoreUiInformationSolid_16px"] = "core-ui-information_solid_16px";
  HdsIconlibrary_16px2["CoreUiInvalidSolid_16px"] = "core-ui-invalid_solid_16px";
  HdsIconlibrary_16px2["CoreUiLoadingSolid_16px"] = "core-ui-loading_solid_16px";
  HdsIconlibrary_16px2["CoreUiLocationOffOutline_16px"] = "core-ui-location-off_outline_16px";
  HdsIconlibrary_16px2["CoreUiLocationOffSolid_16px"] = "core-ui-location-off_solid_16px";
  HdsIconlibrary_16px2["CoreUiLockSolid_16px"] = "core-ui-lock_solid_16px";
  HdsIconlibrary_16px2["CoreUiLockBreakSolid_16px"] = "core-ui-lock-break_solid_16px";
  HdsIconlibrary_16px2["CoreUiMenuSolid_16px"] = "core-ui-menu_solid_16px";
  HdsIconlibrary_16px2["CoreUiMicrophoneSolid_16px"] = "core-ui-microphone_solid_16px";
  HdsIconlibrary_16px2["CoreUiMicrophoneOffSolid_16px"] = "core-ui-microphone-off_solid_16px";
  HdsIconlibrary_16px2["CoreUiMinusSolid_16px"] = "core-ui-minus_solid_16px";
  HdsIconlibrary_16px2["CoreUiNotificationsSolid_16px"] = "core-ui-notifications_solid_16px";
  HdsIconlibrary_16px2["CoreUiOverflowHoriCenterSolid_16px"] = "core-ui-overflow-hori-center_solid_16px";
  HdsIconlibrary_16px2["CoreUiOverflowVertCenterSolid_16px"] = "core-ui-overflow-vert-center_solid_16px";
  HdsIconlibrary_16px2["CoreUiOverflowVertRightSolid_16px"] = "core-ui-overflow-vert-right_solid_16px";
  HdsIconlibrary_16px2["CoreUiPlusSolid_16px"] = "core-ui-plus_solid_16px";
  HdsIconlibrary_16px2["CoreUiProfileSolid_16px"] = "core-ui-profile_solid_16px";
  HdsIconlibrary_16px2["CoreUiQuestionMarkSolid_16px"] = "core-ui-question-mark_solid_16px";
  HdsIconlibrary_16px2["CoreUiRedoSolid_16px"] = "core-ui-redo_solid_16px";
  HdsIconlibrary_16px2["CoreUiRefreshSolid_16px"] = "core-ui-refresh_solid_16px";
  HdsIconlibrary_16px2["CoreUiReportSolid_16px"] = "core-ui-report_solid_16px";
  HdsIconlibrary_16px2["CoreUiResetSolid_16px"] = "core-ui-reset_solid_16px";
  HdsIconlibrary_16px2["CoreUiSaveSolid_16px"] = "core-ui-save_solid_16px";
  HdsIconlibrary_16px2["CoreUiSearchSolid_16px"] = "core-ui-search_solid_16px";
  HdsIconlibrary_16px2["CoreUiSettingsSolid_16px"] = "core-ui-settings_solid_16px";
  HdsIconlibrary_16px2["CoreUiShowSolid_16px"] = "core-ui-show_solid_16px";
  HdsIconlibrary_16px2["CoreUiShowMenuSolid_16px"] = "core-ui-show-menu_solid_16px";
  HdsIconlibrary_16px2["CoreUiSignInSolid_16px"] = "core-ui-sign-in_solid_16px";
  HdsIconlibrary_16px2["CoreUiSignOutSolid_16px"] = "core-ui-sign-out_solid_16px";
  HdsIconlibrary_16px2["CoreUiSlashSolid_16px"] = "core-ui-slash_solid_16px";
  HdsIconlibrary_16px2["CoreUiSubmitSolid_16px"] = "core-ui-submit_solid_16px";
  HdsIconlibrary_16px2["CoreUiSubstractSolid_16px"] = "core-ui-substract_solid_16px";
  HdsIconlibrary_16px2["CoreUiSwitchHorizontalSolid_16px"] = "core-ui-switch-horizontal_solid_16px";
  HdsIconlibrary_16px2["CoreUiSwitchVerticalSolid_16px"] = "core-ui-switch-vertical_solid_16px";
  HdsIconlibrary_16px2["CoreUiTagSolid_16px"] = "core-ui-tag_solid_16px";
  HdsIconlibrary_16px2["CoreUiTimeSolid_16px"] = "core-ui-time_solid_16px";
  HdsIconlibrary_16px2["CoreUiUndoSolid_16px"] = "core-ui-undo_solid_16px";
  HdsIconlibrary_16px2["CoreUiUnlockSolid_16px"] = "core-ui-unlock_solid_16px";
  HdsIconlibrary_16px2["CoreUiVolumeAlertOutline_16px"] = "core-ui-volume-alert_outline_16px";
  HdsIconlibrary_16px2["CoreUiVolumeAlertSolid_16px"] = "core-ui-volume-alert_solid_16px";
  HdsIconlibrary_16px2["CoreUiVolumeHighOutline_16px"] = "core-ui-volume-high_outline_16px";
  HdsIconlibrary_16px2["CoreUiVolumeHighSolid_16px"] = "core-ui-volume-high_solid_16px";
  HdsIconlibrary_16px2["CoreUiVolumeLowOutline_16px"] = "core-ui-volume-low_outline_16px";
  HdsIconlibrary_16px2["CoreUiVolumeLowSolid_16px"] = "core-ui-volume-low_solid_16px";
  HdsIconlibrary_16px2["CoreUiVolumeMediumOutline_16px"] = "core-ui-volume-medium_outline_16px";
  HdsIconlibrary_16px2["CoreUiVolumeMediumSolid_16px"] = "core-ui-volume-medium_solid_16px";
  HdsIconlibrary_16px2["CoreUiVolumeNoSoundOutline_16px"] = "core-ui-volume-no-sound_outline_16px";
  HdsIconlibrary_16px2["CoreUiVolumeNoSoundSolid_16px"] = "core-ui-volume-no-sound_solid_16px";
  HdsIconlibrary_16px2["CoreUiVolumeOffOutline_16px"] = "core-ui-volume-off_outline_16px";
  HdsIconlibrary_16px2["CoreUiVolumeOffSolid_16px"] = "core-ui-volume-off_solid_16px";
  HdsIconlibrary_16px2["CoreUiWifiLowSolid_16px"] = "core-ui-wifi-low_solid_16px";
  HdsIconlibrary_16px2["CoreUiWifiMediumSolid_16px"] = "core-ui-wifi-medium_solid_16px";
  HdsIconlibrary_16px2["CoreUiWifiOffSolid_16px"] = "core-ui-wifi-off_solid_16px";
  HdsIconlibrary_16px2["CoreUiWifiStrongSolid_16px"] = "core-ui-wifi-strong_solid_16px";
  HdsIconlibrary_16px2["DataAppSolid_16px"] = "data-app_solid_16px";
  HdsIconlibrary_16px2["DataCatalogSolid_16px"] = "data-catalog_solid_16px";
  HdsIconlibrary_16px2["DataConflateSolid_16px"] = "data-conflate_solid_16px";
  HdsIconlibrary_16px2["DataDatabaseSolid_16px"] = "data-database_solid_16px";
  HdsIconlibrary_16px2["DataDeploySolid_16px"] = "data-deploy_solid_16px";
  HdsIconlibrary_16px2["DataExportSolid_16px"] = "data-export_solid_16px";
  HdsIconlibrary_16px2["DataIndexSolid_16px"] = "data-index_solid_16px";
  HdsIconlibrary_16px2["DataInspectSolid_16px"] = "data-inspect_solid_16px";
  HdsIconlibrary_16px2["DataInteractiveSolid_16px"] = "data-interactive_solid_16px";
  HdsIconlibrary_16px2["DataLayersSolid_16px"] = "data-layers_solid_16px";
  HdsIconlibrary_16px2["DataMarketplaceSolid_16px"] = "data-marketplace_solid_16px";
  HdsIconlibrary_16px2["DataPipelineSolid_16px"] = "data-pipeline_solid_16px";
  HdsIconlibrary_16px2["DataRestSolid_16px"] = "data-rest_solid_16px";
  HdsIconlibrary_16px2["DataReviewSolid_16px"] = "data-review_solid_16px";
  HdsIconlibrary_16px2["DataSendToListSolid_16px"] = "data-send-to-list_solid_16px";
  HdsIconlibrary_16px2["DataServicesSolid_16px"] = "data-services_solid_16px";
  HdsIconlibrary_16px2["DataStreamSolid_16px"] = "data-stream_solid_16px";
  HdsIconlibrary_16px2["DataTemplateSolid_16px"] = "data-template_solid_16px";
  HdsIconlibrary_16px2["DataVersionedSolid_16px"] = "data-versioned_solid_16px";
  HdsIconlibrary_16px2["DataVolatileSolid_16px"] = "data-volatile_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsBarcodeReaderSolid_16px"] = "devices-sensors-barcode-reader_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsCameraSolid_16px"] = "devices-sensors-camera_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsComputerChipSolid_16px"] = "devices-sensors-computer-chip_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsDeviceConnectedSolid_16px"] = "devices-sensors-device-connected_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsDeviceGroupConnectedSolid_16px"] = "devices-sensors-device-group-connected_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsDeviceGroupFilterSolid_16px"] = "devices-sensors-device-group-filter_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsDeviceGroupSmartFilterSolid_16px"] = "devices-sensors-device-group-smart-filter_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsHdtvSolid_16px"] = "devices-sensors-hdtv_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsKeyboardSolid_16px"] = "devices-sensors-keyboard_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsLogicSolid_16px"] = "devices-sensors-logic_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsMonitorSolid_16px"] = "devices-sensors-monitor_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsPairedModeSolid_16px"] = "devices-sensors-paired-mode_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsPrinterSolid_16px"] = "devices-sensors-printer_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsProjectorSolid_16px"] = "devices-sensors-projector_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsScannerSolid_16px"] = "devices-sensors-scanner_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsSensorAirpressureSolid_16px"] = "devices-sensors-sensor-airpressure_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsSensorHumiditySolid_16px"] = "devices-sensors-sensor-humidity_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsSensorShockSolid_16px"] = "devices-sensors-sensor-shock_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsSensorTemperatureSolid_16px"] = "devices-sensors-sensor-temperature_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsSmartphoneSolid_16px"] = "devices-sensors-smartphone_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsSoftwareSolid_16px"] = "devices-sensors-software_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsSpeakerSolid_16px"] = "devices-sensors-speaker_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsTabletSolid_16px"] = "devices-sensors-tablet_solid_16px";
  HdsIconlibrary_16px2["DevicesSensorsWhiteboardSolid_16px"] = "devices-sensors-whiteboard_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingCalendarSolid_16px"] = "discovery-sharing-calendar_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingCalendarAddSolid_16px"] = "discovery-sharing-calendar-add_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingDetailsSolid_16px"] = "discovery-sharing-details_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingDistributeSolid_16px"] = "discovery-sharing-distribute_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingDownloadSolid_16px"] = "discovery-sharing-download_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingDownloadCloudSolid_16px"] = "discovery-sharing-download-cloud_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingFilterOffSolid_16px"] = "discovery-sharing-filter-off_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingFilterOnSolid_16px"] = "discovery-sharing-filter-on_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingGridTypeEOutline_16px"] = "discovery-sharing-grid-type-E_outline_16px";
  HdsIconlibrary_16px2["DiscoverySharingGridTypeESolid_16px"] = "discovery-sharing-grid-type-E_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingGridTypeASolid_16px"] = "discovery-sharing-grid-typeA_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingGridTypeBSolid_16px"] = "discovery-sharing-grid-typeB_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingGridTypeCSolid_16px"] = "discovery-sharing-grid-typeC_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingGridTypeDSolid_16px"] = "discovery-sharing-grid-typeD_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingGroupSolid_16px"] = "discovery-sharing-group_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingGroupFilterSolid_16px"] = "discovery-sharing-group-filter_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingGroupSmartFilterSolid_16px"] = "discovery-sharing-group-smart-filter_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingHideSolid_16px"] = "discovery-sharing-hide_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingLinkSolid_16px"] = "discovery-sharing-link_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingListTypeASolid_16px"] = "discovery-sharing-list-typeA_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingListTypeBSolid_16px"] = "discovery-sharing-list-typeB_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingMapsDownloadSolid_16px"] = "discovery-sharing-maps-download_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingMapsUpdateSolid_16px"] = "discovery-sharing-maps-update_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingNoContentSolid_16px"] = "discovery-sharing-no-content_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingNotInSyncSolid_16px"] = "discovery-sharing-not-in-sync_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingShareAndroidSolid_16px"] = "discovery-sharing-share-Android_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingShareIOsSolid_16px"] = "discovery-sharing-share-iOS_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingShowSolid_16px"] = "discovery-sharing-show_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingUnlinkSolid_16px"] = "discovery-sharing-unlink_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingUploadSolid_16px"] = "discovery-sharing-upload_solid_16px";
  HdsIconlibrary_16px2["DiscoverySharingUploadCloudSolid_16px"] = "discovery-sharing-upload-cloud_solid_16px";
  HdsIconlibrary_16px2["FileArchiveSolid_16px"] = "file-archive_solid_16px";
  HdsIconlibrary_16px2["FileCopySolid_16px"] = "file-copy_solid_16px";
  HdsIconlibrary_16px2["FileDocFileSolid_16px"] = "file-DOC-File_solid_16px";
  HdsIconlibrary_16px2["FileEpsFileSolid_16px"] = "file-EPS-File_solid_16px";
  HdsIconlibrary_16px2["FileFileSolid_16px"] = "file-file_solid_16px";
  HdsIconlibrary_16px2["FileGifFileSolid_16px"] = "file-GIF-File_solid_16px";
  HdsIconlibrary_16px2["FileHtmlFileSolid_16px"] = "file-HTML-File_solid_16px";
  HdsIconlibrary_16px2["FileImageSolid_16px"] = "file-image_solid_16px";
  HdsIconlibrary_16px2["FileJpgFileSolid_16px"] = "file-JPG-File_solid_16px";
  HdsIconlibrary_16px2["FileJsonFileSolid_16px"] = "file-JSON-File_solid_16px";
  HdsIconlibrary_16px2["FileMp3FileSolid_16px"] = "file-MP3-File_solid_16px";
  HdsIconlibrary_16px2["FilePdfFileSolid_16px"] = "file-PDF-File_solid_16px";
  HdsIconlibrary_16px2["FilePngFileSolid_16px"] = "file-PNG-File_solid_16px";
  HdsIconlibrary_16px2["FileSvgFileSolid_16px"] = "file-SVG-File_solid_16px";
  HdsIconlibrary_16px2["FileTiffFileSolid_16px"] = "file-TIFF-File_solid_16px";
  HdsIconlibrary_16px2["FileTxtFileSolid_16px"] = "file-TXT-File_solid_16px";
  HdsIconlibrary_16px2["FileWavFileSolid_16px"] = "file-WAV-File_solid_16px";
  HdsIconlibrary_16px2["FileZipSolid_16px"] = "file-ZIP_solid_16px";
  HdsIconlibrary_16px2["MapView_2DSolid_16px"] = "map-view-2D_solid_16px";
  HdsIconlibrary_16px2["MapView_3DSolid_16px"] = "map-view-3D_solid_16px";
  HdsIconlibrary_16px2["MapViewCameraFrustumSolid_16px"] = "map-view-camera-frustum_solid_16px";
  HdsIconlibrary_16px2["MapViewCameraOrbitSolid_16px"] = "map-view-camera-orbit_solid_16px";
  HdsIconlibrary_16px2["MapViewCameraTopdownSolid_16px"] = "map-view-camera-topdown_solid_16px";
  HdsIconlibrary_16px2["MapViewCameraViewSolid_16px"] = "map-view-camera-view_solid_16px";
  HdsIconlibrary_16px2["MapViewCompassSolid_16px"] = "map-view-compass_solid_16px";
  HdsIconlibrary_16px2["MapViewCurrentLocationSolid_16px"] = "map-view-current-location_solid_16px";
  HdsIconlibrary_16px2["MapViewCurrentLocationOffSolid_16px"] = "map-view-current-location-off_solid_16px";
  HdsIconlibrary_16px2["MapViewDashboardSolid_16px"] = "map-view-dashboard_solid_16px";
  HdsIconlibrary_16px2["MapViewDistanceSolid_16px"] = "map-view-distance_solid_16px";
  HdsIconlibrary_16px2["MapViewDotIndicatorOutline_16px"] = "map-view-dot-indicator_outline_16px";
  HdsIconlibrary_16px2["MapViewDotIndicatorSolid_16px"] = "map-view-dot-indicator_solid_16px";
  HdsIconlibrary_16px2["MapViewEastSolid_16px"] = "map-view-east_solid_16px";
  HdsIconlibrary_16px2["MapViewEastCharacterSolid_16px"] = "map-view-east-character_solid_16px";
  HdsIconlibrary_16px2["MapViewFlipHorizontalSolid_16px"] = "map-view-flip-horizontal_solid_16px";
  HdsIconlibrary_16px2["MapViewFlipVerticalSolid_16px"] = "map-view-flip-vertical_solid_16px";
  HdsIconlibrary_16px2["MapViewKeyframeSolid_16px"] = "map-view-keyframe_solid_16px";
  HdsIconlibrary_16px2["MapViewLayersSolid_16px"] = "map-view-layers_solid_16px";
  HdsIconlibrary_16px2["MapViewLegendSolid_16px"] = "map-view-legend_solid_16px";
  HdsIconlibrary_16px2["MapViewMapMarkerOutline_16px"] = "map-view-map-marker_outline_16px";
  HdsIconlibrary_16px2["MapViewMapMarkerSolid_16px"] = "map-view-map-marker_solid_16px";
  HdsIconlibrary_16px2["MapViewMapViewSolid_16px"] = "map-view-map-view_solid_16px";
  HdsIconlibrary_16px2["MapViewMarkerSolid_16px"] = "map-view-marker_solid_16px";
  HdsIconlibrary_16px2["MapViewMaximizeSolid_16px"] = "map-view-maximize_solid_16px";
  HdsIconlibrary_16px2["MapViewMinimizeSolid_16px"] = "map-view-minimize_solid_16px";
  HdsIconlibrary_16px2["MapViewMinusRectangleSolid_16px"] = "map-view-minus-rectangle_solid_16px";
  HdsIconlibrary_16px2["MapViewNorthSolid_16px"] = "map-view-north_solid_16px";
  HdsIconlibrary_16px2["MapViewNorthCharacterSolid_16px"] = "map-view-north-character_solid_16px";
  HdsIconlibrary_16px2["MapViewNorthEastCharacterSolid_16px"] = "map-view-north-east-character_solid_16px";
  HdsIconlibrary_16px2["MapViewNorthUpSolid_16px"] = "map-view-north-up_solid_16px";
  HdsIconlibrary_16px2["MapViewNorthWestCharacterSolid_16px"] = "map-view-north-west-character_solid_16px";
  HdsIconlibrary_16px2["MapViewNotTiltedSolid_16px"] = "map-view-not-tilted_solid_16px";
  HdsIconlibrary_16px2["MapViewPanViewSolid_16px"] = "map-view-pan-view_solid_16px";
  HdsIconlibrary_16px2["MapViewPipSolid_16px"] = "map-view-pip_solid_16px";
  HdsIconlibrary_16px2["MapViewPlaceSolid_16px"] = "map-view-place_solid_16px";
  HdsIconlibrary_16px2["MapViewPlusRectangleSolid_16px"] = "map-view-plus-rectangle_solid_16px";
  HdsIconlibrary_16px2["MapViewPopOutSolid_16px"] = "map-view-pop-out_solid_16px";
  HdsIconlibrary_16px2["MapViewProjectionGlobeSolid_16px"] = "map-view-projection-globe_solid_16px";
  HdsIconlibrary_16px2["MapViewProjectionMercatorSolid_16px"] = "map-view-projection-mercator_solid_16px";
  HdsIconlibrary_16px2["MapViewResizeSolid_16px"] = "map-view-resize_solid_16px";
  HdsIconlibrary_16px2["MapViewSelectSectionSolid_16px"] = "map-view-select-section_solid_16px";
  HdsIconlibrary_16px2["MapViewSingleScreenSolid_16px"] = "map-view-single-screen_solid_16px";
  HdsIconlibrary_16px2["MapViewSouthSolid_16px"] = "map-view-south_solid_16px";
  HdsIconlibrary_16px2["MapViewSouthCharacterSolid_16px"] = "map-view-south-character_solid_16px";
  HdsIconlibrary_16px2["MapViewSouthEastCharacterSolid_16px"] = "map-view-south-east-character_solid_16px";
  HdsIconlibrary_16px2["MapViewSouthWestCharacterSolid_16px"] = "map-view-south-west-character_solid_16px";
  HdsIconlibrary_16px2["MapViewSplitTripleVSolid_16px"] = "map-view-split-triple-v_solid_16px";
  HdsIconlibrary_16px2["MapViewSplitscreenHSolid_16px"] = "map-view-splitscreen-h_solid_16px";
  HdsIconlibrary_16px2["MapViewSplitscreenVSolid_16px"] = "map-view-splitscreen-v_solid_16px";
  HdsIconlibrary_16px2["MapViewStatisticsSolid_16px"] = "map-view-statistics_solid_16px";
  HdsIconlibrary_16px2["MapViewTiltedSolid_16px"] = "map-view-tilted_solid_16px";
  HdsIconlibrary_16px2["MapViewValueDecreaseSolid_16px"] = "map-view-value-decrease_solid_16px";
  HdsIconlibrary_16px2["MapViewValueDecreaseHighSolid_16px"] = "map-view-value-decrease-high_solid_16px";
  HdsIconlibrary_16px2["MapViewValueIncreaseSolid_16px"] = "map-view-value-increase_solid_16px";
  HdsIconlibrary_16px2["MapViewValueIncreaseHighSolid_16px"] = "map-view-value-increase-high_solid_16px";
  HdsIconlibrary_16px2["MapViewViewAllSolid_16px"] = "map-view-view-all_solid_16px";
  HdsIconlibrary_16px2["MapViewViewCenterSolid_16px"] = "map-view-view-center_solid_16px";
  HdsIconlibrary_16px2["MapViewWestSolid_16px"] = "map-view-west_solid_16px";
  HdsIconlibrary_16px2["MapViewWestCharacterSolid_16px"] = "map-view-west-character_solid_16px";
  HdsIconlibrary_16px2["MapViewWorkspacesSolid_16px"] = "map-view-workspaces_solid_16px";
  HdsIconlibrary_16px2["MiscAddAddressNumberSolid_16px"] = "misc-add-address-number_solid_16px";
  HdsIconlibrary_16px2["MiscAddressNumberSolid_16px"] = "misc-address-number_solid_16px";
  HdsIconlibrary_16px2["MiscBuildingHomeSolid_16px"] = "misc-building-home_solid_16px";
  HdsIconlibrary_16px2["MiscBuildingOffSolid_16px"] = "misc-building-off_solid_16px";
  HdsIconlibrary_16px2["MiscBuildingOfficeSolid_16px"] = "misc-building-office_solid_16px";
  HdsIconlibrary_16px2["MiscCalculatorSolid_16px"] = "misc-calculator_solid_16px";
  HdsIconlibrary_16px2["MiscCartSolid_16px"] = "misc-cart_solid_16px";
  HdsIconlibrary_16px2["MiscCodeSolid_16px"] = "misc-code_solid_16px";
  HdsIconlibrary_16px2["MiscCreditCardSolid_16px"] = "misc-credit-card_solid_16px";
  HdsIconlibrary_16px2["MiscDatasetSolid_16px"] = "misc-dataset_solid_16px";
  HdsIconlibrary_16px2["MiscElevatorSolid_16px"] = "misc-elevator_solid_16px";
  HdsIconlibrary_16px2["MiscEnvironmentSolid_16px"] = "misc-environment_solid_16px";
  HdsIconlibrary_16px2["MiscEscalatorSolid_16px"] = "misc-escalator_solid_16px";
  HdsIconlibrary_16px2["MiscEscalatorDownSolid_16px"] = "misc-escalator-down_solid_16px";
  HdsIconlibrary_16px2["MiscEscalatorUpSolid_16px"] = "misc-escalator-up_solid_16px";
  HdsIconlibrary_16px2["MiscExpertSolid_16px"] = "misc-expert_solid_16px";
  HdsIconlibrary_16px2["MiscFamilySolid_16px"] = "misc-family_solid_16px";
  HdsIconlibrary_16px2["MiscFlashlightSolid_16px"] = "misc-flashlight_solid_16px";
  HdsIconlibrary_16px2["MiscGlobalSolid_16px"] = "misc-global_solid_16px";
  HdsIconlibrary_16px2["MiscHandshakeSolid_16px"] = "misc-handshake_solid_16px";
  HdsIconlibrary_16px2["MiscHardDriveSolid_16px"] = "misc-hard-drive_solid_16px";
  HdsIconlibrary_16px2["MiscHeadphonesSolid_16px"] = "misc-headphones_solid_16px";
  HdsIconlibrary_16px2["MiscInboxSolid_16px"] = "misc-inbox_solid_16px";
  HdsIconlibrary_16px2["MiscInboxAttentionSolid_16px"] = "misc-inbox-attention_solid_16px";
  HdsIconlibrary_16px2["MiscKeySolid_16px"] = "misc-key_solid_16px";
  HdsIconlibrary_16px2["MiscKitchenSolid_16px"] = "misc-kitchen_solid_16px";
  HdsIconlibrary_16px2["MiscLaboratorySolid_16px"] = "misc-laboratory_solid_16px";
  HdsIconlibrary_16px2["MiscManSolid_16px"] = "misc-man_solid_16px";
  HdsIconlibrary_16px2["MiscMeetingPointSolid_16px"] = "misc-meeting-point_solid_16px";
  HdsIconlibrary_16px2["MiscNeighbourhoodSolid_16px"] = "misc-neighbourhood_solid_16px";
  HdsIconlibrary_16px2["MiscPacemakerSolid_16px"] = "misc-pacemaker_solid_16px";
  HdsIconlibrary_16px2["MiscPeopleSolid_16px"] = "misc-people_solid_16px";
  HdsIconlibrary_16px2["MiscPoopSolid_16px"] = "misc-poop_solid_16px";
  HdsIconlibrary_16px2["MiscProjectSolid_16px"] = "misc-project_solid_16px";
  HdsIconlibrary_16px2["MiscProjectsSolid_16px"] = "misc-projects_solid_16px";
  HdsIconlibrary_16px2["MiscReusableSolid_16px"] = "misc-reusable_solid_16px";
  HdsIconlibrary_16px2["MiscServiceSolid_16px"] = "misc-service_solid_16px";
  HdsIconlibrary_16px2["MiscStairsSolid_16px"] = "misc-stairs_solid_16px";
  HdsIconlibrary_16px2["MiscStopwatchSolid_16px"] = "misc-stopwatch_solid_16px";
  HdsIconlibrary_16px2["MiscSuitcaseSolid_16px"] = "misc-suitcase_solid_16px";
  HdsIconlibrary_16px2["MiscTerrainSolid_16px"] = "misc-terrain_solid_16px";
  HdsIconlibrary_16px2["MiscTicketBarrierSolid_16px"] = "misc-ticket-barrier_solid_16px";
  HdsIconlibrary_16px2["MiscTrophySolid_16px"] = "misc-trophy_solid_16px";
  HdsIconlibrary_16px2["MiscVoiceCommandSolid_16px"] = "misc-voice-command_solid_16px";
  HdsIconlibrary_16px2["MiscWheelchairSolid_16px"] = "misc-wheelchair_solid_16px";
  HdsIconlibrary_16px2["MiscWomanSolid_16px"] = "misc-woman_solid_16px";
  HdsIconlibrary_16px2["NavigationImageBrightnessOffSolid_16px"] = "navigation-image-brightness-off_solid_16px";
  HdsIconlibrary_16px2["NavigationImageBrightnessOnSolid_16px"] = "navigation-image-brightness-on_solid_16px";
  HdsIconlibrary_16px2["NavigationImageColorFullSolid_16px"] = "navigation-image-color-full_solid_16px";
  HdsIconlibrary_16px2["NavigationImageColorInvertASolid_16px"] = "navigation-image-color-invert-A_solid_16px";
  HdsIconlibrary_16px2["NavigationImageColorInvertBSolid_16px"] = "navigation-image-color-invert-B_solid_16px";
  HdsIconlibrary_16px2["NavigationImageColorOverrideSolid_16px"] = "navigation-image-color-override_solid_16px";
  HdsIconlibrary_16px2["NavigationImageColorToneSolid_16px"] = "navigation-image-color-tone_solid_16px";
  HdsIconlibrary_16px2["NavigationImageContrastSolid_16px"] = "navigation-image-contrast_solid_16px";
  HdsIconlibrary_16px2["NavigationImageFirstSolid_16px"] = "navigation-image-first_solid_16px";
  HdsIconlibrary_16px2["NavigationImageLastSolid_16px"] = "navigation-image-last_solid_16px";
  HdsIconlibrary_16px2["NavigationImageNextSolid_16px"] = "navigation-image-next_solid_16px";
  HdsIconlibrary_16px2["NavigationImageOpacityOffSolid_16px"] = "navigation-image-opacity-off_solid_16px";
  HdsIconlibrary_16px2["NavigationImageOpacityOnSolid_16px"] = "navigation-image-opacity-on_solid_16px";
  HdsIconlibrary_16px2["NavigationImagePauseSolid_16px"] = "navigation-image-pause_solid_16px";
  HdsIconlibrary_16px2["NavigationImagePlaySolid_16px"] = "navigation-image-play_solid_16px";
  HdsIconlibrary_16px2["NavigationImagePlayReverseSolid_16px"] = "navigation-image-play-reverse_solid_16px";
  HdsIconlibrary_16px2["NavigationImagePlaybackSpeedSolid_16px"] = "navigation-image-playback-speed_solid_16px";
  HdsIconlibrary_16px2["NavigationImagePreviousSolid_16px"] = "navigation-image-previous_solid_16px";
  HdsIconlibrary_16px2["NavigationImageSkipSolid_16px"] = "navigation-image-skip_solid_16px";
  HdsIconlibrary_16px2["NavigationImageStopSolid_16px"] = "navigation-image-stop_solid_16px";
  HdsIconlibrary_16px2["PoiAccommodationSolid_16px"] = "poi-accommodation_solid_16px";
  HdsIconlibrary_16px2["PoiAirportSolid_16px"] = "poi-airport_solid_16px";
  HdsIconlibrary_16px2["PoiAirportCargoSolid_16px"] = "poi-airport-cargo_solid_16px";
  HdsIconlibrary_16px2["PoiAirportGateSolid_16px"] = "poi-airport-gate_solid_16px";
  HdsIconlibrary_16px2["PoiAmusementParkSolid_16px"] = "poi-amusement-park_solid_16px";
  HdsIconlibrary_16px2["PoiAquariumSolid_16px"] = "poi-aquarium_solid_16px";
  HdsIconlibrary_16px2["PoiArtGallerySolid_16px"] = "poi-art-gallery_solid_16px";
  HdsIconlibrary_16px2["PoiAshramSolid_16px"] = "poi-ashram_solid_16px";
  HdsIconlibrary_16px2["PoiAtmSolid_16px"] = "poi-atm_solid_16px";
  HdsIconlibrary_16px2["PoiAttractionSolid_16px"] = "poi-attraction_solid_16px";
  HdsIconlibrary_16px2["PoiBakerySolid_16px"] = "poi-bakery_solid_16px";
  HdsIconlibrary_16px2["PoiBeachSolid_16px"] = "poi-beach_solid_16px";
  HdsIconlibrary_16px2["PoiBookstoreSolid_16px"] = "poi-bookstore_solid_16px";
  HdsIconlibrary_16px2["PoiBowlingSolid_16px"] = "poi-bowling_solid_16px";
  HdsIconlibrary_16px2["PoiBridgeSolid_16px"] = "poi-bridge_solid_16px";
  HdsIconlibrary_16px2["PoiBusSolid_16px"] = "poi-bus_solid_16px";
  HdsIconlibrary_16px2["PoiBusinessSolid_16px"] = "poi-business_solid_16px";
  HdsIconlibrary_16px2["PoiBusinessPostJpnSolid_16px"] = "poi-business-post-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiButcherSolid_16px"] = "poi-butcher_solid_16px";
  HdsIconlibrary_16px2["PoiCableWaySolid_16px"] = "poi-cable-way_solid_16px";
  HdsIconlibrary_16px2["PoiCampingSolid_16px"] = "poi-camping_solid_16px";
  HdsIconlibrary_16px2["PoiCarChargingSolid_16px"] = "poi-car-charging_solid_16px";
  HdsIconlibrary_16px2["PoiCarChargingFastSolid_16px"] = "poi-car-charging-fast_solid_16px";
  HdsIconlibrary_16px2["PoiCarDealershipSolid_16px"] = "poi-car-dealership_solid_16px";
  HdsIconlibrary_16px2["PoiCarElectricSolid_16px"] = "poi-car-electric_solid_16px";
  HdsIconlibrary_16px2["PoiCarRentalSolid_16px"] = "poi-car-rental_solid_16px";
  HdsIconlibrary_16px2["PoiCarRepairSolid_16px"] = "poi-car-repair_solid_16px";
  HdsIconlibrary_16px2["PoiCarWashSolid_16px"] = "poi-car-wash_solid_16px";
  HdsIconlibrary_16px2["PoiCargoCenterSolid_16px"] = "poi-cargo-center_solid_16px";
  HdsIconlibrary_16px2["PoiCartSolid_16px"] = "poi-cart_solid_16px";
  HdsIconlibrary_16px2["PoiCasinoSolid_16px"] = "poi-casino_solid_16px";
  HdsIconlibrary_16px2["PoiCemetrySolid_16px"] = "poi-cemetry_solid_16px";
  HdsIconlibrary_16px2["PoiChurchSolid_16px"] = "poi-church_solid_16px";
  HdsIconlibrary_16px2["PoiCinemaSolid_16px"] = "poi-cinema_solid_16px";
  HdsIconlibrary_16px2["PoiClothingSolid_16px"] = "poi-clothing_solid_16px";
  HdsIconlibrary_16px2["PoiCoachSolid_16px"] = "poi-coach_solid_16px";
  HdsIconlibrary_16px2["PoiCocktailSolid_16px"] = "poi-cocktail_solid_16px";
  HdsIconlibrary_16px2["PoiCoffeeSolid_16px"] = "poi-coffee_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyBahtSolid_16px"] = "poi-currency-baht_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyDollarSolid_16px"] = "poi-currency-dollar_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyDongSolid_16px"] = "poi-currency-dong_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyEuroSolid_16px"] = "poi-currency-euro_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyFrancSolid_16px"] = "poi-currency-franc_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyKroneSolid_16px"] = "poi-currency-krone_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyLiraSolid_16px"] = "poi-currency-lira_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyNairaSolid_16px"] = "poi-currency-naira_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyPoundSolid_16px"] = "poi-currency-pound_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyRubleSolid_16px"] = "poi-currency-ruble_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyRupeeSolid_16px"] = "poi-currency-rupee_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyRupeesSolid_16px"] = "poi-currency-rupees_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyRupiahSolid_16px"] = "poi-currency-rupiah_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyShekelSolid_16px"] = "poi-currency-shekel_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyTakaSolid_16px"] = "poi-currency-taka_solid_16px";
  HdsIconlibrary_16px2["PoiCurrencyYenSolid_16px"] = "poi-currency-yen_solid_16px";
  HdsIconlibrary_16px2["PoiDoughnutSolid_16px"] = "poi-doughnut_solid_16px";
  HdsIconlibrary_16px2["PoiEducationSolid_16px"] = "poi-education_solid_16px";
  HdsIconlibrary_16px2["PoiElevatorSolid_16px"] = "poi-elevator_solid_16px";
  HdsIconlibrary_16px2["PoiEmergencyFiredepartmentJpnSolid_16px"] = "poi-emergency-firedepartment-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiEmergencyHospitalJpnSolid_16px"] = "poi-emergency-hospital-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiEmergencyPoliceJpnSolid_16px"] = "poi-emergency-police-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiEmergencyPoliceboxJpnSolid_16px"] = "poi-emergency-policebox-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiEnterVenueSolid_16px"] = "poi-enter-venue_solid_16px";
  HdsIconlibrary_16px2["PoiEntranceSolid_16px"] = "poi-entrance_solid_16px";
  HdsIconlibrary_16px2["PoiEscalatorSolid_16px"] = "poi-escalator_solid_16px";
  HdsIconlibrary_16px2["PoiExhibitionCenterSolid_16px"] = "poi-exhibition-center_solid_16px";
  HdsIconlibrary_16px2["PoiFacilitiesSolid_16px"] = "poi-facilities_solid_16px";
  HdsIconlibrary_16px2["PoiFacilitiesCityhallJpnSolid_16px"] = "poi-facilities-cityhall-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiFacilitiesEducationHigherJpnSolid_16px"] = "poi-facilities-education-higher-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiFacilitiesEducationSchoolJpnSolid_16px"] = "poi-facilities-education-school-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiFacilitiesOfficePrefecturalJpnSolid_16px"] = "poi-facilities-office-prefectural-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiFacilitiesOfficeTownvillageJpnSolid_16px"] = "poi-facilities-office-townvillage-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiFacilitiesOfficeWardJpnSolid_16px"] = "poi-facilities-office-ward-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiFastFoodSolid_16px"] = "poi-fast-food_solid_16px";
  HdsIconlibrary_16px2["PoiFerrySolid_16px"] = "poi-ferry_solid_16px";
  HdsIconlibrary_16px2["PoiFireDepartmentSolid_16px"] = "poi-fire-department_solid_16px";
  HdsIconlibrary_16px2["PoiFirstAidCrescentSolid_16px"] = "poi-first-aid-crescent_solid_16px";
  HdsIconlibrary_16px2["PoiFirstAidCrossSolid_16px"] = "poi-first-aid-cross_solid_16px";
  HdsIconlibrary_16px2["PoiFitnessSolid_16px"] = "poi-fitness_solid_16px";
  HdsIconlibrary_16px2["PoiFrontierCrossingSolid_16px"] = "poi-frontier-crossing_solid_16px";
  HdsIconlibrary_16px2["PoiGameArcadeSolid_16px"] = "poi-game-arcade_solid_16px";
  HdsIconlibrary_16px2["PoiGolfCourseSolid_16px"] = "poi-golf-course_solid_16px";
  HdsIconlibrary_16px2["PoiGrocerySolid_16px"] = "poi-grocery_solid_16px";
  HdsIconlibrary_16px2["PoiGurdwaraSolid_16px"] = "poi-gurdwara_solid_16px";
  HdsIconlibrary_16px2["PoiHarborSolid_16px"] = "poi-harbor_solid_16px";
  HdsIconlibrary_16px2["PoiHospitalCrescentSolid_16px"] = "poi-hospital-crescent_solid_16px";
  HdsIconlibrary_16px2["PoiHospitalCrossSolid_16px"] = "poi-hospital-cross_solid_16px";
  HdsIconlibrary_16px2["PoiHotSpringJpnSolid_16px"] = "poi-hot-spring-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiHotelSolid_16px"] = "poi-hotel_solid_16px";
  HdsIconlibrary_16px2["PoiInclinedSolid_16px"] = "poi-inclined_solid_16px";
  HdsIconlibrary_16px2["PoiIndustrialComplexSolid_16px"] = "poi-industrial-complex_solid_16px";
  HdsIconlibrary_16px2["PoiKaraokeSolid_16px"] = "poi-karaoke_solid_16px";
  HdsIconlibrary_16px2["PoiLaundrySolid_16px"] = "poi-laundry_solid_16px";
  HdsIconlibrary_16px2["PoiLibrarySolid_16px"] = "poi-library_solid_16px";
  HdsIconlibrary_16px2["PoiLiquorSolid_16px"] = "poi-liquor_solid_16px";
  HdsIconlibrary_16px2["PoiLoadingDockSolid_16px"] = "poi-loading-dock_solid_16px";
  HdsIconlibrary_16px2["PoiLoadingZoneSolid_16px"] = "poi-loading-zone_solid_16px";
  HdsIconlibrary_16px2["PoiMetroSolid_16px"] = "poi-metro_solid_16px";
  HdsIconlibrary_16px2["PoiMonorailSolid_16px"] = "poi-monorail_solid_16px";
  HdsIconlibrary_16px2["PoiMosqueSolid_16px"] = "poi-mosque_solid_16px";
  HdsIconlibrary_16px2["PoiMountainSolid_16px"] = "poi-mountain_solid_16px";
  HdsIconlibrary_16px2["PoiMountainPassSolid_16px"] = "poi-mountain-pass_solid_16px";
  HdsIconlibrary_16px2["PoiMuseumSolid_16px"] = "poi-museum_solid_16px";
  HdsIconlibrary_16px2["PoiMuseumArtSolid_16px"] = "poi-museum-art_solid_16px";
  HdsIconlibrary_16px2["PoiNatureSolid_16px"] = "poi-nature_solid_16px";
  HdsIconlibrary_16px2["PoiNatureOverlookSolid_16px"] = "poi-nature-overlook_solid_16px";
  HdsIconlibrary_16px2["PoiNightClubSolid_16px"] = "poi-night-club_solid_16px";
  HdsIconlibrary_16px2["PoiPagodaSolid_16px"] = "poi-pagoda_solid_16px";
  HdsIconlibrary_16px2["PoiParkAndRideSolid_16px"] = "poi-park-and-ride_solid_16px";
  HdsIconlibrary_16px2["PoiParkingSolid_16px"] = "poi-parking_solid_16px";
  HdsIconlibrary_16px2["PoiParkingBicycleSolid_16px"] = "poi-parking-bicycle_solid_16px";
  HdsIconlibrary_16px2["PoiParkingGarageSolid_16px"] = "poi-parking-garage_solid_16px";
  HdsIconlibrary_16px2["PoiParkingMotorcycleSolid_16px"] = "poi-parking-motorcycle_solid_16px";
  HdsIconlibrary_16px2["PoiPetrolStationSolid_16px"] = "poi-petrol-station_solid_16px";
  HdsIconlibrary_16px2["PoiPharmacyCrescentSolid_16px"] = "poi-pharmacy-crescent_solid_16px";
  HdsIconlibrary_16px2["PoiPharmacyCrossSolid_16px"] = "poi-pharmacy-cross_solid_16px";
  HdsIconlibrary_16px2["PoiPicnicAreaSolid_16px"] = "poi-picnic-area_solid_16px";
  HdsIconlibrary_16px2["PoiPlaygroundSolid_16px"] = "poi-playground_solid_16px";
  HdsIconlibrary_16px2["PoiPointSolid_16px"] = "poi-point_solid_16px";
  HdsIconlibrary_16px2["PoiPoliceSolid_16px"] = "poi-police_solid_16px";
  HdsIconlibrary_16px2["PoiPoolSolid_16px"] = "poi-pool_solid_16px";
  HdsIconlibrary_16px2["PoiPostSolid_16px"] = "poi-post_solid_16px";
  HdsIconlibrary_16px2["PoiPubSolid_16px"] = "poi-pub_solid_16px";
  HdsIconlibrary_16px2["PoiPublicToiletSolid_16px"] = "poi-public-toilet_solid_16px";
  HdsIconlibrary_16px2["PoiPublicTransportSolid_16px"] = "poi-public-transport_solid_16px";
  HdsIconlibrary_16px2["PoiRailLightSolid_16px"] = "poi-rail-light_solid_16px";
  HdsIconlibrary_16px2["PoiRailRegionalSolid_16px"] = "poi-rail-regional_solid_16px";
  HdsIconlibrary_16px2["PoiRailYardSolid_16px"] = "poi-rail-yard_solid_16px";
  HdsIconlibrary_16px2["PoiRampSolid_16px"] = "poi-ramp_solid_16px";
  HdsIconlibrary_16px2["PoiReligiousPlaceSolid_16px"] = "poi-religious-place_solid_16px";
  HdsIconlibrary_16px2["PoiReligiousShintoJpnSolid_16px"] = "poi-religious-shinto-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiReligiousTempleBuddhistJpnSolid_16px"] = "poi-religious-temple-buddhist-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiRestaurantSolid_16px"] = "poi-restaurant_solid_16px";
  HdsIconlibrary_16px2["PoiSeaportHarborSolid_16px"] = "poi-seaport-harbor_solid_16px";
  HdsIconlibrary_16px2["PoiShoesSolid_16px"] = "poi-shoes_solid_16px";
  HdsIconlibrary_16px2["PoiShoppingSolid_16px"] = "poi-shopping_solid_16px";
  HdsIconlibrary_16px2["PoiShrineGenericSolid_16px"] = "poi-shrine-generic_solid_16px";
  HdsIconlibrary_16px2["PoiSkiRunSolid_16px"] = "poi-ski-run_solid_16px";
  HdsIconlibrary_16px2["PoiSkywalkSolid_16px"] = "poi-skywalk_solid_16px";
  HdsIconlibrary_16px2["PoiStadiumSolid_16px"] = "poi-stadium_solid_16px";
  HdsIconlibrary_16px2["PoiStairsSolid_16px"] = "poi-stairs_solid_16px";
  HdsIconlibrary_16px2["PoiSweetsSolid_16px"] = "poi-sweets_solid_16px";
  HdsIconlibrary_16px2["PoiSwimmingSolid_16px"] = "poi-swimming_solid_16px";
  HdsIconlibrary_16px2["PoiSynagogueOutline_16px"] = "poi-synagogue_outline_16px";
  HdsIconlibrary_16px2["PoiSynagogueSolid_16px"] = "poi-synagogue_solid_16px";
  HdsIconlibrary_16px2["PoiTaxiSolid_16px"] = "poi-taxi_solid_16px";
  HdsIconlibrary_16px2["PoiTheaterSolid_16px"] = "poi-theater_solid_16px";
  HdsIconlibrary_16px2["PoiTollBoothSolid_16px"] = "poi-toll-booth_solid_16px";
  HdsIconlibrary_16px2["PoiTouristInformationSolid_16px"] = "poi-tourist-information_solid_16px";
  HdsIconlibrary_16px2["PoiTrainSolid_16px"] = "poi-train_solid_16px";
  HdsIconlibrary_16px2["PoiTransportShinkansenJpnSolid_16px"] = "poi-transport-shinkansen-jpn_solid_16px";
  HdsIconlibrary_16px2["PoiTravelAgentTicketingSolid_16px"] = "poi-travel-agent-ticketing_solid_16px";
  HdsIconlibrary_16px2["PoiTruckDealershipSolid_16px"] = "poi-truck-dealership_solid_16px";
  HdsIconlibrary_16px2["PoiTruckParkingSolid_16px"] = "poi-truck-parking_solid_16px";
  HdsIconlibrary_16px2["PoiTruckRepairSolid_16px"] = "poi-truck-repair_solid_16px";
  HdsIconlibrary_16px2["PoiTruckStopPlazaSolid_16px"] = "poi-truck-stop-plaza_solid_16px";
  HdsIconlibrary_16px2["PoiTruckWashSolid_16px"] = "poi-truck-wash_solid_16px";
  HdsIconlibrary_16px2["PoiTunnelSolid_16px"] = "poi-tunnel_solid_16px";
  HdsIconlibrary_16px2["PoiWaterfallSolid_16px"] = "poi-waterfall_solid_16px";
  HdsIconlibrary_16px2["PoiWeighStationSolid_16px"] = "poi-weigh-station_solid_16px";
  HdsIconlibrary_16px2["PoiZooSolid_16px"] = "poi-zoo_solid_16px";
  HdsIconlibrary_16px2["SocialCameraSolid_16px"] = "social-camera_solid_16px";
  HdsIconlibrary_16px2["SocialChatOutline_16px"] = "social-chat_outline_16px";
  HdsIconlibrary_16px2["SocialChatSolid_16px"] = "social-chat_solid_16px";
  HdsIconlibrary_16px2["SocialEditImageSolid_16px"] = "social-edit-image_solid_16px";
  HdsIconlibrary_16px2["SocialHeartSolid_16px"] = "social-heart_solid_16px";
  HdsIconlibrary_16px2["SocialLiveSolid_16px"] = "social-live_solid_16px";
  HdsIconlibrary_16px2["SocialMailSolid_16px"] = "social-mail_solid_16px";
  HdsIconlibrary_16px2["SocialMaskingSolid_16px"] = "social-masking_solid_16px";
  HdsIconlibrary_16px2["SocialStarSolid_16px"] = "social-star_solid_16px";
  HdsIconlibrary_16px2["SocialStarEmptySolid_16px"] = "social-star-empty_solid_16px";
  HdsIconlibrary_16px2["SocialTagHeartedSolid_16px"] = "social-tag-hearted_solid_16px";
  HdsIconlibrary_16px2["SocialTelephoneSolid_16px"] = "social-telephone_solid_16px";
  HdsIconlibrary_16px2["SocialThumbsDownSolid_16px"] = "social-thumbs-down_solid_16px";
  HdsIconlibrary_16px2["SocialThumbsUpSolid_16px"] = "social-thumbs-up_solid_16px";
  HdsIconlibrary_16px2["StatsActivitySolid_16px"] = "stats-activity_solid_16px";
  HdsIconlibrary_16px2["StatsBarChartSolid_16px"] = "stats-bar-chart_solid_16px";
  HdsIconlibrary_16px2["StatsDashboardSolid_16px"] = "stats-dashboard_solid_16px";
  HdsIconlibrary_16px2["StatsEastSolid_16px"] = "stats-east_solid_16px";
  HdsIconlibrary_16px2["StatsMarkerSolid_16px"] = "stats-marker_solid_16px";
  HdsIconlibrary_16px2["StatsNorthEastSolid_16px"] = "stats-north-east_solid_16px";
  HdsIconlibrary_16px2["StatsNorthWestSolid_16px"] = "stats-north-west_solid_16px";
  HdsIconlibrary_16px2["StatsPieChartSolid_16px"] = "stats-pie-chart_solid_16px";
  HdsIconlibrary_16px2["StatsSouthEastSolid_16px"] = "stats-south-east_solid_16px";
  HdsIconlibrary_16px2["StatsSouthWestSolid_16px"] = "stats-south-west_solid_16px";
  HdsIconlibrary_16px2["StatsStatisticsSolid_16px"] = "stats-statistics_solid_16px";
  HdsIconlibrary_16px2["StatsValueSolid_16px"] = "stats-value_solid_16px";
  HdsIconlibrary_16px2["StatsValueDecreaseSolid_16px"] = "stats-value-decrease_solid_16px";
  HdsIconlibrary_16px2["StatsValueDecreaseHighSolid_16px"] = "stats-value-decrease-high_solid_16px";
  HdsIconlibrary_16px2["StatsValueIncreaseSolid_16px"] = "stats-value-increase_solid_16px";
  HdsIconlibrary_16px2["StatsValueIncreaseHighSolid_16px"] = "stats-value-increase-high_solid_16px";
  HdsIconlibrary_16px2["StatsWestSolid_16px"] = "stats-west_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogos_360Solid_16px"] = "third-party-logos-360_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosAlexaSolid_16px"] = "third-party-logos-alexa_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosAmexSolid_16px"] = "third-party-logos-amex_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosDinersOutline_16px"] = "third-party-logos-diners_outline_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosDinersSolid_16px"] = "third-party-logos-diners_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosDiscoverOutline_16px"] = "third-party-logos-discover_outline_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosDiscoverSolid_16px"] = "third-party-logos-discover_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosFacebookSolid_16px"] = "third-party-logos-facebook_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosFigmaSolid_16px"] = "third-party-logos-figma_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosGithubSolid_16px"] = "third-party-logos-github_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosGitlabSolid_16px"] = "third-party-logos-gitlab_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosInstagramSolid_16px"] = "third-party-logos-instagram_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosLinkedinSolid_16px"] = "third-party-logos-linkedin_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosMastercardOutline_16px"] = "third-party-logos-mastercard_outline_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosMastercardSolid_16px"] = "third-party-logos-mastercard_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosRedditSolid_16px"] = "third-party-logos-reddit_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosStorybookSolid_16px"] = "third-party-logos-storybook_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosTwitterSolid_16px"] = "third-party-logos-twitter_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosVisaOutline_16px"] = "third-party-logos-visa_outline_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosVisaSolid_16px"] = "third-party-logos-visa_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosWhat_3WordsOutline_16px"] = "third-party-logos-what-3-words_outline_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosWhat_3WordsSolid_16px"] = "third-party-logos-what-3-words_solid_16px";
  HdsIconlibrary_16px2["ThirdPartyLogosYoutubeSolid_16px"] = "third-party-logos-youtube_solid_16px";
  HdsIconlibrary_16px2["ToolsAddCamSolid_16px"] = "tools-add-cam_solid_16px";
  HdsIconlibrary_16px2["ToolsAddMapMarkerOutline_16px"] = "tools-add-map-marker_outline_16px";
  HdsIconlibrary_16px2["ToolsAddMapMarkerSolid_16px"] = "tools-add-map-marker_solid_16px";
  HdsIconlibrary_16px2["ToolsAddPlaceSolid_16px"] = "tools-add-place_solid_16px";
  HdsIconlibrary_16px2["ToolsAddRoadSolid_16px"] = "tools-add-road_solid_16px";
  HdsIconlibrary_16px2["ToolsAddRoadSignSolid_16px"] = "tools-add-road-sign_solid_16px";
  HdsIconlibrary_16px2["ToolsAddShapeSolid_16px"] = "tools-add-shape_solid_16px";
  HdsIconlibrary_16px2["ToolsBrushSelectionSolid_16px"] = "tools-brush-selection_solid_16px";
  HdsIconlibrary_16px2["ToolsCenterLineSolid_16px"] = "tools-center-line_solid_16px";
  HdsIconlibrary_16px2["ToolsColorPaletteSolid_16px"] = "tools-color-palette_solid_16px";
  HdsIconlibrary_16px2["ToolsCompassBSolid_16px"] = "tools-compass-b_solid_16px";
  HdsIconlibrary_16px2["ToolsConnectorSolid_16px"] = "tools-connector_solid_16px";
  HdsIconlibrary_16px2["ToolsCursorArrowSolid_16px"] = "tools-cursor-arrow_solid_16px";
  HdsIconlibrary_16px2["ToolsCursorPointerSolid_16px"] = "tools-cursor-pointer_solid_16px";
  HdsIconlibrary_16px2["ToolsCursorSelectorSolid_16px"] = "tools-cursor-selector_solid_16px";
  HdsIconlibrary_16px2["ToolsDisconnectedSolid_16px"] = "tools-disconnected_solid_16px";
  HdsIconlibrary_16px2["ToolsEditCurvesSolid_16px"] = "tools-edit-curves_solid_16px";
  HdsIconlibrary_16px2["ToolsFinetuneSolid_16px"] = "tools-finetune_solid_16px";
  HdsIconlibrary_16px2["ToolsFontSolid_16px"] = "tools-font_solid_16px";
  HdsIconlibrary_16px2["ToolsGuidesSolid_16px"] = "tools-guides_solid_16px";
  HdsIconlibrary_16px2["ToolsJoinBevelSolid_16px"] = "tools-join-bevel_solid_16px";
  HdsIconlibrary_16px2["ToolsJoinMiterSolid_16px"] = "tools-join-miter_solid_16px";
  HdsIconlibrary_16px2["ToolsJoinRoundSolid_16px"] = "tools-join-round_solid_16px";
  HdsIconlibrary_16px2["ToolsLineDashedSolid_16px"] = "tools-line-dashed_solid_16px";
  HdsIconlibrary_16px2["ToolsLineSolidSolid_16px"] = "tools-line-solid_solid_16px";
  HdsIconlibrary_16px2["ToolsLineVariousSolid_16px"] = "tools-line-various_solid_16px";
  HdsIconlibrary_16px2["ToolsMapPlannerSolid_16px"] = "tools-map-planner_solid_16px";
  HdsIconlibrary_16px2["ToolsMergeSolid_16px"] = "tools-merge_solid_16px";
  HdsIconlibrary_16px2["ToolsNumbersSolid_16px"] = "tools-numbers_solid_16px";
  HdsIconlibrary_16px2["ToolsOutlineSolid_16px"] = "tools-outline_solid_16px";
  HdsIconlibrary_16px2["ToolsOutlinePlusSolid_16px"] = "tools-outline-plus_solid_16px";
  HdsIconlibrary_16px2["ToolsPathSolid_16px"] = "tools-path_solid_16px";
  HdsIconlibrary_16px2["ToolsPickerSolid_16px"] = "tools-picker_solid_16px";
  HdsIconlibrary_16px2["ToolsPolygonSolid_16px"] = "tools-polygon_solid_16px";
  HdsIconlibrary_16px2["ToolsPolylineSolid_16px"] = "tools-polyline_solid_16px";
  HdsIconlibrary_16px2["ToolsRoadSolid_16px"] = "tools-road_solid_16px";
  HdsIconlibrary_16px2["ToolsSelectorFreeformSolid_16px"] = "tools-selector-freeform_solid_16px";
  HdsIconlibrary_16px2["ToolsSelectorPointerSolid_16px"] = "tools-selector-pointer_solid_16px";
  HdsIconlibrary_16px2["ToolsSelectorPolygonSolid_16px"] = "tools-selector-polygon_solid_16px";
  HdsIconlibrary_16px2["ToolsShapeSolid_16px"] = "tools-shape_solid_16px";
  HdsIconlibrary_16px2["ToolsSkipPointSolid_16px"] = "tools-skip-point_solid_16px";
  HdsIconlibrary_16px2["ToolsSplitObjectSolid_16px"] = "tools-split-object_solid_16px";
  HdsIconlibrary_16px2["ToolsTextSolid_16px"] = "tools-text_solid_16px";
  HdsIconlibrary_16px2["ToolsTiePointSolid_16px"] = "tools-tie-point_solid_16px";
  HdsIconlibrary_16px2["ToolsTunerSolid_16px"] = "tools-tuner_solid_16px";
  HdsIconlibrary_16px2["ToolsVectorPointSolid_16px"] = "tools-vector-point_solid_16px";
  HdsIconlibrary_16px2["ToolsWrenchSolid_16px"] = "tools-wrench_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingAccidentCarSolid_16px"] = "travel-transport-tracking-accident-car_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingAirportSolid_16px"] = "travel-transport-tracking-airport_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingAmbulanceOutline_16px"] = "travel-transport-tracking-ambulance_outline_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingAmbulanceSolid_16px"] = "travel-transport-tracking-ambulance_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingArrivalAirportSolid_16px"] = "travel-transport-tracking-arrival-airport_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingAttentionSolid_16px"] = "travel-transport-tracking-attention_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingAutoCaravanSolid_16px"] = "travel-transport-tracking-auto-caravan_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingAutoTrailerSolid_16px"] = "travel-transport-tracking-auto-trailer_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingBeamLightSolid_16px"] = "travel-transport-tracking-beam-light_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingBicycleSolid_16px"] = "travel-transport-tracking-bicycle_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingBicyclePaceSolid_16px"] = "travel-transport-tracking-bicycle-pace_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingBoatTrailerSolid_16px"] = "travel-transport-tracking-boat-trailer_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingBumpsSolid_16px"] = "travel-transport-tracking-bumps_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingBusSolid_16px"] = "travel-transport-tracking-bus_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingBusRapidSolid_16px"] = "travel-transport-tracking-bus-rapid_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingCableWaySolid_16px"] = "travel-transport-tracking-cable-way_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingCarFuelAltSolid_16px"] = "travel-transport-tracking-car-fuel-alt_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingCarRentalSolid_16px"] = "travel-transport-tracking-car-rental_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingCarRigSolid_16px"] = "travel-transport-tracking-car-rig_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingCarWifiOffSolid_16px"] = "travel-transport-tracking-car-wifi-off_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingCarWifiOnSolid_16px"] = "travel-transport-tracking-car-wifi-on_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingCaravanSolid_16px"] = "travel-transport-tracking-caravan_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingChargingSolid_16px"] = "travel-transport-tracking-charging_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingClosureSolid_16px"] = "travel-transport-tracking-closure_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingCoachSolid_16px"] = "travel-transport-tracking-coach_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingDeliveryVanOutline_16px"] = "travel-transport-tracking-delivery-van_outline_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingDeliveryVanSolid_16px"] = "travel-transport-tracking-delivery-van_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingDepartureAirportSolid_16px"] = "travel-transport-tracking-departure-airport_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingDestinationSolid_16px"] = "travel-transport-tracking-destination_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingDiagonalSolid_16px"] = "travel-transport-tracking-diagonal_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingDirectionsSolid_16px"] = "travel-transport-tracking-directions_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingDisabledVehicleSolid_16px"] = "travel-transport-tracking-disabled-vehicle_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingDrivingSolid_16px"] = "travel-transport-tracking-driving_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingDrivingOffSolid_16px"] = "travel-transport-tracking-driving-off_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingDynamicRoutingSolid_16px"] = "travel-transport-tracking-dynamic-routing_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingEvRangeSolid_16px"] = "travel-transport-tracking-ev-range_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingFerrySolid_16px"] = "travel-transport-tracking-ferry_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingFerryOffSolid_16px"] = "travel-transport-tracking-ferry-off_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingFlightMonitorSolid_16px"] = "travel-transport-tracking-flight-monitor_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingFullContainerLoadSolid_16px"] = "travel-transport-tracking-full-container-load_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingFullTruckLoadSolid_16px"] = "travel-transport-tracking-full-truck-load_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingGeofenceOutline_16px"] = "travel-transport-tracking-geofence_outline_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingGeofenceSolid_16px"] = "travel-transport-tracking-geofence_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingHandsfreeDrivingSolid_16px"] = "travel-transport-tracking-handsfree-driving_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingHeadLightSolid_16px"] = "travel-transport-tracking-head-light_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingHeavyMachinerySolid_16px"] = "travel-transport-tracking-heavy-machinery_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingHeightSolid_16px"] = "travel-transport-tracking-height_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingHighwaysSolid_16px"] = "travel-transport-tracking-highways_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingInclinedSolid_16px"] = "travel-transport-tracking-inclined_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingJourneySolid_16px"] = "travel-transport-tracking-journey_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingLaneRestrictionSolid_16px"] = "travel-transport-tracking-lane-restriction_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingLessContainerLoadSolid_16px"] = "travel-transport-tracking-less-container-load_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingLessTruckLoadSolid_16px"] = "travel-transport-tracking-less-truck-load_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingLightRailSolid_16px"] = "travel-transport-tracking-light-rail_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingLightrailSolid_16px"] = "travel-transport-tracking-lightrail_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingLocationTrackingOutline_16px"] = "travel-transport-tracking-location-tracking_outline_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingLocationTrackingSolid_16px"] = "travel-transport-tracking-location-tracking_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingMassTransitSolid_16px"] = "travel-transport-tracking-mass-transit_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingMaxHeightSolid_16px"] = "travel-transport-tracking-max-height_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingMaxWidthSolid_16px"] = "travel-transport-tracking-max-width_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingMetroSolid_16px"] = "travel-transport-tracking-metro_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingMonorailSolid_16px"] = "travel-transport-tracking-monorail_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingMotorcycleSolid_16px"] = "travel-transport-tracking-motorcycle_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingMotorhomeSolid_16px"] = "travel-transport-tracking-motorhome_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingMotorscooterSolid_16px"] = "travel-transport-tracking-motorscooter_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingMultimodalSolid_16px"] = "travel-transport-tracking-multimodal_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingNavigationSolid_16px"] = "travel-transport-tracking-navigation_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingNoContainerLoadSolid_16px"] = "travel-transport-tracking-no-container-load_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingNoTruckLoadSolid_16px"] = "travel-transport-tracking-no-truck-load_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlannedTourSolid_16px"] = "travel-transport-tracking-planned-tour_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeASolid_16px"] = "travel-transport-tracking-plug-type-a_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeBNema_14_50Solid_16px"] = "travel-transport-tracking-plug-type-b-nema-14-50_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeBNema_5_15Solid_16px"] = "travel-transport-tracking-plug-type-b-nema-5-15_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeCSolid_16px"] = "travel-transport-tracking-plug-type-c_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeChademoSolid_16px"] = "travel-transport-tracking-plug-type-chademo_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeESolid_16px"] = "travel-transport-tracking-plug-type-e_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeFSolid_16px"] = "travel-transport-tracking-plug-type-f_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeGSolid_16px"] = "travel-transport-tracking-plug-type-g_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeISolid_16px"] = "travel-transport-tracking-plug-type-I_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeIndustrialSolid_16px"] = "travel-transport-tracking-plug-type-industrial_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeJSolid_16px"] = "travel-transport-tracking-plug-type-j_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeJ1772Solid_16px"] = "travel-transport-tracking-plug-type-j1772_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeJ1772ComboSolid_16px"] = "travel-transport-tracking-plug-type-j1772-combo_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeMarechalSolid_16px"] = "travel-transport-tracking-plug-type-marechal_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeMennekesSolid_16px"] = "travel-transport-tracking-plug-type-mennekes_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeMennekesComboSolid_16px"] = "travel-transport-tracking-plug-type-mennekes-combo_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingPlugTypeTeslaSolid_16px"] = "travel-transport-tracking-plug-type-tesla_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRailHighspeedSolid_16px"] = "travel-transport-tracking-rail-highspeed_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRailHighspeedOffSolid_16px"] = "travel-transport-tracking-rail-highspeed-off_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRailIntercitySolid_16px"] = "travel-transport-tracking-rail-intercity_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRailLocalSolid_16px"] = "travel-transport-tracking-rail-local_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRailRegionalSolid_16px"] = "travel-transport-tracking-rail-regional_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRedLightCameraSolid_16px"] = "travel-transport-tracking-red-light-camera_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRideHailingSolid_16px"] = "travel-transport-tracking-ride-hailing_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRideshareSolid_16px"] = "travel-transport-tracking-rideshare_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRoadClosureSolid_16px"] = "travel-transport-tracking-road-closure_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRoadHazardSolid_16px"] = "travel-transport-tracking-road-hazard_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRoadTollsSolid_16px"] = "travel-transport-tracking-road-tolls_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRoadTollsOffSolid_16px"] = "travel-transport-tracking-road-tolls-off_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRoadUnpavedSolid_16px"] = "travel-transport-tracking-road-unpaved_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRoadUnpavedBicycleSolid_16px"] = "travel-transport-tracking-road-unpaved-bicycle_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRoadUnpavedMotorcycleSolid_16px"] = "travel-transport-tracking-road-unpaved-motorcycle_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRoadUnpavedOffSolid_16px"] = "travel-transport-tracking-road-unpaved-off_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRoadsideJpSolid_16px"] = "travel-transport-tracking-Roadside-jp_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRoadworksSolid_16px"] = "travel-transport-tracking-roadworks_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRouteSolid_16px"] = "travel-transport-tracking-route_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingRunnerPaceSolid_16px"] = "travel-transport-tracking-runner-pace_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingSchoolZoneUsSolid_16px"] = "travel-transport-tracking-school-zone-us_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingScooterSolid_16px"] = "travel-transport-tracking-scooter_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingSecurityCameraSolid_16px"] = "travel-transport-tracking-security-camera_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingSemiTrailerSolid_16px"] = "travel-transport-tracking-semi-trailer_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingServiceDeskSolid_16px"] = "travel-transport-tracking-service-desk_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingShipmentSolid_16px"] = "travel-transport-tracking-shipment_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingSpeedCameraSolid_16px"] = "travel-transport-tracking-speed-camera_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingSpeedLimitSolid_16px"] = "travel-transport-tracking-speed-limit_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingSpeedZoneOutline_16px"] = "travel-transport-tracking-speed-zone_outline_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingSpeedalertSolid_16px"] = "travel-transport-tracking-speedalert_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingSpeedalertOffSolid_16px"] = "travel-transport-tracking-speedalert-off_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTaxiSolid_16px"] = "travel-transport-tracking-taxi_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTaxiOffSolid_16px"] = "travel-transport-tracking-taxi-off_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTicketSolid_16px"] = "travel-transport-tracking-ticket_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTourSolid_16px"] = "travel-transport-tracking-tour_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTrackerSolid_16px"] = "travel-transport-tracking-tracker_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTrafficSolid_16px"] = "travel-transport-tracking-traffic_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTrafficLightsOutline_16px"] = "travel-transport-tracking-traffic-lights_outline_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTrafficLightsSolid_16px"] = "travel-transport-tracking-traffic-lights_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTrafficOffSolid_16px"] = "travel-transport-tracking-traffic-off_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTrailerSolid_16px"] = "travel-transport-tracking-trailer_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTrainSolid_16px"] = "travel-transport-tracking-train_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTramSolid_16px"] = "travel-transport-tracking-tram_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTruckSolid_16px"] = "travel-transport-tracking-truck_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingTruckAxleSolid_16px"] = "travel-transport-tracking-truck-axle_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingUnpavedRoadPedestrianSolid_16px"] = "travel-transport-tracking-unpaved-road-pedestrian_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingUnpavedRoadTruckSolid_16px"] = "travel-transport-tracking-unpaved-road-truck_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingWaitPedestrianSolid_16px"] = "travel-transport-tracking-wait-pedestrian_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingWalkingSolid_16px"] = "travel-transport-tracking-walking_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingWalkingOffSolid_16px"] = "travel-transport-tracking-walking-off_solid_16px";
  HdsIconlibrary_16px2["TravelTransportTrackingWidthSolid_16px"] = "travel-transport-tracking-width_solid_16px";
  HdsIconlibrary_16px2["WeatherClearNightSolid_16px"] = "weather-clear-night_solid_16px";
  HdsIconlibrary_16px2["WeatherCloudyDaySolid_16px"] = "weather-cloudy-day_solid_16px";
  HdsIconlibrary_16px2["WeatherCloudyNightSolid_16px"] = "weather-cloudy-night_solid_16px";
  HdsIconlibrary_16px2["WeatherFloodSolid_16px"] = "weather-flood_solid_16px";
  HdsIconlibrary_16px2["WeatherFogSolid_16px"] = "weather-fog_solid_16px";
  HdsIconlibrary_16px2["WeatherHurricaneSolid_16px"] = "weather-hurricane_solid_16px";
  HdsIconlibrary_16px2["WeatherOvercastSolid_16px"] = "weather-overcast_solid_16px";
  HdsIconlibrary_16px2["WeatherRainSolid_16px"] = "weather-rain_solid_16px";
  HdsIconlibrary_16px2["WeatherRainFreezingSolid_16px"] = "weather-rain-freezing_solid_16px";
  HdsIconlibrary_16px2["WeatherRainSnowSolid_16px"] = "weather-rain-snow_solid_16px";
  HdsIconlibrary_16px2["WeatherShowerDaySolid_16px"] = "weather-shower-day_solid_16px";
  HdsIconlibrary_16px2["WeatherShowerNightSolid_16px"] = "weather-shower-night_solid_16px";
  HdsIconlibrary_16px2["WeatherSmogSolid_16px"] = "weather-smog_solid_16px";
  HdsIconlibrary_16px2["WeatherSnowfallSolid_16px"] = "weather-snowfall_solid_16px";
  HdsIconlibrary_16px2["WeatherStormSolid_16px"] = "weather-storm_solid_16px";
  HdsIconlibrary_16px2["WeatherStormyDaySolid_16px"] = "weather-stormy-day_solid_16px";
  HdsIconlibrary_16px2["WeatherStormyNightSolid_16px"] = "weather-stormy-night_solid_16px";
  HdsIconlibrary_16px2["WeatherWeatherClearDaySolid_16px"] = "weather-weather-clear-day_solid_16px";
  HdsIconlibrary_16px2["WeatherWindySolid_16px"] = "weather-windy_solid_16px";
})(HdsIconlibrary_16px = HdsIconlibrary_16px || (HdsIconlibrary_16px = {}));
var HDS_ICONLIBRARY_16PX_CODEPOINTS = {
  [HdsIconlibrary_16px.CoreUiAddSolid_16px]: "61697",
  [HdsIconlibrary_16px.CoreUiAddUserOutline_16px]: "61698",
  [HdsIconlibrary_16px.CoreUiAddUserSolid_16px]: "61699",
  [HdsIconlibrary_16px.CoreUiAlertSolid_16px]: "61700",
  [HdsIconlibrary_16px.CoreUiArrowDownSolid_16px]: "61701",
  [HdsIconlibrary_16px.CoreUiArrowDownLeftSolid_16px]: "61702",
  [HdsIconlibrary_16px.CoreUiArrowDownRightSolid_16px]: "61703",
  [HdsIconlibrary_16px.CoreUiArrowLeftSolid_16px]: "61704",
  [HdsIconlibrary_16px.CoreUiArrowRightSolid_16px]: "61705",
  [HdsIconlibrary_16px.CoreUiArrowUpSolid_16px]: "61706",
  [HdsIconlibrary_16px.CoreUiArrowUpLeftSolid_16px]: "61707",
  [HdsIconlibrary_16px.CoreUiArrowUpRightSolid_16px]: "61708",
  [HdsIconlibrary_16px.CoreUiAttentionSolid_16px]: "61709",
  [HdsIconlibrary_16px.CoreUiBatteryChargingSolid_16px]: "61710",
  [HdsIconlibrary_16px.CoreUiBatteryEmptySolid_16px]: "61711",
  [HdsIconlibrary_16px.CoreUiBatteryFullSolid_16px]: "61712",
  [HdsIconlibrary_16px.CoreUiBatteryHalfSolid_16px]: "61713",
  [HdsIconlibrary_16px.CoreUiBatteryLowSolid_16px]: "61714",
  [HdsIconlibrary_16px.CoreUiBluetoothSolid_16px]: "61715",
  [HdsIconlibrary_16px.CoreUiBluetoothOffSolid_16px]: "61716",
  [HdsIconlibrary_16px.CoreUiBookmarkSolid_16px]: "61717",
  [HdsIconlibrary_16px.CoreUiBookmarkAddSolid_16px]: "61718",
  [HdsIconlibrary_16px.CoreUiCheckmarkSolid_16px]: "61719",
  [HdsIconlibrary_16px.CoreUiChevronDownSolid_16px]: "61720",
  [HdsIconlibrary_16px.CoreUiChevronLeftSolid_16px]: "61721",
  [HdsIconlibrary_16px.CoreUiChevronLeftDoubleSolid_16px]: "61722",
  [HdsIconlibrary_16px.CoreUiChevronRightSolid_16px]: "61723",
  [HdsIconlibrary_16px.CoreUiChevronRightDoubleSolid_16px]: "61724",
  [HdsIconlibrary_16px.CoreUiChevronUpSolid_16px]: "61725",
  [HdsIconlibrary_16px.CoreUiChevronUpDownSolid_16px]: "61726",
  [HdsIconlibrary_16px.CoreUiClearSolid_16px]: "61727",
  [HdsIconlibrary_16px.CoreUiCollapseSolid_16px]: "61728",
  [HdsIconlibrary_16px.CoreUiCommentSolid_16px]: "61729",
  [HdsIconlibrary_16px.CoreUiConfirmSolid_16px]: "61730",
  [HdsIconlibrary_16px.CoreUiCrossSolid_16px]: "61731",
  [HdsIconlibrary_16px.CoreUiDeleteSolid_16px]: "61732",
  [HdsIconlibrary_16px.CoreUiDetailsSolid_16px]: "61733",
  [HdsIconlibrary_16px.CoreUiDragListSolid_16px]: "61734",
  [HdsIconlibrary_16px.CoreUiEditSolid_16px]: "61735",
  [HdsIconlibrary_16px.CoreUiEditedSolid_16px]: "61736",
  [HdsIconlibrary_16px.CoreUiExpandSolid_16px]: "61737",
  [HdsIconlibrary_16px.CoreUiExternalLinkSolid_16px]: "61738",
  [HdsIconlibrary_16px.CoreUiFallbackItemSolid_16px]: "61739",
  [HdsIconlibrary_16px.CoreUiFolderClosedSolid_16px]: "61740",
  [HdsIconlibrary_16px.CoreUiFolderOpenSolid_16px]: "61741",
  [HdsIconlibrary_16px.CoreUiGpsSolid_16px]: "61742",
  [HdsIconlibrary_16px.CoreUiHelpSolid_16px]: "61743",
  [HdsIconlibrary_16px.CoreUiHereLogoSolid_16px]: "61744",
  [HdsIconlibrary_16px.CoreUiHideSolid_16px]: "61745",
  [HdsIconlibrary_16px.CoreUiHideAltSolid_16px]: "61746",
  [HdsIconlibrary_16px.CoreUiHideMenuSolid_16px]: "61747",
  [HdsIconlibrary_16px.CoreUiHistorySolid_16px]: "61748",
  [HdsIconlibrary_16px.CoreUiInboxAttentionSolid_16px]: "61749",
  [HdsIconlibrary_16px.CoreUiInformationSolid_16px]: "61750",
  [HdsIconlibrary_16px.CoreUiInvalidSolid_16px]: "61751",
  [HdsIconlibrary_16px.CoreUiLoadingSolid_16px]: "61752",
  [HdsIconlibrary_16px.CoreUiLocationOffOutline_16px]: "61753",
  [HdsIconlibrary_16px.CoreUiLocationOffSolid_16px]: "61754",
  [HdsIconlibrary_16px.CoreUiLockSolid_16px]: "61755",
  [HdsIconlibrary_16px.CoreUiLockBreakSolid_16px]: "61756",
  [HdsIconlibrary_16px.CoreUiMenuSolid_16px]: "61757",
  [HdsIconlibrary_16px.CoreUiMicrophoneSolid_16px]: "61758",
  [HdsIconlibrary_16px.CoreUiMicrophoneOffSolid_16px]: "61759",
  [HdsIconlibrary_16px.CoreUiMinusSolid_16px]: "61760",
  [HdsIconlibrary_16px.CoreUiNotificationsSolid_16px]: "61761",
  [HdsIconlibrary_16px.CoreUiOverflowHoriCenterSolid_16px]: "61762",
  [HdsIconlibrary_16px.CoreUiOverflowVertCenterSolid_16px]: "61763",
  [HdsIconlibrary_16px.CoreUiOverflowVertRightSolid_16px]: "61764",
  [HdsIconlibrary_16px.CoreUiPlusSolid_16px]: "61765",
  [HdsIconlibrary_16px.CoreUiProfileSolid_16px]: "61766",
  [HdsIconlibrary_16px.CoreUiQuestionMarkSolid_16px]: "61767",
  [HdsIconlibrary_16px.CoreUiRedoSolid_16px]: "61768",
  [HdsIconlibrary_16px.CoreUiRefreshSolid_16px]: "61769",
  [HdsIconlibrary_16px.CoreUiReportSolid_16px]: "61770",
  [HdsIconlibrary_16px.CoreUiResetSolid_16px]: "61771",
  [HdsIconlibrary_16px.CoreUiSaveSolid_16px]: "61772",
  [HdsIconlibrary_16px.CoreUiSearchSolid_16px]: "61773",
  [HdsIconlibrary_16px.CoreUiSettingsSolid_16px]: "61774",
  [HdsIconlibrary_16px.CoreUiShowSolid_16px]: "61775",
  [HdsIconlibrary_16px.CoreUiShowMenuSolid_16px]: "61776",
  [HdsIconlibrary_16px.CoreUiSignInSolid_16px]: "61777",
  [HdsIconlibrary_16px.CoreUiSignOutSolid_16px]: "61778",
  [HdsIconlibrary_16px.CoreUiSlashSolid_16px]: "61779",
  [HdsIconlibrary_16px.CoreUiSubmitSolid_16px]: "61780",
  [HdsIconlibrary_16px.CoreUiSubstractSolid_16px]: "61781",
  [HdsIconlibrary_16px.CoreUiSwitchHorizontalSolid_16px]: "61782",
  [HdsIconlibrary_16px.CoreUiSwitchVerticalSolid_16px]: "61783",
  [HdsIconlibrary_16px.CoreUiTagSolid_16px]: "61784",
  [HdsIconlibrary_16px.CoreUiTimeSolid_16px]: "61785",
  [HdsIconlibrary_16px.CoreUiUndoSolid_16px]: "61786",
  [HdsIconlibrary_16px.CoreUiUnlockSolid_16px]: "61787",
  [HdsIconlibrary_16px.CoreUiVolumeAlertOutline_16px]: "61788",
  [HdsIconlibrary_16px.CoreUiVolumeAlertSolid_16px]: "61789",
  [HdsIconlibrary_16px.CoreUiVolumeHighOutline_16px]: "61790",
  [HdsIconlibrary_16px.CoreUiVolumeHighSolid_16px]: "61791",
  [HdsIconlibrary_16px.CoreUiVolumeLowOutline_16px]: "61792",
  [HdsIconlibrary_16px.CoreUiVolumeLowSolid_16px]: "61793",
  [HdsIconlibrary_16px.CoreUiVolumeMediumOutline_16px]: "61794",
  [HdsIconlibrary_16px.CoreUiVolumeMediumSolid_16px]: "61795",
  [HdsIconlibrary_16px.CoreUiVolumeNoSoundOutline_16px]: "61796",
  [HdsIconlibrary_16px.CoreUiVolumeNoSoundSolid_16px]: "61797",
  [HdsIconlibrary_16px.CoreUiVolumeOffOutline_16px]: "61798",
  [HdsIconlibrary_16px.CoreUiVolumeOffSolid_16px]: "61799",
  [HdsIconlibrary_16px.CoreUiWifiLowSolid_16px]: "61800",
  [HdsIconlibrary_16px.CoreUiWifiMediumSolid_16px]: "61801",
  [HdsIconlibrary_16px.CoreUiWifiOffSolid_16px]: "61802",
  [HdsIconlibrary_16px.CoreUiWifiStrongSolid_16px]: "61803",
  [HdsIconlibrary_16px.DataAppSolid_16px]: "61804",
  [HdsIconlibrary_16px.DataCatalogSolid_16px]: "61805",
  [HdsIconlibrary_16px.DataConflateSolid_16px]: "61806",
  [HdsIconlibrary_16px.DataDatabaseSolid_16px]: "61807",
  [HdsIconlibrary_16px.DataDeploySolid_16px]: "61808",
  [HdsIconlibrary_16px.DataExportSolid_16px]: "61809",
  [HdsIconlibrary_16px.DataIndexSolid_16px]: "61810",
  [HdsIconlibrary_16px.DataInspectSolid_16px]: "61811",
  [HdsIconlibrary_16px.DataInteractiveSolid_16px]: "61812",
  [HdsIconlibrary_16px.DataLayersSolid_16px]: "61813",
  [HdsIconlibrary_16px.DataMarketplaceSolid_16px]: "61814",
  [HdsIconlibrary_16px.DataPipelineSolid_16px]: "61815",
  [HdsIconlibrary_16px.DataRestSolid_16px]: "61816",
  [HdsIconlibrary_16px.DataReviewSolid_16px]: "61817",
  [HdsIconlibrary_16px.DataSendToListSolid_16px]: "61818",
  [HdsIconlibrary_16px.DataServicesSolid_16px]: "61819",
  [HdsIconlibrary_16px.DataStreamSolid_16px]: "61820",
  [HdsIconlibrary_16px.DataTemplateSolid_16px]: "61821",
  [HdsIconlibrary_16px.DataVersionedSolid_16px]: "61822",
  [HdsIconlibrary_16px.DataVolatileSolid_16px]: "61823",
  [HdsIconlibrary_16px.DevicesSensorsBarcodeReaderSolid_16px]: "61824",
  [HdsIconlibrary_16px.DevicesSensorsCameraSolid_16px]: "61825",
  [HdsIconlibrary_16px.DevicesSensorsComputerChipSolid_16px]: "61826",
  [HdsIconlibrary_16px.DevicesSensorsDeviceConnectedSolid_16px]: "61827",
  [HdsIconlibrary_16px.DevicesSensorsDeviceGroupConnectedSolid_16px]: "61828",
  [HdsIconlibrary_16px.DevicesSensorsDeviceGroupFilterSolid_16px]: "61829",
  [HdsIconlibrary_16px.DevicesSensorsDeviceGroupSmartFilterSolid_16px]: "61830",
  [HdsIconlibrary_16px.DevicesSensorsHdtvSolid_16px]: "61831",
  [HdsIconlibrary_16px.DevicesSensorsKeyboardSolid_16px]: "61832",
  [HdsIconlibrary_16px.DevicesSensorsLogicSolid_16px]: "61833",
  [HdsIconlibrary_16px.DevicesSensorsMonitorSolid_16px]: "61834",
  [HdsIconlibrary_16px.DevicesSensorsPairedModeSolid_16px]: "61835",
  [HdsIconlibrary_16px.DevicesSensorsPrinterSolid_16px]: "61836",
  [HdsIconlibrary_16px.DevicesSensorsProjectorSolid_16px]: "61837",
  [HdsIconlibrary_16px.DevicesSensorsScannerSolid_16px]: "61838",
  [HdsIconlibrary_16px.DevicesSensorsSensorAirpressureSolid_16px]: "61839",
  [HdsIconlibrary_16px.DevicesSensorsSensorHumiditySolid_16px]: "61840",
  [HdsIconlibrary_16px.DevicesSensorsSensorShockSolid_16px]: "61841",
  [HdsIconlibrary_16px.DevicesSensorsSensorTemperatureSolid_16px]: "61842",
  [HdsIconlibrary_16px.DevicesSensorsSmartphoneSolid_16px]: "61843",
  [HdsIconlibrary_16px.DevicesSensorsSoftwareSolid_16px]: "61844",
  [HdsIconlibrary_16px.DevicesSensorsSpeakerSolid_16px]: "61845",
  [HdsIconlibrary_16px.DevicesSensorsTabletSolid_16px]: "61846",
  [HdsIconlibrary_16px.DevicesSensorsWhiteboardSolid_16px]: "61847",
  [HdsIconlibrary_16px.DiscoverySharingCalendarSolid_16px]: "61848",
  [HdsIconlibrary_16px.DiscoverySharingCalendarAddSolid_16px]: "61849",
  [HdsIconlibrary_16px.DiscoverySharingDetailsSolid_16px]: "61850",
  [HdsIconlibrary_16px.DiscoverySharingDistributeSolid_16px]: "61851",
  [HdsIconlibrary_16px.DiscoverySharingDownloadSolid_16px]: "61852",
  [HdsIconlibrary_16px.DiscoverySharingDownloadCloudSolid_16px]: "61853",
  [HdsIconlibrary_16px.DiscoverySharingFilterOffSolid_16px]: "61854",
  [HdsIconlibrary_16px.DiscoverySharingFilterOnSolid_16px]: "61855",
  [HdsIconlibrary_16px.DiscoverySharingGridTypeEOutline_16px]: "61856",
  [HdsIconlibrary_16px.DiscoverySharingGridTypeESolid_16px]: "61857",
  [HdsIconlibrary_16px.DiscoverySharingGridTypeASolid_16px]: "61858",
  [HdsIconlibrary_16px.DiscoverySharingGridTypeBSolid_16px]: "61859",
  [HdsIconlibrary_16px.DiscoverySharingGridTypeCSolid_16px]: "61860",
  [HdsIconlibrary_16px.DiscoverySharingGridTypeDSolid_16px]: "61861",
  [HdsIconlibrary_16px.DiscoverySharingGroupSolid_16px]: "61862",
  [HdsIconlibrary_16px.DiscoverySharingGroupFilterSolid_16px]: "61863",
  [HdsIconlibrary_16px.DiscoverySharingGroupSmartFilterSolid_16px]: "61864",
  [HdsIconlibrary_16px.DiscoverySharingHideSolid_16px]: "61865",
  [HdsIconlibrary_16px.DiscoverySharingLinkSolid_16px]: "61866",
  [HdsIconlibrary_16px.DiscoverySharingListTypeASolid_16px]: "61867",
  [HdsIconlibrary_16px.DiscoverySharingListTypeBSolid_16px]: "61868",
  [HdsIconlibrary_16px.DiscoverySharingMapsDownloadSolid_16px]: "61869",
  [HdsIconlibrary_16px.DiscoverySharingMapsUpdateSolid_16px]: "61870",
  [HdsIconlibrary_16px.DiscoverySharingNoContentSolid_16px]: "61871",
  [HdsIconlibrary_16px.DiscoverySharingNotInSyncSolid_16px]: "61872",
  [HdsIconlibrary_16px.DiscoverySharingShareAndroidSolid_16px]: "61873",
  [HdsIconlibrary_16px.DiscoverySharingShareIOsSolid_16px]: "61874",
  [HdsIconlibrary_16px.DiscoverySharingShowSolid_16px]: "61875",
  [HdsIconlibrary_16px.DiscoverySharingUnlinkSolid_16px]: "61876",
  [HdsIconlibrary_16px.DiscoverySharingUploadSolid_16px]: "61877",
  [HdsIconlibrary_16px.DiscoverySharingUploadCloudSolid_16px]: "61878",
  [HdsIconlibrary_16px.FileArchiveSolid_16px]: "61879",
  [HdsIconlibrary_16px.FileCopySolid_16px]: "61880",
  [HdsIconlibrary_16px.FileDocFileSolid_16px]: "61881",
  [HdsIconlibrary_16px.FileEpsFileSolid_16px]: "61882",
  [HdsIconlibrary_16px.FileFileSolid_16px]: "61883",
  [HdsIconlibrary_16px.FileGifFileSolid_16px]: "61884",
  [HdsIconlibrary_16px.FileHtmlFileSolid_16px]: "61885",
  [HdsIconlibrary_16px.FileImageSolid_16px]: "61886",
  [HdsIconlibrary_16px.FileJpgFileSolid_16px]: "61887",
  [HdsIconlibrary_16px.FileJsonFileSolid_16px]: "61888",
  [HdsIconlibrary_16px.FileMp3FileSolid_16px]: "61889",
  [HdsIconlibrary_16px.FilePdfFileSolid_16px]: "61890",
  [HdsIconlibrary_16px.FilePngFileSolid_16px]: "61891",
  [HdsIconlibrary_16px.FileSvgFileSolid_16px]: "61892",
  [HdsIconlibrary_16px.FileTiffFileSolid_16px]: "61893",
  [HdsIconlibrary_16px.FileTxtFileSolid_16px]: "61894",
  [HdsIconlibrary_16px.FileWavFileSolid_16px]: "61895",
  [HdsIconlibrary_16px.FileZipSolid_16px]: "61896",
  [HdsIconlibrary_16px.MapView_2DSolid_16px]: "61897",
  [HdsIconlibrary_16px.MapView_3DSolid_16px]: "61898",
  [HdsIconlibrary_16px.MapViewCameraFrustumSolid_16px]: "61899",
  [HdsIconlibrary_16px.MapViewCameraOrbitSolid_16px]: "61900",
  [HdsIconlibrary_16px.MapViewCameraTopdownSolid_16px]: "61901",
  [HdsIconlibrary_16px.MapViewCameraViewSolid_16px]: "61902",
  [HdsIconlibrary_16px.MapViewCompassSolid_16px]: "61903",
  [HdsIconlibrary_16px.MapViewCurrentLocationSolid_16px]: "61904",
  [HdsIconlibrary_16px.MapViewCurrentLocationOffSolid_16px]: "61905",
  [HdsIconlibrary_16px.MapViewDashboardSolid_16px]: "61906",
  [HdsIconlibrary_16px.MapViewDistanceSolid_16px]: "61907",
  [HdsIconlibrary_16px.MapViewDotIndicatorOutline_16px]: "61908",
  [HdsIconlibrary_16px.MapViewDotIndicatorSolid_16px]: "61909",
  [HdsIconlibrary_16px.MapViewEastSolid_16px]: "61910",
  [HdsIconlibrary_16px.MapViewEastCharacterSolid_16px]: "61911",
  [HdsIconlibrary_16px.MapViewFlipHorizontalSolid_16px]: "61912",
  [HdsIconlibrary_16px.MapViewFlipVerticalSolid_16px]: "61913",
  [HdsIconlibrary_16px.MapViewKeyframeSolid_16px]: "61914",
  [HdsIconlibrary_16px.MapViewLayersSolid_16px]: "61915",
  [HdsIconlibrary_16px.MapViewLegendSolid_16px]: "61916",
  [HdsIconlibrary_16px.MapViewMapMarkerOutline_16px]: "61917",
  [HdsIconlibrary_16px.MapViewMapMarkerSolid_16px]: "61918",
  [HdsIconlibrary_16px.MapViewMapViewSolid_16px]: "61919",
  [HdsIconlibrary_16px.MapViewMarkerSolid_16px]: "61920",
  [HdsIconlibrary_16px.MapViewMaximizeSolid_16px]: "61921",
  [HdsIconlibrary_16px.MapViewMinimizeSolid_16px]: "61922",
  [HdsIconlibrary_16px.MapViewMinusRectangleSolid_16px]: "61923",
  [HdsIconlibrary_16px.MapViewNorthSolid_16px]: "61924",
  [HdsIconlibrary_16px.MapViewNorthCharacterSolid_16px]: "61925",
  [HdsIconlibrary_16px.MapViewNorthEastCharacterSolid_16px]: "61926",
  [HdsIconlibrary_16px.MapViewNorthUpSolid_16px]: "61927",
  [HdsIconlibrary_16px.MapViewNorthWestCharacterSolid_16px]: "61928",
  [HdsIconlibrary_16px.MapViewNotTiltedSolid_16px]: "61929",
  [HdsIconlibrary_16px.MapViewPanViewSolid_16px]: "61930",
  [HdsIconlibrary_16px.MapViewPipSolid_16px]: "61931",
  [HdsIconlibrary_16px.MapViewPlaceSolid_16px]: "61932",
  [HdsIconlibrary_16px.MapViewPlusRectangleSolid_16px]: "61933",
  [HdsIconlibrary_16px.MapViewPopOutSolid_16px]: "61934",
  [HdsIconlibrary_16px.MapViewProjectionGlobeSolid_16px]: "61935",
  [HdsIconlibrary_16px.MapViewProjectionMercatorSolid_16px]: "61936",
  [HdsIconlibrary_16px.MapViewResizeSolid_16px]: "61937",
  [HdsIconlibrary_16px.MapViewSelectSectionSolid_16px]: "61938",
  [HdsIconlibrary_16px.MapViewSingleScreenSolid_16px]: "61939",
  [HdsIconlibrary_16px.MapViewSouthSolid_16px]: "61940",
  [HdsIconlibrary_16px.MapViewSouthCharacterSolid_16px]: "61941",
  [HdsIconlibrary_16px.MapViewSouthEastCharacterSolid_16px]: "61942",
  [HdsIconlibrary_16px.MapViewSouthWestCharacterSolid_16px]: "61943",
  [HdsIconlibrary_16px.MapViewSplitTripleVSolid_16px]: "61944",
  [HdsIconlibrary_16px.MapViewSplitscreenHSolid_16px]: "61945",
  [HdsIconlibrary_16px.MapViewSplitscreenVSolid_16px]: "61946",
  [HdsIconlibrary_16px.MapViewStatisticsSolid_16px]: "61947",
  [HdsIconlibrary_16px.MapViewTiltedSolid_16px]: "61948",
  [HdsIconlibrary_16px.MapViewValueDecreaseSolid_16px]: "61949",
  [HdsIconlibrary_16px.MapViewValueDecreaseHighSolid_16px]: "61950",
  [HdsIconlibrary_16px.MapViewValueIncreaseSolid_16px]: "61951",
  [HdsIconlibrary_16px.MapViewValueIncreaseHighSolid_16px]: "61952",
  [HdsIconlibrary_16px.MapViewViewAllSolid_16px]: "61953",
  [HdsIconlibrary_16px.MapViewViewCenterSolid_16px]: "61954",
  [HdsIconlibrary_16px.MapViewWestSolid_16px]: "61955",
  [HdsIconlibrary_16px.MapViewWestCharacterSolid_16px]: "61956",
  [HdsIconlibrary_16px.MapViewWorkspacesSolid_16px]: "61957",
  [HdsIconlibrary_16px.MiscAddAddressNumberSolid_16px]: "61958",
  [HdsIconlibrary_16px.MiscAddressNumberSolid_16px]: "61959",
  [HdsIconlibrary_16px.MiscBuildingHomeSolid_16px]: "61960",
  [HdsIconlibrary_16px.MiscBuildingOffSolid_16px]: "61961",
  [HdsIconlibrary_16px.MiscBuildingOfficeSolid_16px]: "61962",
  [HdsIconlibrary_16px.MiscCalculatorSolid_16px]: "61963",
  [HdsIconlibrary_16px.MiscCartSolid_16px]: "61964",
  [HdsIconlibrary_16px.MiscCodeSolid_16px]: "61965",
  [HdsIconlibrary_16px.MiscCreditCardSolid_16px]: "61966",
  [HdsIconlibrary_16px.MiscDatasetSolid_16px]: "61967",
  [HdsIconlibrary_16px.MiscElevatorSolid_16px]: "61968",
  [HdsIconlibrary_16px.MiscEnvironmentSolid_16px]: "61969",
  [HdsIconlibrary_16px.MiscEscalatorSolid_16px]: "61970",
  [HdsIconlibrary_16px.MiscEscalatorDownSolid_16px]: "61971",
  [HdsIconlibrary_16px.MiscEscalatorUpSolid_16px]: "61972",
  [HdsIconlibrary_16px.MiscExpertSolid_16px]: "61973",
  [HdsIconlibrary_16px.MiscFamilySolid_16px]: "61974",
  [HdsIconlibrary_16px.MiscFlashlightSolid_16px]: "61975",
  [HdsIconlibrary_16px.MiscGlobalSolid_16px]: "61976",
  [HdsIconlibrary_16px.MiscHandshakeSolid_16px]: "61977",
  [HdsIconlibrary_16px.MiscHardDriveSolid_16px]: "61978",
  [HdsIconlibrary_16px.MiscHeadphonesSolid_16px]: "61979",
  [HdsIconlibrary_16px.MiscInboxSolid_16px]: "61980",
  [HdsIconlibrary_16px.MiscInboxAttentionSolid_16px]: "61981",
  [HdsIconlibrary_16px.MiscKeySolid_16px]: "61982",
  [HdsIconlibrary_16px.MiscKitchenSolid_16px]: "61983",
  [HdsIconlibrary_16px.MiscLaboratorySolid_16px]: "61984",
  [HdsIconlibrary_16px.MiscManSolid_16px]: "61985",
  [HdsIconlibrary_16px.MiscMeetingPointSolid_16px]: "61986",
  [HdsIconlibrary_16px.MiscNeighbourhoodSolid_16px]: "61987",
  [HdsIconlibrary_16px.MiscPacemakerSolid_16px]: "61988",
  [HdsIconlibrary_16px.MiscPeopleSolid_16px]: "61989",
  [HdsIconlibrary_16px.MiscPoopSolid_16px]: "61990",
  [HdsIconlibrary_16px.MiscProjectSolid_16px]: "61991",
  [HdsIconlibrary_16px.MiscProjectsSolid_16px]: "61992",
  [HdsIconlibrary_16px.MiscReusableSolid_16px]: "61993",
  [HdsIconlibrary_16px.MiscServiceSolid_16px]: "61994",
  [HdsIconlibrary_16px.MiscStairsSolid_16px]: "61995",
  [HdsIconlibrary_16px.MiscStopwatchSolid_16px]: "61996",
  [HdsIconlibrary_16px.MiscSuitcaseSolid_16px]: "61997",
  [HdsIconlibrary_16px.MiscTerrainSolid_16px]: "61998",
  [HdsIconlibrary_16px.MiscTicketBarrierSolid_16px]: "61999",
  [HdsIconlibrary_16px.MiscTrophySolid_16px]: "62000",
  [HdsIconlibrary_16px.MiscVoiceCommandSolid_16px]: "62001",
  [HdsIconlibrary_16px.MiscWheelchairSolid_16px]: "62002",
  [HdsIconlibrary_16px.MiscWomanSolid_16px]: "62003",
  [HdsIconlibrary_16px.NavigationImageBrightnessOffSolid_16px]: "62004",
  [HdsIconlibrary_16px.NavigationImageBrightnessOnSolid_16px]: "62005",
  [HdsIconlibrary_16px.NavigationImageColorFullSolid_16px]: "62006",
  [HdsIconlibrary_16px.NavigationImageColorInvertASolid_16px]: "62007",
  [HdsIconlibrary_16px.NavigationImageColorInvertBSolid_16px]: "62008",
  [HdsIconlibrary_16px.NavigationImageColorOverrideSolid_16px]: "62009",
  [HdsIconlibrary_16px.NavigationImageColorToneSolid_16px]: "62010",
  [HdsIconlibrary_16px.NavigationImageContrastSolid_16px]: "62011",
  [HdsIconlibrary_16px.NavigationImageFirstSolid_16px]: "62012",
  [HdsIconlibrary_16px.NavigationImageLastSolid_16px]: "62013",
  [HdsIconlibrary_16px.NavigationImageNextSolid_16px]: "62014",
  [HdsIconlibrary_16px.NavigationImageOpacityOffSolid_16px]: "62015",
  [HdsIconlibrary_16px.NavigationImageOpacityOnSolid_16px]: "62016",
  [HdsIconlibrary_16px.NavigationImagePauseSolid_16px]: "62017",
  [HdsIconlibrary_16px.NavigationImagePlaySolid_16px]: "62018",
  [HdsIconlibrary_16px.NavigationImagePlayReverseSolid_16px]: "62019",
  [HdsIconlibrary_16px.NavigationImagePlaybackSpeedSolid_16px]: "62020",
  [HdsIconlibrary_16px.NavigationImagePreviousSolid_16px]: "62021",
  [HdsIconlibrary_16px.NavigationImageSkipSolid_16px]: "62022",
  [HdsIconlibrary_16px.NavigationImageStopSolid_16px]: "62023",
  [HdsIconlibrary_16px.PoiAccommodationSolid_16px]: "62024",
  [HdsIconlibrary_16px.PoiAirportSolid_16px]: "62025",
  [HdsIconlibrary_16px.PoiAirportCargoSolid_16px]: "62026",
  [HdsIconlibrary_16px.PoiAirportGateSolid_16px]: "62027",
  [HdsIconlibrary_16px.PoiAmusementParkSolid_16px]: "62028",
  [HdsIconlibrary_16px.PoiAquariumSolid_16px]: "62029",
  [HdsIconlibrary_16px.PoiArtGallerySolid_16px]: "62030",
  [HdsIconlibrary_16px.PoiAshramSolid_16px]: "62031",
  [HdsIconlibrary_16px.PoiAtmSolid_16px]: "62032",
  [HdsIconlibrary_16px.PoiAttractionSolid_16px]: "62033",
  [HdsIconlibrary_16px.PoiBakerySolid_16px]: "62034",
  [HdsIconlibrary_16px.PoiBeachSolid_16px]: "62035",
  [HdsIconlibrary_16px.PoiBookstoreSolid_16px]: "62036",
  [HdsIconlibrary_16px.PoiBowlingSolid_16px]: "62037",
  [HdsIconlibrary_16px.PoiBridgeSolid_16px]: "62038",
  [HdsIconlibrary_16px.PoiBusSolid_16px]: "62039",
  [HdsIconlibrary_16px.PoiBusinessSolid_16px]: "62040",
  [HdsIconlibrary_16px.PoiBusinessPostJpnSolid_16px]: "62041",
  [HdsIconlibrary_16px.PoiButcherSolid_16px]: "62042",
  [HdsIconlibrary_16px.PoiCableWaySolid_16px]: "62043",
  [HdsIconlibrary_16px.PoiCampingSolid_16px]: "62044",
  [HdsIconlibrary_16px.PoiCarChargingSolid_16px]: "62045",
  [HdsIconlibrary_16px.PoiCarChargingFastSolid_16px]: "62046",
  [HdsIconlibrary_16px.PoiCarDealershipSolid_16px]: "62047",
  [HdsIconlibrary_16px.PoiCarElectricSolid_16px]: "62048",
  [HdsIconlibrary_16px.PoiCarRentalSolid_16px]: "62049",
  [HdsIconlibrary_16px.PoiCarRepairSolid_16px]: "62050",
  [HdsIconlibrary_16px.PoiCarWashSolid_16px]: "62051",
  [HdsIconlibrary_16px.PoiCargoCenterSolid_16px]: "62052",
  [HdsIconlibrary_16px.PoiCartSolid_16px]: "62053",
  [HdsIconlibrary_16px.PoiCasinoSolid_16px]: "62054",
  [HdsIconlibrary_16px.PoiCemetrySolid_16px]: "62055",
  [HdsIconlibrary_16px.PoiChurchSolid_16px]: "62056",
  [HdsIconlibrary_16px.PoiCinemaSolid_16px]: "62057",
  [HdsIconlibrary_16px.PoiClothingSolid_16px]: "62058",
  [HdsIconlibrary_16px.PoiCoachSolid_16px]: "62059",
  [HdsIconlibrary_16px.PoiCocktailSolid_16px]: "62060",
  [HdsIconlibrary_16px.PoiCoffeeSolid_16px]: "62061",
  [HdsIconlibrary_16px.PoiCurrencyBahtSolid_16px]: "62062",
  [HdsIconlibrary_16px.PoiCurrencyDollarSolid_16px]: "62063",
  [HdsIconlibrary_16px.PoiCurrencyDongSolid_16px]: "62064",
  [HdsIconlibrary_16px.PoiCurrencyEuroSolid_16px]: "62065",
  [HdsIconlibrary_16px.PoiCurrencyFrancSolid_16px]: "62066",
  [HdsIconlibrary_16px.PoiCurrencyKroneSolid_16px]: "62067",
  [HdsIconlibrary_16px.PoiCurrencyLiraSolid_16px]: "62068",
  [HdsIconlibrary_16px.PoiCurrencyNairaSolid_16px]: "62069",
  [HdsIconlibrary_16px.PoiCurrencyPoundSolid_16px]: "62070",
  [HdsIconlibrary_16px.PoiCurrencyRubleSolid_16px]: "62071",
  [HdsIconlibrary_16px.PoiCurrencyRupeeSolid_16px]: "62072",
  [HdsIconlibrary_16px.PoiCurrencyRupeesSolid_16px]: "62073",
  [HdsIconlibrary_16px.PoiCurrencyRupiahSolid_16px]: "62074",
  [HdsIconlibrary_16px.PoiCurrencyShekelSolid_16px]: "62075",
  [HdsIconlibrary_16px.PoiCurrencyTakaSolid_16px]: "62076",
  [HdsIconlibrary_16px.PoiCurrencyYenSolid_16px]: "62077",
  [HdsIconlibrary_16px.PoiDoughnutSolid_16px]: "62078",
  [HdsIconlibrary_16px.PoiEducationSolid_16px]: "62079",
  [HdsIconlibrary_16px.PoiElevatorSolid_16px]: "62080",
  [HdsIconlibrary_16px.PoiEmergencyFiredepartmentJpnSolid_16px]: "62081",
  [HdsIconlibrary_16px.PoiEmergencyHospitalJpnSolid_16px]: "62082",
  [HdsIconlibrary_16px.PoiEmergencyPoliceJpnSolid_16px]: "62083",
  [HdsIconlibrary_16px.PoiEmergencyPoliceboxJpnSolid_16px]: "62084",
  [HdsIconlibrary_16px.PoiEnterVenueSolid_16px]: "62085",
  [HdsIconlibrary_16px.PoiEntranceSolid_16px]: "62086",
  [HdsIconlibrary_16px.PoiEscalatorSolid_16px]: "62087",
  [HdsIconlibrary_16px.PoiExhibitionCenterSolid_16px]: "62088",
  [HdsIconlibrary_16px.PoiFacilitiesSolid_16px]: "62089",
  [HdsIconlibrary_16px.PoiFacilitiesCityhallJpnSolid_16px]: "62090",
  [HdsIconlibrary_16px.PoiFacilitiesEducationHigherJpnSolid_16px]: "62091",
  [HdsIconlibrary_16px.PoiFacilitiesEducationSchoolJpnSolid_16px]: "62092",
  [HdsIconlibrary_16px.PoiFacilitiesOfficePrefecturalJpnSolid_16px]: "62093",
  [HdsIconlibrary_16px.PoiFacilitiesOfficeTownvillageJpnSolid_16px]: "62094",
  [HdsIconlibrary_16px.PoiFacilitiesOfficeWardJpnSolid_16px]: "62095",
  [HdsIconlibrary_16px.PoiFastFoodSolid_16px]: "62096",
  [HdsIconlibrary_16px.PoiFerrySolid_16px]: "62097",
  [HdsIconlibrary_16px.PoiFireDepartmentSolid_16px]: "62098",
  [HdsIconlibrary_16px.PoiFirstAidCrescentSolid_16px]: "62099",
  [HdsIconlibrary_16px.PoiFirstAidCrossSolid_16px]: "62100",
  [HdsIconlibrary_16px.PoiFitnessSolid_16px]: "62101",
  [HdsIconlibrary_16px.PoiFrontierCrossingSolid_16px]: "62102",
  [HdsIconlibrary_16px.PoiGameArcadeSolid_16px]: "62103",
  [HdsIconlibrary_16px.PoiGolfCourseSolid_16px]: "62104",
  [HdsIconlibrary_16px.PoiGrocerySolid_16px]: "62105",
  [HdsIconlibrary_16px.PoiGurdwaraSolid_16px]: "62106",
  [HdsIconlibrary_16px.PoiHarborSolid_16px]: "62107",
  [HdsIconlibrary_16px.PoiHospitalCrescentSolid_16px]: "62108",
  [HdsIconlibrary_16px.PoiHospitalCrossSolid_16px]: "62109",
  [HdsIconlibrary_16px.PoiHotSpringJpnSolid_16px]: "62110",
  [HdsIconlibrary_16px.PoiHotelSolid_16px]: "62111",
  [HdsIconlibrary_16px.PoiInclinedSolid_16px]: "62112",
  [HdsIconlibrary_16px.PoiIndustrialComplexSolid_16px]: "62113",
  [HdsIconlibrary_16px.PoiKaraokeSolid_16px]: "62114",
  [HdsIconlibrary_16px.PoiLaundrySolid_16px]: "62115",
  [HdsIconlibrary_16px.PoiLibrarySolid_16px]: "62116",
  [HdsIconlibrary_16px.PoiLiquorSolid_16px]: "62117",
  [HdsIconlibrary_16px.PoiLoadingDockSolid_16px]: "62118",
  [HdsIconlibrary_16px.PoiLoadingZoneSolid_16px]: "62119",
  [HdsIconlibrary_16px.PoiMetroSolid_16px]: "62120",
  [HdsIconlibrary_16px.PoiMonorailSolid_16px]: "62121",
  [HdsIconlibrary_16px.PoiMosqueSolid_16px]: "62122",
  [HdsIconlibrary_16px.PoiMountainSolid_16px]: "62123",
  [HdsIconlibrary_16px.PoiMountainPassSolid_16px]: "62124",
  [HdsIconlibrary_16px.PoiMuseumSolid_16px]: "62125",
  [HdsIconlibrary_16px.PoiMuseumArtSolid_16px]: "62126",
  [HdsIconlibrary_16px.PoiNatureSolid_16px]: "62127",
  [HdsIconlibrary_16px.PoiNatureOverlookSolid_16px]: "62128",
  [HdsIconlibrary_16px.PoiNightClubSolid_16px]: "62129",
  [HdsIconlibrary_16px.PoiPagodaSolid_16px]: "62130",
  [HdsIconlibrary_16px.PoiParkAndRideSolid_16px]: "62131",
  [HdsIconlibrary_16px.PoiParkingSolid_16px]: "62132",
  [HdsIconlibrary_16px.PoiParkingBicycleSolid_16px]: "62133",
  [HdsIconlibrary_16px.PoiParkingGarageSolid_16px]: "62134",
  [HdsIconlibrary_16px.PoiParkingMotorcycleSolid_16px]: "62135",
  [HdsIconlibrary_16px.PoiPetrolStationSolid_16px]: "62136",
  [HdsIconlibrary_16px.PoiPharmacyCrescentSolid_16px]: "62137",
  [HdsIconlibrary_16px.PoiPharmacyCrossSolid_16px]: "62138",
  [HdsIconlibrary_16px.PoiPicnicAreaSolid_16px]: "62139",
  [HdsIconlibrary_16px.PoiPlaygroundSolid_16px]: "62140",
  [HdsIconlibrary_16px.PoiPointSolid_16px]: "62141",
  [HdsIconlibrary_16px.PoiPoliceSolid_16px]: "62142",
  [HdsIconlibrary_16px.PoiPoolSolid_16px]: "62143",
  [HdsIconlibrary_16px.PoiPostSolid_16px]: "62144",
  [HdsIconlibrary_16px.PoiPubSolid_16px]: "62145",
  [HdsIconlibrary_16px.PoiPublicToiletSolid_16px]: "62146",
  [HdsIconlibrary_16px.PoiPublicTransportSolid_16px]: "62147",
  [HdsIconlibrary_16px.PoiRailLightSolid_16px]: "62148",
  [HdsIconlibrary_16px.PoiRailRegionalSolid_16px]: "62149",
  [HdsIconlibrary_16px.PoiRailYardSolid_16px]: "62150",
  [HdsIconlibrary_16px.PoiRampSolid_16px]: "62151",
  [HdsIconlibrary_16px.PoiReligiousPlaceSolid_16px]: "62152",
  [HdsIconlibrary_16px.PoiReligiousShintoJpnSolid_16px]: "62153",
  [HdsIconlibrary_16px.PoiReligiousTempleBuddhistJpnSolid_16px]: "62154",
  [HdsIconlibrary_16px.PoiRestaurantSolid_16px]: "62155",
  [HdsIconlibrary_16px.PoiSeaportHarborSolid_16px]: "62156",
  [HdsIconlibrary_16px.PoiShoesSolid_16px]: "62157",
  [HdsIconlibrary_16px.PoiShoppingSolid_16px]: "62158",
  [HdsIconlibrary_16px.PoiShrineGenericSolid_16px]: "62159",
  [HdsIconlibrary_16px.PoiSkiRunSolid_16px]: "62160",
  [HdsIconlibrary_16px.PoiSkywalkSolid_16px]: "62161",
  [HdsIconlibrary_16px.PoiStadiumSolid_16px]: "62162",
  [HdsIconlibrary_16px.PoiStairsSolid_16px]: "62163",
  [HdsIconlibrary_16px.PoiSweetsSolid_16px]: "62164",
  [HdsIconlibrary_16px.PoiSwimmingSolid_16px]: "62165",
  [HdsIconlibrary_16px.PoiSynagogueOutline_16px]: "62166",
  [HdsIconlibrary_16px.PoiSynagogueSolid_16px]: "62167",
  [HdsIconlibrary_16px.PoiTaxiSolid_16px]: "62168",
  [HdsIconlibrary_16px.PoiTheaterSolid_16px]: "62169",
  [HdsIconlibrary_16px.PoiTollBoothSolid_16px]: "62170",
  [HdsIconlibrary_16px.PoiTouristInformationSolid_16px]: "62171",
  [HdsIconlibrary_16px.PoiTrainSolid_16px]: "62172",
  [HdsIconlibrary_16px.PoiTransportShinkansenJpnSolid_16px]: "62173",
  [HdsIconlibrary_16px.PoiTravelAgentTicketingSolid_16px]: "62174",
  [HdsIconlibrary_16px.PoiTruckDealershipSolid_16px]: "62175",
  [HdsIconlibrary_16px.PoiTruckParkingSolid_16px]: "62176",
  [HdsIconlibrary_16px.PoiTruckRepairSolid_16px]: "62177",
  [HdsIconlibrary_16px.PoiTruckStopPlazaSolid_16px]: "62178",
  [HdsIconlibrary_16px.PoiTruckWashSolid_16px]: "62179",
  [HdsIconlibrary_16px.PoiTunnelSolid_16px]: "62180",
  [HdsIconlibrary_16px.PoiWaterfallSolid_16px]: "62181",
  [HdsIconlibrary_16px.PoiWeighStationSolid_16px]: "62182",
  [HdsIconlibrary_16px.PoiZooSolid_16px]: "62183",
  [HdsIconlibrary_16px.SocialCameraSolid_16px]: "62184",
  [HdsIconlibrary_16px.SocialChatOutline_16px]: "62185",
  [HdsIconlibrary_16px.SocialChatSolid_16px]: "62186",
  [HdsIconlibrary_16px.SocialEditImageSolid_16px]: "62187",
  [HdsIconlibrary_16px.SocialHeartSolid_16px]: "62188",
  [HdsIconlibrary_16px.SocialLiveSolid_16px]: "62189",
  [HdsIconlibrary_16px.SocialMailSolid_16px]: "62190",
  [HdsIconlibrary_16px.SocialMaskingSolid_16px]: "62191",
  [HdsIconlibrary_16px.SocialStarSolid_16px]: "62192",
  [HdsIconlibrary_16px.SocialStarEmptySolid_16px]: "62193",
  [HdsIconlibrary_16px.SocialTagHeartedSolid_16px]: "62194",
  [HdsIconlibrary_16px.SocialTelephoneSolid_16px]: "62195",
  [HdsIconlibrary_16px.SocialThumbsDownSolid_16px]: "62196",
  [HdsIconlibrary_16px.SocialThumbsUpSolid_16px]: "62197",
  [HdsIconlibrary_16px.StatsActivitySolid_16px]: "62198",
  [HdsIconlibrary_16px.StatsBarChartSolid_16px]: "62199",
  [HdsIconlibrary_16px.StatsDashboardSolid_16px]: "62200",
  [HdsIconlibrary_16px.StatsEastSolid_16px]: "62201",
  [HdsIconlibrary_16px.StatsMarkerSolid_16px]: "62202",
  [HdsIconlibrary_16px.StatsNorthEastSolid_16px]: "62203",
  [HdsIconlibrary_16px.StatsNorthWestSolid_16px]: "62204",
  [HdsIconlibrary_16px.StatsPieChartSolid_16px]: "62205",
  [HdsIconlibrary_16px.StatsSouthEastSolid_16px]: "62206",
  [HdsIconlibrary_16px.StatsSouthWestSolid_16px]: "62207",
  [HdsIconlibrary_16px.StatsStatisticsSolid_16px]: "62208",
  [HdsIconlibrary_16px.StatsValueSolid_16px]: "62209",
  [HdsIconlibrary_16px.StatsValueDecreaseSolid_16px]: "62210",
  [HdsIconlibrary_16px.StatsValueDecreaseHighSolid_16px]: "62211",
  [HdsIconlibrary_16px.StatsValueIncreaseSolid_16px]: "62212",
  [HdsIconlibrary_16px.StatsValueIncreaseHighSolid_16px]: "62213",
  [HdsIconlibrary_16px.StatsWestSolid_16px]: "62214",
  [HdsIconlibrary_16px.ThirdPartyLogos_360Solid_16px]: "62215",
  [HdsIconlibrary_16px.ThirdPartyLogosAlexaSolid_16px]: "62216",
  [HdsIconlibrary_16px.ThirdPartyLogosAmexSolid_16px]: "62217",
  [HdsIconlibrary_16px.ThirdPartyLogosDinersOutline_16px]: "62218",
  [HdsIconlibrary_16px.ThirdPartyLogosDinersSolid_16px]: "62219",
  [HdsIconlibrary_16px.ThirdPartyLogosDiscoverOutline_16px]: "62220",
  [HdsIconlibrary_16px.ThirdPartyLogosDiscoverSolid_16px]: "62221",
  [HdsIconlibrary_16px.ThirdPartyLogosFacebookSolid_16px]: "62222",
  [HdsIconlibrary_16px.ThirdPartyLogosFigmaSolid_16px]: "62223",
  [HdsIconlibrary_16px.ThirdPartyLogosGithubSolid_16px]: "62224",
  [HdsIconlibrary_16px.ThirdPartyLogosGitlabSolid_16px]: "62225",
  [HdsIconlibrary_16px.ThirdPartyLogosInstagramSolid_16px]: "62226",
  [HdsIconlibrary_16px.ThirdPartyLogosLinkedinSolid_16px]: "62227",
  [HdsIconlibrary_16px.ThirdPartyLogosMastercardOutline_16px]: "62228",
  [HdsIconlibrary_16px.ThirdPartyLogosMastercardSolid_16px]: "62229",
  [HdsIconlibrary_16px.ThirdPartyLogosRedditSolid_16px]: "62230",
  [HdsIconlibrary_16px.ThirdPartyLogosStorybookSolid_16px]: "62231",
  [HdsIconlibrary_16px.ThirdPartyLogosTwitterSolid_16px]: "62232",
  [HdsIconlibrary_16px.ThirdPartyLogosVisaOutline_16px]: "62233",
  [HdsIconlibrary_16px.ThirdPartyLogosVisaSolid_16px]: "62234",
  [HdsIconlibrary_16px.ThirdPartyLogosWhat_3WordsOutline_16px]: "62235",
  [HdsIconlibrary_16px.ThirdPartyLogosWhat_3WordsSolid_16px]: "62236",
  [HdsIconlibrary_16px.ThirdPartyLogosYoutubeSolid_16px]: "62237",
  [HdsIconlibrary_16px.ToolsAddCamSolid_16px]: "62238",
  [HdsIconlibrary_16px.ToolsAddMapMarkerOutline_16px]: "62239",
  [HdsIconlibrary_16px.ToolsAddMapMarkerSolid_16px]: "62240",
  [HdsIconlibrary_16px.ToolsAddPlaceSolid_16px]: "62241",
  [HdsIconlibrary_16px.ToolsAddRoadSolid_16px]: "62242",
  [HdsIconlibrary_16px.ToolsAddRoadSignSolid_16px]: "62243",
  [HdsIconlibrary_16px.ToolsAddShapeSolid_16px]: "62244",
  [HdsIconlibrary_16px.ToolsBrushSelectionSolid_16px]: "62245",
  [HdsIconlibrary_16px.ToolsCenterLineSolid_16px]: "62246",
  [HdsIconlibrary_16px.ToolsColorPaletteSolid_16px]: "62247",
  [HdsIconlibrary_16px.ToolsCompassBSolid_16px]: "62248",
  [HdsIconlibrary_16px.ToolsConnectorSolid_16px]: "62249",
  [HdsIconlibrary_16px.ToolsCursorArrowSolid_16px]: "62250",
  [HdsIconlibrary_16px.ToolsCursorPointerSolid_16px]: "62251",
  [HdsIconlibrary_16px.ToolsCursorSelectorSolid_16px]: "62252",
  [HdsIconlibrary_16px.ToolsDisconnectedSolid_16px]: "62253",
  [HdsIconlibrary_16px.ToolsEditCurvesSolid_16px]: "62254",
  [HdsIconlibrary_16px.ToolsFinetuneSolid_16px]: "62255",
  [HdsIconlibrary_16px.ToolsFontSolid_16px]: "62256",
  [HdsIconlibrary_16px.ToolsGuidesSolid_16px]: "62257",
  [HdsIconlibrary_16px.ToolsJoinBevelSolid_16px]: "62258",
  [HdsIconlibrary_16px.ToolsJoinMiterSolid_16px]: "62259",
  [HdsIconlibrary_16px.ToolsJoinRoundSolid_16px]: "62260",
  [HdsIconlibrary_16px.ToolsLineDashedSolid_16px]: "62261",
  [HdsIconlibrary_16px.ToolsLineSolidSolid_16px]: "62262",
  [HdsIconlibrary_16px.ToolsLineVariousSolid_16px]: "62263",
  [HdsIconlibrary_16px.ToolsMapPlannerSolid_16px]: "62264",
  [HdsIconlibrary_16px.ToolsMergeSolid_16px]: "62265",
  [HdsIconlibrary_16px.ToolsNumbersSolid_16px]: "62266",
  [HdsIconlibrary_16px.ToolsOutlineSolid_16px]: "62267",
  [HdsIconlibrary_16px.ToolsOutlinePlusSolid_16px]: "62268",
  [HdsIconlibrary_16px.ToolsPathSolid_16px]: "62269",
  [HdsIconlibrary_16px.ToolsPickerSolid_16px]: "62270",
  [HdsIconlibrary_16px.ToolsPolygonSolid_16px]: "62271",
  [HdsIconlibrary_16px.ToolsPolylineSolid_16px]: "62272",
  [HdsIconlibrary_16px.ToolsRoadSolid_16px]: "62273",
  [HdsIconlibrary_16px.ToolsSelectorFreeformSolid_16px]: "62274",
  [HdsIconlibrary_16px.ToolsSelectorPointerSolid_16px]: "62275",
  [HdsIconlibrary_16px.ToolsSelectorPolygonSolid_16px]: "62276",
  [HdsIconlibrary_16px.ToolsShapeSolid_16px]: "62277",
  [HdsIconlibrary_16px.ToolsSkipPointSolid_16px]: "62278",
  [HdsIconlibrary_16px.ToolsSplitObjectSolid_16px]: "62279",
  [HdsIconlibrary_16px.ToolsTextSolid_16px]: "62280",
  [HdsIconlibrary_16px.ToolsTiePointSolid_16px]: "62281",
  [HdsIconlibrary_16px.ToolsTunerSolid_16px]: "62282",
  [HdsIconlibrary_16px.ToolsVectorPointSolid_16px]: "62283",
  [HdsIconlibrary_16px.ToolsWrenchSolid_16px]: "62284",
  [HdsIconlibrary_16px.TravelTransportTrackingAccidentCarSolid_16px]: "62285",
  [HdsIconlibrary_16px.TravelTransportTrackingAirportSolid_16px]: "62286",
  [HdsIconlibrary_16px.TravelTransportTrackingAmbulanceOutline_16px]: "62287",
  [HdsIconlibrary_16px.TravelTransportTrackingAmbulanceSolid_16px]: "62288",
  [HdsIconlibrary_16px.TravelTransportTrackingArrivalAirportSolid_16px]: "62289",
  [HdsIconlibrary_16px.TravelTransportTrackingAttentionSolid_16px]: "62290",
  [HdsIconlibrary_16px.TravelTransportTrackingAutoCaravanSolid_16px]: "62291",
  [HdsIconlibrary_16px.TravelTransportTrackingAutoTrailerSolid_16px]: "62292",
  [HdsIconlibrary_16px.TravelTransportTrackingBeamLightSolid_16px]: "62293",
  [HdsIconlibrary_16px.TravelTransportTrackingBicycleSolid_16px]: "62294",
  [HdsIconlibrary_16px.TravelTransportTrackingBicyclePaceSolid_16px]: "62295",
  [HdsIconlibrary_16px.TravelTransportTrackingBoatTrailerSolid_16px]: "62296",
  [HdsIconlibrary_16px.TravelTransportTrackingBumpsSolid_16px]: "62297",
  [HdsIconlibrary_16px.TravelTransportTrackingBusSolid_16px]: "62298",
  [HdsIconlibrary_16px.TravelTransportTrackingBusRapidSolid_16px]: "62299",
  [HdsIconlibrary_16px.TravelTransportTrackingCableWaySolid_16px]: "62300",
  [HdsIconlibrary_16px.TravelTransportTrackingCarFuelAltSolid_16px]: "62301",
  [HdsIconlibrary_16px.TravelTransportTrackingCarRentalSolid_16px]: "62302",
  [HdsIconlibrary_16px.TravelTransportTrackingCarRigSolid_16px]: "62303",
  [HdsIconlibrary_16px.TravelTransportTrackingCarWifiOffSolid_16px]: "62304",
  [HdsIconlibrary_16px.TravelTransportTrackingCarWifiOnSolid_16px]: "62305",
  [HdsIconlibrary_16px.TravelTransportTrackingCaravanSolid_16px]: "62306",
  [HdsIconlibrary_16px.TravelTransportTrackingChargingSolid_16px]: "62307",
  [HdsIconlibrary_16px.TravelTransportTrackingClosureSolid_16px]: "62308",
  [HdsIconlibrary_16px.TravelTransportTrackingCoachSolid_16px]: "62309",
  [HdsIconlibrary_16px.TravelTransportTrackingDeliveryVanOutline_16px]: "62310",
  [HdsIconlibrary_16px.TravelTransportTrackingDeliveryVanSolid_16px]: "62311",
  [HdsIconlibrary_16px.TravelTransportTrackingDepartureAirportSolid_16px]: "62312",
  [HdsIconlibrary_16px.TravelTransportTrackingDestinationSolid_16px]: "62313",
  [HdsIconlibrary_16px.TravelTransportTrackingDiagonalSolid_16px]: "62314",
  [HdsIconlibrary_16px.TravelTransportTrackingDirectionsSolid_16px]: "62315",
  [HdsIconlibrary_16px.TravelTransportTrackingDisabledVehicleSolid_16px]: "62316",
  [HdsIconlibrary_16px.TravelTransportTrackingDrivingSolid_16px]: "62317",
  [HdsIconlibrary_16px.TravelTransportTrackingDrivingOffSolid_16px]: "62318",
  [HdsIconlibrary_16px.TravelTransportTrackingDynamicRoutingSolid_16px]: "62319",
  [HdsIconlibrary_16px.TravelTransportTrackingEvRangeSolid_16px]: "62320",
  [HdsIconlibrary_16px.TravelTransportTrackingFerrySolid_16px]: "62321",
  [HdsIconlibrary_16px.TravelTransportTrackingFerryOffSolid_16px]: "62322",
  [HdsIconlibrary_16px.TravelTransportTrackingFlightMonitorSolid_16px]: "62323",
  [HdsIconlibrary_16px.TravelTransportTrackingFullContainerLoadSolid_16px]: "62324",
  [HdsIconlibrary_16px.TravelTransportTrackingFullTruckLoadSolid_16px]: "62325",
  [HdsIconlibrary_16px.TravelTransportTrackingGeofenceOutline_16px]: "62326",
  [HdsIconlibrary_16px.TravelTransportTrackingGeofenceSolid_16px]: "62327",
  [HdsIconlibrary_16px.TravelTransportTrackingHandsfreeDrivingSolid_16px]: "62328",
  [HdsIconlibrary_16px.TravelTransportTrackingHeadLightSolid_16px]: "62329",
  [HdsIconlibrary_16px.TravelTransportTrackingHeavyMachinerySolid_16px]: "62330",
  [HdsIconlibrary_16px.TravelTransportTrackingHeightSolid_16px]: "62331",
  [HdsIconlibrary_16px.TravelTransportTrackingHighwaysSolid_16px]: "62332",
  [HdsIconlibrary_16px.TravelTransportTrackingInclinedSolid_16px]: "62333",
  [HdsIconlibrary_16px.TravelTransportTrackingJourneySolid_16px]: "62334",
  [HdsIconlibrary_16px.TravelTransportTrackingLaneRestrictionSolid_16px]: "62335",
  [HdsIconlibrary_16px.TravelTransportTrackingLessContainerLoadSolid_16px]: "62336",
  [HdsIconlibrary_16px.TravelTransportTrackingLessTruckLoadSolid_16px]: "62337",
  [HdsIconlibrary_16px.TravelTransportTrackingLightRailSolid_16px]: "62338",
  [HdsIconlibrary_16px.TravelTransportTrackingLightrailSolid_16px]: "62339",
  [HdsIconlibrary_16px.TravelTransportTrackingLocationTrackingOutline_16px]: "62340",
  [HdsIconlibrary_16px.TravelTransportTrackingLocationTrackingSolid_16px]: "62341",
  [HdsIconlibrary_16px.TravelTransportTrackingMassTransitSolid_16px]: "62342",
  [HdsIconlibrary_16px.TravelTransportTrackingMaxHeightSolid_16px]: "62343",
  [HdsIconlibrary_16px.TravelTransportTrackingMaxWidthSolid_16px]: "62344",
  [HdsIconlibrary_16px.TravelTransportTrackingMetroSolid_16px]: "62345",
  [HdsIconlibrary_16px.TravelTransportTrackingMonorailSolid_16px]: "62346",
  [HdsIconlibrary_16px.TravelTransportTrackingMotorcycleSolid_16px]: "62347",
  [HdsIconlibrary_16px.TravelTransportTrackingMotorhomeSolid_16px]: "62348",
  [HdsIconlibrary_16px.TravelTransportTrackingMotorscooterSolid_16px]: "62349",
  [HdsIconlibrary_16px.TravelTransportTrackingMultimodalSolid_16px]: "62350",
  [HdsIconlibrary_16px.TravelTransportTrackingNavigationSolid_16px]: "62351",
  [HdsIconlibrary_16px.TravelTransportTrackingNoContainerLoadSolid_16px]: "62352",
  [HdsIconlibrary_16px.TravelTransportTrackingNoTruckLoadSolid_16px]: "62353",
  [HdsIconlibrary_16px.TravelTransportTrackingPlannedTourSolid_16px]: "62354",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeASolid_16px]: "62355",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeBNema_14_50Solid_16px]: "62356",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeBNema_5_15Solid_16px]: "62357",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeCSolid_16px]: "62358",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeChademoSolid_16px]: "62359",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeESolid_16px]: "62360",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeFSolid_16px]: "62361",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeGSolid_16px]: "62362",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeISolid_16px]: "62363",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeIndustrialSolid_16px]: "62364",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeJSolid_16px]: "62365",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeJ1772Solid_16px]: "62366",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeJ1772ComboSolid_16px]: "62367",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeMarechalSolid_16px]: "62368",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeMennekesSolid_16px]: "62369",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeMennekesComboSolid_16px]: "62370",
  [HdsIconlibrary_16px.TravelTransportTrackingPlugTypeTeslaSolid_16px]: "62371",
  [HdsIconlibrary_16px.TravelTransportTrackingRailHighspeedSolid_16px]: "62372",
  [HdsIconlibrary_16px.TravelTransportTrackingRailHighspeedOffSolid_16px]: "62373",
  [HdsIconlibrary_16px.TravelTransportTrackingRailIntercitySolid_16px]: "62374",
  [HdsIconlibrary_16px.TravelTransportTrackingRailLocalSolid_16px]: "62375",
  [HdsIconlibrary_16px.TravelTransportTrackingRailRegionalSolid_16px]: "62376",
  [HdsIconlibrary_16px.TravelTransportTrackingRedLightCameraSolid_16px]: "62377",
  [HdsIconlibrary_16px.TravelTransportTrackingRideHailingSolid_16px]: "62378",
  [HdsIconlibrary_16px.TravelTransportTrackingRideshareSolid_16px]: "62379",
  [HdsIconlibrary_16px.TravelTransportTrackingRoadClosureSolid_16px]: "62380",
  [HdsIconlibrary_16px.TravelTransportTrackingRoadHazardSolid_16px]: "62381",
  [HdsIconlibrary_16px.TravelTransportTrackingRoadTollsSolid_16px]: "62382",
  [HdsIconlibrary_16px.TravelTransportTrackingRoadTollsOffSolid_16px]: "62383",
  [HdsIconlibrary_16px.TravelTransportTrackingRoadUnpavedSolid_16px]: "62384",
  [HdsIconlibrary_16px.TravelTransportTrackingRoadUnpavedBicycleSolid_16px]: "62385",
  [HdsIconlibrary_16px.TravelTransportTrackingRoadUnpavedMotorcycleSolid_16px]: "62386",
  [HdsIconlibrary_16px.TravelTransportTrackingRoadUnpavedOffSolid_16px]: "62387",
  [HdsIconlibrary_16px.TravelTransportTrackingRoadsideJpSolid_16px]: "62388",
  [HdsIconlibrary_16px.TravelTransportTrackingRoadworksSolid_16px]: "62389",
  [HdsIconlibrary_16px.TravelTransportTrackingRouteSolid_16px]: "62390",
  [HdsIconlibrary_16px.TravelTransportTrackingRunnerPaceSolid_16px]: "62391",
  [HdsIconlibrary_16px.TravelTransportTrackingSchoolZoneUsSolid_16px]: "62392",
  [HdsIconlibrary_16px.TravelTransportTrackingScooterSolid_16px]: "62393",
  [HdsIconlibrary_16px.TravelTransportTrackingSecurityCameraSolid_16px]: "62394",
  [HdsIconlibrary_16px.TravelTransportTrackingSemiTrailerSolid_16px]: "62395",
  [HdsIconlibrary_16px.TravelTransportTrackingServiceDeskSolid_16px]: "62396",
  [HdsIconlibrary_16px.TravelTransportTrackingShipmentSolid_16px]: "62397",
  [HdsIconlibrary_16px.TravelTransportTrackingSpeedCameraSolid_16px]: "62398",
  [HdsIconlibrary_16px.TravelTransportTrackingSpeedLimitSolid_16px]: "62399",
  [HdsIconlibrary_16px.TravelTransportTrackingSpeedZoneOutline_16px]: "62400",
  [HdsIconlibrary_16px.TravelTransportTrackingSpeedalertSolid_16px]: "62401",
  [HdsIconlibrary_16px.TravelTransportTrackingSpeedalertOffSolid_16px]: "62402",
  [HdsIconlibrary_16px.TravelTransportTrackingTaxiSolid_16px]: "62403",
  [HdsIconlibrary_16px.TravelTransportTrackingTaxiOffSolid_16px]: "62404",
  [HdsIconlibrary_16px.TravelTransportTrackingTicketSolid_16px]: "62405",
  [HdsIconlibrary_16px.TravelTransportTrackingTourSolid_16px]: "62406",
  [HdsIconlibrary_16px.TravelTransportTrackingTrackerSolid_16px]: "62407",
  [HdsIconlibrary_16px.TravelTransportTrackingTrafficSolid_16px]: "62408",
  [HdsIconlibrary_16px.TravelTransportTrackingTrafficLightsOutline_16px]: "62409",
  [HdsIconlibrary_16px.TravelTransportTrackingTrafficLightsSolid_16px]: "62410",
  [HdsIconlibrary_16px.TravelTransportTrackingTrafficOffSolid_16px]: "62411",
  [HdsIconlibrary_16px.TravelTransportTrackingTrailerSolid_16px]: "62412",
  [HdsIconlibrary_16px.TravelTransportTrackingTrainSolid_16px]: "62413",
  [HdsIconlibrary_16px.TravelTransportTrackingTramSolid_16px]: "62414",
  [HdsIconlibrary_16px.TravelTransportTrackingTruckSolid_16px]: "62415",
  [HdsIconlibrary_16px.TravelTransportTrackingTruckAxleSolid_16px]: "62416",
  [HdsIconlibrary_16px.TravelTransportTrackingUnpavedRoadPedestrianSolid_16px]: "62417",
  [HdsIconlibrary_16px.TravelTransportTrackingUnpavedRoadTruckSolid_16px]: "62418",
  [HdsIconlibrary_16px.TravelTransportTrackingWaitPedestrianSolid_16px]: "62419",
  [HdsIconlibrary_16px.TravelTransportTrackingWalkingSolid_16px]: "62420",
  [HdsIconlibrary_16px.TravelTransportTrackingWalkingOffSolid_16px]: "62421",
  [HdsIconlibrary_16px.TravelTransportTrackingWidthSolid_16px]: "62422",
  [HdsIconlibrary_16px.WeatherClearNightSolid_16px]: "62423",
  [HdsIconlibrary_16px.WeatherCloudyDaySolid_16px]: "62424",
  [HdsIconlibrary_16px.WeatherCloudyNightSolid_16px]: "62425",
  [HdsIconlibrary_16px.WeatherFloodSolid_16px]: "62426",
  [HdsIconlibrary_16px.WeatherFogSolid_16px]: "62427",
  [HdsIconlibrary_16px.WeatherHurricaneSolid_16px]: "62428",
  [HdsIconlibrary_16px.WeatherOvercastSolid_16px]: "62429",
  [HdsIconlibrary_16px.WeatherRainSolid_16px]: "62430",
  [HdsIconlibrary_16px.WeatherRainFreezingSolid_16px]: "62431",
  [HdsIconlibrary_16px.WeatherRainSnowSolid_16px]: "62432",
  [HdsIconlibrary_16px.WeatherShowerDaySolid_16px]: "62433",
  [HdsIconlibrary_16px.WeatherShowerNightSolid_16px]: "62434",
  [HdsIconlibrary_16px.WeatherSmogSolid_16px]: "62435",
  [HdsIconlibrary_16px.WeatherSnowfallSolid_16px]: "62436",
  [HdsIconlibrary_16px.WeatherStormSolid_16px]: "62437",
  [HdsIconlibrary_16px.WeatherStormyDaySolid_16px]: "62438",
  [HdsIconlibrary_16px.WeatherStormyNightSolid_16px]: "62439",
  [HdsIconlibrary_16px.WeatherWeatherClearDaySolid_16px]: "62440",
  [HdsIconlibrary_16px.WeatherWindySolid_16px]: "62441"
};

// node_modules/@here/hds-iconlibrary/build/hds-iconlibrary-24px.js
var HdsIconlibrary_24px;
(function(HdsIconlibrary_24px2) {
  HdsIconlibrary_24px2["CoreUiAddOutline_24px"] = "core-ui-add_outline_24px";
  HdsIconlibrary_24px2["CoreUiAddSolid_24px"] = "core-ui-add_solid_24px";
  HdsIconlibrary_24px2["CoreUiAddUserOutline_24px"] = "core-ui-add-user_outline_24px";
  HdsIconlibrary_24px2["CoreUiAddUserSolid_24px"] = "core-ui-add-user_solid_24px";
  HdsIconlibrary_24px2["CoreUiAlertOutline_24px"] = "core-ui-alert_outline_24px";
  HdsIconlibrary_24px2["CoreUiAlertSolid_24px"] = "core-ui-alert_solid_24px";
  HdsIconlibrary_24px2["CoreUiArrowDownOutline_24px"] = "core-ui-arrow-down_outline_24px";
  HdsIconlibrary_24px2["CoreUiArrowDownSolid_24px"] = "core-ui-arrow-down_solid_24px";
  HdsIconlibrary_24px2["CoreUiArrowDownLeftOutline_24px"] = "core-ui-arrow-down-left_outline_24px";
  HdsIconlibrary_24px2["CoreUiArrowDownLeftSolid_24px"] = "core-ui-arrow-down-left_solid_24px";
  HdsIconlibrary_24px2["CoreUiArrowDownRightOutline_24px"] = "core-ui-arrow-down-right_outline_24px";
  HdsIconlibrary_24px2["CoreUiArrowDownRightSolid_24px"] = "core-ui-arrow-down-right_solid_24px";
  HdsIconlibrary_24px2["CoreUiArrowLeftOutline_24px"] = "core-ui-arrow-left_outline_24px";
  HdsIconlibrary_24px2["CoreUiArrowLeftSolid_24px"] = "core-ui-arrow-left_solid_24px";
  HdsIconlibrary_24px2["CoreUiArrowRightOutline_24px"] = "core-ui-arrow-right_outline_24px";
  HdsIconlibrary_24px2["CoreUiArrowRightSolid_24px"] = "core-ui-arrow-right_solid_24px";
  HdsIconlibrary_24px2["CoreUiArrowUpOutline_24px"] = "core-ui-arrow-up_outline_24px";
  HdsIconlibrary_24px2["CoreUiArrowUpSolid_24px"] = "core-ui-arrow-up_solid_24px";
  HdsIconlibrary_24px2["CoreUiArrowUpLeftOutline_24px"] = "core-ui-arrow-up-left_outline_24px";
  HdsIconlibrary_24px2["CoreUiArrowUpLeftSolid_24px"] = "core-ui-arrow-up-left_solid_24px";
  HdsIconlibrary_24px2["CoreUiArrowUpRightOutline_24px"] = "core-ui-arrow-up-right_outline_24px";
  HdsIconlibrary_24px2["CoreUiArrowUpRightSolid_24px"] = "core-ui-arrow-up-right_solid_24px";
  HdsIconlibrary_24px2["CoreUiAttentionOutline_24px"] = "core-ui-attention_outline_24px";
  HdsIconlibrary_24px2["CoreUiAttentionSolid_24px"] = "core-ui-attention_solid_24px";
  HdsIconlibrary_24px2["CoreUiBatteryChargingOutline_24px"] = "core-ui-battery-charging_outline_24px";
  HdsIconlibrary_24px2["CoreUiBatteryChargingSolid_24px"] = "core-ui-battery-charging_solid_24px";
  HdsIconlibrary_24px2["CoreUiBatteryEmptyOutline_24px"] = "core-ui-battery-empty_outline_24px";
  HdsIconlibrary_24px2["CoreUiBatteryEmptySolid_24px"] = "core-ui-battery-empty_solid_24px";
  HdsIconlibrary_24px2["CoreUiBatteryFullOutline_24px"] = "core-ui-battery-full_outline_24px";
  HdsIconlibrary_24px2["CoreUiBatteryFullSolid_24px"] = "core-ui-battery-full_solid_24px";
  HdsIconlibrary_24px2["CoreUiBatteryHalfOutline_24px"] = "core-ui-battery-half_outline_24px";
  HdsIconlibrary_24px2["CoreUiBatteryHalfSolid_24px"] = "core-ui-battery-half_solid_24px";
  HdsIconlibrary_24px2["CoreUiBatteryLowOutline_24px"] = "core-ui-battery-low_outline_24px";
  HdsIconlibrary_24px2["CoreUiBatteryLowSolid_24px"] = "core-ui-battery-low_solid_24px";
  HdsIconlibrary_24px2["CoreUiBluetoothOutline_24px"] = "core-ui-bluetooth_outline_24px";
  HdsIconlibrary_24px2["CoreUiBluetoothSolid_24px"] = "core-ui-bluetooth_solid_24px";
  HdsIconlibrary_24px2["CoreUiBluetoothOffOutline_24px"] = "core-ui-bluetooth-off_outline_24px";
  HdsIconlibrary_24px2["CoreUiBluetoothOffSolid_24px"] = "core-ui-bluetooth-off_solid_24px";
  HdsIconlibrary_24px2["CoreUiBookmarkOutline_24px"] = "core-ui-bookmark_outline_24px";
  HdsIconlibrary_24px2["CoreUiBookmarkSolid_24px"] = "core-ui-bookmark_solid_24px";
  HdsIconlibrary_24px2["CoreUiBookmarkAddOutline_24px"] = "core-ui-bookmark-add_outline_24px";
  HdsIconlibrary_24px2["CoreUiBookmarkAddSolid_24px"] = "core-ui-bookmark-add_solid_24px";
  HdsIconlibrary_24px2["CoreUiCheckmarkOutline_24px"] = "core-ui-checkmark_outline_24px";
  HdsIconlibrary_24px2["CoreUiCheckmarkSolid_24px"] = "core-ui-checkmark_solid_24px";
  HdsIconlibrary_24px2["CoreUiChevronDownOutline_24px"] = "core-ui-chevron-down_outline_24px";
  HdsIconlibrary_24px2["CoreUiChevronDownSolid_24px"] = "core-ui-chevron-down_solid_24px";
  HdsIconlibrary_24px2["CoreUiChevronLeftOutline_24px"] = "core-ui-chevron-left_outline_24px";
  HdsIconlibrary_24px2["CoreUiChevronLeftSolid_24px"] = "core-ui-chevron-left_solid_24px";
  HdsIconlibrary_24px2["CoreUiChevronLeftDoubleOutline_24px"] = "core-ui-chevron-left-double_outline_24px";
  HdsIconlibrary_24px2["CoreUiChevronLeftDoubleSolid_24px"] = "core-ui-chevron-left-double_solid_24px";
  HdsIconlibrary_24px2["CoreUiChevronRightOutline_24px"] = "core-ui-chevron-right_outline_24px";
  HdsIconlibrary_24px2["CoreUiChevronRightSolid_24px"] = "core-ui-chevron-right_solid_24px";
  HdsIconlibrary_24px2["CoreUiChevronRightDoubleOutline_24px"] = "core-ui-chevron-right-double_outline_24px";
  HdsIconlibrary_24px2["CoreUiChevronRightDoubleSolid_24px"] = "core-ui-chevron-right-double_solid_24px";
  HdsIconlibrary_24px2["CoreUiChevronUpOutline_24px"] = "core-ui-chevron-up_outline_24px";
  HdsIconlibrary_24px2["CoreUiChevronUpSolid_24px"] = "core-ui-chevron-up_solid_24px";
  HdsIconlibrary_24px2["CoreUiChevronUpDownOutline_24px"] = "core-ui-chevron-up-down_outline_24px";
  HdsIconlibrary_24px2["CoreUiChevronUpDownSolid_24px"] = "core-ui-chevron-up-down_solid_24px";
  HdsIconlibrary_24px2["CoreUiClearOutline_24px"] = "core-ui-clear_outline_24px";
  HdsIconlibrary_24px2["CoreUiClearSolid_24px"] = "core-ui-clear_solid_24px";
  HdsIconlibrary_24px2["CoreUiCollapseOutline_24px"] = "core-ui-collapse_outline_24px";
  HdsIconlibrary_24px2["CoreUiCollapseSolid_24px"] = "core-ui-collapse_solid_24px";
  HdsIconlibrary_24px2["CoreUiCommentOutline_24px"] = "core-ui-comment_outline_24px";
  HdsIconlibrary_24px2["CoreUiCommentSolid_24px"] = "core-ui-comment_solid_24px";
  HdsIconlibrary_24px2["CoreUiConfirmOutline_24px"] = "core-ui-confirm_outline_24px";
  HdsIconlibrary_24px2["CoreUiConfirmSolid_24px"] = "core-ui-confirm_solid_24px";
  HdsIconlibrary_24px2["CoreUiCrossOutline_24px"] = "core-ui-cross_outline_24px";
  HdsIconlibrary_24px2["CoreUiCrossSolid_24px"] = "core-ui-cross_solid_24px";
  HdsIconlibrary_24px2["CoreUiDeleteOutline_24px"] = "core-ui-delete_outline_24px";
  HdsIconlibrary_24px2["CoreUiDeleteSolid_24px"] = "core-ui-delete_solid_24px";
  HdsIconlibrary_24px2["CoreUiDetailsOutline_24px"] = "core-ui-details_outline_24px";
  HdsIconlibrary_24px2["CoreUiDetailsSolid_24px"] = "core-ui-details_solid_24px";
  HdsIconlibrary_24px2["CoreUiDragListOutline_24px"] = "core-ui-drag-list_outline_24px";
  HdsIconlibrary_24px2["CoreUiDragListSolid_24px"] = "core-ui-drag-list_solid_24px";
  HdsIconlibrary_24px2["CoreUiEditOutline_24px"] = "core-ui-edit_outline_24px";
  HdsIconlibrary_24px2["CoreUiEditSolid_24px"] = "core-ui-edit_solid_24px";
  HdsIconlibrary_24px2["CoreUiEditedOutline_24px"] = "core-ui-edited_outline_24px";
  HdsIconlibrary_24px2["CoreUiEditedSolid_24px"] = "core-ui-edited_solid_24px";
  HdsIconlibrary_24px2["CoreUiExpandOutline_24px"] = "core-ui-expand_outline_24px";
  HdsIconlibrary_24px2["CoreUiExpandSolid_24px"] = "core-ui-expand_solid_24px";
  HdsIconlibrary_24px2["CoreUiExternalLinkOutline_24px"] = "core-ui-external-link_outline_24px";
  HdsIconlibrary_24px2["CoreUiExternalLinkSolid_24px"] = "core-ui-external-link_solid_24px";
  HdsIconlibrary_24px2["CoreUiFallbackItemOutline_24px"] = "core-ui-fallback-item_outline_24px";
  HdsIconlibrary_24px2["CoreUiFallbackItemSolid_24px"] = "core-ui-fallback-item_solid_24px";
  HdsIconlibrary_24px2["CoreUiFolderClosedOutline_24px"] = "core-ui-folder-closed_outline_24px";
  HdsIconlibrary_24px2["CoreUiFolderClosedSolid_24px"] = "core-ui-folder-closed_solid_24px";
  HdsIconlibrary_24px2["CoreUiFolderOpenOutline_24px"] = "core-ui-folder-open_outline_24px";
  HdsIconlibrary_24px2["CoreUiFolderOpenSolid_24px"] = "core-ui-folder-open_solid_24px";
  HdsIconlibrary_24px2["CoreUiGpsOutline_24px"] = "core-ui-gps_outline_24px";
  HdsIconlibrary_24px2["CoreUiGpsSolid_24px"] = "core-ui-gps_solid_24px";
  HdsIconlibrary_24px2["CoreUiHelpOutline_24px"] = "core-ui-help_outline_24px";
  HdsIconlibrary_24px2["CoreUiHelpSolid_24px"] = "core-ui-help_solid_24px";
  HdsIconlibrary_24px2["CoreUiHereLogoOutline_24px"] = "core-ui-HERE-logo_outline_24px";
  HdsIconlibrary_24px2["CoreUiHereLogoSolid_24px"] = "core-ui-HERE-logo_solid_24px";
  HdsIconlibrary_24px2["CoreUiHideOutline_24px"] = "core-ui-hide_outline_24px";
  HdsIconlibrary_24px2["CoreUiHideSolid_24px"] = "core-ui-hide_solid_24px";
  HdsIconlibrary_24px2["CoreUiHideAltOutline_24px"] = "core-ui-hide-alt_outline_24px";
  HdsIconlibrary_24px2["CoreUiHideAltSolid_24px"] = "core-ui-hide-alt_solid_24px";
  HdsIconlibrary_24px2["CoreUiHideMenuOutline_24px"] = "core-ui-hide-menu_outline_24px";
  HdsIconlibrary_24px2["CoreUiHideMenuSolid_24px"] = "core-ui-hide-menu_solid_24px";
  HdsIconlibrary_24px2["CoreUiHistoryOutline_24px"] = "core-ui-history_outline_24px";
  HdsIconlibrary_24px2["CoreUiHistorySolid_24px"] = "core-ui-history_solid_24px";
  HdsIconlibrary_24px2["CoreUiInboxAttentionOutline_24px"] = "core-ui-inbox-attention_outline_24px";
  HdsIconlibrary_24px2["CoreUiInboxAttentionSolid_24px"] = "core-ui-inbox-attention_solid_24px";
  HdsIconlibrary_24px2["CoreUiInformationOutline_24px"] = "core-ui-information_outline_24px";
  HdsIconlibrary_24px2["CoreUiInformationSolid_24px"] = "core-ui-information_solid_24px";
  HdsIconlibrary_24px2["CoreUiInvalidOutline_24px"] = "core-ui-invalid_outline_24px";
  HdsIconlibrary_24px2["CoreUiInvalidSolid_24px"] = "core-ui-invalid_solid_24px";
  HdsIconlibrary_24px2["CoreUiLoadingOutline_24px"] = "core-ui-loading_outline_24px";
  HdsIconlibrary_24px2["CoreUiLoadingSolid_24px"] = "core-ui-loading_solid_24px";
  HdsIconlibrary_24px2["CoreUiLocationOffOutline_24px"] = "core-ui-location-off_outline_24px";
  HdsIconlibrary_24px2["CoreUiLocationOffSolid_24px"] = "core-ui-location-off_solid_24px";
  HdsIconlibrary_24px2["CoreUiLockOutline_24px"] = "core-ui-lock_outline_24px";
  HdsIconlibrary_24px2["CoreUiLockSolid_24px"] = "core-ui-lock_solid_24px";
  HdsIconlibrary_24px2["CoreUiLockBreakOutline_24px"] = "core-ui-lock-break_outline_24px";
  HdsIconlibrary_24px2["CoreUiLockBreakSolid_24px"] = "core-ui-lock-break_solid_24px";
  HdsIconlibrary_24px2["CoreUiMenuOutline_24px"] = "core-ui-menu_outline_24px";
  HdsIconlibrary_24px2["CoreUiMenuSolid_24px"] = "core-ui-menu_solid_24px";
  HdsIconlibrary_24px2["CoreUiMicrophoneOutline_24px"] = "core-ui-microphone_outline_24px";
  HdsIconlibrary_24px2["CoreUiMicrophoneSolid_24px"] = "core-ui-microphone_solid_24px";
  HdsIconlibrary_24px2["CoreUiMicrophoneOffOutline_24px"] = "core-ui-microphone-off_outline_24px";
  HdsIconlibrary_24px2["CoreUiMicrophoneOffSolid_24px"] = "core-ui-microphone-off_solid_24px";
  HdsIconlibrary_24px2["CoreUiMinusOutline_24px"] = "core-ui-minus_outline_24px";
  HdsIconlibrary_24px2["CoreUiMinusSolid_24px"] = "core-ui-minus_solid_24px";
  HdsIconlibrary_24px2["CoreUiNotificationsOutline_24px"] = "core-ui-notifications_outline_24px";
  HdsIconlibrary_24px2["CoreUiNotificationsSolid_24px"] = "core-ui-notifications_solid_24px";
  HdsIconlibrary_24px2["CoreUiOverflowHoriCenterOutline_24px"] = "core-ui-overflow-hori-center_outline_24px";
  HdsIconlibrary_24px2["CoreUiOverflowHoriCenterSolid_24px"] = "core-ui-overflow-hori-center_solid_24px";
  HdsIconlibrary_24px2["CoreUiOverflowVertCenterOutline_24px"] = "core-ui-overflow-vert-center_outline_24px";
  HdsIconlibrary_24px2["CoreUiOverflowVertCenterSolid_24px"] = "core-ui-overflow-vert-center_solid_24px";
  HdsIconlibrary_24px2["CoreUiOverflowVertRightOutline_24px"] = "core-ui-overflow-vert-right_outline_24px";
  HdsIconlibrary_24px2["CoreUiOverflowVertRightSolid_24px"] = "core-ui-overflow-vert-right_solid_24px";
  HdsIconlibrary_24px2["CoreUiPlusOutline_24px"] = "core-ui-plus_outline_24px";
  HdsIconlibrary_24px2["CoreUiPlusSolid_24px"] = "core-ui-plus_solid_24px";
  HdsIconlibrary_24px2["CoreUiProfileOutline_24px"] = "core-ui-profile_outline_24px";
  HdsIconlibrary_24px2["CoreUiProfileSolid_24px"] = "core-ui-profile_solid_24px";
  HdsIconlibrary_24px2["CoreUiQuestionMarkOutline_24px"] = "core-ui-question-mark_outline_24px";
  HdsIconlibrary_24px2["CoreUiQuestionMarkSolid_24px"] = "core-ui-question-mark_solid_24px";
  HdsIconlibrary_24px2["CoreUiRedoOutline_24px"] = "core-ui-redo_outline_24px";
  HdsIconlibrary_24px2["CoreUiRedoSolid_24px"] = "core-ui-redo_solid_24px";
  HdsIconlibrary_24px2["CoreUiRefreshOutline_24px"] = "core-ui-refresh_outline_24px";
  HdsIconlibrary_24px2["CoreUiRefreshSolid_24px"] = "core-ui-refresh_solid_24px";
  HdsIconlibrary_24px2["CoreUiReportOutline_24px"] = "core-ui-report_outline_24px";
  HdsIconlibrary_24px2["CoreUiReportSolid_24px"] = "core-ui-report_solid_24px";
  HdsIconlibrary_24px2["CoreUiResetOutline_24px"] = "core-ui-reset_outline_24px";
  HdsIconlibrary_24px2["CoreUiResetSolid_24px"] = "core-ui-reset_solid_24px";
  HdsIconlibrary_24px2["CoreUiSaveOutline_24px"] = "core-ui-save_outline_24px";
  HdsIconlibrary_24px2["CoreUiSaveSolid_24px"] = "core-ui-save_solid_24px";
  HdsIconlibrary_24px2["CoreUiSearchOutline_24px"] = "core-ui-search_outline_24px";
  HdsIconlibrary_24px2["CoreUiSearchSolid_24px"] = "core-ui-search_solid_24px";
  HdsIconlibrary_24px2["CoreUiSettingsOutline_24px"] = "core-ui-settings_outline_24px";
  HdsIconlibrary_24px2["CoreUiSettingsSolid_24px"] = "core-ui-settings_solid_24px";
  HdsIconlibrary_24px2["CoreUiShowOutline_24px"] = "core-ui-show_outline_24px";
  HdsIconlibrary_24px2["CoreUiShowSolid_24px"] = "core-ui-show_solid_24px";
  HdsIconlibrary_24px2["CoreUiShowMenuOutline_24px"] = "core-ui-show-menu_outline_24px";
  HdsIconlibrary_24px2["CoreUiShowMenuSolid_24px"] = "core-ui-show-menu_solid_24px";
  HdsIconlibrary_24px2["CoreUiSignInOutline_24px"] = "core-ui-sign-in_outline_24px";
  HdsIconlibrary_24px2["CoreUiSignInSolid_24px"] = "core-ui-sign-in_solid_24px";
  HdsIconlibrary_24px2["CoreUiSignOutOutline_24px"] = "core-ui-sign-out_outline_24px";
  HdsIconlibrary_24px2["CoreUiSignOutSolid_24px"] = "core-ui-sign-out_solid_24px";
  HdsIconlibrary_24px2["CoreUiSlashOutline_24px"] = "core-ui-slash_outline_24px";
  HdsIconlibrary_24px2["CoreUiSlashSolid_24px"] = "core-ui-slash_solid_24px";
  HdsIconlibrary_24px2["CoreUiSubmitOutline_24px"] = "core-ui-submit_outline_24px";
  HdsIconlibrary_24px2["CoreUiSubmitSolid_24px"] = "core-ui-submit_solid_24px";
  HdsIconlibrary_24px2["CoreUiSubstractOutline_24px"] = "core-ui-substract_outline_24px";
  HdsIconlibrary_24px2["CoreUiSubstractSolid_24px"] = "core-ui-substract_solid_24px";
  HdsIconlibrary_24px2["CoreUiSwitchHorizontalOutline_24px"] = "core-ui-switch-horizontal_outline_24px";
  HdsIconlibrary_24px2["CoreUiSwitchHorizontalSolid_24px"] = "core-ui-switch-horizontal_solid_24px";
  HdsIconlibrary_24px2["CoreUiSwitchVerticalOutline_24px"] = "core-ui-switch-vertical_outline_24px";
  HdsIconlibrary_24px2["CoreUiSwitchVerticalSolid_24px"] = "core-ui-switch-vertical_solid_24px";
  HdsIconlibrary_24px2["CoreUiTagOutline_24px"] = "core-ui-tag_outline_24px";
  HdsIconlibrary_24px2["CoreUiTagSolid_24px"] = "core-ui-tag_solid_24px";
  HdsIconlibrary_24px2["CoreUiTimeOutline_24px"] = "core-ui-time_outline_24px";
  HdsIconlibrary_24px2["CoreUiTimeSolid_24px"] = "core-ui-time_solid_24px";
  HdsIconlibrary_24px2["CoreUiUndoOutline_24px"] = "core-ui-undo_outline_24px";
  HdsIconlibrary_24px2["CoreUiUndoSolid_24px"] = "core-ui-undo_solid_24px";
  HdsIconlibrary_24px2["CoreUiUnlockOutline_24px"] = "core-ui-unlock_outline_24px";
  HdsIconlibrary_24px2["CoreUiUnlockSolid_24px"] = "core-ui-unlock_solid_24px";
  HdsIconlibrary_24px2["CoreUiVolumeAlertOutline_24px"] = "core-ui-volume-alert_outline_24px";
  HdsIconlibrary_24px2["CoreUiVolumeAlertSolid_24px"] = "core-ui-volume-alert_solid_24px";
  HdsIconlibrary_24px2["CoreUiVolumeHighOutline_24px"] = "core-ui-volume-high_outline_24px";
  HdsIconlibrary_24px2["CoreUiVolumeHighSolid_24px"] = "core-ui-volume-high_solid_24px";
  HdsIconlibrary_24px2["CoreUiVolumeLowOutline_24px"] = "core-ui-volume-low_outline_24px";
  HdsIconlibrary_24px2["CoreUiVolumeLowSolid_24px"] = "core-ui-volume-low_solid_24px";
  HdsIconlibrary_24px2["CoreUiVolumeMediumOutline_24px"] = "core-ui-volume-medium_outline_24px";
  HdsIconlibrary_24px2["CoreUiVolumeMediumSolid_24px"] = "core-ui-volume-medium_solid_24px";
  HdsIconlibrary_24px2["CoreUiVolumeNoSoundOutline_24px"] = "core-ui-volume-no-sound_outline_24px";
  HdsIconlibrary_24px2["CoreUiVolumeNoSoundSolid_24px"] = "core-ui-volume-no-sound_solid_24px";
  HdsIconlibrary_24px2["CoreUiVolumeOffOutline_24px"] = "core-ui-volume-off_outline_24px";
  HdsIconlibrary_24px2["CoreUiVolumeOffSolid_24px"] = "core-ui-volume-off_solid_24px";
  HdsIconlibrary_24px2["CoreUiWifiLowOutline_24px"] = "core-ui-wifi-low_outline_24px";
  HdsIconlibrary_24px2["CoreUiWifiLowSolid_24px"] = "core-ui-wifi-low_solid_24px";
  HdsIconlibrary_24px2["CoreUiWifiMediumOutline_24px"] = "core-ui-wifi-medium_outline_24px";
  HdsIconlibrary_24px2["CoreUiWifiMediumSolid_24px"] = "core-ui-wifi-medium_solid_24px";
  HdsIconlibrary_24px2["CoreUiWifiOffOutline_24px"] = "core-ui-wifi-off_outline_24px";
  HdsIconlibrary_24px2["CoreUiWifiOffSolid_24px"] = "core-ui-wifi-off_solid_24px";
  HdsIconlibrary_24px2["CoreUiWifiStrongOutline_24px"] = "core-ui-wifi-strong_outline_24px";
  HdsIconlibrary_24px2["CoreUiWifiStrongSolid_24px"] = "core-ui-wifi-strong_solid_24px";
  HdsIconlibrary_24px2["DataAppOutline_24px"] = "data-app_outline_24px";
  HdsIconlibrary_24px2["DataAppSolid_24px"] = "data-app_solid_24px";
  HdsIconlibrary_24px2["DataCatalogOutline_24px"] = "data-catalog_outline_24px";
  HdsIconlibrary_24px2["DataCatalogSolid_24px"] = "data-catalog_solid_24px";
  HdsIconlibrary_24px2["DataConflateOutline_24px"] = "data-conflate_outline_24px";
  HdsIconlibrary_24px2["DataConflateSolid_24px"] = "data-conflate_solid_24px";
  HdsIconlibrary_24px2["DataDatabaseOutline_24px"] = "data-database_outline_24px";
  HdsIconlibrary_24px2["DataDatabaseSolid_24px"] = "data-database_solid_24px";
  HdsIconlibrary_24px2["DataDeployOutline_24px"] = "data-deploy_outline_24px";
  HdsIconlibrary_24px2["DataDeploySolid_24px"] = "data-deploy_solid_24px";
  HdsIconlibrary_24px2["DataExportOutline_24px"] = "data-export_outline_24px";
  HdsIconlibrary_24px2["DataExportSolid_24px"] = "data-export_solid_24px";
  HdsIconlibrary_24px2["DataIndexOutline_24px"] = "data-index_outline_24px";
  HdsIconlibrary_24px2["DataIndexSolid_24px"] = "data-index_solid_24px";
  HdsIconlibrary_24px2["DataInspectOutline_24px"] = "data-inspect_outline_24px";
  HdsIconlibrary_24px2["DataInspectSolid_24px"] = "data-inspect_solid_24px";
  HdsIconlibrary_24px2["DataInteractiveOutline_24px"] = "data-interactive_outline_24px";
  HdsIconlibrary_24px2["DataInteractiveSolid_24px"] = "data-interactive_solid_24px";
  HdsIconlibrary_24px2["DataLayersOutline_24px"] = "data-layers_outline_24px";
  HdsIconlibrary_24px2["DataLayersSolid_24px"] = "data-layers_solid_24px";
  HdsIconlibrary_24px2["DataMarketplaceOutline_24px"] = "data-marketplace_outline_24px";
  HdsIconlibrary_24px2["DataMarketplaceSolid_24px"] = "data-marketplace_solid_24px";
  HdsIconlibrary_24px2["DataPipelineOutline_24px"] = "data-pipeline_outline_24px";
  HdsIconlibrary_24px2["DataPipelineSolid_24px"] = "data-pipeline_solid_24px";
  HdsIconlibrary_24px2["DataRestOutline_24px"] = "data-rest_outline_24px";
  HdsIconlibrary_24px2["DataRestSolid_24px"] = "data-rest_solid_24px";
  HdsIconlibrary_24px2["DataReviewOutline_24px"] = "data-review_outline_24px";
  HdsIconlibrary_24px2["DataReviewSolid_24px"] = "data-review_solid_24px";
  HdsIconlibrary_24px2["DataSendToListOutline_24px"] = "data-send-to-list_outline_24px";
  HdsIconlibrary_24px2["DataSendToListSolid_24px"] = "data-send-to-list_solid_24px";
  HdsIconlibrary_24px2["DataServicesOutline_24px"] = "data-services_outline_24px";
  HdsIconlibrary_24px2["DataServicesSolid_24px"] = "data-services_solid_24px";
  HdsIconlibrary_24px2["DataStreamOutline_24px"] = "data-stream_outline_24px";
  HdsIconlibrary_24px2["DataStreamSolid_24px"] = "data-stream_solid_24px";
  HdsIconlibrary_24px2["DataTemplateOutline_24px"] = "data-template_outline_24px";
  HdsIconlibrary_24px2["DataTemplateSolid_24px"] = "data-template_solid_24px";
  HdsIconlibrary_24px2["DataVersionedOutline_24px"] = "data-versioned_outline_24px";
  HdsIconlibrary_24px2["DataVersionedSolid_24px"] = "data-versioned_solid_24px";
  HdsIconlibrary_24px2["DataVolatileOutline_24px"] = "data-volatile_outline_24px";
  HdsIconlibrary_24px2["DataVolatileSolid_24px"] = "data-volatile_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsBarcodeReaderOutline_24px"] = "devices-sensors-barcode-reader_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsBarcodeReaderSolid_24px"] = "devices-sensors-barcode-reader_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsCameraOutline_24px"] = "devices-sensors-camera_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsCameraSolid_24px"] = "devices-sensors-camera_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsComputerChipOutline_24px"] = "devices-sensors-computer-chip_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsComputerChipSolid_24px"] = "devices-sensors-computer-chip_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsDeviceConnectedOutline_24px"] = "devices-sensors-device-connected_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsDeviceConnectedSolid_24px"] = "devices-sensors-device-connected_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsDeviceGroupConnectedOutline_24px"] = "devices-sensors-device-group-connected_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsDeviceGroupConnectedSolid_24px"] = "devices-sensors-device-group-connected_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsDeviceGroupFilterOutline_24px"] = "devices-sensors-device-group-filter_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsDeviceGroupFilterSolid_24px"] = "devices-sensors-device-group-filter_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsDeviceGroupSmartFilterOutline_24px"] = "devices-sensors-device-group-smart-filter_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsDeviceGroupSmartFilterSolid_24px"] = "devices-sensors-device-group-smart-filter_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsHdtvOutline_24px"] = "devices-sensors-hdtv_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsHdtvSolid_24px"] = "devices-sensors-hdtv_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsKeyboardOutline_24px"] = "devices-sensors-keyboard_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsKeyboardSolid_24px"] = "devices-sensors-keyboard_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsLogicOutline_24px"] = "devices-sensors-logic_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsLogicSolid_24px"] = "devices-sensors-logic_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsMonitorOutline_24px"] = "devices-sensors-monitor_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsMonitorSolid_24px"] = "devices-sensors-monitor_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsPairedModeOutline_24px"] = "devices-sensors-paired-mode_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsPairedModeSolid_24px"] = "devices-sensors-paired-mode_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsPrinterOutline_24px"] = "devices-sensors-printer_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsPrinterSolid_24px"] = "devices-sensors-printer_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsProjectorOutline_24px"] = "devices-sensors-projector_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsProjectorSolid_24px"] = "devices-sensors-projector_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsScannerOutline_24px"] = "devices-sensors-scanner_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsScannerSolid_24px"] = "devices-sensors-scanner_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsSensorAirpressureOutline_24px"] = "devices-sensors-sensor-airpressure_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsSensorAirpressureSolid_24px"] = "devices-sensors-sensor-airpressure_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsSensorHumidityOutline_24px"] = "devices-sensors-sensor-humidity_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsSensorHumiditySolid_24px"] = "devices-sensors-sensor-humidity_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsSensorShockOutline_24px"] = "devices-sensors-sensor-shock_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsSensorShockSolid_24px"] = "devices-sensors-sensor-shock_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsSensorTemperatureOutline_24px"] = "devices-sensors-sensor-temperature_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsSensorTemperatureSolid_24px"] = "devices-sensors-sensor-temperature_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsSmartphoneOutline_24px"] = "devices-sensors-smartphone_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsSmartphoneSolid_24px"] = "devices-sensors-smartphone_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsSoftwareOutline_24px"] = "devices-sensors-software_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsSoftwareSolid_24px"] = "devices-sensors-software_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsSpeakerOutline_24px"] = "devices-sensors-speaker_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsSpeakerSolid_24px"] = "devices-sensors-speaker_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsTabletOutline_24px"] = "devices-sensors-tablet_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsTabletSolid_24px"] = "devices-sensors-tablet_solid_24px";
  HdsIconlibrary_24px2["DevicesSensorsWhiteboardOutline_24px"] = "devices-sensors-whiteboard_outline_24px";
  HdsIconlibrary_24px2["DevicesSensorsWhiteboardSolid_24px"] = "devices-sensors-whiteboard_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingCalendarOutline_24px"] = "discovery-sharing-calendar_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingCalendarSolid_24px"] = "discovery-sharing-calendar_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingCalendarAddOutline_24px"] = "discovery-sharing-calendar-add_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingCalendarAddSolid_24px"] = "discovery-sharing-calendar-add_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingDetailsOutline_24px"] = "discovery-sharing-details_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingDetailsSolid_24px"] = "discovery-sharing-details_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingDistributeOutline_24px"] = "discovery-sharing-distribute_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingDistributeSolid_24px"] = "discovery-sharing-distribute_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingDownloadOutline_24px"] = "discovery-sharing-download_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingDownloadSolid_24px"] = "discovery-sharing-download_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingDownloadCloudOutline_24px"] = "discovery-sharing-download-cloud_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingDownloadCloudSolid_24px"] = "discovery-sharing-download-cloud_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingFilterOffOutline_24px"] = "discovery-sharing-filter-off_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingFilterOffSolid_24px"] = "discovery-sharing-filter-off_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingFilterOnOutline_24px"] = "discovery-sharing-filter-on_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingFilterOnSolid_24px"] = "discovery-sharing-filter-on_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingGridTypeEOutline_24px"] = "discovery-sharing-grid-type-E_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingGridTypeESolid_24px"] = "discovery-sharing-grid-type-E_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingGridTypeAOutline_24px"] = "discovery-sharing-grid-typeA_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingGridTypeASolid_24px"] = "discovery-sharing-grid-typeA_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingGridTypeBOutline_24px"] = "discovery-sharing-grid-typeB_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingGridTypeBSolid_24px"] = "discovery-sharing-grid-typeB_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingGridTypeCOutline_24px"] = "discovery-sharing-grid-typeC_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingGridTypeCSolid_24px"] = "discovery-sharing-grid-typeC_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingGridTypeDOutline_24px"] = "discovery-sharing-grid-typeD_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingGridTypeDSolid_24px"] = "discovery-sharing-grid-typeD_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingGroupOutline_24px"] = "discovery-sharing-group_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingGroupSolid_24px"] = "discovery-sharing-group_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingGroupFilterOutline_24px"] = "discovery-sharing-group-filter_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingGroupFilterSolid_24px"] = "discovery-sharing-group-filter_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingGroupSmartFilterOutline_24px"] = "discovery-sharing-group-smart-filter_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingGroupSmartFilterSolid_24px"] = "discovery-sharing-group-smart-filter_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingHideOutline_24px"] = "discovery-sharing-hide_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingHideSolid_24px"] = "discovery-sharing-hide_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingLinkOutline_24px"] = "discovery-sharing-link_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingLinkSolid_24px"] = "discovery-sharing-link_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingListTypeAOutline_24px"] = "discovery-sharing-list-typeA_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingListTypeASolid_24px"] = "discovery-sharing-list-typeA_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingListTypeBOutline_24px"] = "discovery-sharing-list-typeB_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingListTypeBSolid_24px"] = "discovery-sharing-list-typeB_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingMapsDownloadOutline_24px"] = "discovery-sharing-maps-download_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingMapsDownloadSolid_24px"] = "discovery-sharing-maps-download_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingMapsUpdateOutline_24px"] = "discovery-sharing-maps-update_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingMapsUpdateSolid_24px"] = "discovery-sharing-maps-update_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingNoContentOutline_24px"] = "discovery-sharing-no-content_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingNoContentSolid_24px"] = "discovery-sharing-no-content_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingNotInSyncOutline_24px"] = "discovery-sharing-not-in-sync_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingNotInSyncSolid_24px"] = "discovery-sharing-not-in-sync_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingShareAndroidOutline_24px"] = "discovery-sharing-share-Android_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingShareAndroidSolid_24px"] = "discovery-sharing-share-Android_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingShareIOsOutline_24px"] = "discovery-sharing-share-iOS_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingShareIOsSolid_24px"] = "discovery-sharing-share-iOS_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingShowOutline_24px"] = "discovery-sharing-show_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingShowSolid_24px"] = "discovery-sharing-show_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingUnlinkOutline_24px"] = "discovery-sharing-unlink_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingUnlinkSolid_24px"] = "discovery-sharing-unlink_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingUploadOutline_24px"] = "discovery-sharing-upload_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingUploadSolid_24px"] = "discovery-sharing-upload_solid_24px";
  HdsIconlibrary_24px2["DiscoverySharingUploadCloudOutline_24px"] = "discovery-sharing-upload-cloud_outline_24px";
  HdsIconlibrary_24px2["DiscoverySharingUploadCloudSolid_24px"] = "discovery-sharing-upload-cloud_solid_24px";
  HdsIconlibrary_24px2["FileArchiveOutline_24px"] = "file-archive_outline_24px";
  HdsIconlibrary_24px2["FileArchiveSolid_24px"] = "file-archive_solid_24px";
  HdsIconlibrary_24px2["FileCopyOutline_24px"] = "file-copy_outline_24px";
  HdsIconlibrary_24px2["FileCopySolid_24px"] = "file-copy_solid_24px";
  HdsIconlibrary_24px2["FileDocFileOutline_24px"] = "file-DOC-File_outline_24px";
  HdsIconlibrary_24px2["FileDocFileSolid_24px"] = "file-DOC-File_solid_24px";
  HdsIconlibrary_24px2["FileEpsFileOutline_24px"] = "file-EPS-File_outline_24px";
  HdsIconlibrary_24px2["FileEpsFileSolid_24px"] = "file-EPS-File_solid_24px";
  HdsIconlibrary_24px2["FileFileOutline_24px"] = "file-file_outline_24px";
  HdsIconlibrary_24px2["FileFileSolid_24px"] = "file-file_solid_24px";
  HdsIconlibrary_24px2["FileGifFileOutline_24px"] = "file-GIF-File_outline_24px";
  HdsIconlibrary_24px2["FileGifFileSolid_24px"] = "file-GIF-File_solid_24px";
  HdsIconlibrary_24px2["FileHtmlFileOutline_24px"] = "file-HTML-File_outline_24px";
  HdsIconlibrary_24px2["FileHtmlFileSolid_24px"] = "file-HTML-File_solid_24px";
  HdsIconlibrary_24px2["FileImageOutline_24px"] = "file-image_outline_24px";
  HdsIconlibrary_24px2["FileImageSolid_24px"] = "file-image_solid_24px";
  HdsIconlibrary_24px2["FileJpgFileOutline_24px"] = "file-JPG-File_outline_24px";
  HdsIconlibrary_24px2["FileJpgFileSolid_24px"] = "file-JPG-File_solid_24px";
  HdsIconlibrary_24px2["FileJsonFileOutline_24px"] = "file-JSON-File_outline_24px";
  HdsIconlibrary_24px2["FileJsonFileSolid_24px"] = "file-JSON-File_solid_24px";
  HdsIconlibrary_24px2["FileMp3FileOutline_24px"] = "file-MP3-File_outline_24px";
  HdsIconlibrary_24px2["FileMp3FileSolid_24px"] = "file-MP3-File_solid_24px";
  HdsIconlibrary_24px2["FilePdfFileOutline_24px"] = "file-PDF-File_outline_24px";
  HdsIconlibrary_24px2["FilePdfFileSolid_24px"] = "file-PDF-File_solid_24px";
  HdsIconlibrary_24px2["FilePngFileOutline_24px"] = "file-PNG-File_outline_24px";
  HdsIconlibrary_24px2["FilePngFileSolid_24px"] = "file-PNG-File_solid_24px";
  HdsIconlibrary_24px2["FileSvgFileOutline_24px"] = "file-SVG-File_outline_24px";
  HdsIconlibrary_24px2["FileSvgFileSolid_24px"] = "file-SVG-File_solid_24px";
  HdsIconlibrary_24px2["FileTiffFileOutline_24px"] = "file-TIFF-File_outline_24px";
  HdsIconlibrary_24px2["FileTiffFileSolid_24px"] = "file-TIFF-File_solid_24px";
  HdsIconlibrary_24px2["FileTxtFileOutline_24px"] = "file-TXT-File_outline_24px";
  HdsIconlibrary_24px2["FileTxtFileSolid_24px"] = "file-TXT-File_solid_24px";
  HdsIconlibrary_24px2["FileWavFileOutline_24px"] = "file-WAV-File_outline_24px";
  HdsIconlibrary_24px2["FileWavFileSolid_24px"] = "file-WAV-File_solid_24px";
  HdsIconlibrary_24px2["FileZipOutline_24px"] = "file-ZIP_outline_24px";
  HdsIconlibrary_24px2["FileZipSolid_24px"] = "file-ZIP_solid_24px";
  HdsIconlibrary_24px2["MapView_2DOutline_24px"] = "map-view-2D_outline_24px";
  HdsIconlibrary_24px2["MapView_2DSolid_24px"] = "map-view-2D_solid_24px";
  HdsIconlibrary_24px2["MapView_3DOutline_24px"] = "map-view-3D_outline_24px";
  HdsIconlibrary_24px2["MapView_3DSolid_24px"] = "map-view-3D_solid_24px";
  HdsIconlibrary_24px2["MapViewCameraFrustumOutline_24px"] = "map-view-camera-frustum_outline_24px";
  HdsIconlibrary_24px2["MapViewCameraFrustumSolid_24px"] = "map-view-camera-frustum_solid_24px";
  HdsIconlibrary_24px2["MapViewCameraOrbitOutline_24px"] = "map-view-camera-orbit_outline_24px";
  HdsIconlibrary_24px2["MapViewCameraOrbitSolid_24px"] = "map-view-camera-orbit_solid_24px";
  HdsIconlibrary_24px2["MapViewCameraTopdownOutline_24px"] = "map-view-camera-topdown_outline_24px";
  HdsIconlibrary_24px2["MapViewCameraTopdownSolid_24px"] = "map-view-camera-topdown_solid_24px";
  HdsIconlibrary_24px2["MapViewCameraViewOutline_24px"] = "map-view-camera-view_outline_24px";
  HdsIconlibrary_24px2["MapViewCameraViewSolid_24px"] = "map-view-camera-view_solid_24px";
  HdsIconlibrary_24px2["MapViewCompassOutline_24px"] = "map-view-compass_outline_24px";
  HdsIconlibrary_24px2["MapViewCompassSolid_24px"] = "map-view-compass_solid_24px";
  HdsIconlibrary_24px2["MapViewCurrentLocationOutline_24px"] = "map-view-current-location_outline_24px";
  HdsIconlibrary_24px2["MapViewCurrentLocationSolid_24px"] = "map-view-current-location_solid_24px";
  HdsIconlibrary_24px2["MapViewCurrentLocationOffOutline_24px"] = "map-view-current-location-off_outline_24px";
  HdsIconlibrary_24px2["MapViewCurrentLocationOffSolid_24px"] = "map-view-current-location-off_solid_24px";
  HdsIconlibrary_24px2["MapViewDashboardOutline_24px"] = "map-view-dashboard_outline_24px";
  HdsIconlibrary_24px2["MapViewDashboardSolid_24px"] = "map-view-dashboard_solid_24px";
  HdsIconlibrary_24px2["MapViewDistanceOutline_24px"] = "map-view-distance_outline_24px";
  HdsIconlibrary_24px2["MapViewDistanceSolid_24px"] = "map-view-distance_solid_24px";
  HdsIconlibrary_24px2["MapViewDotIndicatorOutline_24px"] = "map-view-dot-indicator_outline_24px";
  HdsIconlibrary_24px2["MapViewDotIndicatorSolid_24px"] = "map-view-dot-indicator_solid_24px";
  HdsIconlibrary_24px2["MapViewEastOutline_24px"] = "map-view-east_outline_24px";
  HdsIconlibrary_24px2["MapViewEastSolid_24px"] = "map-view-east_solid_24px";
  HdsIconlibrary_24px2["MapViewEastCharacterOutline_24px"] = "map-view-east-character_outline_24px";
  HdsIconlibrary_24px2["MapViewEastCharacterSolid_24px"] = "map-view-east-character_solid_24px";
  HdsIconlibrary_24px2["MapViewFlipHorizontalOutline_24px"] = "map-view-flip-horizontal_outline_24px";
  HdsIconlibrary_24px2["MapViewFlipHorizontalSolid_24px"] = "map-view-flip-horizontal_solid_24px";
  HdsIconlibrary_24px2["MapViewFlipVerticalOutline_24px"] = "map-view-flip-vertical_outline_24px";
  HdsIconlibrary_24px2["MapViewFlipVerticalSolid_24px"] = "map-view-flip-vertical_solid_24px";
  HdsIconlibrary_24px2["MapViewKeyframeOutline_24px"] = "map-view-keyframe_outline_24px";
  HdsIconlibrary_24px2["MapViewKeyframeSolid_24px"] = "map-view-keyframe_solid_24px";
  HdsIconlibrary_24px2["MapViewLayersOutline_24px"] = "map-view-layers_outline_24px";
  HdsIconlibrary_24px2["MapViewLayersSolid_24px"] = "map-view-layers_solid_24px";
  HdsIconlibrary_24px2["MapViewLegendOutline_24px"] = "map-view-legend_outline_24px";
  HdsIconlibrary_24px2["MapViewLegendSolid_24px"] = "map-view-legend_solid_24px";
  HdsIconlibrary_24px2["MapViewMapMarkerOutline_24px"] = "map-view-map-marker_outline_24px";
  HdsIconlibrary_24px2["MapViewMapMarkerSolid_24px"] = "map-view-map-marker_solid_24px";
  HdsIconlibrary_24px2["MapViewMapViewOutline_24px"] = "map-view-map-view_outline_24px";
  HdsIconlibrary_24px2["MapViewMapViewSolid_24px"] = "map-view-map-view_solid_24px";
  HdsIconlibrary_24px2["MapViewMarkerOutline_24px"] = "map-view-marker_outline_24px";
  HdsIconlibrary_24px2["MapViewMarkerSolid_24px"] = "map-view-marker_solid_24px";
  HdsIconlibrary_24px2["MapViewMaximizeOutline_24px"] = "map-view-maximize_outline_24px";
  HdsIconlibrary_24px2["MapViewMaximizeSolid_24px"] = "map-view-maximize_solid_24px";
  HdsIconlibrary_24px2["MapViewMinimizeOutline_24px"] = "map-view-minimize_outline_24px";
  HdsIconlibrary_24px2["MapViewMinimizeSolid_24px"] = "map-view-minimize_solid_24px";
  HdsIconlibrary_24px2["MapViewMinusRectangleOutline_24px"] = "map-view-minus-rectangle_outline_24px";
  HdsIconlibrary_24px2["MapViewMinusRectangleSolid_24px"] = "map-view-minus-rectangle_solid_24px";
  HdsIconlibrary_24px2["MapViewNorthOutline_24px"] = "map-view-north_outline_24px";
  HdsIconlibrary_24px2["MapViewNorthSolid_24px"] = "map-view-north_solid_24px";
  HdsIconlibrary_24px2["MapViewNorthCharacterOutline_24px"] = "map-view-north-character_outline_24px";
  HdsIconlibrary_24px2["MapViewNorthCharacterSolid_24px"] = "map-view-north-character_solid_24px";
  HdsIconlibrary_24px2["MapViewNorthEastCharacterOutline_24px"] = "map-view-north-east-character_outline_24px";
  HdsIconlibrary_24px2["MapViewNorthEastCharacterSolid_24px"] = "map-view-north-east-character_solid_24px";
  HdsIconlibrary_24px2["MapViewNorthUpOutline_24px"] = "map-view-north-up_outline_24px";
  HdsIconlibrary_24px2["MapViewNorthUpSolid_24px"] = "map-view-north-up_solid_24px";
  HdsIconlibrary_24px2["MapViewNorthWestCharacterOutline_24px"] = "map-view-north-west-character_outline_24px";
  HdsIconlibrary_24px2["MapViewNorthWestCharacterSolid_24px"] = "map-view-north-west-character_solid_24px";
  HdsIconlibrary_24px2["MapViewNotTiltedOutline_24px"] = "map-view-not-tilted_outline_24px";
  HdsIconlibrary_24px2["MapViewNotTiltedSolid_24px"] = "map-view-not-tilted_solid_24px";
  HdsIconlibrary_24px2["MapViewPanViewOutline_24px"] = "map-view-pan-view_outline_24px";
  HdsIconlibrary_24px2["MapViewPanViewSolid_24px"] = "map-view-pan-view_solid_24px";
  HdsIconlibrary_24px2["MapViewPipOutline_24px"] = "map-view-pip_outline_24px";
  HdsIconlibrary_24px2["MapViewPipSolid_24px"] = "map-view-pip_solid_24px";
  HdsIconlibrary_24px2["MapViewPlaceOutline_24px"] = "map-view-place_outline_24px";
  HdsIconlibrary_24px2["MapViewPlaceSolid_24px"] = "map-view-place_solid_24px";
  HdsIconlibrary_24px2["MapViewPlusRectangleOutline_24px"] = "map-view-plus-rectangle_outline_24px";
  HdsIconlibrary_24px2["MapViewPlusRectangleSolid_24px"] = "map-view-plus-rectangle_solid_24px";
  HdsIconlibrary_24px2["MapViewPopOutOutline_24px"] = "map-view-pop-out_outline_24px";
  HdsIconlibrary_24px2["MapViewPopOutSolid_24px"] = "map-view-pop-out_solid_24px";
  HdsIconlibrary_24px2["MapViewProjectionGlobeOutline_24px"] = "map-view-projection-globe_outline_24px";
  HdsIconlibrary_24px2["MapViewProjectionGlobeSolid_24px"] = "map-view-projection-globe_solid_24px";
  HdsIconlibrary_24px2["MapViewProjectionMercatorOutline_24px"] = "map-view-projection-mercator_outline_24px";
  HdsIconlibrary_24px2["MapViewProjectionMercatorSolid_24px"] = "map-view-projection-mercator_solid_24px";
  HdsIconlibrary_24px2["MapViewResizeOutline_24px"] = "map-view-resize_outline_24px";
  HdsIconlibrary_24px2["MapViewResizeSolid_24px"] = "map-view-resize_solid_24px";
  HdsIconlibrary_24px2["MapViewSelectSectionOutline_24px"] = "map-view-select-section_outline_24px";
  HdsIconlibrary_24px2["MapViewSelectSectionSolid_24px"] = "map-view-select-section_solid_24px";
  HdsIconlibrary_24px2["MapViewSingleScreenOutline_24px"] = "map-view-single-screen_outline_24px";
  HdsIconlibrary_24px2["MapViewSingleScreenSolid_24px"] = "map-view-single-screen_solid_24px";
  HdsIconlibrary_24px2["MapViewSouthOutline_24px"] = "map-view-south_outline_24px";
  HdsIconlibrary_24px2["MapViewSouthSolid_24px"] = "map-view-south_solid_24px";
  HdsIconlibrary_24px2["MapViewSouthCharacterOutline_24px"] = "map-view-south-character_outline_24px";
  HdsIconlibrary_24px2["MapViewSouthCharacterSolid_24px"] = "map-view-south-character_solid_24px";
  HdsIconlibrary_24px2["MapViewSouthEastCharacterOutline_24px"] = "map-view-south-east-character_outline_24px";
  HdsIconlibrary_24px2["MapViewSouthEastCharacterSolid_24px"] = "map-view-south-east-character_solid_24px";
  HdsIconlibrary_24px2["MapViewSouthWestCharacterOutline_24px"] = "map-view-south-west-character_outline_24px";
  HdsIconlibrary_24px2["MapViewSouthWestCharacterSolid_24px"] = "map-view-south-west-character_solid_24px";
  HdsIconlibrary_24px2["MapViewSplitTripleVOutline_24px"] = "map-view-split-triple-v_outline_24px";
  HdsIconlibrary_24px2["MapViewSplitTripleVSolid_24px"] = "map-view-split-triple-v_solid_24px";
  HdsIconlibrary_24px2["MapViewSplitscreenHOutline_24px"] = "map-view-splitscreen-h_outline_24px";
  HdsIconlibrary_24px2["MapViewSplitscreenHSolid_24px"] = "map-view-splitscreen-h_solid_24px";
  HdsIconlibrary_24px2["MapViewSplitscreenVOutline_24px"] = "map-view-splitscreen-v_outline_24px";
  HdsIconlibrary_24px2["MapViewSplitscreenVSolid_24px"] = "map-view-splitscreen-v_solid_24px";
  HdsIconlibrary_24px2["MapViewStatisticsOutline_24px"] = "map-view-statistics_outline_24px";
  HdsIconlibrary_24px2["MapViewStatisticsSolid_24px"] = "map-view-statistics_solid_24px";
  HdsIconlibrary_24px2["MapViewTiltedOutline_24px"] = "map-view-tilted_outline_24px";
  HdsIconlibrary_24px2["MapViewTiltedSolid_24px"] = "map-view-tilted_solid_24px";
  HdsIconlibrary_24px2["MapViewValueDecreaseOutline_24px"] = "map-view-value-decrease_outline_24px";
  HdsIconlibrary_24px2["MapViewValueDecreaseSolid_24px"] = "map-view-value-decrease_solid_24px";
  HdsIconlibrary_24px2["MapViewValueDecreaseHighOutline_24px"] = "map-view-value-decrease-high_outline_24px";
  HdsIconlibrary_24px2["MapViewValueDecreaseHighSolid_24px"] = "map-view-value-decrease-high_solid_24px";
  HdsIconlibrary_24px2["MapViewValueIncreaseOutline_24px"] = "map-view-value-increase_outline_24px";
  HdsIconlibrary_24px2["MapViewValueIncreaseSolid_24px"] = "map-view-value-increase_solid_24px";
  HdsIconlibrary_24px2["MapViewValueIncreaseHighOutline_24px"] = "map-view-value-increase-high_outline_24px";
  HdsIconlibrary_24px2["MapViewValueIncreaseHighSolid_24px"] = "map-view-value-increase-high_solid_24px";
  HdsIconlibrary_24px2["MapViewViewAllOutline_24px"] = "map-view-view-all_outline_24px";
  HdsIconlibrary_24px2["MapViewViewAllSolid_24px"] = "map-view-view-all_solid_24px";
  HdsIconlibrary_24px2["MapViewViewCenterOutline_24px"] = "map-view-view-center_outline_24px";
  HdsIconlibrary_24px2["MapViewViewCenterSolid_24px"] = "map-view-view-center_solid_24px";
  HdsIconlibrary_24px2["MapViewWestOutline_24px"] = "map-view-west_outline_24px";
  HdsIconlibrary_24px2["MapViewWestSolid_24px"] = "map-view-west_solid_24px";
  HdsIconlibrary_24px2["MapViewWestCharacterOutline_24px"] = "map-view-west-character_outline_24px";
  HdsIconlibrary_24px2["MapViewWestCharacterSolid_24px"] = "map-view-west-character_solid_24px";
  HdsIconlibrary_24px2["MapViewWorkspacesOutline_24px"] = "map-view-workspaces_outline_24px";
  HdsIconlibrary_24px2["MapViewWorkspacesSolid_24px"] = "map-view-workspaces_solid_24px";
  HdsIconlibrary_24px2["MiscAddAddressNumberOutline_24px"] = "misc-add-address-number_outline_24px";
  HdsIconlibrary_24px2["MiscAddAddressNumberSolid_24px"] = "misc-add-address-number_solid_24px";
  HdsIconlibrary_24px2["MiscAddressNumberOutline_24px"] = "misc-address-number_outline_24px";
  HdsIconlibrary_24px2["MiscAddressNumberSolid_24px"] = "misc-address-number_solid_24px";
  HdsIconlibrary_24px2["MiscBuildingHomeOutline_24px"] = "misc-building-home_outline_24px";
  HdsIconlibrary_24px2["MiscBuildingHomeSolid_24px"] = "misc-building-home_solid_24px";
  HdsIconlibrary_24px2["MiscBuildingOffOutline_24px"] = "misc-building-off_outline_24px";
  HdsIconlibrary_24px2["MiscBuildingOffSolid_24px"] = "misc-building-off_solid_24px";
  HdsIconlibrary_24px2["MiscBuildingOfficeOutline_24px"] = "misc-building-office_outline_24px";
  HdsIconlibrary_24px2["MiscBuildingOfficeSolid_24px"] = "misc-building-office_solid_24px";
  HdsIconlibrary_24px2["MiscCalculatorOutline_24px"] = "misc-calculator_outline_24px";
  HdsIconlibrary_24px2["MiscCalculatorSolid_24px"] = "misc-calculator_solid_24px";
  HdsIconlibrary_24px2["MiscCartOutline_24px"] = "misc-cart_outline_24px";
  HdsIconlibrary_24px2["MiscCartSolid_24px"] = "misc-cart_solid_24px";
  HdsIconlibrary_24px2["MiscCodeOutline_24px"] = "misc-code_outline_24px";
  HdsIconlibrary_24px2["MiscCodeSolid_24px"] = "misc-code_solid_24px";
  HdsIconlibrary_24px2["MiscCreditCardOutline_24px"] = "misc-credit-card_outline_24px";
  HdsIconlibrary_24px2["MiscCreditCardSolid_24px"] = "misc-credit-card_solid_24px";
  HdsIconlibrary_24px2["MiscDatasetOutline_24px"] = "misc-dataset_outline_24px";
  HdsIconlibrary_24px2["MiscDatasetSolid_24px"] = "misc-dataset_solid_24px";
  HdsIconlibrary_24px2["MiscElevatorOutline_24px"] = "misc-elevator_outline_24px";
  HdsIconlibrary_24px2["MiscElevatorSolid_24px"] = "misc-elevator_solid_24px";
  HdsIconlibrary_24px2["MiscEnvironmentOutline_24px"] = "misc-environment_outline_24px";
  HdsIconlibrary_24px2["MiscEnvironmentSolid_24px"] = "misc-environment_solid_24px";
  HdsIconlibrary_24px2["MiscEscalatorOutline_24px"] = "misc-escalator_outline_24px";
  HdsIconlibrary_24px2["MiscEscalatorSolid_24px"] = "misc-escalator_solid_24px";
  HdsIconlibrary_24px2["MiscEscalatorDownOutline_24px"] = "misc-escalator-down_outline_24px";
  HdsIconlibrary_24px2["MiscEscalatorDownSolid_24px"] = "misc-escalator-down_solid_24px";
  HdsIconlibrary_24px2["MiscEscalatorUpOutline_24px"] = "misc-escalator-up_outline_24px";
  HdsIconlibrary_24px2["MiscEscalatorUpSolid_24px"] = "misc-escalator-up_solid_24px";
  HdsIconlibrary_24px2["MiscExpertOutline_24px"] = "misc-expert_outline_24px";
  HdsIconlibrary_24px2["MiscExpertSolid_24px"] = "misc-expert_solid_24px";
  HdsIconlibrary_24px2["MiscFamilyOutline_24px"] = "misc-family_outline_24px";
  HdsIconlibrary_24px2["MiscFamilySolid_24px"] = "misc-family_solid_24px";
  HdsIconlibrary_24px2["MiscFlashlightOutline_24px"] = "misc-flashlight_outline_24px";
  HdsIconlibrary_24px2["MiscFlashlightSolid_24px"] = "misc-flashlight_solid_24px";
  HdsIconlibrary_24px2["MiscGlobalOutline_24px"] = "misc-global_outline_24px";
  HdsIconlibrary_24px2["MiscGlobalSolid_24px"] = "misc-global_solid_24px";
  HdsIconlibrary_24px2["MiscHandshakeOutline_24px"] = "misc-handshake_outline_24px";
  HdsIconlibrary_24px2["MiscHandshakeSolid_24px"] = "misc-handshake_solid_24px";
  HdsIconlibrary_24px2["MiscHardDriveOutline_24px"] = "misc-hard-drive_outline_24px";
  HdsIconlibrary_24px2["MiscHardDriveSolid_24px"] = "misc-hard-drive_solid_24px";
  HdsIconlibrary_24px2["MiscHeadphonesOutline_24px"] = "misc-headphones_outline_24px";
  HdsIconlibrary_24px2["MiscHeadphonesSolid_24px"] = "misc-headphones_solid_24px";
  HdsIconlibrary_24px2["MiscInboxOutline_24px"] = "misc-inbox_outline_24px";
  HdsIconlibrary_24px2["MiscInboxSolid_24px"] = "misc-inbox_solid_24px";
  HdsIconlibrary_24px2["MiscInboxAttentionOutline_24px"] = "misc-inbox-attention_outline_24px";
  HdsIconlibrary_24px2["MiscInboxAttentionSolid_24px"] = "misc-inbox-attention_solid_24px";
  HdsIconlibrary_24px2["MiscKeyOutline_24px"] = "misc-key_outline_24px";
  HdsIconlibrary_24px2["MiscKeySolid_24px"] = "misc-key_solid_24px";
  HdsIconlibrary_24px2["MiscKitchenOutline_24px"] = "misc-kitchen_outline_24px";
  HdsIconlibrary_24px2["MiscKitchenSolid_24px"] = "misc-kitchen_solid_24px";
  HdsIconlibrary_24px2["MiscLaboratoryOutline_24px"] = "misc-laboratory_outline_24px";
  HdsIconlibrary_24px2["MiscLaboratorySolid_24px"] = "misc-laboratory_solid_24px";
  HdsIconlibrary_24px2["MiscManOutline_24px"] = "misc-man_outline_24px";
  HdsIconlibrary_24px2["MiscManSolid_24px"] = "misc-man_solid_24px";
  HdsIconlibrary_24px2["MiscMeetingPointOutline_24px"] = "misc-meeting-point_outline_24px";
  HdsIconlibrary_24px2["MiscMeetingPointSolid_24px"] = "misc-meeting-point_solid_24px";
  HdsIconlibrary_24px2["MiscNeighbourhoodOutline_24px"] = "misc-neighbourhood_outline_24px";
  HdsIconlibrary_24px2["MiscNeighbourhoodSolid_24px"] = "misc-neighbourhood_solid_24px";
  HdsIconlibrary_24px2["MiscPacemakerOutline_24px"] = "misc-pacemaker_outline_24px";
  HdsIconlibrary_24px2["MiscPacemakerSolid_24px"] = "misc-pacemaker_solid_24px";
  HdsIconlibrary_24px2["MiscPeopleOutline_24px"] = "misc-people_outline_24px";
  HdsIconlibrary_24px2["MiscPeopleSolid_24px"] = "misc-people_solid_24px";
  HdsIconlibrary_24px2["MiscPoopOutline_24px"] = "misc-poop_outline_24px";
  HdsIconlibrary_24px2["MiscPoopSolid_24px"] = "misc-poop_solid_24px";
  HdsIconlibrary_24px2["MiscProjectOutline_24px"] = "misc-project_outline_24px";
  HdsIconlibrary_24px2["MiscProjectSolid_24px"] = "misc-project_solid_24px";
  HdsIconlibrary_24px2["MiscProjectsOutline_24px"] = "misc-projects_outline_24px";
  HdsIconlibrary_24px2["MiscProjectsSolid_24px"] = "misc-projects_solid_24px";
  HdsIconlibrary_24px2["MiscReusableOutline_24px"] = "misc-reusable_outline_24px";
  HdsIconlibrary_24px2["MiscReusableSolid_24px"] = "misc-reusable_solid_24px";
  HdsIconlibrary_24px2["MiscServiceOutline_24px"] = "misc-service_outline_24px";
  HdsIconlibrary_24px2["MiscServiceSolid_24px"] = "misc-service_solid_24px";
  HdsIconlibrary_24px2["MiscStairsOutline_24px"] = "misc-stairs_outline_24px";
  HdsIconlibrary_24px2["MiscStairsSolid_24px"] = "misc-stairs_solid_24px";
  HdsIconlibrary_24px2["MiscStopwatchOutline_24px"] = "misc-stopwatch_outline_24px";
  HdsIconlibrary_24px2["MiscStopwatchSolid_24px"] = "misc-stopwatch_solid_24px";
  HdsIconlibrary_24px2["MiscSuitcaseOutline_24px"] = "misc-suitcase_outline_24px";
  HdsIconlibrary_24px2["MiscSuitcaseSolid_24px"] = "misc-suitcase_solid_24px";
  HdsIconlibrary_24px2["MiscTerrainOutline_24px"] = "misc-terrain_outline_24px";
  HdsIconlibrary_24px2["MiscTerrainSolid_24px"] = "misc-terrain_solid_24px";
  HdsIconlibrary_24px2["MiscTicketBarrierOutline_24px"] = "misc-ticket-barrier_outline_24px";
  HdsIconlibrary_24px2["MiscTicketBarrierSolid_24px"] = "misc-ticket-barrier_solid_24px";
  HdsIconlibrary_24px2["MiscTrophyOutline_24px"] = "misc-trophy_outline_24px";
  HdsIconlibrary_24px2["MiscTrophySolid_24px"] = "misc-trophy_solid_24px";
  HdsIconlibrary_24px2["MiscVoiceCommandOutline_24px"] = "misc-voice-command_outline_24px";
  HdsIconlibrary_24px2["MiscVoiceCommandSolid_24px"] = "misc-voice-command_solid_24px";
  HdsIconlibrary_24px2["MiscWheelchairOutline_24px"] = "misc-wheelchair_outline_24px";
  HdsIconlibrary_24px2["MiscWheelchairSolid_24px"] = "misc-wheelchair_solid_24px";
  HdsIconlibrary_24px2["MiscWomanOutline_24px"] = "misc-woman_outline_24px";
  HdsIconlibrary_24px2["MiscWomanSolid_24px"] = "misc-woman_solid_24px";
  HdsIconlibrary_24px2["NavigationImageBrightnessOffOutline_24px"] = "navigation-image-brightness-off_outline_24px";
  HdsIconlibrary_24px2["NavigationImageBrightnessOffSolid_24px"] = "navigation-image-brightness-off_solid_24px";
  HdsIconlibrary_24px2["NavigationImageBrightnessOnOutline_24px"] = "navigation-image-brightness-on_outline_24px";
  HdsIconlibrary_24px2["NavigationImageBrightnessOnSolid_24px"] = "navigation-image-brightness-on_solid_24px";
  HdsIconlibrary_24px2["NavigationImageColorFullOutline_24px"] = "navigation-image-color-full_outline_24px";
  HdsIconlibrary_24px2["NavigationImageColorFullSolid_24px"] = "navigation-image-color-full_solid_24px";
  HdsIconlibrary_24px2["NavigationImageColorInvertAOutline_24px"] = "navigation-image-color-invert-A_outline_24px";
  HdsIconlibrary_24px2["NavigationImageColorInvertASolid_24px"] = "navigation-image-color-invert-A_solid_24px";
  HdsIconlibrary_24px2["NavigationImageColorInvertBOutline_24px"] = "navigation-image-color-invert-B_outline_24px";
  HdsIconlibrary_24px2["NavigationImageColorInvertBSolid_24px"] = "navigation-image-color-invert-B_solid_24px";
  HdsIconlibrary_24px2["NavigationImageColorOverrideOutline_24px"] = "navigation-image-color-override_outline_24px";
  HdsIconlibrary_24px2["NavigationImageColorOverrideSolid_24px"] = "navigation-image-color-override_solid_24px";
  HdsIconlibrary_24px2["NavigationImageColorToneOutline_24px"] = "navigation-image-color-tone_outline_24px";
  HdsIconlibrary_24px2["NavigationImageColorToneSolid_24px"] = "navigation-image-color-tone_solid_24px";
  HdsIconlibrary_24px2["NavigationImageContrastOutline_24px"] = "navigation-image-contrast_outline_24px";
  HdsIconlibrary_24px2["NavigationImageContrastSolid_24px"] = "navigation-image-contrast_solid_24px";
  HdsIconlibrary_24px2["NavigationImageFirstOutline_24px"] = "navigation-image-first_outline_24px";
  HdsIconlibrary_24px2["NavigationImageFirstSolid_24px"] = "navigation-image-first_solid_24px";
  HdsIconlibrary_24px2["NavigationImageLastOutline_24px"] = "navigation-image-last_outline_24px";
  HdsIconlibrary_24px2["NavigationImageLastSolid_24px"] = "navigation-image-last_solid_24px";
  HdsIconlibrary_24px2["NavigationImageNextOutline_24px"] = "navigation-image-next_outline_24px";
  HdsIconlibrary_24px2["NavigationImageNextSolid_24px"] = "navigation-image-next_solid_24px";
  HdsIconlibrary_24px2["NavigationImageOpacityOffOutline_24px"] = "navigation-image-opacity-off_outline_24px";
  HdsIconlibrary_24px2["NavigationImageOpacityOffSolid_24px"] = "navigation-image-opacity-off_solid_24px";
  HdsIconlibrary_24px2["NavigationImageOpacityOnOutline_24px"] = "navigation-image-opacity-on_outline_24px";
  HdsIconlibrary_24px2["NavigationImageOpacityOnSolid_24px"] = "navigation-image-opacity-on_solid_24px";
  HdsIconlibrary_24px2["NavigationImagePauseOutline_24px"] = "navigation-image-pause_outline_24px";
  HdsIconlibrary_24px2["NavigationImagePauseSolid_24px"] = "navigation-image-pause_solid_24px";
  HdsIconlibrary_24px2["NavigationImagePlayOutline_24px"] = "navigation-image-play_outline_24px";
  HdsIconlibrary_24px2["NavigationImagePlaySolid_24px"] = "navigation-image-play_solid_24px";
  HdsIconlibrary_24px2["NavigationImagePlayReverseOutline_24px"] = "navigation-image-play-reverse_outline_24px";
  HdsIconlibrary_24px2["NavigationImagePlayReverseSolid_24px"] = "navigation-image-play-reverse_solid_24px";
  HdsIconlibrary_24px2["NavigationImagePlaybackSpeedOutline_24px"] = "navigation-image-playback-speed_outline_24px";
  HdsIconlibrary_24px2["NavigationImagePlaybackSpeedSolid_24px"] = "navigation-image-playback-speed_solid_24px";
  HdsIconlibrary_24px2["NavigationImagePreviousOutline_24px"] = "navigation-image-previous_outline_24px";
  HdsIconlibrary_24px2["NavigationImagePreviousSolid_24px"] = "navigation-image-previous_solid_24px";
  HdsIconlibrary_24px2["NavigationImageSkipOutline_24px"] = "navigation-image-skip_outline_24px";
  HdsIconlibrary_24px2["NavigationImageSkipSolid_24px"] = "navigation-image-skip_solid_24px";
  HdsIconlibrary_24px2["NavigationImageStopOutline_24px"] = "navigation-image-stop_outline_24px";
  HdsIconlibrary_24px2["NavigationImageStopSolid_24px"] = "navigation-image-stop_solid_24px";
  HdsIconlibrary_24px2["PoiAccommodationOutline_24px"] = "poi-accommodation_outline_24px";
  HdsIconlibrary_24px2["PoiAccommodationSolid_24px"] = "poi-accommodation_solid_24px";
  HdsIconlibrary_24px2["PoiAirportOutline_24px"] = "poi-airport_outline_24px";
  HdsIconlibrary_24px2["PoiAirportSolid_24px"] = "poi-airport_solid_24px";
  HdsIconlibrary_24px2["PoiAirportCargoOutline_24px"] = "poi-airport-cargo_outline_24px";
  HdsIconlibrary_24px2["PoiAirportCargoSolid_24px"] = "poi-airport-cargo_solid_24px";
  HdsIconlibrary_24px2["PoiAirportGateOutline_24px"] = "poi-airport-gate_outline_24px";
  HdsIconlibrary_24px2["PoiAirportGateSolid_24px"] = "poi-airport-gate_solid_24px";
  HdsIconlibrary_24px2["PoiAmusementParkOutline_24px"] = "poi-amusement-park_outline_24px";
  HdsIconlibrary_24px2["PoiAmusementParkSolid_24px"] = "poi-amusement-park_solid_24px";
  HdsIconlibrary_24px2["PoiAquariumOutline_24px"] = "poi-aquarium_outline_24px";
  HdsIconlibrary_24px2["PoiAquariumSolid_24px"] = "poi-aquarium_solid_24px";
  HdsIconlibrary_24px2["PoiArtGalleryOutline_24px"] = "poi-art-gallery_outline_24px";
  HdsIconlibrary_24px2["PoiArtGallerySolid_24px"] = "poi-art-gallery_solid_24px";
  HdsIconlibrary_24px2["PoiAshramOutline_24px"] = "poi-ashram_outline_24px";
  HdsIconlibrary_24px2["PoiAshramSolid_24px"] = "poi-ashram_solid_24px";
  HdsIconlibrary_24px2["PoiAtmOutline_24px"] = "poi-atm_outline_24px";
  HdsIconlibrary_24px2["PoiAtmSolid_24px"] = "poi-atm_solid_24px";
  HdsIconlibrary_24px2["PoiAttractionOutline_24px"] = "poi-attraction_outline_24px";
  HdsIconlibrary_24px2["PoiAttractionSolid_24px"] = "poi-attraction_solid_24px";
  HdsIconlibrary_24px2["PoiBakeryOutline_24px"] = "poi-bakery_outline_24px";
  HdsIconlibrary_24px2["PoiBakerySolid_24px"] = "poi-bakery_solid_24px";
  HdsIconlibrary_24px2["PoiBeachOutline_24px"] = "poi-beach_outline_24px";
  HdsIconlibrary_24px2["PoiBeachSolid_24px"] = "poi-beach_solid_24px";
  HdsIconlibrary_24px2["PoiBookstoreOutline_24px"] = "poi-bookstore_outline_24px";
  HdsIconlibrary_24px2["PoiBookstoreSolid_24px"] = "poi-bookstore_solid_24px";
  HdsIconlibrary_24px2["PoiBowlingOutline_24px"] = "poi-bowling_outline_24px";
  HdsIconlibrary_24px2["PoiBowlingSolid_24px"] = "poi-bowling_solid_24px";
  HdsIconlibrary_24px2["PoiBridgeOutline_24px"] = "poi-bridge_outline_24px";
  HdsIconlibrary_24px2["PoiBridgeSolid_24px"] = "poi-bridge_solid_24px";
  HdsIconlibrary_24px2["PoiBusOutline_24px"] = "poi-bus_outline_24px";
  HdsIconlibrary_24px2["PoiBusSolid_24px"] = "poi-bus_solid_24px";
  HdsIconlibrary_24px2["PoiBusinessOutline_24px"] = "poi-business_outline_24px";
  HdsIconlibrary_24px2["PoiBusinessSolid_24px"] = "poi-business_solid_24px";
  HdsIconlibrary_24px2["PoiBusinessPostJpnOutline_24px"] = "poi-business-post-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiBusinessPostJpnSolid_24px"] = "poi-business-post-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiButcherOutline_24px"] = "poi-butcher_outline_24px";
  HdsIconlibrary_24px2["PoiButcherSolid_24px"] = "poi-butcher_solid_24px";
  HdsIconlibrary_24px2["PoiCableWayOutline_24px"] = "poi-cable-way_outline_24px";
  HdsIconlibrary_24px2["PoiCableWaySolid_24px"] = "poi-cable-way_solid_24px";
  HdsIconlibrary_24px2["PoiCampingOutline_24px"] = "poi-camping_outline_24px";
  HdsIconlibrary_24px2["PoiCampingSolid_24px"] = "poi-camping_solid_24px";
  HdsIconlibrary_24px2["PoiCarChargingOutline_24px"] = "poi-car-charging_outline_24px";
  HdsIconlibrary_24px2["PoiCarChargingSolid_24px"] = "poi-car-charging_solid_24px";
  HdsIconlibrary_24px2["PoiCarChargingFastOutline_24px"] = "poi-car-charging-fast_outline_24px";
  HdsIconlibrary_24px2["PoiCarChargingFastSolid_24px"] = "poi-car-charging-fast_solid_24px";
  HdsIconlibrary_24px2["PoiCarDealershipOutline_24px"] = "poi-car-dealership_outline_24px";
  HdsIconlibrary_24px2["PoiCarDealershipSolid_24px"] = "poi-car-dealership_solid_24px";
  HdsIconlibrary_24px2["PoiCarElectricOutline_24px"] = "poi-car-electric_outline_24px";
  HdsIconlibrary_24px2["PoiCarElectricSolid_24px"] = "poi-car-electric_solid_24px";
  HdsIconlibrary_24px2["PoiCarRentalOutline_24px"] = "poi-car-rental_outline_24px";
  HdsIconlibrary_24px2["PoiCarRentalSolid_24px"] = "poi-car-rental_solid_24px";
  HdsIconlibrary_24px2["PoiCarRepairOutline_24px"] = "poi-car-repair_outline_24px";
  HdsIconlibrary_24px2["PoiCarRepairSolid_24px"] = "poi-car-repair_solid_24px";
  HdsIconlibrary_24px2["PoiCarWashOutline_24px"] = "poi-car-wash_outline_24px";
  HdsIconlibrary_24px2["PoiCarWashSolid_24px"] = "poi-car-wash_solid_24px";
  HdsIconlibrary_24px2["PoiCargoCenterOutline_24px"] = "poi-cargo-center_outline_24px";
  HdsIconlibrary_24px2["PoiCargoCenterSolid_24px"] = "poi-cargo-center_solid_24px";
  HdsIconlibrary_24px2["PoiCartOutline_24px"] = "poi-cart_outline_24px";
  HdsIconlibrary_24px2["PoiCartSolid_24px"] = "poi-cart_solid_24px";
  HdsIconlibrary_24px2["PoiCasinoOutline_24px"] = "poi-casino_outline_24px";
  HdsIconlibrary_24px2["PoiCasinoSolid_24px"] = "poi-casino_solid_24px";
  HdsIconlibrary_24px2["PoiCemetryOutline_24px"] = "poi-cemetry_outline_24px";
  HdsIconlibrary_24px2["PoiCemetrySolid_24px"] = "poi-cemetry_solid_24px";
  HdsIconlibrary_24px2["PoiChurchOutline_24px"] = "poi-church_outline_24px";
  HdsIconlibrary_24px2["PoiChurchSolid_24px"] = "poi-church_solid_24px";
  HdsIconlibrary_24px2["PoiCinemaOutline_24px"] = "poi-cinema_outline_24px";
  HdsIconlibrary_24px2["PoiCinemaSolid_24px"] = "poi-cinema_solid_24px";
  HdsIconlibrary_24px2["PoiClothingOutline_24px"] = "poi-clothing_outline_24px";
  HdsIconlibrary_24px2["PoiClothingSolid_24px"] = "poi-clothing_solid_24px";
  HdsIconlibrary_24px2["PoiCoachOutline_24px"] = "poi-coach_outline_24px";
  HdsIconlibrary_24px2["PoiCoachSolid_24px"] = "poi-coach_solid_24px";
  HdsIconlibrary_24px2["PoiCocktailOutline_24px"] = "poi-cocktail_outline_24px";
  HdsIconlibrary_24px2["PoiCocktailSolid_24px"] = "poi-cocktail_solid_24px";
  HdsIconlibrary_24px2["PoiCoffeeOutline_24px"] = "poi-coffee_outline_24px";
  HdsIconlibrary_24px2["PoiCoffeeSolid_24px"] = "poi-coffee_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyBahtOutline_24px"] = "poi-currency-baht_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyBahtSolid_24px"] = "poi-currency-baht_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyDollarOutline_24px"] = "poi-currency-dollar_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyDollarSolid_24px"] = "poi-currency-dollar_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyDongOutline_24px"] = "poi-currency-dong_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyDongSolid_24px"] = "poi-currency-dong_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyEuroOutline_24px"] = "poi-currency-euro_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyEuroSolid_24px"] = "poi-currency-euro_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyFrancOutline_24px"] = "poi-currency-franc_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyFrancSolid_24px"] = "poi-currency-franc_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyKroneOutline_24px"] = "poi-currency-krone_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyKroneSolid_24px"] = "poi-currency-krone_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyLiraOutline_24px"] = "poi-currency-lira_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyLiraSolid_24px"] = "poi-currency-lira_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyNairaOutline_24px"] = "poi-currency-naira_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyNairaSolid_24px"] = "poi-currency-naira_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyPoundOutline_24px"] = "poi-currency-pound_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyPoundSolid_24px"] = "poi-currency-pound_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyRubleOutline_24px"] = "poi-currency-ruble_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyRubleSolid_24px"] = "poi-currency-ruble_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyRupeeOutline_24px"] = "poi-currency-rupee_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyRupeeSolid_24px"] = "poi-currency-rupee_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyRupeesOutline_24px"] = "poi-currency-rupees_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyRupeesSolid_24px"] = "poi-currency-rupees_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyRupiahOutline_24px"] = "poi-currency-rupiah_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyRupiahSolid_24px"] = "poi-currency-rupiah_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyShekelOutline_24px"] = "poi-currency-shekel_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyShekelSolid_24px"] = "poi-currency-shekel_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyTakaOutline_24px"] = "poi-currency-taka_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyTakaSolid_24px"] = "poi-currency-taka_solid_24px";
  HdsIconlibrary_24px2["PoiCurrencyYenOutline_24px"] = "poi-currency-yen_outline_24px";
  HdsIconlibrary_24px2["PoiCurrencyYenSolid_24px"] = "poi-currency-yen_solid_24px";
  HdsIconlibrary_24px2["PoiDoughnutOutline_24px"] = "poi-doughnut_outline_24px";
  HdsIconlibrary_24px2["PoiDoughnutSolid_24px"] = "poi-doughnut_solid_24px";
  HdsIconlibrary_24px2["PoiEducationOutline_24px"] = "poi-education_outline_24px";
  HdsIconlibrary_24px2["PoiEducationSolid_24px"] = "poi-education_solid_24px";
  HdsIconlibrary_24px2["PoiElevatorOutline_24px"] = "poi-elevator_outline_24px";
  HdsIconlibrary_24px2["PoiElevatorSolid_24px"] = "poi-elevator_solid_24px";
  HdsIconlibrary_24px2["PoiEmergencyFiredepartmentJpnOutline_24px"] = "poi-emergency-firedepartment-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiEmergencyFiredepartmentJpnSolid_24px"] = "poi-emergency-firedepartment-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiEmergencyHospitalJpnOutline_24px"] = "poi-emergency-hospital-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiEmergencyHospitalJpnSolid_24px"] = "poi-emergency-hospital-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiEmergencyPoliceJpnOutline_24px"] = "poi-emergency-police-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiEmergencyPoliceJpnSolid_24px"] = "poi-emergency-police-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiEmergencyPoliceboxJpnOutline_24px"] = "poi-emergency-policebox-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiEmergencyPoliceboxJpnSolid_24px"] = "poi-emergency-policebox-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiEnterVenueOutline_24px"] = "poi-enter-venue_outline_24px";
  HdsIconlibrary_24px2["PoiEnterVenueSolid_24px"] = "poi-enter-venue_solid_24px";
  HdsIconlibrary_24px2["PoiEntranceOutline_24px"] = "poi-entrance_outline_24px";
  HdsIconlibrary_24px2["PoiEntranceSolid_24px"] = "poi-entrance_solid_24px";
  HdsIconlibrary_24px2["PoiEscalatorOutline_24px"] = "poi-escalator_outline_24px";
  HdsIconlibrary_24px2["PoiEscalatorSolid_24px"] = "poi-escalator_solid_24px";
  HdsIconlibrary_24px2["PoiExhibitionCenterOutline_24px"] = "poi-exhibition-center_outline_24px";
  HdsIconlibrary_24px2["PoiExhibitionCenterSolid_24px"] = "poi-exhibition-center_solid_24px";
  HdsIconlibrary_24px2["PoiFacilitiesOutline_24px"] = "poi-facilities_outline_24px";
  HdsIconlibrary_24px2["PoiFacilitiesSolid_24px"] = "poi-facilities_solid_24px";
  HdsIconlibrary_24px2["PoiFacilitiesCityhallJpnOutline_24px"] = "poi-facilities-cityhall-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiFacilitiesCityhallJpnSolid_24px"] = "poi-facilities-cityhall-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiFacilitiesEducationHigherJpnOutline_24px"] = "poi-facilities-education-higher-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiFacilitiesEducationHigherJpnSolid_24px"] = "poi-facilities-education-higher-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiFacilitiesEducationSchoolJpnOutline_24px"] = "poi-facilities-education-school-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiFacilitiesEducationSchoolJpnSolid_24px"] = "poi-facilities-education-school-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiFacilitiesOfficePrefecturalJpnOutline_24px"] = "poi-facilities-office-prefectural-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiFacilitiesOfficePrefecturalJpnSolid_24px"] = "poi-facilities-office-prefectural-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiFacilitiesOfficeTownvillageJpnOutline_24px"] = "poi-facilities-office-townvillage-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiFacilitiesOfficeTownvillageJpnSolid_24px"] = "poi-facilities-office-townvillage-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiFacilitiesOfficeWardJpnOutline_24px"] = "poi-facilities-office-ward-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiFacilitiesOfficeWardJpnSolid_24px"] = "poi-facilities-office-ward-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiFastFoodOutline_24px"] = "poi-fast-food_outline_24px";
  HdsIconlibrary_24px2["PoiFastFoodSolid_24px"] = "poi-fast-food_solid_24px";
  HdsIconlibrary_24px2["PoiFerryOutline_24px"] = "poi-ferry_outline_24px";
  HdsIconlibrary_24px2["PoiFerrySolid_24px"] = "poi-ferry_solid_24px";
  HdsIconlibrary_24px2["PoiFireDepartmentOutline_24px"] = "poi-fire-department_outline_24px";
  HdsIconlibrary_24px2["PoiFireDepartmentSolid_24px"] = "poi-fire-department_solid_24px";
  HdsIconlibrary_24px2["PoiFirstAidCrescentOutline_24px"] = "poi-first-aid-crescent_outline_24px";
  HdsIconlibrary_24px2["PoiFirstAidCrescentSolid_24px"] = "poi-first-aid-crescent_solid_24px";
  HdsIconlibrary_24px2["PoiFirstAidCrossOutline_24px"] = "poi-first-aid-cross_outline_24px";
  HdsIconlibrary_24px2["PoiFirstAidCrossSolid_24px"] = "poi-first-aid-cross_solid_24px";
  HdsIconlibrary_24px2["PoiFitnessOutline_24px"] = "poi-fitness_outline_24px";
  HdsIconlibrary_24px2["PoiFitnessSolid_24px"] = "poi-fitness_solid_24px";
  HdsIconlibrary_24px2["PoiFrontierCrossingOutline_24px"] = "poi-frontier-crossing_outline_24px";
  HdsIconlibrary_24px2["PoiFrontierCrossingSolid_24px"] = "poi-frontier-crossing_solid_24px";
  HdsIconlibrary_24px2["PoiGameArcadeOutline_24px"] = "poi-game-arcade_outline_24px";
  HdsIconlibrary_24px2["PoiGameArcadeSolid_24px"] = "poi-game-arcade_solid_24px";
  HdsIconlibrary_24px2["PoiGolfCourseOutline_24px"] = "poi-golf-course_outline_24px";
  HdsIconlibrary_24px2["PoiGolfCourseSolid_24px"] = "poi-golf-course_solid_24px";
  HdsIconlibrary_24px2["PoiGroceryOutline_24px"] = "poi-grocery_outline_24px";
  HdsIconlibrary_24px2["PoiGrocerySolid_24px"] = "poi-grocery_solid_24px";
  HdsIconlibrary_24px2["PoiGurdwaraOutline_24px"] = "poi-gurdwara_outline_24px";
  HdsIconlibrary_24px2["PoiGurdwaraSolid_24px"] = "poi-gurdwara_solid_24px";
  HdsIconlibrary_24px2["PoiHarborOutline_24px"] = "poi-harbor_outline_24px";
  HdsIconlibrary_24px2["PoiHarborSolid_24px"] = "poi-harbor_solid_24px";
  HdsIconlibrary_24px2["PoiHospitalCrescentOutline_24px"] = "poi-hospital-crescent_outline_24px";
  HdsIconlibrary_24px2["PoiHospitalCrescentSolid_24px"] = "poi-hospital-crescent_solid_24px";
  HdsIconlibrary_24px2["PoiHospitalCrossOutline_24px"] = "poi-hospital-cross_outline_24px";
  HdsIconlibrary_24px2["PoiHospitalCrossSolid_24px"] = "poi-hospital-cross_solid_24px";
  HdsIconlibrary_24px2["PoiHotSpringJpnOutline_24px"] = "poi-hot-spring-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiHotSpringJpnSolid_24px"] = "poi-hot-spring-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiHotelOutline_24px"] = "poi-hotel_outline_24px";
  HdsIconlibrary_24px2["PoiHotelSolid_24px"] = "poi-hotel_solid_24px";
  HdsIconlibrary_24px2["PoiInclinedOutline_24px"] = "poi-inclined_outline_24px";
  HdsIconlibrary_24px2["PoiInclinedSolid_24px"] = "poi-inclined_solid_24px";
  HdsIconlibrary_24px2["PoiIndustrialComplexOutline_24px"] = "poi-industrial-complex_outline_24px";
  HdsIconlibrary_24px2["PoiIndustrialComplexSolid_24px"] = "poi-industrial-complex_solid_24px";
  HdsIconlibrary_24px2["PoiKaraokeOutline_24px"] = "poi-karaoke_outline_24px";
  HdsIconlibrary_24px2["PoiKaraokeSolid_24px"] = "poi-karaoke_solid_24px";
  HdsIconlibrary_24px2["PoiLaundryOutline_24px"] = "poi-laundry_outline_24px";
  HdsIconlibrary_24px2["PoiLaundrySolid_24px"] = "poi-laundry_solid_24px";
  HdsIconlibrary_24px2["PoiLibraryOutline_24px"] = "poi-library_outline_24px";
  HdsIconlibrary_24px2["PoiLibrarySolid_24px"] = "poi-library_solid_24px";
  HdsIconlibrary_24px2["PoiLiquorOutline_24px"] = "poi-liquor_outline_24px";
  HdsIconlibrary_24px2["PoiLiquorSolid_24px"] = "poi-liquor_solid_24px";
  HdsIconlibrary_24px2["PoiLoadingDockOutline_24px"] = "poi-loading-dock_outline_24px";
  HdsIconlibrary_24px2["PoiLoadingDockSolid_24px"] = "poi-loading-dock_solid_24px";
  HdsIconlibrary_24px2["PoiLoadingZoneOutline_24px"] = "poi-loading-zone_outline_24px";
  HdsIconlibrary_24px2["PoiLoadingZoneSolid_24px"] = "poi-loading-zone_solid_24px";
  HdsIconlibrary_24px2["PoiMetroOutline_24px"] = "poi-metro_outline_24px";
  HdsIconlibrary_24px2["PoiMetroSolid_24px"] = "poi-metro_solid_24px";
  HdsIconlibrary_24px2["PoiMonorailOutline_24px"] = "poi-monorail_outline_24px";
  HdsIconlibrary_24px2["PoiMonorailSolid_24px"] = "poi-monorail_solid_24px";
  HdsIconlibrary_24px2["PoiMosqueOutline_24px"] = "poi-mosque_outline_24px";
  HdsIconlibrary_24px2["PoiMosqueSolid_24px"] = "poi-mosque_solid_24px";
  HdsIconlibrary_24px2["PoiMountainOutline_24px"] = "poi-mountain_outline_24px";
  HdsIconlibrary_24px2["PoiMountainSolid_24px"] = "poi-mountain_solid_24px";
  HdsIconlibrary_24px2["PoiMountainPassOutline_24px"] = "poi-mountain-pass_outline_24px";
  HdsIconlibrary_24px2["PoiMountainPassSolid_24px"] = "poi-mountain-pass_solid_24px";
  HdsIconlibrary_24px2["PoiMuseumOutline_24px"] = "poi-museum_outline_24px";
  HdsIconlibrary_24px2["PoiMuseumSolid_24px"] = "poi-museum_solid_24px";
  HdsIconlibrary_24px2["PoiMuseumArtOutline_24px"] = "poi-museum-art_outline_24px";
  HdsIconlibrary_24px2["PoiMuseumArtSolid_24px"] = "poi-museum-art_solid_24px";
  HdsIconlibrary_24px2["PoiNatureOutline_24px"] = "poi-nature_outline_24px";
  HdsIconlibrary_24px2["PoiNatureSolid_24px"] = "poi-nature_solid_24px";
  HdsIconlibrary_24px2["PoiNatureOverlookOutline_24px"] = "poi-nature-overlook_outline_24px";
  HdsIconlibrary_24px2["PoiNatureOverlookSolid_24px"] = "poi-nature-overlook_solid_24px";
  HdsIconlibrary_24px2["PoiNightClubOutline_24px"] = "poi-night-club_outline_24px";
  HdsIconlibrary_24px2["PoiNightClubSolid_24px"] = "poi-night-club_solid_24px";
  HdsIconlibrary_24px2["PoiPagodaOutline_24px"] = "poi-pagoda_outline_24px";
  HdsIconlibrary_24px2["PoiPagodaSolid_24px"] = "poi-pagoda_solid_24px";
  HdsIconlibrary_24px2["PoiParkAndRideOutline_24px"] = "poi-park-and-ride_outline_24px";
  HdsIconlibrary_24px2["PoiParkAndRideSolid_24px"] = "poi-park-and-ride_solid_24px";
  HdsIconlibrary_24px2["PoiParkingOutline_24px"] = "poi-parking_outline_24px";
  HdsIconlibrary_24px2["PoiParkingSolid_24px"] = "poi-parking_solid_24px";
  HdsIconlibrary_24px2["PoiParkingBicycleOutline_24px"] = "poi-parking-bicycle_outline_24px";
  HdsIconlibrary_24px2["PoiParkingBicycleSolid_24px"] = "poi-parking-bicycle_solid_24px";
  HdsIconlibrary_24px2["PoiParkingGarageOutline_24px"] = "poi-parking-garage_outline_24px";
  HdsIconlibrary_24px2["PoiParkingGarageSolid_24px"] = "poi-parking-garage_solid_24px";
  HdsIconlibrary_24px2["PoiParkingMotorcycleOutline_24px"] = "poi-parking-motorcycle_outline_24px";
  HdsIconlibrary_24px2["PoiParkingMotorcycleSolid_24px"] = "poi-parking-motorcycle_solid_24px";
  HdsIconlibrary_24px2["PoiPetrolStationOutline_24px"] = "poi-petrol-station_outline_24px";
  HdsIconlibrary_24px2["PoiPetrolStationSolid_24px"] = "poi-petrol-station_solid_24px";
  HdsIconlibrary_24px2["PoiPharmacyCrescentOutline_24px"] = "poi-pharmacy-crescent_outline_24px";
  HdsIconlibrary_24px2["PoiPharmacyCrescentSolid_24px"] = "poi-pharmacy-crescent_solid_24px";
  HdsIconlibrary_24px2["PoiPharmacyCrossOutline_24px"] = "poi-pharmacy-cross_outline_24px";
  HdsIconlibrary_24px2["PoiPharmacyCrossSolid_24px"] = "poi-pharmacy-cross_solid_24px";
  HdsIconlibrary_24px2["PoiPicnicAreaOutline_24px"] = "poi-picnic-area_outline_24px";
  HdsIconlibrary_24px2["PoiPicnicAreaSolid_24px"] = "poi-picnic-area_solid_24px";
  HdsIconlibrary_24px2["PoiPlaygroundOutline_24px"] = "poi-playground_outline_24px";
  HdsIconlibrary_24px2["PoiPlaygroundSolid_24px"] = "poi-playground_solid_24px";
  HdsIconlibrary_24px2["PoiPointOutline_24px"] = "poi-point_outline_24px";
  HdsIconlibrary_24px2["PoiPointSolid_24px"] = "poi-point_solid_24px";
  HdsIconlibrary_24px2["PoiPoliceOutline_24px"] = "poi-police_outline_24px";
  HdsIconlibrary_24px2["PoiPoliceSolid_24px"] = "poi-police_solid_24px";
  HdsIconlibrary_24px2["PoiPoolOutline_24px"] = "poi-pool_outline_24px";
  HdsIconlibrary_24px2["PoiPoolSolid_24px"] = "poi-pool_solid_24px";
  HdsIconlibrary_24px2["PoiPostOutline_24px"] = "poi-post_outline_24px";
  HdsIconlibrary_24px2["PoiPostSolid_24px"] = "poi-post_solid_24px";
  HdsIconlibrary_24px2["PoiPubOutline_24px"] = "poi-pub_outline_24px";
  HdsIconlibrary_24px2["PoiPubSolid_24px"] = "poi-pub_solid_24px";
  HdsIconlibrary_24px2["PoiPublicToiletOutline_24px"] = "poi-public-toilet_outline_24px";
  HdsIconlibrary_24px2["PoiPublicToiletSolid_24px"] = "poi-public-toilet_solid_24px";
  HdsIconlibrary_24px2["PoiPublicTransportOutline_24px"] = "poi-public-transport_outline_24px";
  HdsIconlibrary_24px2["PoiPublicTransportSolid_24px"] = "poi-public-transport_solid_24px";
  HdsIconlibrary_24px2["PoiRailLightOutline_24px"] = "poi-rail-light_outline_24px";
  HdsIconlibrary_24px2["PoiRailLightSolid_24px"] = "poi-rail-light_solid_24px";
  HdsIconlibrary_24px2["PoiRailRegionalOutline_24px"] = "poi-rail-regional_outline_24px";
  HdsIconlibrary_24px2["PoiRailRegionalSolid_24px"] = "poi-rail-regional_solid_24px";
  HdsIconlibrary_24px2["PoiRailYardOutline_24px"] = "poi-rail-yard_outline_24px";
  HdsIconlibrary_24px2["PoiRailYardSolid_24px"] = "poi-rail-yard_solid_24px";
  HdsIconlibrary_24px2["PoiRampOutline_24px"] = "poi-ramp_outline_24px";
  HdsIconlibrary_24px2["PoiRampSolid_24px"] = "poi-ramp_solid_24px";
  HdsIconlibrary_24px2["PoiReligiousPlaceOutline_24px"] = "poi-religious-place_outline_24px";
  HdsIconlibrary_24px2["PoiReligiousPlaceSolid_24px"] = "poi-religious-place_solid_24px";
  HdsIconlibrary_24px2["PoiReligiousShintoJpnOutline_24px"] = "poi-religious-shinto-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiReligiousShintoJpnSolid_24px"] = "poi-religious-shinto-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiReligiousTempleBuddhistJpnOutline_24px"] = "poi-religious-temple-buddhist-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiReligiousTempleBuddhistJpnSolid_24px"] = "poi-religious-temple-buddhist-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiRestaurantOutline_24px"] = "poi-restaurant_outline_24px";
  HdsIconlibrary_24px2["PoiRestaurantSolid_24px"] = "poi-restaurant_solid_24px";
  HdsIconlibrary_24px2["PoiSeaportHarborOutline_24px"] = "poi-seaport-harbor_outline_24px";
  HdsIconlibrary_24px2["PoiSeaportHarborSolid_24px"] = "poi-seaport-harbor_solid_24px";
  HdsIconlibrary_24px2["PoiShoesOutline_24px"] = "poi-shoes_outline_24px";
  HdsIconlibrary_24px2["PoiShoesSolid_24px"] = "poi-shoes_solid_24px";
  HdsIconlibrary_24px2["PoiShoppingOutline_24px"] = "poi-shopping_outline_24px";
  HdsIconlibrary_24px2["PoiShoppingSolid_24px"] = "poi-shopping_solid_24px";
  HdsIconlibrary_24px2["PoiShrineGenericOutline_24px"] = "poi-shrine-generic_outline_24px";
  HdsIconlibrary_24px2["PoiShrineGenericSolid_24px"] = "poi-shrine-generic_solid_24px";
  HdsIconlibrary_24px2["PoiSkiRunOutline_24px"] = "poi-ski-run_outline_24px";
  HdsIconlibrary_24px2["PoiSkiRunSolid_24px"] = "poi-ski-run_solid_24px";
  HdsIconlibrary_24px2["PoiSkywalkOutline_24px"] = "poi-skywalk_outline_24px";
  HdsIconlibrary_24px2["PoiSkywalkSolid_24px"] = "poi-skywalk_solid_24px";
  HdsIconlibrary_24px2["PoiStadiumOutline_24px"] = "poi-stadium_outline_24px";
  HdsIconlibrary_24px2["PoiStadiumSolid_24px"] = "poi-stadium_solid_24px";
  HdsIconlibrary_24px2["PoiStairsOutline_24px"] = "poi-stairs_outline_24px";
  HdsIconlibrary_24px2["PoiStairsSolid_24px"] = "poi-stairs_solid_24px";
  HdsIconlibrary_24px2["PoiSweetsOutline_24px"] = "poi-sweets_outline_24px";
  HdsIconlibrary_24px2["PoiSweetsSolid_24px"] = "poi-sweets_solid_24px";
  HdsIconlibrary_24px2["PoiSwimmingOutline_24px"] = "poi-swimming_outline_24px";
  HdsIconlibrary_24px2["PoiSwimmingSolid_24px"] = "poi-swimming_solid_24px";
  HdsIconlibrary_24px2["PoiSynagogueOutline_24px"] = "poi-synagogue_outline_24px";
  HdsIconlibrary_24px2["PoiSynagogueSolid_24px"] = "poi-synagogue_solid_24px";
  HdsIconlibrary_24px2["PoiTaxiOutline_24px"] = "poi-taxi_outline_24px";
  HdsIconlibrary_24px2["PoiTaxiSolid_24px"] = "poi-taxi_solid_24px";
  HdsIconlibrary_24px2["PoiTheaterOutline_24px"] = "poi-theater_outline_24px";
  HdsIconlibrary_24px2["PoiTheaterSolid_24px"] = "poi-theater_solid_24px";
  HdsIconlibrary_24px2["PoiTollBoothOutline_24px"] = "poi-toll-booth_outline_24px";
  HdsIconlibrary_24px2["PoiTollBoothSolid_24px"] = "poi-toll-booth_solid_24px";
  HdsIconlibrary_24px2["PoiTouristInformationOutline_24px"] = "poi-tourist-information_outline_24px";
  HdsIconlibrary_24px2["PoiTouristInformationSolid_24px"] = "poi-tourist-information_solid_24px";
  HdsIconlibrary_24px2["PoiTrainOutline_24px"] = "poi-train_outline_24px";
  HdsIconlibrary_24px2["PoiTrainSolid_24px"] = "poi-train_solid_24px";
  HdsIconlibrary_24px2["PoiTransportShinkansenJpnOutline_24px"] = "poi-transport-shinkansen-jpn_outline_24px";
  HdsIconlibrary_24px2["PoiTransportShinkansenJpnSolid_24px"] = "poi-transport-shinkansen-jpn_solid_24px";
  HdsIconlibrary_24px2["PoiTravelAgentTicketingOutline_24px"] = "poi-travel-agent-ticketing_outline_24px";
  HdsIconlibrary_24px2["PoiTravelAgentTicketingSolid_24px"] = "poi-travel-agent-ticketing_solid_24px";
  HdsIconlibrary_24px2["PoiTruckDealershipOutline_24px"] = "poi-truck-dealership_outline_24px";
  HdsIconlibrary_24px2["PoiTruckDealershipSolid_24px"] = "poi-truck-dealership_solid_24px";
  HdsIconlibrary_24px2["PoiTruckParkingOutline_24px"] = "poi-truck-parking_outline_24px";
  HdsIconlibrary_24px2["PoiTruckParkingSolid_24px"] = "poi-truck-parking_solid_24px";
  HdsIconlibrary_24px2["PoiTruckRepairOutline_24px"] = "poi-truck-repair_outline_24px";
  HdsIconlibrary_24px2["PoiTruckRepairSolid_24px"] = "poi-truck-repair_solid_24px";
  HdsIconlibrary_24px2["PoiTruckStopPlazaOutline_24px"] = "poi-truck-stop-plaza_outline_24px";
  HdsIconlibrary_24px2["PoiTruckStopPlazaSolid_24px"] = "poi-truck-stop-plaza_solid_24px";
  HdsIconlibrary_24px2["PoiTruckWashOutline_24px"] = "poi-truck-wash_outline_24px";
  HdsIconlibrary_24px2["PoiTruckWashSolid_24px"] = "poi-truck-wash_solid_24px";
  HdsIconlibrary_24px2["PoiTunnelOutline_24px"] = "poi-tunnel_outline_24px";
  HdsIconlibrary_24px2["PoiTunnelSolid_24px"] = "poi-tunnel_solid_24px";
  HdsIconlibrary_24px2["PoiWaterfallOutline_24px"] = "poi-waterfall_outline_24px";
  HdsIconlibrary_24px2["PoiWaterfallSolid_24px"] = "poi-waterfall_solid_24px";
  HdsIconlibrary_24px2["PoiWeighStationOutline_24px"] = "poi-weigh-station_outline_24px";
  HdsIconlibrary_24px2["PoiWeighStationSolid_24px"] = "poi-weigh-station_solid_24px";
  HdsIconlibrary_24px2["PoiZooOutline_24px"] = "poi-zoo_outline_24px";
  HdsIconlibrary_24px2["PoiZooSolid_24px"] = "poi-zoo_solid_24px";
  HdsIconlibrary_24px2["SocialCameraOutline_24px"] = "social-camera_outline_24px";
  HdsIconlibrary_24px2["SocialCameraSolid_24px"] = "social-camera_solid_24px";
  HdsIconlibrary_24px2["SocialChatOutline_24px"] = "social-chat_outline_24px";
  HdsIconlibrary_24px2["SocialChatSolid_24px"] = "social-chat_solid_24px";
  HdsIconlibrary_24px2["SocialEditImageOutline_24px"] = "social-edit-image_outline_24px";
  HdsIconlibrary_24px2["SocialEditImageSolid_24px"] = "social-edit-image_solid_24px";
  HdsIconlibrary_24px2["SocialHeartOutline_24px"] = "social-heart_outline_24px";
  HdsIconlibrary_24px2["SocialHeartSolid_24px"] = "social-heart_solid_24px";
  HdsIconlibrary_24px2["SocialLiveOutline_24px"] = "social-live_outline_24px";
  HdsIconlibrary_24px2["SocialLiveSolid_24px"] = "social-live_solid_24px";
  HdsIconlibrary_24px2["SocialMailOutline_24px"] = "social-mail_outline_24px";
  HdsIconlibrary_24px2["SocialMailSolid_24px"] = "social-mail_solid_24px";
  HdsIconlibrary_24px2["SocialMaskingOutline_24px"] = "social-masking_outline_24px";
  HdsIconlibrary_24px2["SocialMaskingSolid_24px"] = "social-masking_solid_24px";
  HdsIconlibrary_24px2["SocialStarOutline_24px"] = "social-star_outline_24px";
  HdsIconlibrary_24px2["SocialStarSolid_24px"] = "social-star_solid_24px";
  HdsIconlibrary_24px2["SocialStarEmptyOutline_24px"] = "social-star-empty_outline_24px";
  HdsIconlibrary_24px2["SocialStarEmptySolid_24px"] = "social-star-empty_solid_24px";
  HdsIconlibrary_24px2["SocialTagHeartedOutline_24px"] = "social-tag-hearted_outline_24px";
  HdsIconlibrary_24px2["SocialTagHeartedSolid_24px"] = "social-tag-hearted_solid_24px";
  HdsIconlibrary_24px2["SocialTelephoneOutline_24px"] = "social-telephone_outline_24px";
  HdsIconlibrary_24px2["SocialTelephoneSolid_24px"] = "social-telephone_solid_24px";
  HdsIconlibrary_24px2["SocialThumbsDownOutline_24px"] = "social-thumbs-down_outline_24px";
  HdsIconlibrary_24px2["SocialThumbsDownSolid_24px"] = "social-thumbs-down_solid_24px";
  HdsIconlibrary_24px2["SocialThumbsUpOutline_24px"] = "social-thumbs-up_outline_24px";
  HdsIconlibrary_24px2["SocialThumbsUpSolid_24px"] = "social-thumbs-up_solid_24px";
  HdsIconlibrary_24px2["StatsActivityOutline_24px"] = "stats-activity_outline_24px";
  HdsIconlibrary_24px2["StatsActivitySolid_24px"] = "stats-activity_solid_24px";
  HdsIconlibrary_24px2["StatsBarChartOutline_24px"] = "stats-bar-chart_outline_24px";
  HdsIconlibrary_24px2["StatsBarChartSolid_24px"] = "stats-bar-chart_solid_24px";
  HdsIconlibrary_24px2["StatsDashboardOutline_24px"] = "stats-dashboard_outline_24px";
  HdsIconlibrary_24px2["StatsDashboardSolid_24px"] = "stats-dashboard_solid_24px";
  HdsIconlibrary_24px2["StatsEastOutline_24px"] = "stats-east_outline_24px";
  HdsIconlibrary_24px2["StatsEastSolid_24px"] = "stats-east_solid_24px";
  HdsIconlibrary_24px2["StatsMarkerOutline_24px"] = "stats-marker_outline_24px";
  HdsIconlibrary_24px2["StatsMarkerSolid_24px"] = "stats-marker_solid_24px";
  HdsIconlibrary_24px2["StatsNorthEastOutline_24px"] = "stats-north-east_outline_24px";
  HdsIconlibrary_24px2["StatsNorthEastSolid_24px"] = "stats-north-east_solid_24px";
  HdsIconlibrary_24px2["StatsNorthWestOutline_24px"] = "stats-north-west_outline_24px";
  HdsIconlibrary_24px2["StatsNorthWestSolid_24px"] = "stats-north-west_solid_24px";
  HdsIconlibrary_24px2["StatsPieChartOutline_24px"] = "stats-pie-chart_outline_24px";
  HdsIconlibrary_24px2["StatsPieChartSolid_24px"] = "stats-pie-chart_solid_24px";
  HdsIconlibrary_24px2["StatsSouthEastOutline_24px"] = "stats-south-east_outline_24px";
  HdsIconlibrary_24px2["StatsSouthEastSolid_24px"] = "stats-south-east_solid_24px";
  HdsIconlibrary_24px2["StatsSouthWestOutline_24px"] = "stats-south-west_outline_24px";
  HdsIconlibrary_24px2["StatsSouthWestSolid_24px"] = "stats-south-west_solid_24px";
  HdsIconlibrary_24px2["StatsStatisticsOutline_24px"] = "stats-statistics_outline_24px";
  HdsIconlibrary_24px2["StatsStatisticsSolid_24px"] = "stats-statistics_solid_24px";
  HdsIconlibrary_24px2["StatsValueOutline_24px"] = "stats-value_outline_24px";
  HdsIconlibrary_24px2["StatsValueSolid_24px"] = "stats-value_solid_24px";
  HdsIconlibrary_24px2["StatsValueDecreaseOutline_24px"] = "stats-value-decrease_outline_24px";
  HdsIconlibrary_24px2["StatsValueDecreaseSolid_24px"] = "stats-value-decrease_solid_24px";
  HdsIconlibrary_24px2["StatsValueDecreaseHighOutline_24px"] = "stats-value-decrease-high_outline_24px";
  HdsIconlibrary_24px2["StatsValueDecreaseHighSolid_24px"] = "stats-value-decrease-high_solid_24px";
  HdsIconlibrary_24px2["StatsValueIncreaseOutline_24px"] = "stats-value-increase_outline_24px";
  HdsIconlibrary_24px2["StatsValueIncreaseSolid_24px"] = "stats-value-increase_solid_24px";
  HdsIconlibrary_24px2["StatsValueIncreaseHighOutline_24px"] = "stats-value-increase-high_outline_24px";
  HdsIconlibrary_24px2["StatsValueIncreaseHighSolid_24px"] = "stats-value-increase-high_solid_24px";
  HdsIconlibrary_24px2["StatsWestOutline_24px"] = "stats-west_outline_24px";
  HdsIconlibrary_24px2["StatsWestSolid_24px"] = "stats-west_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogos_360Outline_24px"] = "third-party-logos-360_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogos_360Solid_24px"] = "third-party-logos-360_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosAlexaOutline_24px"] = "third-party-logos-alexa_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosAlexaSolid_24px"] = "third-party-logos-alexa_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosAmexOutline_24px"] = "third-party-logos-amex_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosAmexSolid_24px"] = "third-party-logos-amex_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosDinersOutline_24px"] = "third-party-logos-diners_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosDinersSolid_24px"] = "third-party-logos-diners_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosDiscoverOutline_24px"] = "third-party-logos-discover_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosDiscoverSolid_24px"] = "third-party-logos-discover_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosFacebookOutline_24px"] = "third-party-logos-facebook_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosFacebookSolid_24px"] = "third-party-logos-facebook_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosFigmaOutline_24px"] = "third-party-logos-figma_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosFigmaSolid_24px"] = "third-party-logos-figma_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosGithubOutline_24px"] = "third-party-logos-github_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosGithubSolid_24px"] = "third-party-logos-github_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosGitlabOutline_24px"] = "third-party-logos-gitlab_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosGitlabSolid_24px"] = "third-party-logos-gitlab_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosInstagramOutline_24px"] = "third-party-logos-instagram_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosInstagramSolid_24px"] = "third-party-logos-instagram_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosLinkedinOutline_24px"] = "third-party-logos-linkedin_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosLinkedinSolid_24px"] = "third-party-logos-linkedin_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosMastercardOutline_24px"] = "third-party-logos-mastercard_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosMastercardSolid_24px"] = "third-party-logos-mastercard_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosRedditOutline_24px"] = "third-party-logos-reddit_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosRedditSolid_24px"] = "third-party-logos-reddit_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosStorybookOutline_24px"] = "third-party-logos-storybook_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosStorybookSolid_24px"] = "third-party-logos-storybook_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosTwitterOutline_24px"] = "third-party-logos-twitter_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosTwitterSolid_24px"] = "third-party-logos-twitter_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosVisaOutline_24px"] = "third-party-logos-visa_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosVisaSolid_24px"] = "third-party-logos-visa_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosWhat_3WordsOutline_24px"] = "third-party-logos-what-3-words_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosWhat_3WordsSolid_24px"] = "third-party-logos-what-3-words_solid_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosYoutubeOutline_24px"] = "third-party-logos-youtube_outline_24px";
  HdsIconlibrary_24px2["ThirdPartyLogosYoutubeSolid_24px"] = "third-party-logos-youtube_solid_24px";
  HdsIconlibrary_24px2["ToolsAddCamOutline_24px"] = "tools-add-cam_outline_24px";
  HdsIconlibrary_24px2["ToolsAddCamSolid_24px"] = "tools-add-cam_solid_24px";
  HdsIconlibrary_24px2["ToolsAddMapMarkerOutline_24px"] = "tools-add-map-marker_outline_24px";
  HdsIconlibrary_24px2["ToolsAddMapMarkerSolid_24px"] = "tools-add-map-marker_solid_24px";
  HdsIconlibrary_24px2["ToolsAddPlaceOutline_24px"] = "tools-add-place_outline_24px";
  HdsIconlibrary_24px2["ToolsAddPlaceSolid_24px"] = "tools-add-place_solid_24px";
  HdsIconlibrary_24px2["ToolsAddRoadOutline_24px"] = "tools-add-road_outline_24px";
  HdsIconlibrary_24px2["ToolsAddRoadSolid_24px"] = "tools-add-road_solid_24px";
  HdsIconlibrary_24px2["ToolsAddRoadSignOutline_24px"] = "tools-add-road-sign_outline_24px";
  HdsIconlibrary_24px2["ToolsAddRoadSignSolid_24px"] = "tools-add-road-sign_solid_24px";
  HdsIconlibrary_24px2["ToolsAddShapeOutline_24px"] = "tools-add-shape_outline_24px";
  HdsIconlibrary_24px2["ToolsAddShapeSolid_24px"] = "tools-add-shape_solid_24px";
  HdsIconlibrary_24px2["ToolsBrushSelectionOutline_24px"] = "tools-brush-selection_outline_24px";
  HdsIconlibrary_24px2["ToolsBrushSelectionSolid_24px"] = "tools-brush-selection_solid_24px";
  HdsIconlibrary_24px2["ToolsCenterLineOutline_24px"] = "tools-center-line_outline_24px";
  HdsIconlibrary_24px2["ToolsCenterLineSolid_24px"] = "tools-center-line_solid_24px";
  HdsIconlibrary_24px2["ToolsColorPaletteOutline_24px"] = "tools-color-palette_outline_24px";
  HdsIconlibrary_24px2["ToolsColorPaletteSolid_24px"] = "tools-color-palette_solid_24px";
  HdsIconlibrary_24px2["ToolsCompassBOutline_24px"] = "tools-compass-b_outline_24px";
  HdsIconlibrary_24px2["ToolsCompassBSolid_24px"] = "tools-compass-b_solid_24px";
  HdsIconlibrary_24px2["ToolsConnectorOutline_24px"] = "tools-connector_outline_24px";
  HdsIconlibrary_24px2["ToolsConnectorSolid_24px"] = "tools-connector_solid_24px";
  HdsIconlibrary_24px2["ToolsCursorArrowOutline_24px"] = "tools-cursor-arrow_outline_24px";
  HdsIconlibrary_24px2["ToolsCursorArrowSolid_24px"] = "tools-cursor-arrow_solid_24px";
  HdsIconlibrary_24px2["ToolsCursorPointerOutline_24px"] = "tools-cursor-pointer_outline_24px";
  HdsIconlibrary_24px2["ToolsCursorPointerSolid_24px"] = "tools-cursor-pointer_solid_24px";
  HdsIconlibrary_24px2["ToolsCursorSelectorOutline_24px"] = "tools-cursor-selector_outline_24px";
  HdsIconlibrary_24px2["ToolsCursorSelectorSolid_24px"] = "tools-cursor-selector_solid_24px";
  HdsIconlibrary_24px2["ToolsDisconnectedOutline_24px"] = "tools-disconnected_outline_24px";
  HdsIconlibrary_24px2["ToolsDisconnectedSolid_24px"] = "tools-disconnected_solid_24px";
  HdsIconlibrary_24px2["ToolsEditCurvesOutline_24px"] = "tools-edit-curves_outline_24px";
  HdsIconlibrary_24px2["ToolsEditCurvesSolid_24px"] = "tools-edit-curves_solid_24px";
  HdsIconlibrary_24px2["ToolsFinetuneOutline_24px"] = "tools-finetune_outline_24px";
  HdsIconlibrary_24px2["ToolsFinetuneSolid_24px"] = "tools-finetune_solid_24px";
  HdsIconlibrary_24px2["ToolsFontOutline_24px"] = "tools-font_outline_24px";
  HdsIconlibrary_24px2["ToolsFontSolid_24px"] = "tools-font_solid_24px";
  HdsIconlibrary_24px2["ToolsGuidesOutline_24px"] = "tools-guides_outline_24px";
  HdsIconlibrary_24px2["ToolsGuidesSolid_24px"] = "tools-guides_solid_24px";
  HdsIconlibrary_24px2["ToolsJoinBevelOutline_24px"] = "tools-join-bevel_outline_24px";
  HdsIconlibrary_24px2["ToolsJoinBevelSolid_24px"] = "tools-join-bevel_solid_24px";
  HdsIconlibrary_24px2["ToolsJoinMiterOutline_24px"] = "tools-join-miter_outline_24px";
  HdsIconlibrary_24px2["ToolsJoinMiterSolid_24px"] = "tools-join-miter_solid_24px";
  HdsIconlibrary_24px2["ToolsJoinRoundOutline_24px"] = "tools-join-round_outline_24px";
  HdsIconlibrary_24px2["ToolsJoinRoundSolid_24px"] = "tools-join-round_solid_24px";
  HdsIconlibrary_24px2["ToolsLineDashedOutline_24px"] = "tools-line-dashed_outline_24px";
  HdsIconlibrary_24px2["ToolsLineDashedSolid_24px"] = "tools-line-dashed_solid_24px";
  HdsIconlibrary_24px2["ToolsLineSolidOutline_24px"] = "tools-line-solid_outline_24px";
  HdsIconlibrary_24px2["ToolsLineSolidSolid_24px"] = "tools-line-solid_solid_24px";
  HdsIconlibrary_24px2["ToolsLineVariousOutline_24px"] = "tools-line-various_outline_24px";
  HdsIconlibrary_24px2["ToolsLineVariousSolid_24px"] = "tools-line-various_solid_24px";
  HdsIconlibrary_24px2["ToolsMapPlannerOutline_24px"] = "tools-map-planner_outline_24px";
  HdsIconlibrary_24px2["ToolsMapPlannerSolid_24px"] = "tools-map-planner_solid_24px";
  HdsIconlibrary_24px2["ToolsMergeOutline_24px"] = "tools-merge_outline_24px";
  HdsIconlibrary_24px2["ToolsMergeSolid_24px"] = "tools-merge_solid_24px";
  HdsIconlibrary_24px2["ToolsNumbersOutline_24px"] = "tools-numbers_outline_24px";
  HdsIconlibrary_24px2["ToolsNumbersSolid_24px"] = "tools-numbers_solid_24px";
  HdsIconlibrary_24px2["ToolsOutlineOutline_24px"] = "tools-outline_outline_24px";
  HdsIconlibrary_24px2["ToolsOutlineSolid_24px"] = "tools-outline_solid_24px";
  HdsIconlibrary_24px2["ToolsOutlinePlusOutline_24px"] = "tools-outline-plus_outline_24px";
  HdsIconlibrary_24px2["ToolsOutlinePlusSolid_24px"] = "tools-outline-plus_solid_24px";
  HdsIconlibrary_24px2["ToolsPathOutline_24px"] = "tools-path_outline_24px";
  HdsIconlibrary_24px2["ToolsPathSolid_24px"] = "tools-path_solid_24px";
  HdsIconlibrary_24px2["ToolsPickerOutline_24px"] = "tools-picker_outline_24px";
  HdsIconlibrary_24px2["ToolsPickerSolid_24px"] = "tools-picker_solid_24px";
  HdsIconlibrary_24px2["ToolsPolygonOutline_24px"] = "tools-polygon_outline_24px";
  HdsIconlibrary_24px2["ToolsPolygonSolid_24px"] = "tools-polygon_solid_24px";
  HdsIconlibrary_24px2["ToolsPolylineOutline_24px"] = "tools-polyline_outline_24px";
  HdsIconlibrary_24px2["ToolsPolylineSolid_24px"] = "tools-polyline_solid_24px";
  HdsIconlibrary_24px2["ToolsRoadOutline_24px"] = "tools-road_outline_24px";
  HdsIconlibrary_24px2["ToolsRoadSolid_24px"] = "tools-road_solid_24px";
  HdsIconlibrary_24px2["ToolsSelectorFreeformOutline_24px"] = "tools-selector-freeform_outline_24px";
  HdsIconlibrary_24px2["ToolsSelectorFreeformSolid_24px"] = "tools-selector-freeform_solid_24px";
  HdsIconlibrary_24px2["ToolsSelectorPointerOutline_24px"] = "tools-selector-pointer_outline_24px";
  HdsIconlibrary_24px2["ToolsSelectorPointerSolid_24px"] = "tools-selector-pointer_solid_24px";
  HdsIconlibrary_24px2["ToolsSelectorPolygonOutline_24px"] = "tools-selector-polygon_outline_24px";
  HdsIconlibrary_24px2["ToolsSelectorPolygonSolid_24px"] = "tools-selector-polygon_solid_24px";
  HdsIconlibrary_24px2["ToolsShapeOutline_24px"] = "tools-shape_outline_24px";
  HdsIconlibrary_24px2["ToolsShapeSolid_24px"] = "tools-shape_solid_24px";
  HdsIconlibrary_24px2["ToolsSkipPointOutline_24px"] = "tools-skip-point_outline_24px";
  HdsIconlibrary_24px2["ToolsSkipPointSolid_24px"] = "tools-skip-point_solid_24px";
  HdsIconlibrary_24px2["ToolsSplitObjectOutline_24px"] = "tools-split-object_outline_24px";
  HdsIconlibrary_24px2["ToolsSplitObjectSolid_24px"] = "tools-split-object_solid_24px";
  HdsIconlibrary_24px2["ToolsTextOutline_24px"] = "tools-text_outline_24px";
  HdsIconlibrary_24px2["ToolsTextSolid_24px"] = "tools-text_solid_24px";
  HdsIconlibrary_24px2["ToolsTiePointOutline_24px"] = "tools-tie-point_outline_24px";
  HdsIconlibrary_24px2["ToolsTiePointSolid_24px"] = "tools-tie-point_solid_24px";
  HdsIconlibrary_24px2["ToolsTunerOutline_24px"] = "tools-tuner_outline_24px";
  HdsIconlibrary_24px2["ToolsTunerSolid_24px"] = "tools-tuner_solid_24px";
  HdsIconlibrary_24px2["ToolsVectorPointOutline_24px"] = "tools-vector-point_outline_24px";
  HdsIconlibrary_24px2["ToolsVectorPointSolid_24px"] = "tools-vector-point_solid_24px";
  HdsIconlibrary_24px2["ToolsWrenchOutline_24px"] = "tools-wrench_outline_24px";
  HdsIconlibrary_24px2["ToolsWrenchSolid_24px"] = "tools-wrench_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingAccidentCarOutline_24px"] = "travel-transport-tracking-accident-car_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingAccidentCarSolid_24px"] = "travel-transport-tracking-accident-car_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingAirportOutline_24px"] = "travel-transport-tracking-airport_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingAirportSolid_24px"] = "travel-transport-tracking-airport_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingAmbulanceOutline_24px"] = "travel-transport-tracking-ambulance_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingAmbulanceSolid_24px"] = "travel-transport-tracking-ambulance_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingArrivalAirportOutline_24px"] = "travel-transport-tracking-arrival-airport_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingArrivalAirportSolid_24px"] = "travel-transport-tracking-arrival-airport_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingAttentionOutline_24px"] = "travel-transport-tracking-attention_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingAttentionSolid_24px"] = "travel-transport-tracking-attention_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingAutoCaravanOutline_24px"] = "travel-transport-tracking-auto-caravan_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingAutoCaravanSolid_24px"] = "travel-transport-tracking-auto-caravan_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingAutoTrailerOutline_24px"] = "travel-transport-tracking-auto-trailer_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingAutoTrailerSolid_24px"] = "travel-transport-tracking-auto-trailer_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBeamLightOutline_24px"] = "travel-transport-tracking-beam-light_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBeamLightSolid_24px"] = "travel-transport-tracking-beam-light_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBicycleOutline_24px"] = "travel-transport-tracking-bicycle_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBicycleSolid_24px"] = "travel-transport-tracking-bicycle_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBicyclePaceOutline_24px"] = "travel-transport-tracking-bicycle-pace_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBicyclePaceSolid_24px"] = "travel-transport-tracking-bicycle-pace_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBoatTrailerOutline_24px"] = "travel-transport-tracking-boat-trailer_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBoatTrailerSolid_24px"] = "travel-transport-tracking-boat-trailer_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBumpsOutline_24px"] = "travel-transport-tracking-bumps_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBumpsSolid_24px"] = "travel-transport-tracking-bumps_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBusOutline_24px"] = "travel-transport-tracking-bus_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBusSolid_24px"] = "travel-transport-tracking-bus_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBusRapidOutline_24px"] = "travel-transport-tracking-bus-rapid_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingBusRapidSolid_24px"] = "travel-transport-tracking-bus-rapid_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCableWayOutline_24px"] = "travel-transport-tracking-cable-way_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCableWaySolid_24px"] = "travel-transport-tracking-cable-way_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCarFuelAltOutline_24px"] = "travel-transport-tracking-car-fuel-alt_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCarFuelAltSolid_24px"] = "travel-transport-tracking-car-fuel-alt_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCarRentalOutline_24px"] = "travel-transport-tracking-car-rental_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCarRentalSolid_24px"] = "travel-transport-tracking-car-rental_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCarRigOutline_24px"] = "travel-transport-tracking-car-rig_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCarRigSolid_24px"] = "travel-transport-tracking-car-rig_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCarWifiOffOutline_24px"] = "travel-transport-tracking-car-wifi-off_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCarWifiOffSolid_24px"] = "travel-transport-tracking-car-wifi-off_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCarWifiOnOutline_24px"] = "travel-transport-tracking-car-wifi-on_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCarWifiOnSolid_24px"] = "travel-transport-tracking-car-wifi-on_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCaravanOutline_24px"] = "travel-transport-tracking-caravan_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCaravanSolid_24px"] = "travel-transport-tracking-caravan_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingChargingOutline_24px"] = "travel-transport-tracking-charging_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingChargingSolid_24px"] = "travel-transport-tracking-charging_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingClosureOutline_24px"] = "travel-transport-tracking-closure_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingClosureSolid_24px"] = "travel-transport-tracking-closure_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCoachOutline_24px"] = "travel-transport-tracking-coach_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingCoachSolid_24px"] = "travel-transport-tracking-coach_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDeliveryVanOutline_24px"] = "travel-transport-tracking-delivery-van_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDeliveryVanSolid_24px"] = "travel-transport-tracking-delivery-van_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDepartureAirportOutline_24px"] = "travel-transport-tracking-departure-airport_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDepartureAirportSolid_24px"] = "travel-transport-tracking-departure-airport_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDestinationOutline_24px"] = "travel-transport-tracking-destination_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDestinationSolid_24px"] = "travel-transport-tracking-destination_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDiagonalOutline_24px"] = "travel-transport-tracking-diagonal_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDiagonalSolid_24px"] = "travel-transport-tracking-diagonal_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDirectionsOutline_24px"] = "travel-transport-tracking-directions_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDirectionsSolid_24px"] = "travel-transport-tracking-directions_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDisabledVehicleOutline_24px"] = "travel-transport-tracking-disabled-vehicle_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDisabledVehicleSolid_24px"] = "travel-transport-tracking-disabled-vehicle_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDrivingOutline_24px"] = "travel-transport-tracking-driving_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDrivingSolid_24px"] = "travel-transport-tracking-driving_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDrivingOffOutline_24px"] = "travel-transport-tracking-driving-off_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDrivingOffSolid_24px"] = "travel-transport-tracking-driving-off_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDynamicRoutingOutline_24px"] = "travel-transport-tracking-dynamic-routing_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingDynamicRoutingSolid_24px"] = "travel-transport-tracking-dynamic-routing_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingEvRangeOutline_24px"] = "travel-transport-tracking-ev-range_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingEvRangeSolid_24px"] = "travel-transport-tracking-ev-range_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingFerryOutline_24px"] = "travel-transport-tracking-ferry_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingFerrySolid_24px"] = "travel-transport-tracking-ferry_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingFerryOffOutline_24px"] = "travel-transport-tracking-ferry-off_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingFerryOffSolid_24px"] = "travel-transport-tracking-ferry-off_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingFlightMonitorOutline_24px"] = "travel-transport-tracking-flight-monitor_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingFlightMonitorSolid_24px"] = "travel-transport-tracking-flight-monitor_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingFullContainerLoadOutline_24px"] = "travel-transport-tracking-full-container-load_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingFullContainerLoadSolid_24px"] = "travel-transport-tracking-full-container-load_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingFullTruckLoadOutline_24px"] = "travel-transport-tracking-full-truck-load_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingFullTruckLoadSolid_24px"] = "travel-transport-tracking-full-truck-load_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingGeofenceOutline_24px"] = "travel-transport-tracking-geofence_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingGeofenceSolid_24px"] = "travel-transport-tracking-geofence_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingHandsfreeDrivingOutline_24px"] = "travel-transport-tracking-handsfree-driving_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingHandsfreeDrivingSolid_24px"] = "travel-transport-tracking-handsfree-driving_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingHeadLightOutline_24px"] = "travel-transport-tracking-head-light_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingHeadLightSolid_24px"] = "travel-transport-tracking-head-light_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingHeavyMachineryOutline_24px"] = "travel-transport-tracking-heavy-machinery_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingHeavyMachinerySolid_24px"] = "travel-transport-tracking-heavy-machinery_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingHeightOutline_24px"] = "travel-transport-tracking-height_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingHeightSolid_24px"] = "travel-transport-tracking-height_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingHighwaysOutline_24px"] = "travel-transport-tracking-highways_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingHighwaysSolid_24px"] = "travel-transport-tracking-highways_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingInclinedOutline_24px"] = "travel-transport-tracking-inclined_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingInclinedSolid_24px"] = "travel-transport-tracking-inclined_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingJourneyOutline_24px"] = "travel-transport-tracking-journey_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingJourneySolid_24px"] = "travel-transport-tracking-journey_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingLaneRestrictionOutline_24px"] = "travel-transport-tracking-lane-restriction_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingLaneRestrictionSolid_24px"] = "travel-transport-tracking-lane-restriction_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingLessContainerLoadOutline_24px"] = "travel-transport-tracking-less-container-load_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingLessContainerLoadSolid_24px"] = "travel-transport-tracking-less-container-load_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingLessTruckLoadOutline_24px"] = "travel-transport-tracking-less-truck-load_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingLessTruckLoadSolid_24px"] = "travel-transport-tracking-less-truck-load_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingLightRailOutline_24px"] = "travel-transport-tracking-light-rail_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingLightRailSolid_24px"] = "travel-transport-tracking-light-rail_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingLightrailOutline_24px"] = "travel-transport-tracking-lightrail_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingLightrailSolid_24px"] = "travel-transport-tracking-lightrail_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingLocationTrackingOutline_24px"] = "travel-transport-tracking-location-tracking_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingLocationTrackingSolid_24px"] = "travel-transport-tracking-location-tracking_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMassTransitOutline_24px"] = "travel-transport-tracking-mass-transit_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMassTransitSolid_24px"] = "travel-transport-tracking-mass-transit_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMaxHeightOutline_24px"] = "travel-transport-tracking-max-height_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMaxHeightSolid_24px"] = "travel-transport-tracking-max-height_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMaxWidthOutline_24px"] = "travel-transport-tracking-max-width_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMaxWidthSolid_24px"] = "travel-transport-tracking-max-width_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMetroOutline_24px"] = "travel-transport-tracking-metro_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMetroSolid_24px"] = "travel-transport-tracking-metro_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMonorailOutline_24px"] = "travel-transport-tracking-monorail_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMonorailSolid_24px"] = "travel-transport-tracking-monorail_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMotorcycleOutline_24px"] = "travel-transport-tracking-motorcycle_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMotorcycleSolid_24px"] = "travel-transport-tracking-motorcycle_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMotorhomeOutline_24px"] = "travel-transport-tracking-motorhome_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMotorhomeSolid_24px"] = "travel-transport-tracking-motorhome_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMotorscooterOutline_24px"] = "travel-transport-tracking-motorscooter_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMotorscooterSolid_24px"] = "travel-transport-tracking-motorscooter_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMultimodalOutline_24px"] = "travel-transport-tracking-multimodal_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingMultimodalSolid_24px"] = "travel-transport-tracking-multimodal_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingNavigationOutline_24px"] = "travel-transport-tracking-navigation_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingNavigationSolid_24px"] = "travel-transport-tracking-navigation_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingNoContainerLoadOutline_24px"] = "travel-transport-tracking-no-container-load_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingNoContainerLoadSolid_24px"] = "travel-transport-tracking-no-container-load_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingNoTruckLoadOutline_24px"] = "travel-transport-tracking-no-truck-load_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingNoTruckLoadSolid_24px"] = "travel-transport-tracking-no-truck-load_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlannedTourOutline_24px"] = "travel-transport-tracking-planned-tour_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlannedTourSolid_24px"] = "travel-transport-tracking-planned-tour_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeAOutline_24px"] = "travel-transport-tracking-plug-type-a_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeASolid_24px"] = "travel-transport-tracking-plug-type-a_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeBNema_14_50Outline_24px"] = "travel-transport-tracking-plug-type-b-nema-14-50_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeBNema_14_50Solid_24px"] = "travel-transport-tracking-plug-type-b-nema-14-50_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeBNema_5_15Outline_24px"] = "travel-transport-tracking-plug-type-b-nema-5-15_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeBNema_5_15Solid_24px"] = "travel-transport-tracking-plug-type-b-nema-5-15_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeCOutline_24px"] = "travel-transport-tracking-plug-type-c_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeCSolid_24px"] = "travel-transport-tracking-plug-type-c_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeChademoOutline_24px"] = "travel-transport-tracking-plug-type-chademo_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeChademoSolid_24px"] = "travel-transport-tracking-plug-type-chademo_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeEOutline_24px"] = "travel-transport-tracking-plug-type-e_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeESolid_24px"] = "travel-transport-tracking-plug-type-e_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeFOutline_24px"] = "travel-transport-tracking-plug-type-f_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeFSolid_24px"] = "travel-transport-tracking-plug-type-f_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeGOutline_24px"] = "travel-transport-tracking-plug-type-g_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeGSolid_24px"] = "travel-transport-tracking-plug-type-g_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeIOutline_24px"] = "travel-transport-tracking-plug-type-I_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeISolid_24px"] = "travel-transport-tracking-plug-type-I_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeIndustrialOutline_24px"] = "travel-transport-tracking-plug-type-industrial_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeIndustrialSolid_24px"] = "travel-transport-tracking-plug-type-industrial_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeJOutline_24px"] = "travel-transport-tracking-plug-type-j_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeJSolid_24px"] = "travel-transport-tracking-plug-type-j_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeJ1772Outline_24px"] = "travel-transport-tracking-plug-type-j1772_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeJ1772Solid_24px"] = "travel-transport-tracking-plug-type-j1772_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeJ1772ComboOutline_24px"] = "travel-transport-tracking-plug-type-j1772-combo_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeJ1772ComboSolid_24px"] = "travel-transport-tracking-plug-type-j1772-combo_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeMarechalOutline_24px"] = "travel-transport-tracking-plug-type-marechal_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeMarechalSolid_24px"] = "travel-transport-tracking-plug-type-marechal_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeMennekesOutline_24px"] = "travel-transport-tracking-plug-type-mennekes_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeMennekesSolid_24px"] = "travel-transport-tracking-plug-type-mennekes_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeMennekesComboOutline_24px"] = "travel-transport-tracking-plug-type-mennekes-combo_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeMennekesComboSolid_24px"] = "travel-transport-tracking-plug-type-mennekes-combo_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeTeslaOutline_24px"] = "travel-transport-tracking-plug-type-tesla_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingPlugTypeTeslaSolid_24px"] = "travel-transport-tracking-plug-type-tesla_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRailHighspeedOutline_24px"] = "travel-transport-tracking-rail-highspeed_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRailHighspeedSolid_24px"] = "travel-transport-tracking-rail-highspeed_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRailHighspeedOffOutline_24px"] = "travel-transport-tracking-rail-highspeed-off_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRailHighspeedOffSolid_24px"] = "travel-transport-tracking-rail-highspeed-off_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRailIntercityOutline_24px"] = "travel-transport-tracking-rail-intercity_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRailIntercitySolid_24px"] = "travel-transport-tracking-rail-intercity_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRailLocalOutline_24px"] = "travel-transport-tracking-rail-local_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRailLocalSolid_24px"] = "travel-transport-tracking-rail-local_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRailRegionalOutline_24px"] = "travel-transport-tracking-rail-regional_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRailRegionalSolid_24px"] = "travel-transport-tracking-rail-regional_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRedLightCameraOutline_24px"] = "travel-transport-tracking-red-light-camera_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRedLightCameraSolid_24px"] = "travel-transport-tracking-red-light-camera_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRideHailingOutline_24px"] = "travel-transport-tracking-ride-hailing_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRideHailingSolid_24px"] = "travel-transport-tracking-ride-hailing_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRideshareOutline_24px"] = "travel-transport-tracking-rideshare_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRideshareSolid_24px"] = "travel-transport-tracking-rideshare_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadClosureOutline_24px"] = "travel-transport-tracking-road-closure_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadClosureSolid_24px"] = "travel-transport-tracking-road-closure_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadHazardOutline_24px"] = "travel-transport-tracking-road-hazard_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadHazardSolid_24px"] = "travel-transport-tracking-road-hazard_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadTollsOutline_24px"] = "travel-transport-tracking-road-tolls_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadTollsSolid_24px"] = "travel-transport-tracking-road-tolls_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadTollsOffOutline_24px"] = "travel-transport-tracking-road-tolls-off_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadTollsOffSolid_24px"] = "travel-transport-tracking-road-tolls-off_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadUnpavedOutline_24px"] = "travel-transport-tracking-road-unpaved_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadUnpavedSolid_24px"] = "travel-transport-tracking-road-unpaved_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadUnpavedBicycleOutline_24px"] = "travel-transport-tracking-road-unpaved-bicycle_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadUnpavedBicycleSolid_24px"] = "travel-transport-tracking-road-unpaved-bicycle_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadUnpavedMotorcycleOutline_24px"] = "travel-transport-tracking-road-unpaved-motorcycle_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadUnpavedMotorcycleSolid_24px"] = "travel-transport-tracking-road-unpaved-motorcycle_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadUnpavedOffOutline_24px"] = "travel-transport-tracking-road-unpaved-off_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadUnpavedOffSolid_24px"] = "travel-transport-tracking-road-unpaved-off_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadsideJpOutline_24px"] = "travel-transport-tracking-Roadside-jp_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadsideJpSolid_24px"] = "travel-transport-tracking-Roadside-jp_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadworksOutline_24px"] = "travel-transport-tracking-roadworks_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRoadworksSolid_24px"] = "travel-transport-tracking-roadworks_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRouteOutline_24px"] = "travel-transport-tracking-route_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRouteSolid_24px"] = "travel-transport-tracking-route_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRunnerPaceOutline_24px"] = "travel-transport-tracking-runner-pace_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingRunnerPaceSolid_24px"] = "travel-transport-tracking-runner-pace_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSchoolZoneUsOutline_24px"] = "travel-transport-tracking-school-zone-us_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSchoolZoneUsSolid_24px"] = "travel-transport-tracking-school-zone-us_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingScooterOutline_24px"] = "travel-transport-tracking-scooter_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingScooterSolid_24px"] = "travel-transport-tracking-scooter_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSecurityCameraOutline_24px"] = "travel-transport-tracking-security-camera_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSecurityCameraSolid_24px"] = "travel-transport-tracking-security-camera_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSemiTrailerOutline_24px"] = "travel-transport-tracking-semi-trailer_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSemiTrailerSolid_24px"] = "travel-transport-tracking-semi-trailer_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingServiceDeskOutline_24px"] = "travel-transport-tracking-service-desk_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingServiceDeskSolid_24px"] = "travel-transport-tracking-service-desk_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingShipmentOutline_24px"] = "travel-transport-tracking-shipment_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingShipmentSolid_24px"] = "travel-transport-tracking-shipment_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSpeedCameraOutline_24px"] = "travel-transport-tracking-speed-camera_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSpeedCameraSolid_24px"] = "travel-transport-tracking-speed-camera_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSpeedLimitOutline_24px"] = "travel-transport-tracking-speed-limit_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSpeedLimitSolid_24px"] = "travel-transport-tracking-speed-limit_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSpeedZoneOutline_24px"] = "travel-transport-tracking-speed-zone_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSpeedZoneSolid_24px"] = "travel-transport-tracking-speed-zone_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSpeedalertOutline_24px"] = "travel-transport-tracking-speedalert_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSpeedalertSolid_24px"] = "travel-transport-tracking-speedalert_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSpeedalertOffOutline_24px"] = "travel-transport-tracking-speedalert-off_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingSpeedalertOffSolid_24px"] = "travel-transport-tracking-speedalert-off_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTaxiOutline_24px"] = "travel-transport-tracking-taxi_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTaxiSolid_24px"] = "travel-transport-tracking-taxi_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTaxiOffOutline_24px"] = "travel-transport-tracking-taxi-off_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTaxiOffSolid_24px"] = "travel-transport-tracking-taxi-off_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTicketOutline_24px"] = "travel-transport-tracking-ticket_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTicketSolid_24px"] = "travel-transport-tracking-ticket_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTourOutline_24px"] = "travel-transport-tracking-tour_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTourSolid_24px"] = "travel-transport-tracking-tour_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTrackerOutline_24px"] = "travel-transport-tracking-tracker_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTrackerSolid_24px"] = "travel-transport-tracking-tracker_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTrafficOutline_24px"] = "travel-transport-tracking-traffic_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTrafficSolid_24px"] = "travel-transport-tracking-traffic_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTrafficLightsOutline_24px"] = "travel-transport-tracking-traffic-lights_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTrafficLightsSolid_24px"] = "travel-transport-tracking-traffic-lights_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTrafficOffOutline_24px"] = "travel-transport-tracking-traffic-off_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTrafficOffSolid_24px"] = "travel-transport-tracking-traffic-off_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTrailerOutline_24px"] = "travel-transport-tracking-trailer_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTrailerSolid_24px"] = "travel-transport-tracking-trailer_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTrainOutline_24px"] = "travel-transport-tracking-train_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTrainSolid_24px"] = "travel-transport-tracking-train_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTramOutline_24px"] = "travel-transport-tracking-tram_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTramSolid_24px"] = "travel-transport-tracking-tram_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTruckOutline_24px"] = "travel-transport-tracking-truck_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTruckSolid_24px"] = "travel-transport-tracking-truck_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTruckAxleOutline_24px"] = "travel-transport-tracking-truck-axle_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingTruckAxleSolid_24px"] = "travel-transport-tracking-truck-axle_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingUnpavedRoadPedestrianOutline_24px"] = "travel-transport-tracking-unpaved-road-pedestrian_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingUnpavedRoadPedestrianSolid_24px"] = "travel-transport-tracking-unpaved-road-pedestrian_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingUnpavedRoadTruckOutline_24px"] = "travel-transport-tracking-unpaved-road-truck_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingUnpavedRoadTruckSolid_24px"] = "travel-transport-tracking-unpaved-road-truck_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingWaitPedestrianOutline_24px"] = "travel-transport-tracking-wait-pedestrian_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingWaitPedestrianSolid_24px"] = "travel-transport-tracking-wait-pedestrian_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingWalkingOutline_24px"] = "travel-transport-tracking-walking_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingWalkingSolid_24px"] = "travel-transport-tracking-walking_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingWalkingOffOutline_24px"] = "travel-transport-tracking-walking-off_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingWalkingOffSolid_24px"] = "travel-transport-tracking-walking-off_solid_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingWidthOutline_24px"] = "travel-transport-tracking-width_outline_24px";
  HdsIconlibrary_24px2["TravelTransportTrackingWidthSolid_24px"] = "travel-transport-tracking-width_solid_24px";
  HdsIconlibrary_24px2["WeatherClearNightOutline_24px"] = "weather-clear-night_outline_24px";
  HdsIconlibrary_24px2["WeatherClearNightSolid_24px"] = "weather-clear-night_solid_24px";
  HdsIconlibrary_24px2["WeatherCloudyDayOutline_24px"] = "weather-cloudy-day_outline_24px";
  HdsIconlibrary_24px2["WeatherCloudyDaySolid_24px"] = "weather-cloudy-day_solid_24px";
  HdsIconlibrary_24px2["WeatherCloudyNightOutline_24px"] = "weather-cloudy-night_outline_24px";
  HdsIconlibrary_24px2["WeatherCloudyNightSolid_24px"] = "weather-cloudy-night_solid_24px";
  HdsIconlibrary_24px2["WeatherFloodOutline_24px"] = "weather-flood_outline_24px";
  HdsIconlibrary_24px2["WeatherFloodSolid_24px"] = "weather-flood_solid_24px";
  HdsIconlibrary_24px2["WeatherFogOutline_24px"] = "weather-fog_outline_24px";
  HdsIconlibrary_24px2["WeatherFogSolid_24px"] = "weather-fog_solid_24px";
  HdsIconlibrary_24px2["WeatherHurricaneOutline_24px"] = "weather-hurricane_outline_24px";
  HdsIconlibrary_24px2["WeatherHurricaneSolid_24px"] = "weather-hurricane_solid_24px";
  HdsIconlibrary_24px2["WeatherOvercastOutline_24px"] = "weather-overcast_outline_24px";
  HdsIconlibrary_24px2["WeatherOvercastSolid_24px"] = "weather-overcast_solid_24px";
  HdsIconlibrary_24px2["WeatherRainOutline_24px"] = "weather-rain_outline_24px";
  HdsIconlibrary_24px2["WeatherRainSolid_24px"] = "weather-rain_solid_24px";
  HdsIconlibrary_24px2["WeatherRainFreezingOutline_24px"] = "weather-rain-freezing_outline_24px";
  HdsIconlibrary_24px2["WeatherRainFreezingSolid_24px"] = "weather-rain-freezing_solid_24px";
  HdsIconlibrary_24px2["WeatherRainSnowOutline_24px"] = "weather-rain-snow_outline_24px";
  HdsIconlibrary_24px2["WeatherRainSnowSolid_24px"] = "weather-rain-snow_solid_24px";
  HdsIconlibrary_24px2["WeatherShowerDayOutline_24px"] = "weather-shower-day_outline_24px";
  HdsIconlibrary_24px2["WeatherShowerDaySolid_24px"] = "weather-shower-day_solid_24px";
  HdsIconlibrary_24px2["WeatherShowerNightOutline_24px"] = "weather-shower-night_outline_24px";
  HdsIconlibrary_24px2["WeatherShowerNightSolid_24px"] = "weather-shower-night_solid_24px";
  HdsIconlibrary_24px2["WeatherSmogOutline_24px"] = "weather-smog_outline_24px";
  HdsIconlibrary_24px2["WeatherSmogSolid_24px"] = "weather-smog_solid_24px";
  HdsIconlibrary_24px2["WeatherSnowfallOutline_24px"] = "weather-snowfall_outline_24px";
  HdsIconlibrary_24px2["WeatherSnowfallSolid_24px"] = "weather-snowfall_solid_24px";
  HdsIconlibrary_24px2["WeatherStormOutline_24px"] = "weather-storm_outline_24px";
  HdsIconlibrary_24px2["WeatherStormSolid_24px"] = "weather-storm_solid_24px";
  HdsIconlibrary_24px2["WeatherStormyDayOutline_24px"] = "weather-stormy-day_outline_24px";
  HdsIconlibrary_24px2["WeatherStormyDaySolid_24px"] = "weather-stormy-day_solid_24px";
  HdsIconlibrary_24px2["WeatherStormyNightOutline_24px"] = "weather-stormy-night_outline_24px";
  HdsIconlibrary_24px2["WeatherStormyNightSolid_24px"] = "weather-stormy-night_solid_24px";
  HdsIconlibrary_24px2["WeatherWeatherClearDayOutline_24px"] = "weather-weather-clear-day_outline_24px";
  HdsIconlibrary_24px2["WeatherWeatherClearDaySolid_24px"] = "weather-weather-clear-day_solid_24px";
  HdsIconlibrary_24px2["WeatherWindyOutline_24px"] = "weather-windy_outline_24px";
  HdsIconlibrary_24px2["WeatherWindySolid_24px"] = "weather-windy_solid_24px";
})(HdsIconlibrary_24px = HdsIconlibrary_24px || (HdsIconlibrary_24px = {}));
var HDS_ICONLIBRARY_24PX_CODEPOINTS = {
  [HdsIconlibrary_24px.CoreUiAddOutline_24px]: "61697",
  [HdsIconlibrary_24px.CoreUiAddSolid_24px]: "61698",
  [HdsIconlibrary_24px.CoreUiAddUserOutline_24px]: "61699",
  [HdsIconlibrary_24px.CoreUiAddUserSolid_24px]: "61700",
  [HdsIconlibrary_24px.CoreUiAlertOutline_24px]: "61701",
  [HdsIconlibrary_24px.CoreUiAlertSolid_24px]: "61702",
  [HdsIconlibrary_24px.CoreUiArrowDownOutline_24px]: "61703",
  [HdsIconlibrary_24px.CoreUiArrowDownSolid_24px]: "61704",
  [HdsIconlibrary_24px.CoreUiArrowDownLeftOutline_24px]: "61705",
  [HdsIconlibrary_24px.CoreUiArrowDownLeftSolid_24px]: "61706",
  [HdsIconlibrary_24px.CoreUiArrowDownRightOutline_24px]: "61707",
  [HdsIconlibrary_24px.CoreUiArrowDownRightSolid_24px]: "61708",
  [HdsIconlibrary_24px.CoreUiArrowLeftOutline_24px]: "61709",
  [HdsIconlibrary_24px.CoreUiArrowLeftSolid_24px]: "61710",
  [HdsIconlibrary_24px.CoreUiArrowRightOutline_24px]: "61711",
  [HdsIconlibrary_24px.CoreUiArrowRightSolid_24px]: "61712",
  [HdsIconlibrary_24px.CoreUiArrowUpOutline_24px]: "61713",
  [HdsIconlibrary_24px.CoreUiArrowUpSolid_24px]: "61714",
  [HdsIconlibrary_24px.CoreUiArrowUpLeftOutline_24px]: "61715",
  [HdsIconlibrary_24px.CoreUiArrowUpLeftSolid_24px]: "61716",
  [HdsIconlibrary_24px.CoreUiArrowUpRightOutline_24px]: "61717",
  [HdsIconlibrary_24px.CoreUiArrowUpRightSolid_24px]: "61718",
  [HdsIconlibrary_24px.CoreUiAttentionOutline_24px]: "61719",
  [HdsIconlibrary_24px.CoreUiAttentionSolid_24px]: "61720",
  [HdsIconlibrary_24px.CoreUiBatteryChargingOutline_24px]: "61721",
  [HdsIconlibrary_24px.CoreUiBatteryChargingSolid_24px]: "61722",
  [HdsIconlibrary_24px.CoreUiBatteryEmptyOutline_24px]: "61723",
  [HdsIconlibrary_24px.CoreUiBatteryEmptySolid_24px]: "61724",
  [HdsIconlibrary_24px.CoreUiBatteryFullOutline_24px]: "61725",
  [HdsIconlibrary_24px.CoreUiBatteryFullSolid_24px]: "61726",
  [HdsIconlibrary_24px.CoreUiBatteryHalfOutline_24px]: "61727",
  [HdsIconlibrary_24px.CoreUiBatteryHalfSolid_24px]: "61728",
  [HdsIconlibrary_24px.CoreUiBatteryLowOutline_24px]: "61729",
  [HdsIconlibrary_24px.CoreUiBatteryLowSolid_24px]: "61730",
  [HdsIconlibrary_24px.CoreUiBluetoothOutline_24px]: "61731",
  [HdsIconlibrary_24px.CoreUiBluetoothSolid_24px]: "61732",
  [HdsIconlibrary_24px.CoreUiBluetoothOffOutline_24px]: "61733",
  [HdsIconlibrary_24px.CoreUiBluetoothOffSolid_24px]: "61734",
  [HdsIconlibrary_24px.CoreUiBookmarkOutline_24px]: "61735",
  [HdsIconlibrary_24px.CoreUiBookmarkSolid_24px]: "61736",
  [HdsIconlibrary_24px.CoreUiBookmarkAddOutline_24px]: "61737",
  [HdsIconlibrary_24px.CoreUiBookmarkAddSolid_24px]: "61738",
  [HdsIconlibrary_24px.CoreUiCheckmarkOutline_24px]: "61739",
  [HdsIconlibrary_24px.CoreUiCheckmarkSolid_24px]: "61740",
  [HdsIconlibrary_24px.CoreUiChevronDownOutline_24px]: "61741",
  [HdsIconlibrary_24px.CoreUiChevronDownSolid_24px]: "61742",
  [HdsIconlibrary_24px.CoreUiChevronLeftOutline_24px]: "61743",
  [HdsIconlibrary_24px.CoreUiChevronLeftSolid_24px]: "61744",
  [HdsIconlibrary_24px.CoreUiChevronLeftDoubleOutline_24px]: "61745",
  [HdsIconlibrary_24px.CoreUiChevronLeftDoubleSolid_24px]: "61746",
  [HdsIconlibrary_24px.CoreUiChevronRightOutline_24px]: "61747",
  [HdsIconlibrary_24px.CoreUiChevronRightSolid_24px]: "61748",
  [HdsIconlibrary_24px.CoreUiChevronRightDoubleOutline_24px]: "61749",
  [HdsIconlibrary_24px.CoreUiChevronRightDoubleSolid_24px]: "61750",
  [HdsIconlibrary_24px.CoreUiChevronUpOutline_24px]: "61751",
  [HdsIconlibrary_24px.CoreUiChevronUpSolid_24px]: "61752",
  [HdsIconlibrary_24px.CoreUiChevronUpDownOutline_24px]: "61753",
  [HdsIconlibrary_24px.CoreUiChevronUpDownSolid_24px]: "61754",
  [HdsIconlibrary_24px.CoreUiClearOutline_24px]: "61755",
  [HdsIconlibrary_24px.CoreUiClearSolid_24px]: "61756",
  [HdsIconlibrary_24px.CoreUiCollapseOutline_24px]: "61757",
  [HdsIconlibrary_24px.CoreUiCollapseSolid_24px]: "61758",
  [HdsIconlibrary_24px.CoreUiCommentOutline_24px]: "61759",
  [HdsIconlibrary_24px.CoreUiCommentSolid_24px]: "61760",
  [HdsIconlibrary_24px.CoreUiConfirmOutline_24px]: "61761",
  [HdsIconlibrary_24px.CoreUiConfirmSolid_24px]: "61762",
  [HdsIconlibrary_24px.CoreUiCrossOutline_24px]: "61763",
  [HdsIconlibrary_24px.CoreUiCrossSolid_24px]: "61764",
  [HdsIconlibrary_24px.CoreUiDeleteOutline_24px]: "61765",
  [HdsIconlibrary_24px.CoreUiDeleteSolid_24px]: "61766",
  [HdsIconlibrary_24px.CoreUiDetailsOutline_24px]: "61767",
  [HdsIconlibrary_24px.CoreUiDetailsSolid_24px]: "61768",
  [HdsIconlibrary_24px.CoreUiDragListOutline_24px]: "61769",
  [HdsIconlibrary_24px.CoreUiDragListSolid_24px]: "61770",
  [HdsIconlibrary_24px.CoreUiEditOutline_24px]: "61771",
  [HdsIconlibrary_24px.CoreUiEditSolid_24px]: "61772",
  [HdsIconlibrary_24px.CoreUiEditedOutline_24px]: "61773",
  [HdsIconlibrary_24px.CoreUiEditedSolid_24px]: "61774",
  [HdsIconlibrary_24px.CoreUiExpandOutline_24px]: "61775",
  [HdsIconlibrary_24px.CoreUiExpandSolid_24px]: "61776",
  [HdsIconlibrary_24px.CoreUiExternalLinkOutline_24px]: "61777",
  [HdsIconlibrary_24px.CoreUiExternalLinkSolid_24px]: "61778",
  [HdsIconlibrary_24px.CoreUiFallbackItemOutline_24px]: "61779",
  [HdsIconlibrary_24px.CoreUiFallbackItemSolid_24px]: "61780",
  [HdsIconlibrary_24px.CoreUiFolderClosedOutline_24px]: "61781",
  [HdsIconlibrary_24px.CoreUiFolderClosedSolid_24px]: "61782",
  [HdsIconlibrary_24px.CoreUiFolderOpenOutline_24px]: "61783",
  [HdsIconlibrary_24px.CoreUiFolderOpenSolid_24px]: "61784",
  [HdsIconlibrary_24px.CoreUiGpsOutline_24px]: "61785",
  [HdsIconlibrary_24px.CoreUiGpsSolid_24px]: "61786",
  [HdsIconlibrary_24px.CoreUiHelpOutline_24px]: "61787",
  [HdsIconlibrary_24px.CoreUiHelpSolid_24px]: "61788",
  [HdsIconlibrary_24px.CoreUiHereLogoOutline_24px]: "61789",
  [HdsIconlibrary_24px.CoreUiHereLogoSolid_24px]: "61790",
  [HdsIconlibrary_24px.CoreUiHideOutline_24px]: "61791",
  [HdsIconlibrary_24px.CoreUiHideSolid_24px]: "61792",
  [HdsIconlibrary_24px.CoreUiHideAltOutline_24px]: "61793",
  [HdsIconlibrary_24px.CoreUiHideAltSolid_24px]: "61794",
  [HdsIconlibrary_24px.CoreUiHideMenuOutline_24px]: "61795",
  [HdsIconlibrary_24px.CoreUiHideMenuSolid_24px]: "61796",
  [HdsIconlibrary_24px.CoreUiHistoryOutline_24px]: "61797",
  [HdsIconlibrary_24px.CoreUiHistorySolid_24px]: "61798",
  [HdsIconlibrary_24px.CoreUiInboxAttentionOutline_24px]: "61799",
  [HdsIconlibrary_24px.CoreUiInboxAttentionSolid_24px]: "61800",
  [HdsIconlibrary_24px.CoreUiInformationOutline_24px]: "61801",
  [HdsIconlibrary_24px.CoreUiInformationSolid_24px]: "61802",
  [HdsIconlibrary_24px.CoreUiInvalidOutline_24px]: "61803",
  [HdsIconlibrary_24px.CoreUiInvalidSolid_24px]: "61804",
  [HdsIconlibrary_24px.CoreUiLoadingOutline_24px]: "61805",
  [HdsIconlibrary_24px.CoreUiLoadingSolid_24px]: "61806",
  [HdsIconlibrary_24px.CoreUiLocationOffOutline_24px]: "61807",
  [HdsIconlibrary_24px.CoreUiLocationOffSolid_24px]: "61808",
  [HdsIconlibrary_24px.CoreUiLockOutline_24px]: "61809",
  [HdsIconlibrary_24px.CoreUiLockSolid_24px]: "61810",
  [HdsIconlibrary_24px.CoreUiLockBreakOutline_24px]: "61811",
  [HdsIconlibrary_24px.CoreUiLockBreakSolid_24px]: "61812",
  [HdsIconlibrary_24px.CoreUiMenuOutline_24px]: "61813",
  [HdsIconlibrary_24px.CoreUiMenuSolid_24px]: "61814",
  [HdsIconlibrary_24px.CoreUiMicrophoneOutline_24px]: "61815",
  [HdsIconlibrary_24px.CoreUiMicrophoneSolid_24px]: "61816",
  [HdsIconlibrary_24px.CoreUiMicrophoneOffOutline_24px]: "61817",
  [HdsIconlibrary_24px.CoreUiMicrophoneOffSolid_24px]: "61818",
  [HdsIconlibrary_24px.CoreUiMinusOutline_24px]: "61819",
  [HdsIconlibrary_24px.CoreUiMinusSolid_24px]: "61820",
  [HdsIconlibrary_24px.CoreUiNotificationsOutline_24px]: "61821",
  [HdsIconlibrary_24px.CoreUiNotificationsSolid_24px]: "61822",
  [HdsIconlibrary_24px.CoreUiOverflowHoriCenterOutline_24px]: "61823",
  [HdsIconlibrary_24px.CoreUiOverflowHoriCenterSolid_24px]: "61824",
  [HdsIconlibrary_24px.CoreUiOverflowVertCenterOutline_24px]: "61825",
  [HdsIconlibrary_24px.CoreUiOverflowVertCenterSolid_24px]: "61826",
  [HdsIconlibrary_24px.CoreUiOverflowVertRightOutline_24px]: "61827",
  [HdsIconlibrary_24px.CoreUiOverflowVertRightSolid_24px]: "61828",
  [HdsIconlibrary_24px.CoreUiPlusOutline_24px]: "61829",
  [HdsIconlibrary_24px.CoreUiPlusSolid_24px]: "61830",
  [HdsIconlibrary_24px.CoreUiProfileOutline_24px]: "61831",
  [HdsIconlibrary_24px.CoreUiProfileSolid_24px]: "61832",
  [HdsIconlibrary_24px.CoreUiQuestionMarkOutline_24px]: "61833",
  [HdsIconlibrary_24px.CoreUiQuestionMarkSolid_24px]: "61834",
  [HdsIconlibrary_24px.CoreUiRedoOutline_24px]: "61835",
  [HdsIconlibrary_24px.CoreUiRedoSolid_24px]: "61836",
  [HdsIconlibrary_24px.CoreUiRefreshOutline_24px]: "61837",
  [HdsIconlibrary_24px.CoreUiRefreshSolid_24px]: "61838",
  [HdsIconlibrary_24px.CoreUiReportOutline_24px]: "61839",
  [HdsIconlibrary_24px.CoreUiReportSolid_24px]: "61840",
  [HdsIconlibrary_24px.CoreUiResetOutline_24px]: "61841",
  [HdsIconlibrary_24px.CoreUiResetSolid_24px]: "61842",
  [HdsIconlibrary_24px.CoreUiSaveOutline_24px]: "61843",
  [HdsIconlibrary_24px.CoreUiSaveSolid_24px]: "61844",
  [HdsIconlibrary_24px.CoreUiSearchOutline_24px]: "61845",
  [HdsIconlibrary_24px.CoreUiSearchSolid_24px]: "61846",
  [HdsIconlibrary_24px.CoreUiSettingsOutline_24px]: "61847",
  [HdsIconlibrary_24px.CoreUiSettingsSolid_24px]: "61848",
  [HdsIconlibrary_24px.CoreUiShowOutline_24px]: "61849",
  [HdsIconlibrary_24px.CoreUiShowSolid_24px]: "61850",
  [HdsIconlibrary_24px.CoreUiShowMenuOutline_24px]: "61851",
  [HdsIconlibrary_24px.CoreUiShowMenuSolid_24px]: "61852",
  [HdsIconlibrary_24px.CoreUiSignInOutline_24px]: "61853",
  [HdsIconlibrary_24px.CoreUiSignInSolid_24px]: "61854",
  [HdsIconlibrary_24px.CoreUiSignOutOutline_24px]: "61855",
  [HdsIconlibrary_24px.CoreUiSignOutSolid_24px]: "61856",
  [HdsIconlibrary_24px.CoreUiSlashOutline_24px]: "61857",
  [HdsIconlibrary_24px.CoreUiSlashSolid_24px]: "61858",
  [HdsIconlibrary_24px.CoreUiSubmitOutline_24px]: "61859",
  [HdsIconlibrary_24px.CoreUiSubmitSolid_24px]: "61860",
  [HdsIconlibrary_24px.CoreUiSubstractOutline_24px]: "61861",
  [HdsIconlibrary_24px.CoreUiSubstractSolid_24px]: "61862",
  [HdsIconlibrary_24px.CoreUiSwitchHorizontalOutline_24px]: "61863",
  [HdsIconlibrary_24px.CoreUiSwitchHorizontalSolid_24px]: "61864",
  [HdsIconlibrary_24px.CoreUiSwitchVerticalOutline_24px]: "61865",
  [HdsIconlibrary_24px.CoreUiSwitchVerticalSolid_24px]: "61866",
  [HdsIconlibrary_24px.CoreUiTagOutline_24px]: "61867",
  [HdsIconlibrary_24px.CoreUiTagSolid_24px]: "61868",
  [HdsIconlibrary_24px.CoreUiTimeOutline_24px]: "61869",
  [HdsIconlibrary_24px.CoreUiTimeSolid_24px]: "61870",
  [HdsIconlibrary_24px.CoreUiUndoOutline_24px]: "61871",
  [HdsIconlibrary_24px.CoreUiUndoSolid_24px]: "61872",
  [HdsIconlibrary_24px.CoreUiUnlockOutline_24px]: "61873",
  [HdsIconlibrary_24px.CoreUiUnlockSolid_24px]: "61874",
  [HdsIconlibrary_24px.CoreUiVolumeAlertOutline_24px]: "61875",
  [HdsIconlibrary_24px.CoreUiVolumeAlertSolid_24px]: "61876",
  [HdsIconlibrary_24px.CoreUiVolumeHighOutline_24px]: "61877",
  [HdsIconlibrary_24px.CoreUiVolumeHighSolid_24px]: "61878",
  [HdsIconlibrary_24px.CoreUiVolumeLowOutline_24px]: "61879",
  [HdsIconlibrary_24px.CoreUiVolumeLowSolid_24px]: "61880",
  [HdsIconlibrary_24px.CoreUiVolumeMediumOutline_24px]: "61881",
  [HdsIconlibrary_24px.CoreUiVolumeMediumSolid_24px]: "61882",
  [HdsIconlibrary_24px.CoreUiVolumeNoSoundOutline_24px]: "61883",
  [HdsIconlibrary_24px.CoreUiVolumeNoSoundSolid_24px]: "61884",
  [HdsIconlibrary_24px.CoreUiVolumeOffOutline_24px]: "61885",
  [HdsIconlibrary_24px.CoreUiVolumeOffSolid_24px]: "61886",
  [HdsIconlibrary_24px.CoreUiWifiLowOutline_24px]: "61887",
  [HdsIconlibrary_24px.CoreUiWifiLowSolid_24px]: "61888",
  [HdsIconlibrary_24px.CoreUiWifiMediumOutline_24px]: "61889",
  [HdsIconlibrary_24px.CoreUiWifiMediumSolid_24px]: "61890",
  [HdsIconlibrary_24px.CoreUiWifiOffOutline_24px]: "61891",
  [HdsIconlibrary_24px.CoreUiWifiOffSolid_24px]: "61892",
  [HdsIconlibrary_24px.CoreUiWifiStrongOutline_24px]: "61893",
  [HdsIconlibrary_24px.CoreUiWifiStrongSolid_24px]: "61894",
  [HdsIconlibrary_24px.DataAppOutline_24px]: "61895",
  [HdsIconlibrary_24px.DataAppSolid_24px]: "61896",
  [HdsIconlibrary_24px.DataCatalogOutline_24px]: "61897",
  [HdsIconlibrary_24px.DataCatalogSolid_24px]: "61898",
  [HdsIconlibrary_24px.DataConflateOutline_24px]: "61899",
  [HdsIconlibrary_24px.DataConflateSolid_24px]: "61900",
  [HdsIconlibrary_24px.DataDatabaseOutline_24px]: "61901",
  [HdsIconlibrary_24px.DataDatabaseSolid_24px]: "61902",
  [HdsIconlibrary_24px.DataDeployOutline_24px]: "61903",
  [HdsIconlibrary_24px.DataDeploySolid_24px]: "61904",
  [HdsIconlibrary_24px.DataExportOutline_24px]: "61905",
  [HdsIconlibrary_24px.DataExportSolid_24px]: "61906",
  [HdsIconlibrary_24px.DataIndexOutline_24px]: "61907",
  [HdsIconlibrary_24px.DataIndexSolid_24px]: "61908",
  [HdsIconlibrary_24px.DataInspectOutline_24px]: "61909",
  [HdsIconlibrary_24px.DataInspectSolid_24px]: "61910",
  [HdsIconlibrary_24px.DataInteractiveOutline_24px]: "61911",
  [HdsIconlibrary_24px.DataInteractiveSolid_24px]: "61912",
  [HdsIconlibrary_24px.DataLayersOutline_24px]: "61913",
  [HdsIconlibrary_24px.DataLayersSolid_24px]: "61914",
  [HdsIconlibrary_24px.DataMarketplaceOutline_24px]: "61915",
  [HdsIconlibrary_24px.DataMarketplaceSolid_24px]: "61916",
  [HdsIconlibrary_24px.DataPipelineOutline_24px]: "61917",
  [HdsIconlibrary_24px.DataPipelineSolid_24px]: "61918",
  [HdsIconlibrary_24px.DataRestOutline_24px]: "61919",
  [HdsIconlibrary_24px.DataRestSolid_24px]: "61920",
  [HdsIconlibrary_24px.DataReviewOutline_24px]: "61921",
  [HdsIconlibrary_24px.DataReviewSolid_24px]: "61922",
  [HdsIconlibrary_24px.DataSendToListOutline_24px]: "61923",
  [HdsIconlibrary_24px.DataSendToListSolid_24px]: "61924",
  [HdsIconlibrary_24px.DataServicesOutline_24px]: "61925",
  [HdsIconlibrary_24px.DataServicesSolid_24px]: "61926",
  [HdsIconlibrary_24px.DataStreamOutline_24px]: "61927",
  [HdsIconlibrary_24px.DataStreamSolid_24px]: "61928",
  [HdsIconlibrary_24px.DataTemplateOutline_24px]: "61929",
  [HdsIconlibrary_24px.DataTemplateSolid_24px]: "61930",
  [HdsIconlibrary_24px.DataVersionedOutline_24px]: "61931",
  [HdsIconlibrary_24px.DataVersionedSolid_24px]: "61932",
  [HdsIconlibrary_24px.DataVolatileOutline_24px]: "61933",
  [HdsIconlibrary_24px.DataVolatileSolid_24px]: "61934",
  [HdsIconlibrary_24px.DevicesSensorsBarcodeReaderOutline_24px]: "61935",
  [HdsIconlibrary_24px.DevicesSensorsBarcodeReaderSolid_24px]: "61936",
  [HdsIconlibrary_24px.DevicesSensorsCameraOutline_24px]: "61937",
  [HdsIconlibrary_24px.DevicesSensorsCameraSolid_24px]: "61938",
  [HdsIconlibrary_24px.DevicesSensorsComputerChipOutline_24px]: "61939",
  [HdsIconlibrary_24px.DevicesSensorsComputerChipSolid_24px]: "61940",
  [HdsIconlibrary_24px.DevicesSensorsDeviceConnectedOutline_24px]: "61941",
  [HdsIconlibrary_24px.DevicesSensorsDeviceConnectedSolid_24px]: "61942",
  [HdsIconlibrary_24px.DevicesSensorsDeviceGroupConnectedOutline_24px]: "61943",
  [HdsIconlibrary_24px.DevicesSensorsDeviceGroupConnectedSolid_24px]: "61944",
  [HdsIconlibrary_24px.DevicesSensorsDeviceGroupFilterOutline_24px]: "61945",
  [HdsIconlibrary_24px.DevicesSensorsDeviceGroupFilterSolid_24px]: "61946",
  [HdsIconlibrary_24px.DevicesSensorsDeviceGroupSmartFilterOutline_24px]: "61947",
  [HdsIconlibrary_24px.DevicesSensorsDeviceGroupSmartFilterSolid_24px]: "61948",
  [HdsIconlibrary_24px.DevicesSensorsHdtvOutline_24px]: "61949",
  [HdsIconlibrary_24px.DevicesSensorsHdtvSolid_24px]: "61950",
  [HdsIconlibrary_24px.DevicesSensorsKeyboardOutline_24px]: "61951",
  [HdsIconlibrary_24px.DevicesSensorsKeyboardSolid_24px]: "61952",
  [HdsIconlibrary_24px.DevicesSensorsLogicOutline_24px]: "61953",
  [HdsIconlibrary_24px.DevicesSensorsLogicSolid_24px]: "61954",
  [HdsIconlibrary_24px.DevicesSensorsMonitorOutline_24px]: "61955",
  [HdsIconlibrary_24px.DevicesSensorsMonitorSolid_24px]: "61956",
  [HdsIconlibrary_24px.DevicesSensorsPairedModeOutline_24px]: "61957",
  [HdsIconlibrary_24px.DevicesSensorsPairedModeSolid_24px]: "61958",
  [HdsIconlibrary_24px.DevicesSensorsPrinterOutline_24px]: "61959",
  [HdsIconlibrary_24px.DevicesSensorsPrinterSolid_24px]: "61960",
  [HdsIconlibrary_24px.DevicesSensorsProjectorOutline_24px]: "61961",
  [HdsIconlibrary_24px.DevicesSensorsProjectorSolid_24px]: "61962",
  [HdsIconlibrary_24px.DevicesSensorsScannerOutline_24px]: "61963",
  [HdsIconlibrary_24px.DevicesSensorsScannerSolid_24px]: "61964",
  [HdsIconlibrary_24px.DevicesSensorsSensorAirpressureOutline_24px]: "61965",
  [HdsIconlibrary_24px.DevicesSensorsSensorAirpressureSolid_24px]: "61966",
  [HdsIconlibrary_24px.DevicesSensorsSensorHumidityOutline_24px]: "61967",
  [HdsIconlibrary_24px.DevicesSensorsSensorHumiditySolid_24px]: "61968",
  [HdsIconlibrary_24px.DevicesSensorsSensorShockOutline_24px]: "61969",
  [HdsIconlibrary_24px.DevicesSensorsSensorShockSolid_24px]: "61970",
  [HdsIconlibrary_24px.DevicesSensorsSensorTemperatureOutline_24px]: "61971",
  [HdsIconlibrary_24px.DevicesSensorsSensorTemperatureSolid_24px]: "61972",
  [HdsIconlibrary_24px.DevicesSensorsSmartphoneOutline_24px]: "61973",
  [HdsIconlibrary_24px.DevicesSensorsSmartphoneSolid_24px]: "61974",
  [HdsIconlibrary_24px.DevicesSensorsSoftwareOutline_24px]: "61975",
  [HdsIconlibrary_24px.DevicesSensorsSoftwareSolid_24px]: "61976",
  [HdsIconlibrary_24px.DevicesSensorsSpeakerOutline_24px]: "61977",
  [HdsIconlibrary_24px.DevicesSensorsSpeakerSolid_24px]: "61978",
  [HdsIconlibrary_24px.DevicesSensorsTabletOutline_24px]: "61979",
  [HdsIconlibrary_24px.DevicesSensorsTabletSolid_24px]: "61980",
  [HdsIconlibrary_24px.DevicesSensorsWhiteboardOutline_24px]: "61981",
  [HdsIconlibrary_24px.DevicesSensorsWhiteboardSolid_24px]: "61982",
  [HdsIconlibrary_24px.DiscoverySharingCalendarOutline_24px]: "61983",
  [HdsIconlibrary_24px.DiscoverySharingCalendarSolid_24px]: "61984",
  [HdsIconlibrary_24px.DiscoverySharingCalendarAddOutline_24px]: "61985",
  [HdsIconlibrary_24px.DiscoverySharingCalendarAddSolid_24px]: "61986",
  [HdsIconlibrary_24px.DiscoverySharingDetailsOutline_24px]: "61987",
  [HdsIconlibrary_24px.DiscoverySharingDetailsSolid_24px]: "61988",
  [HdsIconlibrary_24px.DiscoverySharingDistributeOutline_24px]: "61989",
  [HdsIconlibrary_24px.DiscoverySharingDistributeSolid_24px]: "61990",
  [HdsIconlibrary_24px.DiscoverySharingDownloadOutline_24px]: "61991",
  [HdsIconlibrary_24px.DiscoverySharingDownloadSolid_24px]: "61992",
  [HdsIconlibrary_24px.DiscoverySharingDownloadCloudOutline_24px]: "61993",
  [HdsIconlibrary_24px.DiscoverySharingDownloadCloudSolid_24px]: "61994",
  [HdsIconlibrary_24px.DiscoverySharingFilterOffOutline_24px]: "61995",
  [HdsIconlibrary_24px.DiscoverySharingFilterOffSolid_24px]: "61996",
  [HdsIconlibrary_24px.DiscoverySharingFilterOnOutline_24px]: "61997",
  [HdsIconlibrary_24px.DiscoverySharingFilterOnSolid_24px]: "61998",
  [HdsIconlibrary_24px.DiscoverySharingGridTypeEOutline_24px]: "61999",
  [HdsIconlibrary_24px.DiscoverySharingGridTypeESolid_24px]: "62000",
  [HdsIconlibrary_24px.DiscoverySharingGridTypeAOutline_24px]: "62001",
  [HdsIconlibrary_24px.DiscoverySharingGridTypeASolid_24px]: "62002",
  [HdsIconlibrary_24px.DiscoverySharingGridTypeBOutline_24px]: "62003",
  [HdsIconlibrary_24px.DiscoverySharingGridTypeBSolid_24px]: "62004",
  [HdsIconlibrary_24px.DiscoverySharingGridTypeCOutline_24px]: "62005",
  [HdsIconlibrary_24px.DiscoverySharingGridTypeCSolid_24px]: "62006",
  [HdsIconlibrary_24px.DiscoverySharingGridTypeDOutline_24px]: "62007",
  [HdsIconlibrary_24px.DiscoverySharingGridTypeDSolid_24px]: "62008",
  [HdsIconlibrary_24px.DiscoverySharingGroupOutline_24px]: "62009",
  [HdsIconlibrary_24px.DiscoverySharingGroupSolid_24px]: "62010",
  [HdsIconlibrary_24px.DiscoverySharingGroupFilterOutline_24px]: "62011",
  [HdsIconlibrary_24px.DiscoverySharingGroupFilterSolid_24px]: "62012",
  [HdsIconlibrary_24px.DiscoverySharingGroupSmartFilterOutline_24px]: "62013",
  [HdsIconlibrary_24px.DiscoverySharingGroupSmartFilterSolid_24px]: "62014",
  [HdsIconlibrary_24px.DiscoverySharingHideOutline_24px]: "62015",
  [HdsIconlibrary_24px.DiscoverySharingHideSolid_24px]: "62016",
  [HdsIconlibrary_24px.DiscoverySharingLinkOutline_24px]: "62017",
  [HdsIconlibrary_24px.DiscoverySharingLinkSolid_24px]: "62018",
  [HdsIconlibrary_24px.DiscoverySharingListTypeAOutline_24px]: "62019",
  [HdsIconlibrary_24px.DiscoverySharingListTypeASolid_24px]: "62020",
  [HdsIconlibrary_24px.DiscoverySharingListTypeBOutline_24px]: "62021",
  [HdsIconlibrary_24px.DiscoverySharingListTypeBSolid_24px]: "62022",
  [HdsIconlibrary_24px.DiscoverySharingMapsDownloadOutline_24px]: "62023",
  [HdsIconlibrary_24px.DiscoverySharingMapsDownloadSolid_24px]: "62024",
  [HdsIconlibrary_24px.DiscoverySharingMapsUpdateOutline_24px]: "62025",
  [HdsIconlibrary_24px.DiscoverySharingMapsUpdateSolid_24px]: "62026",
  [HdsIconlibrary_24px.DiscoverySharingNoContentOutline_24px]: "62027",
  [HdsIconlibrary_24px.DiscoverySharingNoContentSolid_24px]: "62028",
  [HdsIconlibrary_24px.DiscoverySharingNotInSyncOutline_24px]: "62029",
  [HdsIconlibrary_24px.DiscoverySharingNotInSyncSolid_24px]: "62030",
  [HdsIconlibrary_24px.DiscoverySharingShareAndroidOutline_24px]: "62031",
  [HdsIconlibrary_24px.DiscoverySharingShareAndroidSolid_24px]: "62032",
  [HdsIconlibrary_24px.DiscoverySharingShareIOsOutline_24px]: "62033",
  [HdsIconlibrary_24px.DiscoverySharingShareIOsSolid_24px]: "62034",
  [HdsIconlibrary_24px.DiscoverySharingShowOutline_24px]: "62035",
  [HdsIconlibrary_24px.DiscoverySharingShowSolid_24px]: "62036",
  [HdsIconlibrary_24px.DiscoverySharingUnlinkOutline_24px]: "62037",
  [HdsIconlibrary_24px.DiscoverySharingUnlinkSolid_24px]: "62038",
  [HdsIconlibrary_24px.DiscoverySharingUploadOutline_24px]: "62039",
  [HdsIconlibrary_24px.DiscoverySharingUploadSolid_24px]: "62040",
  [HdsIconlibrary_24px.DiscoverySharingUploadCloudOutline_24px]: "62041",
  [HdsIconlibrary_24px.DiscoverySharingUploadCloudSolid_24px]: "62042",
  [HdsIconlibrary_24px.FileArchiveOutline_24px]: "62043",
  [HdsIconlibrary_24px.FileArchiveSolid_24px]: "62044",
  [HdsIconlibrary_24px.FileCopyOutline_24px]: "62045",
  [HdsIconlibrary_24px.FileCopySolid_24px]: "62046",
  [HdsIconlibrary_24px.FileDocFileOutline_24px]: "62047",
  [HdsIconlibrary_24px.FileDocFileSolid_24px]: "62048",
  [HdsIconlibrary_24px.FileEpsFileOutline_24px]: "62049",
  [HdsIconlibrary_24px.FileEpsFileSolid_24px]: "62050",
  [HdsIconlibrary_24px.FileFileOutline_24px]: "62051",
  [HdsIconlibrary_24px.FileFileSolid_24px]: "62052",
  [HdsIconlibrary_24px.FileGifFileOutline_24px]: "62053",
  [HdsIconlibrary_24px.FileGifFileSolid_24px]: "62054",
  [HdsIconlibrary_24px.FileHtmlFileOutline_24px]: "62055",
  [HdsIconlibrary_24px.FileHtmlFileSolid_24px]: "62056",
  [HdsIconlibrary_24px.FileImageOutline_24px]: "62057",
  [HdsIconlibrary_24px.FileImageSolid_24px]: "62058",
  [HdsIconlibrary_24px.FileJpgFileOutline_24px]: "62059",
  [HdsIconlibrary_24px.FileJpgFileSolid_24px]: "62060",
  [HdsIconlibrary_24px.FileJsonFileOutline_24px]: "62061",
  [HdsIconlibrary_24px.FileJsonFileSolid_24px]: "62062",
  [HdsIconlibrary_24px.FileMp3FileOutline_24px]: "62063",
  [HdsIconlibrary_24px.FileMp3FileSolid_24px]: "62064",
  [HdsIconlibrary_24px.FilePdfFileOutline_24px]: "62065",
  [HdsIconlibrary_24px.FilePdfFileSolid_24px]: "62066",
  [HdsIconlibrary_24px.FilePngFileOutline_24px]: "62067",
  [HdsIconlibrary_24px.FilePngFileSolid_24px]: "62068",
  [HdsIconlibrary_24px.FileSvgFileOutline_24px]: "62069",
  [HdsIconlibrary_24px.FileSvgFileSolid_24px]: "62070",
  [HdsIconlibrary_24px.FileTiffFileOutline_24px]: "62071",
  [HdsIconlibrary_24px.FileTiffFileSolid_24px]: "62072",
  [HdsIconlibrary_24px.FileTxtFileOutline_24px]: "62073",
  [HdsIconlibrary_24px.FileTxtFileSolid_24px]: "62074",
  [HdsIconlibrary_24px.FileWavFileOutline_24px]: "62075",
  [HdsIconlibrary_24px.FileWavFileSolid_24px]: "62076",
  [HdsIconlibrary_24px.FileZipOutline_24px]: "62077",
  [HdsIconlibrary_24px.FileZipSolid_24px]: "62078",
  [HdsIconlibrary_24px.MapView_2DOutline_24px]: "62079",
  [HdsIconlibrary_24px.MapView_2DSolid_24px]: "62080",
  [HdsIconlibrary_24px.MapView_3DOutline_24px]: "62081",
  [HdsIconlibrary_24px.MapView_3DSolid_24px]: "62082",
  [HdsIconlibrary_24px.MapViewCameraFrustumOutline_24px]: "62083",
  [HdsIconlibrary_24px.MapViewCameraFrustumSolid_24px]: "62084",
  [HdsIconlibrary_24px.MapViewCameraOrbitOutline_24px]: "62085",
  [HdsIconlibrary_24px.MapViewCameraOrbitSolid_24px]: "62086",
  [HdsIconlibrary_24px.MapViewCameraTopdownOutline_24px]: "62087",
  [HdsIconlibrary_24px.MapViewCameraTopdownSolid_24px]: "62088",
  [HdsIconlibrary_24px.MapViewCameraViewOutline_24px]: "62089",
  [HdsIconlibrary_24px.MapViewCameraViewSolid_24px]: "62090",
  [HdsIconlibrary_24px.MapViewCompassOutline_24px]: "62091",
  [HdsIconlibrary_24px.MapViewCompassSolid_24px]: "62092",
  [HdsIconlibrary_24px.MapViewCurrentLocationOutline_24px]: "62093",
  [HdsIconlibrary_24px.MapViewCurrentLocationSolid_24px]: "62094",
  [HdsIconlibrary_24px.MapViewCurrentLocationOffOutline_24px]: "62095",
  [HdsIconlibrary_24px.MapViewCurrentLocationOffSolid_24px]: "62096",
  [HdsIconlibrary_24px.MapViewDashboardOutline_24px]: "62097",
  [HdsIconlibrary_24px.MapViewDashboardSolid_24px]: "62098",
  [HdsIconlibrary_24px.MapViewDistanceOutline_24px]: "62099",
  [HdsIconlibrary_24px.MapViewDistanceSolid_24px]: "62100",
  [HdsIconlibrary_24px.MapViewDotIndicatorOutline_24px]: "62101",
  [HdsIconlibrary_24px.MapViewDotIndicatorSolid_24px]: "62102",
  [HdsIconlibrary_24px.MapViewEastOutline_24px]: "62103",
  [HdsIconlibrary_24px.MapViewEastSolid_24px]: "62104",
  [HdsIconlibrary_24px.MapViewEastCharacterOutline_24px]: "62105",
  [HdsIconlibrary_24px.MapViewEastCharacterSolid_24px]: "62106",
  [HdsIconlibrary_24px.MapViewFlipHorizontalOutline_24px]: "62107",
  [HdsIconlibrary_24px.MapViewFlipHorizontalSolid_24px]: "62108",
  [HdsIconlibrary_24px.MapViewFlipVerticalOutline_24px]: "62109",
  [HdsIconlibrary_24px.MapViewFlipVerticalSolid_24px]: "62110",
  [HdsIconlibrary_24px.MapViewKeyframeOutline_24px]: "62111",
  [HdsIconlibrary_24px.MapViewKeyframeSolid_24px]: "62112",
  [HdsIconlibrary_24px.MapViewLayersOutline_24px]: "62113",
  [HdsIconlibrary_24px.MapViewLayersSolid_24px]: "62114",
  [HdsIconlibrary_24px.MapViewLegendOutline_24px]: "62115",
  [HdsIconlibrary_24px.MapViewLegendSolid_24px]: "62116",
  [HdsIconlibrary_24px.MapViewMapMarkerOutline_24px]: "62117",
  [HdsIconlibrary_24px.MapViewMapMarkerSolid_24px]: "62118",
  [HdsIconlibrary_24px.MapViewMapViewOutline_24px]: "62119",
  [HdsIconlibrary_24px.MapViewMapViewSolid_24px]: "62120",
  [HdsIconlibrary_24px.MapViewMarkerOutline_24px]: "62121",
  [HdsIconlibrary_24px.MapViewMarkerSolid_24px]: "62122",
  [HdsIconlibrary_24px.MapViewMaximizeOutline_24px]: "62123",
  [HdsIconlibrary_24px.MapViewMaximizeSolid_24px]: "62124",
  [HdsIconlibrary_24px.MapViewMinimizeOutline_24px]: "62125",
  [HdsIconlibrary_24px.MapViewMinimizeSolid_24px]: "62126",
  [HdsIconlibrary_24px.MapViewMinusRectangleOutline_24px]: "62127",
  [HdsIconlibrary_24px.MapViewMinusRectangleSolid_24px]: "62128",
  [HdsIconlibrary_24px.MapViewNorthOutline_24px]: "62129",
  [HdsIconlibrary_24px.MapViewNorthSolid_24px]: "62130",
  [HdsIconlibrary_24px.MapViewNorthCharacterOutline_24px]: "62131",
  [HdsIconlibrary_24px.MapViewNorthCharacterSolid_24px]: "62132",
  [HdsIconlibrary_24px.MapViewNorthEastCharacterOutline_24px]: "62133",
  [HdsIconlibrary_24px.MapViewNorthEastCharacterSolid_24px]: "62134",
  [HdsIconlibrary_24px.MapViewNorthUpOutline_24px]: "62135",
  [HdsIconlibrary_24px.MapViewNorthUpSolid_24px]: "62136",
  [HdsIconlibrary_24px.MapViewNorthWestCharacterOutline_24px]: "62137",
  [HdsIconlibrary_24px.MapViewNorthWestCharacterSolid_24px]: "62138",
  [HdsIconlibrary_24px.MapViewNotTiltedOutline_24px]: "62139",
  [HdsIconlibrary_24px.MapViewNotTiltedSolid_24px]: "62140",
  [HdsIconlibrary_24px.MapViewPanViewOutline_24px]: "62141",
  [HdsIconlibrary_24px.MapViewPanViewSolid_24px]: "62142",
  [HdsIconlibrary_24px.MapViewPipOutline_24px]: "62143",
  [HdsIconlibrary_24px.MapViewPipSolid_24px]: "62144",
  [HdsIconlibrary_24px.MapViewPlaceOutline_24px]: "62145",
  [HdsIconlibrary_24px.MapViewPlaceSolid_24px]: "62146",
  [HdsIconlibrary_24px.MapViewPlusRectangleOutline_24px]: "62147",
  [HdsIconlibrary_24px.MapViewPlusRectangleSolid_24px]: "62148",
  [HdsIconlibrary_24px.MapViewPopOutOutline_24px]: "62149",
  [HdsIconlibrary_24px.MapViewPopOutSolid_24px]: "62150",
  [HdsIconlibrary_24px.MapViewProjectionGlobeOutline_24px]: "62151",
  [HdsIconlibrary_24px.MapViewProjectionGlobeSolid_24px]: "62152",
  [HdsIconlibrary_24px.MapViewProjectionMercatorOutline_24px]: "62153",
  [HdsIconlibrary_24px.MapViewProjectionMercatorSolid_24px]: "62154",
  [HdsIconlibrary_24px.MapViewResizeOutline_24px]: "62155",
  [HdsIconlibrary_24px.MapViewResizeSolid_24px]: "62156",
  [HdsIconlibrary_24px.MapViewSelectSectionOutline_24px]: "62157",
  [HdsIconlibrary_24px.MapViewSelectSectionSolid_24px]: "62158",
  [HdsIconlibrary_24px.MapViewSingleScreenOutline_24px]: "62159",
  [HdsIconlibrary_24px.MapViewSingleScreenSolid_24px]: "62160",
  [HdsIconlibrary_24px.MapViewSouthOutline_24px]: "62161",
  [HdsIconlibrary_24px.MapViewSouthSolid_24px]: "62162",
  [HdsIconlibrary_24px.MapViewSouthCharacterOutline_24px]: "62163",
  [HdsIconlibrary_24px.MapViewSouthCharacterSolid_24px]: "62164",
  [HdsIconlibrary_24px.MapViewSouthEastCharacterOutline_24px]: "62165",
  [HdsIconlibrary_24px.MapViewSouthEastCharacterSolid_24px]: "62166",
  [HdsIconlibrary_24px.MapViewSouthWestCharacterOutline_24px]: "62167",
  [HdsIconlibrary_24px.MapViewSouthWestCharacterSolid_24px]: "62168",
  [HdsIconlibrary_24px.MapViewSplitTripleVOutline_24px]: "62169",
  [HdsIconlibrary_24px.MapViewSplitTripleVSolid_24px]: "62170",
  [HdsIconlibrary_24px.MapViewSplitscreenHOutline_24px]: "62171",
  [HdsIconlibrary_24px.MapViewSplitscreenHSolid_24px]: "62172",
  [HdsIconlibrary_24px.MapViewSplitscreenVOutline_24px]: "62173",
  [HdsIconlibrary_24px.MapViewSplitscreenVSolid_24px]: "62174",
  [HdsIconlibrary_24px.MapViewStatisticsOutline_24px]: "62175",
  [HdsIconlibrary_24px.MapViewStatisticsSolid_24px]: "62176",
  [HdsIconlibrary_24px.MapViewTiltedOutline_24px]: "62177",
  [HdsIconlibrary_24px.MapViewTiltedSolid_24px]: "62178",
  [HdsIconlibrary_24px.MapViewValueDecreaseOutline_24px]: "62179",
  [HdsIconlibrary_24px.MapViewValueDecreaseSolid_24px]: "62180",
  [HdsIconlibrary_24px.MapViewValueDecreaseHighOutline_24px]: "62181",
  [HdsIconlibrary_24px.MapViewValueDecreaseHighSolid_24px]: "62182",
  [HdsIconlibrary_24px.MapViewValueIncreaseOutline_24px]: "62183",
  [HdsIconlibrary_24px.MapViewValueIncreaseSolid_24px]: "62184",
  [HdsIconlibrary_24px.MapViewValueIncreaseHighOutline_24px]: "62185",
  [HdsIconlibrary_24px.MapViewValueIncreaseHighSolid_24px]: "62186",
  [HdsIconlibrary_24px.MapViewViewAllOutline_24px]: "62187",
  [HdsIconlibrary_24px.MapViewViewAllSolid_24px]: "62188",
  [HdsIconlibrary_24px.MapViewViewCenterOutline_24px]: "62189",
  [HdsIconlibrary_24px.MapViewViewCenterSolid_24px]: "62190",
  [HdsIconlibrary_24px.MapViewWestOutline_24px]: "62191",
  [HdsIconlibrary_24px.MapViewWestSolid_24px]: "62192",
  [HdsIconlibrary_24px.MapViewWestCharacterOutline_24px]: "62193",
  [HdsIconlibrary_24px.MapViewWestCharacterSolid_24px]: "62194",
  [HdsIconlibrary_24px.MapViewWorkspacesOutline_24px]: "62195",
  [HdsIconlibrary_24px.MapViewWorkspacesSolid_24px]: "62196",
  [HdsIconlibrary_24px.MiscAddAddressNumberOutline_24px]: "62197",
  [HdsIconlibrary_24px.MiscAddAddressNumberSolid_24px]: "62198",
  [HdsIconlibrary_24px.MiscAddressNumberOutline_24px]: "62199",
  [HdsIconlibrary_24px.MiscAddressNumberSolid_24px]: "62200",
  [HdsIconlibrary_24px.MiscBuildingHomeOutline_24px]: "62201",
  [HdsIconlibrary_24px.MiscBuildingHomeSolid_24px]: "62202",
  [HdsIconlibrary_24px.MiscBuildingOffOutline_24px]: "62203",
  [HdsIconlibrary_24px.MiscBuildingOffSolid_24px]: "62204",
  [HdsIconlibrary_24px.MiscBuildingOfficeOutline_24px]: "62205",
  [HdsIconlibrary_24px.MiscBuildingOfficeSolid_24px]: "62206",
  [HdsIconlibrary_24px.MiscCalculatorOutline_24px]: "62207",
  [HdsIconlibrary_24px.MiscCalculatorSolid_24px]: "62208",
  [HdsIconlibrary_24px.MiscCartOutline_24px]: "62209",
  [HdsIconlibrary_24px.MiscCartSolid_24px]: "62210",
  [HdsIconlibrary_24px.MiscCodeOutline_24px]: "62211",
  [HdsIconlibrary_24px.MiscCodeSolid_24px]: "62212",
  [HdsIconlibrary_24px.MiscCreditCardOutline_24px]: "62213",
  [HdsIconlibrary_24px.MiscCreditCardSolid_24px]: "62214",
  [HdsIconlibrary_24px.MiscDatasetOutline_24px]: "62215",
  [HdsIconlibrary_24px.MiscDatasetSolid_24px]: "62216",
  [HdsIconlibrary_24px.MiscElevatorOutline_24px]: "62217",
  [HdsIconlibrary_24px.MiscElevatorSolid_24px]: "62218",
  [HdsIconlibrary_24px.MiscEnvironmentOutline_24px]: "62219",
  [HdsIconlibrary_24px.MiscEnvironmentSolid_24px]: "62220",
  [HdsIconlibrary_24px.MiscEscalatorOutline_24px]: "62221",
  [HdsIconlibrary_24px.MiscEscalatorSolid_24px]: "62222",
  [HdsIconlibrary_24px.MiscEscalatorDownOutline_24px]: "62223",
  [HdsIconlibrary_24px.MiscEscalatorDownSolid_24px]: "62224",
  [HdsIconlibrary_24px.MiscEscalatorUpOutline_24px]: "62225",
  [HdsIconlibrary_24px.MiscEscalatorUpSolid_24px]: "62226",
  [HdsIconlibrary_24px.MiscExpertOutline_24px]: "62227",
  [HdsIconlibrary_24px.MiscExpertSolid_24px]: "62228",
  [HdsIconlibrary_24px.MiscFamilyOutline_24px]: "62229",
  [HdsIconlibrary_24px.MiscFamilySolid_24px]: "62230",
  [HdsIconlibrary_24px.MiscFlashlightOutline_24px]: "62231",
  [HdsIconlibrary_24px.MiscFlashlightSolid_24px]: "62232",
  [HdsIconlibrary_24px.MiscGlobalOutline_24px]: "62233",
  [HdsIconlibrary_24px.MiscGlobalSolid_24px]: "62234",
  [HdsIconlibrary_24px.MiscHandshakeOutline_24px]: "62235",
  [HdsIconlibrary_24px.MiscHandshakeSolid_24px]: "62236",
  [HdsIconlibrary_24px.MiscHardDriveOutline_24px]: "62237",
  [HdsIconlibrary_24px.MiscHardDriveSolid_24px]: "62238",
  [HdsIconlibrary_24px.MiscHeadphonesOutline_24px]: "62239",
  [HdsIconlibrary_24px.MiscHeadphonesSolid_24px]: "62240",
  [HdsIconlibrary_24px.MiscInboxOutline_24px]: "62241",
  [HdsIconlibrary_24px.MiscInboxSolid_24px]: "62242",
  [HdsIconlibrary_24px.MiscInboxAttentionOutline_24px]: "62243",
  [HdsIconlibrary_24px.MiscInboxAttentionSolid_24px]: "62244",
  [HdsIconlibrary_24px.MiscKeyOutline_24px]: "62245",
  [HdsIconlibrary_24px.MiscKeySolid_24px]: "62246",
  [HdsIconlibrary_24px.MiscKitchenOutline_24px]: "62247",
  [HdsIconlibrary_24px.MiscKitchenSolid_24px]: "62248",
  [HdsIconlibrary_24px.MiscLaboratoryOutline_24px]: "62249",
  [HdsIconlibrary_24px.MiscLaboratorySolid_24px]: "62250",
  [HdsIconlibrary_24px.MiscManOutline_24px]: "62251",
  [HdsIconlibrary_24px.MiscManSolid_24px]: "62252",
  [HdsIconlibrary_24px.MiscMeetingPointOutline_24px]: "62253",
  [HdsIconlibrary_24px.MiscMeetingPointSolid_24px]: "62254",
  [HdsIconlibrary_24px.MiscNeighbourhoodOutline_24px]: "62255",
  [HdsIconlibrary_24px.MiscNeighbourhoodSolid_24px]: "62256",
  [HdsIconlibrary_24px.MiscPacemakerOutline_24px]: "62257",
  [HdsIconlibrary_24px.MiscPacemakerSolid_24px]: "62258",
  [HdsIconlibrary_24px.MiscPeopleOutline_24px]: "62259",
  [HdsIconlibrary_24px.MiscPeopleSolid_24px]: "62260",
  [HdsIconlibrary_24px.MiscPoopOutline_24px]: "62261",
  [HdsIconlibrary_24px.MiscPoopSolid_24px]: "62262",
  [HdsIconlibrary_24px.MiscProjectOutline_24px]: "62263",
  [HdsIconlibrary_24px.MiscProjectSolid_24px]: "62264",
  [HdsIconlibrary_24px.MiscProjectsOutline_24px]: "62265",
  [HdsIconlibrary_24px.MiscProjectsSolid_24px]: "62266",
  [HdsIconlibrary_24px.MiscReusableOutline_24px]: "62267",
  [HdsIconlibrary_24px.MiscReusableSolid_24px]: "62268",
  [HdsIconlibrary_24px.MiscServiceOutline_24px]: "62269",
  [HdsIconlibrary_24px.MiscServiceSolid_24px]: "62270",
  [HdsIconlibrary_24px.MiscStairsOutline_24px]: "62271",
  [HdsIconlibrary_24px.MiscStairsSolid_24px]: "62272",
  [HdsIconlibrary_24px.MiscStopwatchOutline_24px]: "62273",
  [HdsIconlibrary_24px.MiscStopwatchSolid_24px]: "62274",
  [HdsIconlibrary_24px.MiscSuitcaseOutline_24px]: "62275",
  [HdsIconlibrary_24px.MiscSuitcaseSolid_24px]: "62276",
  [HdsIconlibrary_24px.MiscTerrainOutline_24px]: "62277",
  [HdsIconlibrary_24px.MiscTerrainSolid_24px]: "62278",
  [HdsIconlibrary_24px.MiscTicketBarrierOutline_24px]: "62279",
  [HdsIconlibrary_24px.MiscTicketBarrierSolid_24px]: "62280",
  [HdsIconlibrary_24px.MiscTrophyOutline_24px]: "62281",
  [HdsIconlibrary_24px.MiscTrophySolid_24px]: "62282",
  [HdsIconlibrary_24px.MiscVoiceCommandOutline_24px]: "62283",
  [HdsIconlibrary_24px.MiscVoiceCommandSolid_24px]: "62284",
  [HdsIconlibrary_24px.MiscWheelchairOutline_24px]: "62285",
  [HdsIconlibrary_24px.MiscWheelchairSolid_24px]: "62286",
  [HdsIconlibrary_24px.MiscWomanOutline_24px]: "62287",
  [HdsIconlibrary_24px.MiscWomanSolid_24px]: "62288",
  [HdsIconlibrary_24px.NavigationImageBrightnessOffOutline_24px]: "62289",
  [HdsIconlibrary_24px.NavigationImageBrightnessOffSolid_24px]: "62290",
  [HdsIconlibrary_24px.NavigationImageBrightnessOnOutline_24px]: "62291",
  [HdsIconlibrary_24px.NavigationImageBrightnessOnSolid_24px]: "62292",
  [HdsIconlibrary_24px.NavigationImageColorFullOutline_24px]: "62293",
  [HdsIconlibrary_24px.NavigationImageColorFullSolid_24px]: "62294",
  [HdsIconlibrary_24px.NavigationImageColorInvertAOutline_24px]: "62295",
  [HdsIconlibrary_24px.NavigationImageColorInvertASolid_24px]: "62296",
  [HdsIconlibrary_24px.NavigationImageColorInvertBOutline_24px]: "62297",
  [HdsIconlibrary_24px.NavigationImageColorInvertBSolid_24px]: "62298",
  [HdsIconlibrary_24px.NavigationImageColorOverrideOutline_24px]: "62299",
  [HdsIconlibrary_24px.NavigationImageColorOverrideSolid_24px]: "62300",
  [HdsIconlibrary_24px.NavigationImageColorToneOutline_24px]: "62301",
  [HdsIconlibrary_24px.NavigationImageColorToneSolid_24px]: "62302",
  [HdsIconlibrary_24px.NavigationImageContrastOutline_24px]: "62303",
  [HdsIconlibrary_24px.NavigationImageContrastSolid_24px]: "62304",
  [HdsIconlibrary_24px.NavigationImageFirstOutline_24px]: "62305",
  [HdsIconlibrary_24px.NavigationImageFirstSolid_24px]: "62306",
  [HdsIconlibrary_24px.NavigationImageLastOutline_24px]: "62307",
  [HdsIconlibrary_24px.NavigationImageLastSolid_24px]: "62308",
  [HdsIconlibrary_24px.NavigationImageNextOutline_24px]: "62309",
  [HdsIconlibrary_24px.NavigationImageNextSolid_24px]: "62310",
  [HdsIconlibrary_24px.NavigationImageOpacityOffOutline_24px]: "62311",
  [HdsIconlibrary_24px.NavigationImageOpacityOffSolid_24px]: "62312",
  [HdsIconlibrary_24px.NavigationImageOpacityOnOutline_24px]: "62313",
  [HdsIconlibrary_24px.NavigationImageOpacityOnSolid_24px]: "62314",
  [HdsIconlibrary_24px.NavigationImagePauseOutline_24px]: "62315",
  [HdsIconlibrary_24px.NavigationImagePauseSolid_24px]: "62316",
  [HdsIconlibrary_24px.NavigationImagePlayOutline_24px]: "62317",
  [HdsIconlibrary_24px.NavigationImagePlaySolid_24px]: "62318",
  [HdsIconlibrary_24px.NavigationImagePlayReverseOutline_24px]: "62319",
  [HdsIconlibrary_24px.NavigationImagePlayReverseSolid_24px]: "62320",
  [HdsIconlibrary_24px.NavigationImagePlaybackSpeedOutline_24px]: "62321",
  [HdsIconlibrary_24px.NavigationImagePlaybackSpeedSolid_24px]: "62322",
  [HdsIconlibrary_24px.NavigationImagePreviousOutline_24px]: "62323",
  [HdsIconlibrary_24px.NavigationImagePreviousSolid_24px]: "62324",
  [HdsIconlibrary_24px.NavigationImageSkipOutline_24px]: "62325",
  [HdsIconlibrary_24px.NavigationImageSkipSolid_24px]: "62326",
  [HdsIconlibrary_24px.NavigationImageStopOutline_24px]: "62327",
  [HdsIconlibrary_24px.NavigationImageStopSolid_24px]: "62328",
  [HdsIconlibrary_24px.PoiAccommodationOutline_24px]: "62329",
  [HdsIconlibrary_24px.PoiAccommodationSolid_24px]: "62330",
  [HdsIconlibrary_24px.PoiAirportOutline_24px]: "62331",
  [HdsIconlibrary_24px.PoiAirportSolid_24px]: "62332",
  [HdsIconlibrary_24px.PoiAirportCargoOutline_24px]: "62333",
  [HdsIconlibrary_24px.PoiAirportCargoSolid_24px]: "62334",
  [HdsIconlibrary_24px.PoiAirportGateOutline_24px]: "62335",
  [HdsIconlibrary_24px.PoiAirportGateSolid_24px]: "62336",
  [HdsIconlibrary_24px.PoiAmusementParkOutline_24px]: "62337",
  [HdsIconlibrary_24px.PoiAmusementParkSolid_24px]: "62338",
  [HdsIconlibrary_24px.PoiAquariumOutline_24px]: "62339",
  [HdsIconlibrary_24px.PoiAquariumSolid_24px]: "62340",
  [HdsIconlibrary_24px.PoiArtGalleryOutline_24px]: "62341",
  [HdsIconlibrary_24px.PoiArtGallerySolid_24px]: "62342",
  [HdsIconlibrary_24px.PoiAshramOutline_24px]: "62343",
  [HdsIconlibrary_24px.PoiAshramSolid_24px]: "62344",
  [HdsIconlibrary_24px.PoiAtmOutline_24px]: "62345",
  [HdsIconlibrary_24px.PoiAtmSolid_24px]: "62346",
  [HdsIconlibrary_24px.PoiAttractionOutline_24px]: "62347",
  [HdsIconlibrary_24px.PoiAttractionSolid_24px]: "62348",
  [HdsIconlibrary_24px.PoiBakeryOutline_24px]: "62349",
  [HdsIconlibrary_24px.PoiBakerySolid_24px]: "62350",
  [HdsIconlibrary_24px.PoiBeachOutline_24px]: "62351",
  [HdsIconlibrary_24px.PoiBeachSolid_24px]: "62352",
  [HdsIconlibrary_24px.PoiBookstoreOutline_24px]: "62353",
  [HdsIconlibrary_24px.PoiBookstoreSolid_24px]: "62354",
  [HdsIconlibrary_24px.PoiBowlingOutline_24px]: "62355",
  [HdsIconlibrary_24px.PoiBowlingSolid_24px]: "62356",
  [HdsIconlibrary_24px.PoiBridgeOutline_24px]: "62357",
  [HdsIconlibrary_24px.PoiBridgeSolid_24px]: "62358",
  [HdsIconlibrary_24px.PoiBusOutline_24px]: "62359",
  [HdsIconlibrary_24px.PoiBusSolid_24px]: "62360",
  [HdsIconlibrary_24px.PoiBusinessOutline_24px]: "62361",
  [HdsIconlibrary_24px.PoiBusinessSolid_24px]: "62362",
  [HdsIconlibrary_24px.PoiBusinessPostJpnOutline_24px]: "62363",
  [HdsIconlibrary_24px.PoiBusinessPostJpnSolid_24px]: "62364",
  [HdsIconlibrary_24px.PoiButcherOutline_24px]: "62365",
  [HdsIconlibrary_24px.PoiButcherSolid_24px]: "62366",
  [HdsIconlibrary_24px.PoiCableWayOutline_24px]: "62367",
  [HdsIconlibrary_24px.PoiCableWaySolid_24px]: "62368",
  [HdsIconlibrary_24px.PoiCampingOutline_24px]: "62369",
  [HdsIconlibrary_24px.PoiCampingSolid_24px]: "62370",
  [HdsIconlibrary_24px.PoiCarChargingOutline_24px]: "62371",
  [HdsIconlibrary_24px.PoiCarChargingSolid_24px]: "62372",
  [HdsIconlibrary_24px.PoiCarChargingFastOutline_24px]: "62373",
  [HdsIconlibrary_24px.PoiCarChargingFastSolid_24px]: "62374",
  [HdsIconlibrary_24px.PoiCarDealershipOutline_24px]: "62375",
  [HdsIconlibrary_24px.PoiCarDealershipSolid_24px]: "62376",
  [HdsIconlibrary_24px.PoiCarElectricOutline_24px]: "62377",
  [HdsIconlibrary_24px.PoiCarElectricSolid_24px]: "62378",
  [HdsIconlibrary_24px.PoiCarRentalOutline_24px]: "62379",
  [HdsIconlibrary_24px.PoiCarRentalSolid_24px]: "62380",
  [HdsIconlibrary_24px.PoiCarRepairOutline_24px]: "62381",
  [HdsIconlibrary_24px.PoiCarRepairSolid_24px]: "62382",
  [HdsIconlibrary_24px.PoiCarWashOutline_24px]: "62383",
  [HdsIconlibrary_24px.PoiCarWashSolid_24px]: "62384",
  [HdsIconlibrary_24px.PoiCargoCenterOutline_24px]: "62385",
  [HdsIconlibrary_24px.PoiCargoCenterSolid_24px]: "62386",
  [HdsIconlibrary_24px.PoiCartOutline_24px]: "62387",
  [HdsIconlibrary_24px.PoiCartSolid_24px]: "62388",
  [HdsIconlibrary_24px.PoiCasinoOutline_24px]: "62389",
  [HdsIconlibrary_24px.PoiCasinoSolid_24px]: "62390",
  [HdsIconlibrary_24px.PoiCemetryOutline_24px]: "62391",
  [HdsIconlibrary_24px.PoiCemetrySolid_24px]: "62392",
  [HdsIconlibrary_24px.PoiChurchOutline_24px]: "62393",
  [HdsIconlibrary_24px.PoiChurchSolid_24px]: "62394",
  [HdsIconlibrary_24px.PoiCinemaOutline_24px]: "62395",
  [HdsIconlibrary_24px.PoiCinemaSolid_24px]: "62396",
  [HdsIconlibrary_24px.PoiClothingOutline_24px]: "62397",
  [HdsIconlibrary_24px.PoiClothingSolid_24px]: "62398",
  [HdsIconlibrary_24px.PoiCoachOutline_24px]: "62399",
  [HdsIconlibrary_24px.PoiCoachSolid_24px]: "62400",
  [HdsIconlibrary_24px.PoiCocktailOutline_24px]: "62401",
  [HdsIconlibrary_24px.PoiCocktailSolid_24px]: "62402",
  [HdsIconlibrary_24px.PoiCoffeeOutline_24px]: "62403",
  [HdsIconlibrary_24px.PoiCoffeeSolid_24px]: "62404",
  [HdsIconlibrary_24px.PoiCurrencyBahtOutline_24px]: "62405",
  [HdsIconlibrary_24px.PoiCurrencyBahtSolid_24px]: "62406",
  [HdsIconlibrary_24px.PoiCurrencyDollarOutline_24px]: "62407",
  [HdsIconlibrary_24px.PoiCurrencyDollarSolid_24px]: "62408",
  [HdsIconlibrary_24px.PoiCurrencyDongOutline_24px]: "62409",
  [HdsIconlibrary_24px.PoiCurrencyDongSolid_24px]: "62410",
  [HdsIconlibrary_24px.PoiCurrencyEuroOutline_24px]: "62411",
  [HdsIconlibrary_24px.PoiCurrencyEuroSolid_24px]: "62412",
  [HdsIconlibrary_24px.PoiCurrencyFrancOutline_24px]: "62413",
  [HdsIconlibrary_24px.PoiCurrencyFrancSolid_24px]: "62414",
  [HdsIconlibrary_24px.PoiCurrencyKroneOutline_24px]: "62415",
  [HdsIconlibrary_24px.PoiCurrencyKroneSolid_24px]: "62416",
  [HdsIconlibrary_24px.PoiCurrencyLiraOutline_24px]: "62417",
  [HdsIconlibrary_24px.PoiCurrencyLiraSolid_24px]: "62418",
  [HdsIconlibrary_24px.PoiCurrencyNairaOutline_24px]: "62419",
  [HdsIconlibrary_24px.PoiCurrencyNairaSolid_24px]: "62420",
  [HdsIconlibrary_24px.PoiCurrencyPoundOutline_24px]: "62421",
  [HdsIconlibrary_24px.PoiCurrencyPoundSolid_24px]: "62422",
  [HdsIconlibrary_24px.PoiCurrencyRubleOutline_24px]: "62423",
  [HdsIconlibrary_24px.PoiCurrencyRubleSolid_24px]: "62424",
  [HdsIconlibrary_24px.PoiCurrencyRupeeOutline_24px]: "62425",
  [HdsIconlibrary_24px.PoiCurrencyRupeeSolid_24px]: "62426",
  [HdsIconlibrary_24px.PoiCurrencyRupeesOutline_24px]: "62427",
  [HdsIconlibrary_24px.PoiCurrencyRupeesSolid_24px]: "62428",
  [HdsIconlibrary_24px.PoiCurrencyRupiahOutline_24px]: "62429",
  [HdsIconlibrary_24px.PoiCurrencyRupiahSolid_24px]: "62430",
  [HdsIconlibrary_24px.PoiCurrencyShekelOutline_24px]: "62431",
  [HdsIconlibrary_24px.PoiCurrencyShekelSolid_24px]: "62432",
  [HdsIconlibrary_24px.PoiCurrencyTakaOutline_24px]: "62433",
  [HdsIconlibrary_24px.PoiCurrencyTakaSolid_24px]: "62434",
  [HdsIconlibrary_24px.PoiCurrencyYenOutline_24px]: "62435",
  [HdsIconlibrary_24px.PoiCurrencyYenSolid_24px]: "62436",
  [HdsIconlibrary_24px.PoiDoughnutOutline_24px]: "62437",
  [HdsIconlibrary_24px.PoiDoughnutSolid_24px]: "62438",
  [HdsIconlibrary_24px.PoiEducationOutline_24px]: "62439",
  [HdsIconlibrary_24px.PoiEducationSolid_24px]: "62440",
  [HdsIconlibrary_24px.PoiElevatorOutline_24px]: "62441",
  [HdsIconlibrary_24px.PoiElevatorSolid_24px]: "62442",
  [HdsIconlibrary_24px.PoiEmergencyFiredepartmentJpnOutline_24px]: "62443",
  [HdsIconlibrary_24px.PoiEmergencyFiredepartmentJpnSolid_24px]: "62444",
  [HdsIconlibrary_24px.PoiEmergencyHospitalJpnOutline_24px]: "62445",
  [HdsIconlibrary_24px.PoiEmergencyHospitalJpnSolid_24px]: "62446",
  [HdsIconlibrary_24px.PoiEmergencyPoliceJpnOutline_24px]: "62447",
  [HdsIconlibrary_24px.PoiEmergencyPoliceJpnSolid_24px]: "62448",
  [HdsIconlibrary_24px.PoiEmergencyPoliceboxJpnOutline_24px]: "62449",
  [HdsIconlibrary_24px.PoiEmergencyPoliceboxJpnSolid_24px]: "62450",
  [HdsIconlibrary_24px.PoiEnterVenueOutline_24px]: "62451",
  [HdsIconlibrary_24px.PoiEnterVenueSolid_24px]: "62452",
  [HdsIconlibrary_24px.PoiEntranceOutline_24px]: "62453",
  [HdsIconlibrary_24px.PoiEntranceSolid_24px]: "62454",
  [HdsIconlibrary_24px.PoiEscalatorOutline_24px]: "62455",
  [HdsIconlibrary_24px.PoiEscalatorSolid_24px]: "62456",
  [HdsIconlibrary_24px.PoiExhibitionCenterOutline_24px]: "62457",
  [HdsIconlibrary_24px.PoiExhibitionCenterSolid_24px]: "62458",
  [HdsIconlibrary_24px.PoiFacilitiesOutline_24px]: "62459",
  [HdsIconlibrary_24px.PoiFacilitiesSolid_24px]: "62460",
  [HdsIconlibrary_24px.PoiFacilitiesCityhallJpnOutline_24px]: "62461",
  [HdsIconlibrary_24px.PoiFacilitiesCityhallJpnSolid_24px]: "62462",
  [HdsIconlibrary_24px.PoiFacilitiesEducationHigherJpnOutline_24px]: "62463",
  [HdsIconlibrary_24px.PoiFacilitiesEducationHigherJpnSolid_24px]: "62464",
  [HdsIconlibrary_24px.PoiFacilitiesEducationSchoolJpnOutline_24px]: "62465",
  [HdsIconlibrary_24px.PoiFacilitiesEducationSchoolJpnSolid_24px]: "62466",
  [HdsIconlibrary_24px.PoiFacilitiesOfficePrefecturalJpnOutline_24px]: "62467",
  [HdsIconlibrary_24px.PoiFacilitiesOfficePrefecturalJpnSolid_24px]: "62468",
  [HdsIconlibrary_24px.PoiFacilitiesOfficeTownvillageJpnOutline_24px]: "62469",
  [HdsIconlibrary_24px.PoiFacilitiesOfficeTownvillageJpnSolid_24px]: "62470",
  [HdsIconlibrary_24px.PoiFacilitiesOfficeWardJpnOutline_24px]: "62471",
  [HdsIconlibrary_24px.PoiFacilitiesOfficeWardJpnSolid_24px]: "62472",
  [HdsIconlibrary_24px.PoiFastFoodOutline_24px]: "62473",
  [HdsIconlibrary_24px.PoiFastFoodSolid_24px]: "62474",
  [HdsIconlibrary_24px.PoiFerryOutline_24px]: "62475",
  [HdsIconlibrary_24px.PoiFerrySolid_24px]: "62476",
  [HdsIconlibrary_24px.PoiFireDepartmentOutline_24px]: "62477",
  [HdsIconlibrary_24px.PoiFireDepartmentSolid_24px]: "62478",
  [HdsIconlibrary_24px.PoiFirstAidCrescentOutline_24px]: "62479",
  [HdsIconlibrary_24px.PoiFirstAidCrescentSolid_24px]: "62480",
  [HdsIconlibrary_24px.PoiFirstAidCrossOutline_24px]: "62481",
  [HdsIconlibrary_24px.PoiFirstAidCrossSolid_24px]: "62482",
  [HdsIconlibrary_24px.PoiFitnessOutline_24px]: "62483",
  [HdsIconlibrary_24px.PoiFitnessSolid_24px]: "62484",
  [HdsIconlibrary_24px.PoiFrontierCrossingOutline_24px]: "62485",
  [HdsIconlibrary_24px.PoiFrontierCrossingSolid_24px]: "62486",
  [HdsIconlibrary_24px.PoiGameArcadeOutline_24px]: "62487",
  [HdsIconlibrary_24px.PoiGameArcadeSolid_24px]: "62488",
  [HdsIconlibrary_24px.PoiGolfCourseOutline_24px]: "62489",
  [HdsIconlibrary_24px.PoiGolfCourseSolid_24px]: "62490",
  [HdsIconlibrary_24px.PoiGroceryOutline_24px]: "62491",
  [HdsIconlibrary_24px.PoiGrocerySolid_24px]: "62492",
  [HdsIconlibrary_24px.PoiGurdwaraOutline_24px]: "62493",
  [HdsIconlibrary_24px.PoiGurdwaraSolid_24px]: "62494",
  [HdsIconlibrary_24px.PoiHarborOutline_24px]: "62495",
  [HdsIconlibrary_24px.PoiHarborSolid_24px]: "62496",
  [HdsIconlibrary_24px.PoiHospitalCrescentOutline_24px]: "62497",
  [HdsIconlibrary_24px.PoiHospitalCrescentSolid_24px]: "62498",
  [HdsIconlibrary_24px.PoiHospitalCrossOutline_24px]: "62499",
  [HdsIconlibrary_24px.PoiHospitalCrossSolid_24px]: "62500",
  [HdsIconlibrary_24px.PoiHotSpringJpnOutline_24px]: "62501",
  [HdsIconlibrary_24px.PoiHotSpringJpnSolid_24px]: "62502",
  [HdsIconlibrary_24px.PoiHotelOutline_24px]: "62503",
  [HdsIconlibrary_24px.PoiHotelSolid_24px]: "62504",
  [HdsIconlibrary_24px.PoiInclinedOutline_24px]: "62505",
  [HdsIconlibrary_24px.PoiInclinedSolid_24px]: "62506",
  [HdsIconlibrary_24px.PoiIndustrialComplexOutline_24px]: "62507",
  [HdsIconlibrary_24px.PoiIndustrialComplexSolid_24px]: "62508",
  [HdsIconlibrary_24px.PoiKaraokeOutline_24px]: "62509",
  [HdsIconlibrary_24px.PoiKaraokeSolid_24px]: "62510",
  [HdsIconlibrary_24px.PoiLaundryOutline_24px]: "62511",
  [HdsIconlibrary_24px.PoiLaundrySolid_24px]: "62512",
  [HdsIconlibrary_24px.PoiLibraryOutline_24px]: "62513",
  [HdsIconlibrary_24px.PoiLibrarySolid_24px]: "62514",
  [HdsIconlibrary_24px.PoiLiquorOutline_24px]: "62515",
  [HdsIconlibrary_24px.PoiLiquorSolid_24px]: "62516",
  [HdsIconlibrary_24px.PoiLoadingDockOutline_24px]: "62517",
  [HdsIconlibrary_24px.PoiLoadingDockSolid_24px]: "62518",
  [HdsIconlibrary_24px.PoiLoadingZoneOutline_24px]: "62519",
  [HdsIconlibrary_24px.PoiLoadingZoneSolid_24px]: "62520",
  [HdsIconlibrary_24px.PoiMetroOutline_24px]: "62521",
  [HdsIconlibrary_24px.PoiMetroSolid_24px]: "62522",
  [HdsIconlibrary_24px.PoiMonorailOutline_24px]: "62523",
  [HdsIconlibrary_24px.PoiMonorailSolid_24px]: "62524",
  [HdsIconlibrary_24px.PoiMosqueOutline_24px]: "62525",
  [HdsIconlibrary_24px.PoiMosqueSolid_24px]: "62526",
  [HdsIconlibrary_24px.PoiMountainOutline_24px]: "62527",
  [HdsIconlibrary_24px.PoiMountainSolid_24px]: "62528",
  [HdsIconlibrary_24px.PoiMountainPassOutline_24px]: "62529",
  [HdsIconlibrary_24px.PoiMountainPassSolid_24px]: "62530",
  [HdsIconlibrary_24px.PoiMuseumOutline_24px]: "62531",
  [HdsIconlibrary_24px.PoiMuseumSolid_24px]: "62532",
  [HdsIconlibrary_24px.PoiMuseumArtOutline_24px]: "62533",
  [HdsIconlibrary_24px.PoiMuseumArtSolid_24px]: "62534",
  [HdsIconlibrary_24px.PoiNatureOutline_24px]: "62535",
  [HdsIconlibrary_24px.PoiNatureSolid_24px]: "62536",
  [HdsIconlibrary_24px.PoiNatureOverlookOutline_24px]: "62537",
  [HdsIconlibrary_24px.PoiNatureOverlookSolid_24px]: "62538",
  [HdsIconlibrary_24px.PoiNightClubOutline_24px]: "62539",
  [HdsIconlibrary_24px.PoiNightClubSolid_24px]: "62540",
  [HdsIconlibrary_24px.PoiPagodaOutline_24px]: "62541",
  [HdsIconlibrary_24px.PoiPagodaSolid_24px]: "62542",
  [HdsIconlibrary_24px.PoiParkAndRideOutline_24px]: "62543",
  [HdsIconlibrary_24px.PoiParkAndRideSolid_24px]: "62544",
  [HdsIconlibrary_24px.PoiParkingOutline_24px]: "62545",
  [HdsIconlibrary_24px.PoiParkingSolid_24px]: "62546",
  [HdsIconlibrary_24px.PoiParkingBicycleOutline_24px]: "62547",
  [HdsIconlibrary_24px.PoiParkingBicycleSolid_24px]: "62548",
  [HdsIconlibrary_24px.PoiParkingGarageOutline_24px]: "62549",
  [HdsIconlibrary_24px.PoiParkingGarageSolid_24px]: "62550",
  [HdsIconlibrary_24px.PoiParkingMotorcycleOutline_24px]: "62551",
  [HdsIconlibrary_24px.PoiParkingMotorcycleSolid_24px]: "62552",
  [HdsIconlibrary_24px.PoiPetrolStationOutline_24px]: "62553",
  [HdsIconlibrary_24px.PoiPetrolStationSolid_24px]: "62554",
  [HdsIconlibrary_24px.PoiPharmacyCrescentOutline_24px]: "62555",
  [HdsIconlibrary_24px.PoiPharmacyCrescentSolid_24px]: "62556",
  [HdsIconlibrary_24px.PoiPharmacyCrossOutline_24px]: "62557",
  [HdsIconlibrary_24px.PoiPharmacyCrossSolid_24px]: "62558",
  [HdsIconlibrary_24px.PoiPicnicAreaOutline_24px]: "62559",
  [HdsIconlibrary_24px.PoiPicnicAreaSolid_24px]: "62560",
  [HdsIconlibrary_24px.PoiPlaygroundOutline_24px]: "62561",
  [HdsIconlibrary_24px.PoiPlaygroundSolid_24px]: "62562",
  [HdsIconlibrary_24px.PoiPointOutline_24px]: "62563",
  [HdsIconlibrary_24px.PoiPointSolid_24px]: "62564",
  [HdsIconlibrary_24px.PoiPoliceOutline_24px]: "62565",
  [HdsIconlibrary_24px.PoiPoliceSolid_24px]: "62566",
  [HdsIconlibrary_24px.PoiPoolOutline_24px]: "62567",
  [HdsIconlibrary_24px.PoiPoolSolid_24px]: "62568",
  [HdsIconlibrary_24px.PoiPostOutline_24px]: "62569",
  [HdsIconlibrary_24px.PoiPostSolid_24px]: "62570",
  [HdsIconlibrary_24px.PoiPubOutline_24px]: "62571",
  [HdsIconlibrary_24px.PoiPubSolid_24px]: "62572",
  [HdsIconlibrary_24px.PoiPublicToiletOutline_24px]: "62573",
  [HdsIconlibrary_24px.PoiPublicToiletSolid_24px]: "62574",
  [HdsIconlibrary_24px.PoiPublicTransportOutline_24px]: "62575",
  [HdsIconlibrary_24px.PoiPublicTransportSolid_24px]: "62576",
  [HdsIconlibrary_24px.PoiRailLightOutline_24px]: "62577",
  [HdsIconlibrary_24px.PoiRailLightSolid_24px]: "62578",
  [HdsIconlibrary_24px.PoiRailRegionalOutline_24px]: "62579",
  [HdsIconlibrary_24px.PoiRailRegionalSolid_24px]: "62580",
  [HdsIconlibrary_24px.PoiRailYardOutline_24px]: "62581",
  [HdsIconlibrary_24px.PoiRailYardSolid_24px]: "62582",
  [HdsIconlibrary_24px.PoiRampOutline_24px]: "62583",
  [HdsIconlibrary_24px.PoiRampSolid_24px]: "62584",
  [HdsIconlibrary_24px.PoiReligiousPlaceOutline_24px]: "62585",
  [HdsIconlibrary_24px.PoiReligiousPlaceSolid_24px]: "62586",
  [HdsIconlibrary_24px.PoiReligiousShintoJpnOutline_24px]: "62587",
  [HdsIconlibrary_24px.PoiReligiousShintoJpnSolid_24px]: "62588",
  [HdsIconlibrary_24px.PoiReligiousTempleBuddhistJpnOutline_24px]: "62589",
  [HdsIconlibrary_24px.PoiReligiousTempleBuddhistJpnSolid_24px]: "62590",
  [HdsIconlibrary_24px.PoiRestaurantOutline_24px]: "62591",
  [HdsIconlibrary_24px.PoiRestaurantSolid_24px]: "62592",
  [HdsIconlibrary_24px.PoiSeaportHarborOutline_24px]: "62593",
  [HdsIconlibrary_24px.PoiSeaportHarborSolid_24px]: "62594",
  [HdsIconlibrary_24px.PoiShoesOutline_24px]: "62595",
  [HdsIconlibrary_24px.PoiShoesSolid_24px]: "62596",
  [HdsIconlibrary_24px.PoiShoppingOutline_24px]: "62597",
  [HdsIconlibrary_24px.PoiShoppingSolid_24px]: "62598",
  [HdsIconlibrary_24px.PoiShrineGenericOutline_24px]: "62599",
  [HdsIconlibrary_24px.PoiShrineGenericSolid_24px]: "62600",
  [HdsIconlibrary_24px.PoiSkiRunOutline_24px]: "62601",
  [HdsIconlibrary_24px.PoiSkiRunSolid_24px]: "62602",
  [HdsIconlibrary_24px.PoiSkywalkOutline_24px]: "62603",
  [HdsIconlibrary_24px.PoiSkywalkSolid_24px]: "62604",
  [HdsIconlibrary_24px.PoiStadiumOutline_24px]: "62605",
  [HdsIconlibrary_24px.PoiStadiumSolid_24px]: "62606",
  [HdsIconlibrary_24px.PoiStairsOutline_24px]: "62607",
  [HdsIconlibrary_24px.PoiStairsSolid_24px]: "62608",
  [HdsIconlibrary_24px.PoiSweetsOutline_24px]: "62609",
  [HdsIconlibrary_24px.PoiSweetsSolid_24px]: "62610",
  [HdsIconlibrary_24px.PoiSwimmingOutline_24px]: "62611",
  [HdsIconlibrary_24px.PoiSwimmingSolid_24px]: "62612",
  [HdsIconlibrary_24px.PoiSynagogueOutline_24px]: "62613",
  [HdsIconlibrary_24px.PoiSynagogueSolid_24px]: "62614",
  [HdsIconlibrary_24px.PoiTaxiOutline_24px]: "62615",
  [HdsIconlibrary_24px.PoiTaxiSolid_24px]: "62616",
  [HdsIconlibrary_24px.PoiTheaterOutline_24px]: "62617",
  [HdsIconlibrary_24px.PoiTheaterSolid_24px]: "62618",
  [HdsIconlibrary_24px.PoiTollBoothOutline_24px]: "62619",
  [HdsIconlibrary_24px.PoiTollBoothSolid_24px]: "62620",
  [HdsIconlibrary_24px.PoiTouristInformationOutline_24px]: "62621",
  [HdsIconlibrary_24px.PoiTouristInformationSolid_24px]: "62622",
  [HdsIconlibrary_24px.PoiTrainOutline_24px]: "62623",
  [HdsIconlibrary_24px.PoiTrainSolid_24px]: "62624",
  [HdsIconlibrary_24px.PoiTransportShinkansenJpnOutline_24px]: "62625",
  [HdsIconlibrary_24px.PoiTransportShinkansenJpnSolid_24px]: "62626",
  [HdsIconlibrary_24px.PoiTravelAgentTicketingOutline_24px]: "62627",
  [HdsIconlibrary_24px.PoiTravelAgentTicketingSolid_24px]: "62628",
  [HdsIconlibrary_24px.PoiTruckDealershipOutline_24px]: "62629",
  [HdsIconlibrary_24px.PoiTruckDealershipSolid_24px]: "62630",
  [HdsIconlibrary_24px.PoiTruckParkingOutline_24px]: "62631",
  [HdsIconlibrary_24px.PoiTruckParkingSolid_24px]: "62632",
  [HdsIconlibrary_24px.PoiTruckRepairOutline_24px]: "62633",
  [HdsIconlibrary_24px.PoiTruckRepairSolid_24px]: "62634",
  [HdsIconlibrary_24px.PoiTruckStopPlazaOutline_24px]: "62635",
  [HdsIconlibrary_24px.PoiTruckStopPlazaSolid_24px]: "62636",
  [HdsIconlibrary_24px.PoiTruckWashOutline_24px]: "62637",
  [HdsIconlibrary_24px.PoiTruckWashSolid_24px]: "62638",
  [HdsIconlibrary_24px.PoiTunnelOutline_24px]: "62639",
  [HdsIconlibrary_24px.PoiTunnelSolid_24px]: "62640",
  [HdsIconlibrary_24px.PoiWaterfallOutline_24px]: "62641",
  [HdsIconlibrary_24px.PoiWaterfallSolid_24px]: "62642",
  [HdsIconlibrary_24px.PoiWeighStationOutline_24px]: "62643",
  [HdsIconlibrary_24px.PoiWeighStationSolid_24px]: "62644",
  [HdsIconlibrary_24px.PoiZooOutline_24px]: "62645",
  [HdsIconlibrary_24px.PoiZooSolid_24px]: "62646",
  [HdsIconlibrary_24px.SocialCameraOutline_24px]: "62647",
  [HdsIconlibrary_24px.SocialCameraSolid_24px]: "62648",
  [HdsIconlibrary_24px.SocialChatOutline_24px]: "62649",
  [HdsIconlibrary_24px.SocialChatSolid_24px]: "62650",
  [HdsIconlibrary_24px.SocialEditImageOutline_24px]: "62651",
  [HdsIconlibrary_24px.SocialEditImageSolid_24px]: "62652",
  [HdsIconlibrary_24px.SocialHeartOutline_24px]: "62653",
  [HdsIconlibrary_24px.SocialHeartSolid_24px]: "62654",
  [HdsIconlibrary_24px.SocialLiveOutline_24px]: "62655",
  [HdsIconlibrary_24px.SocialLiveSolid_24px]: "62656",
  [HdsIconlibrary_24px.SocialMailOutline_24px]: "62657",
  [HdsIconlibrary_24px.SocialMailSolid_24px]: "62658",
  [HdsIconlibrary_24px.SocialMaskingOutline_24px]: "62659",
  [HdsIconlibrary_24px.SocialMaskingSolid_24px]: "62660",
  [HdsIconlibrary_24px.SocialStarOutline_24px]: "62661",
  [HdsIconlibrary_24px.SocialStarSolid_24px]: "62662",
  [HdsIconlibrary_24px.SocialStarEmptyOutline_24px]: "62663",
  [HdsIconlibrary_24px.SocialStarEmptySolid_24px]: "62664",
  [HdsIconlibrary_24px.SocialTagHeartedOutline_24px]: "62665",
  [HdsIconlibrary_24px.SocialTagHeartedSolid_24px]: "62666",
  [HdsIconlibrary_24px.SocialTelephoneOutline_24px]: "62667",
  [HdsIconlibrary_24px.SocialTelephoneSolid_24px]: "62668",
  [HdsIconlibrary_24px.SocialThumbsDownOutline_24px]: "62669",
  [HdsIconlibrary_24px.SocialThumbsDownSolid_24px]: "62670",
  [HdsIconlibrary_24px.SocialThumbsUpOutline_24px]: "62671",
  [HdsIconlibrary_24px.SocialThumbsUpSolid_24px]: "62672",
  [HdsIconlibrary_24px.StatsActivityOutline_24px]: "62673",
  [HdsIconlibrary_24px.StatsActivitySolid_24px]: "62674",
  [HdsIconlibrary_24px.StatsBarChartOutline_24px]: "62675",
  [HdsIconlibrary_24px.StatsBarChartSolid_24px]: "62676",
  [HdsIconlibrary_24px.StatsDashboardOutline_24px]: "62677",
  [HdsIconlibrary_24px.StatsDashboardSolid_24px]: "62678",
  [HdsIconlibrary_24px.StatsEastOutline_24px]: "62679",
  [HdsIconlibrary_24px.StatsEastSolid_24px]: "62680",
  [HdsIconlibrary_24px.StatsMarkerOutline_24px]: "62681",
  [HdsIconlibrary_24px.StatsMarkerSolid_24px]: "62682",
  [HdsIconlibrary_24px.StatsNorthEastOutline_24px]: "62683",
  [HdsIconlibrary_24px.StatsNorthEastSolid_24px]: "62684",
  [HdsIconlibrary_24px.StatsNorthWestOutline_24px]: "62685",
  [HdsIconlibrary_24px.StatsNorthWestSolid_24px]: "62686",
  [HdsIconlibrary_24px.StatsPieChartOutline_24px]: "62687",
  [HdsIconlibrary_24px.StatsPieChartSolid_24px]: "62688",
  [HdsIconlibrary_24px.StatsSouthEastOutline_24px]: "62689",
  [HdsIconlibrary_24px.StatsSouthEastSolid_24px]: "62690",
  [HdsIconlibrary_24px.StatsSouthWestOutline_24px]: "62691",
  [HdsIconlibrary_24px.StatsSouthWestSolid_24px]: "62692",
  [HdsIconlibrary_24px.StatsStatisticsOutline_24px]: "62693",
  [HdsIconlibrary_24px.StatsStatisticsSolid_24px]: "62694",
  [HdsIconlibrary_24px.StatsValueOutline_24px]: "62695",
  [HdsIconlibrary_24px.StatsValueSolid_24px]: "62696",
  [HdsIconlibrary_24px.StatsValueDecreaseOutline_24px]: "62697",
  [HdsIconlibrary_24px.StatsValueDecreaseSolid_24px]: "62698",
  [HdsIconlibrary_24px.StatsValueDecreaseHighOutline_24px]: "62699",
  [HdsIconlibrary_24px.StatsValueDecreaseHighSolid_24px]: "62700",
  [HdsIconlibrary_24px.StatsValueIncreaseOutline_24px]: "62701",
  [HdsIconlibrary_24px.StatsValueIncreaseSolid_24px]: "62702",
  [HdsIconlibrary_24px.StatsValueIncreaseHighOutline_24px]: "62703",
  [HdsIconlibrary_24px.StatsValueIncreaseHighSolid_24px]: "62704",
  [HdsIconlibrary_24px.StatsWestOutline_24px]: "62705",
  [HdsIconlibrary_24px.StatsWestSolid_24px]: "62706",
  [HdsIconlibrary_24px.ThirdPartyLogos_360Outline_24px]: "62707",
  [HdsIconlibrary_24px.ThirdPartyLogos_360Solid_24px]: "62708",
  [HdsIconlibrary_24px.ThirdPartyLogosAlexaOutline_24px]: "62709",
  [HdsIconlibrary_24px.ThirdPartyLogosAlexaSolid_24px]: "62710",
  [HdsIconlibrary_24px.ThirdPartyLogosAmexOutline_24px]: "62711",
  [HdsIconlibrary_24px.ThirdPartyLogosAmexSolid_24px]: "62712",
  [HdsIconlibrary_24px.ThirdPartyLogosDinersOutline_24px]: "62713",
  [HdsIconlibrary_24px.ThirdPartyLogosDinersSolid_24px]: "62714",
  [HdsIconlibrary_24px.ThirdPartyLogosDiscoverOutline_24px]: "62715",
  [HdsIconlibrary_24px.ThirdPartyLogosDiscoverSolid_24px]: "62716",
  [HdsIconlibrary_24px.ThirdPartyLogosFacebookOutline_24px]: "62717",
  [HdsIconlibrary_24px.ThirdPartyLogosFacebookSolid_24px]: "62718",
  [HdsIconlibrary_24px.ThirdPartyLogosFigmaOutline_24px]: "62719",
  [HdsIconlibrary_24px.ThirdPartyLogosFigmaSolid_24px]: "62720",
  [HdsIconlibrary_24px.ThirdPartyLogosGithubOutline_24px]: "62721",
  [HdsIconlibrary_24px.ThirdPartyLogosGithubSolid_24px]: "62722",
  [HdsIconlibrary_24px.ThirdPartyLogosGitlabOutline_24px]: "62723",
  [HdsIconlibrary_24px.ThirdPartyLogosGitlabSolid_24px]: "62724",
  [HdsIconlibrary_24px.ThirdPartyLogosInstagramOutline_24px]: "62725",
  [HdsIconlibrary_24px.ThirdPartyLogosInstagramSolid_24px]: "62726",
  [HdsIconlibrary_24px.ThirdPartyLogosLinkedinOutline_24px]: "62727",
  [HdsIconlibrary_24px.ThirdPartyLogosLinkedinSolid_24px]: "62728",
  [HdsIconlibrary_24px.ThirdPartyLogosMastercardOutline_24px]: "62729",
  [HdsIconlibrary_24px.ThirdPartyLogosMastercardSolid_24px]: "62730",
  [HdsIconlibrary_24px.ThirdPartyLogosRedditOutline_24px]: "62731",
  [HdsIconlibrary_24px.ThirdPartyLogosRedditSolid_24px]: "62732",
  [HdsIconlibrary_24px.ThirdPartyLogosStorybookOutline_24px]: "62733",
  [HdsIconlibrary_24px.ThirdPartyLogosStorybookSolid_24px]: "62734",
  [HdsIconlibrary_24px.ThirdPartyLogosTwitterOutline_24px]: "62735",
  [HdsIconlibrary_24px.ThirdPartyLogosTwitterSolid_24px]: "62736",
  [HdsIconlibrary_24px.ThirdPartyLogosVisaOutline_24px]: "62737",
  [HdsIconlibrary_24px.ThirdPartyLogosVisaSolid_24px]: "62738",
  [HdsIconlibrary_24px.ThirdPartyLogosWhat_3WordsOutline_24px]: "62739",
  [HdsIconlibrary_24px.ThirdPartyLogosWhat_3WordsSolid_24px]: "62740",
  [HdsIconlibrary_24px.ThirdPartyLogosYoutubeOutline_24px]: "62741",
  [HdsIconlibrary_24px.ThirdPartyLogosYoutubeSolid_24px]: "62742",
  [HdsIconlibrary_24px.ToolsAddCamOutline_24px]: "62743",
  [HdsIconlibrary_24px.ToolsAddCamSolid_24px]: "62744",
  [HdsIconlibrary_24px.ToolsAddMapMarkerOutline_24px]: "62745",
  [HdsIconlibrary_24px.ToolsAddMapMarkerSolid_24px]: "62746",
  [HdsIconlibrary_24px.ToolsAddPlaceOutline_24px]: "62747",
  [HdsIconlibrary_24px.ToolsAddPlaceSolid_24px]: "62748",
  [HdsIconlibrary_24px.ToolsAddRoadOutline_24px]: "62749",
  [HdsIconlibrary_24px.ToolsAddRoadSolid_24px]: "62750",
  [HdsIconlibrary_24px.ToolsAddRoadSignOutline_24px]: "62751",
  [HdsIconlibrary_24px.ToolsAddRoadSignSolid_24px]: "62752",
  [HdsIconlibrary_24px.ToolsAddShapeOutline_24px]: "62753",
  [HdsIconlibrary_24px.ToolsAddShapeSolid_24px]: "62754",
  [HdsIconlibrary_24px.ToolsBrushSelectionOutline_24px]: "62755",
  [HdsIconlibrary_24px.ToolsBrushSelectionSolid_24px]: "62756",
  [HdsIconlibrary_24px.ToolsCenterLineOutline_24px]: "62757",
  [HdsIconlibrary_24px.ToolsCenterLineSolid_24px]: "62758",
  [HdsIconlibrary_24px.ToolsColorPaletteOutline_24px]: "62759",
  [HdsIconlibrary_24px.ToolsColorPaletteSolid_24px]: "62760",
  [HdsIconlibrary_24px.ToolsCompassBOutline_24px]: "62761",
  [HdsIconlibrary_24px.ToolsCompassBSolid_24px]: "62762",
  [HdsIconlibrary_24px.ToolsConnectorOutline_24px]: "62763",
  [HdsIconlibrary_24px.ToolsConnectorSolid_24px]: "62764",
  [HdsIconlibrary_24px.ToolsCursorArrowOutline_24px]: "62765",
  [HdsIconlibrary_24px.ToolsCursorArrowSolid_24px]: "62766",
  [HdsIconlibrary_24px.ToolsCursorPointerOutline_24px]: "62767",
  [HdsIconlibrary_24px.ToolsCursorPointerSolid_24px]: "62768",
  [HdsIconlibrary_24px.ToolsCursorSelectorOutline_24px]: "62769",
  [HdsIconlibrary_24px.ToolsCursorSelectorSolid_24px]: "62770",
  [HdsIconlibrary_24px.ToolsDisconnectedOutline_24px]: "62771",
  [HdsIconlibrary_24px.ToolsDisconnectedSolid_24px]: "62772",
  [HdsIconlibrary_24px.ToolsEditCurvesOutline_24px]: "62773",
  [HdsIconlibrary_24px.ToolsEditCurvesSolid_24px]: "62774",
  [HdsIconlibrary_24px.ToolsFinetuneOutline_24px]: "62775",
  [HdsIconlibrary_24px.ToolsFinetuneSolid_24px]: "62776",
  [HdsIconlibrary_24px.ToolsFontOutline_24px]: "62777",
  [HdsIconlibrary_24px.ToolsFontSolid_24px]: "62778",
  [HdsIconlibrary_24px.ToolsGuidesOutline_24px]: "62779",
  [HdsIconlibrary_24px.ToolsGuidesSolid_24px]: "62780",
  [HdsIconlibrary_24px.ToolsJoinBevelOutline_24px]: "62781",
  [HdsIconlibrary_24px.ToolsJoinBevelSolid_24px]: "62782",
  [HdsIconlibrary_24px.ToolsJoinMiterOutline_24px]: "62783",
  [HdsIconlibrary_24px.ToolsJoinMiterSolid_24px]: "62784",
  [HdsIconlibrary_24px.ToolsJoinRoundOutline_24px]: "62785",
  [HdsIconlibrary_24px.ToolsJoinRoundSolid_24px]: "62786",
  [HdsIconlibrary_24px.ToolsLineDashedOutline_24px]: "62787",
  [HdsIconlibrary_24px.ToolsLineDashedSolid_24px]: "62788",
  [HdsIconlibrary_24px.ToolsLineSolidOutline_24px]: "62789",
  [HdsIconlibrary_24px.ToolsLineSolidSolid_24px]: "62790",
  [HdsIconlibrary_24px.ToolsLineVariousOutline_24px]: "62791",
  [HdsIconlibrary_24px.ToolsLineVariousSolid_24px]: "62792",
  [HdsIconlibrary_24px.ToolsMapPlannerOutline_24px]: "62793",
  [HdsIconlibrary_24px.ToolsMapPlannerSolid_24px]: "62794",
  [HdsIconlibrary_24px.ToolsMergeOutline_24px]: "62795",
  [HdsIconlibrary_24px.ToolsMergeSolid_24px]: "62796",
  [HdsIconlibrary_24px.ToolsNumbersOutline_24px]: "62797",
  [HdsIconlibrary_24px.ToolsNumbersSolid_24px]: "62798",
  [HdsIconlibrary_24px.ToolsOutlineOutline_24px]: "62799",
  [HdsIconlibrary_24px.ToolsOutlineSolid_24px]: "62800",
  [HdsIconlibrary_24px.ToolsOutlinePlusOutline_24px]: "62801",
  [HdsIconlibrary_24px.ToolsOutlinePlusSolid_24px]: "62802",
  [HdsIconlibrary_24px.ToolsPathOutline_24px]: "62803",
  [HdsIconlibrary_24px.ToolsPathSolid_24px]: "62804",
  [HdsIconlibrary_24px.ToolsPickerOutline_24px]: "62805",
  [HdsIconlibrary_24px.ToolsPickerSolid_24px]: "62806",
  [HdsIconlibrary_24px.ToolsPolygonOutline_24px]: "62807",
  [HdsIconlibrary_24px.ToolsPolygonSolid_24px]: "62808",
  [HdsIconlibrary_24px.ToolsPolylineOutline_24px]: "62809",
  [HdsIconlibrary_24px.ToolsPolylineSolid_24px]: "62810",
  [HdsIconlibrary_24px.ToolsRoadOutline_24px]: "62811",
  [HdsIconlibrary_24px.ToolsRoadSolid_24px]: "62812",
  [HdsIconlibrary_24px.ToolsSelectorFreeformOutline_24px]: "62813",
  [HdsIconlibrary_24px.ToolsSelectorFreeformSolid_24px]: "62814",
  [HdsIconlibrary_24px.ToolsSelectorPointerOutline_24px]: "62815",
  [HdsIconlibrary_24px.ToolsSelectorPointerSolid_24px]: "62816",
  [HdsIconlibrary_24px.ToolsSelectorPolygonOutline_24px]: "62817",
  [HdsIconlibrary_24px.ToolsSelectorPolygonSolid_24px]: "62818",
  [HdsIconlibrary_24px.ToolsShapeOutline_24px]: "62819",
  [HdsIconlibrary_24px.ToolsShapeSolid_24px]: "62820",
  [HdsIconlibrary_24px.ToolsSkipPointOutline_24px]: "62821",
  [HdsIconlibrary_24px.ToolsSkipPointSolid_24px]: "62822",
  [HdsIconlibrary_24px.ToolsSplitObjectOutline_24px]: "62823",
  [HdsIconlibrary_24px.ToolsSplitObjectSolid_24px]: "62824",
  [HdsIconlibrary_24px.ToolsTextOutline_24px]: "62825",
  [HdsIconlibrary_24px.ToolsTextSolid_24px]: "62826",
  [HdsIconlibrary_24px.ToolsTiePointOutline_24px]: "62827",
  [HdsIconlibrary_24px.ToolsTiePointSolid_24px]: "62828",
  [HdsIconlibrary_24px.ToolsTunerOutline_24px]: "62829",
  [HdsIconlibrary_24px.ToolsTunerSolid_24px]: "62830",
  [HdsIconlibrary_24px.ToolsVectorPointOutline_24px]: "62831",
  [HdsIconlibrary_24px.ToolsVectorPointSolid_24px]: "62832",
  [HdsIconlibrary_24px.ToolsWrenchOutline_24px]: "62833",
  [HdsIconlibrary_24px.ToolsWrenchSolid_24px]: "62834",
  [HdsIconlibrary_24px.TravelTransportTrackingAccidentCarOutline_24px]: "62835",
  [HdsIconlibrary_24px.TravelTransportTrackingAccidentCarSolid_24px]: "62836",
  [HdsIconlibrary_24px.TravelTransportTrackingAirportOutline_24px]: "62837",
  [HdsIconlibrary_24px.TravelTransportTrackingAirportSolid_24px]: "62838",
  [HdsIconlibrary_24px.TravelTransportTrackingAmbulanceOutline_24px]: "62839",
  [HdsIconlibrary_24px.TravelTransportTrackingAmbulanceSolid_24px]: "62840",
  [HdsIconlibrary_24px.TravelTransportTrackingArrivalAirportOutline_24px]: "62841",
  [HdsIconlibrary_24px.TravelTransportTrackingArrivalAirportSolid_24px]: "62842",
  [HdsIconlibrary_24px.TravelTransportTrackingAttentionOutline_24px]: "62843",
  [HdsIconlibrary_24px.TravelTransportTrackingAttentionSolid_24px]: "62844",
  [HdsIconlibrary_24px.TravelTransportTrackingAutoCaravanOutline_24px]: "62845",
  [HdsIconlibrary_24px.TravelTransportTrackingAutoCaravanSolid_24px]: "62846",
  [HdsIconlibrary_24px.TravelTransportTrackingAutoTrailerOutline_24px]: "62847",
  [HdsIconlibrary_24px.TravelTransportTrackingAutoTrailerSolid_24px]: "62848",
  [HdsIconlibrary_24px.TravelTransportTrackingBeamLightOutline_24px]: "62849",
  [HdsIconlibrary_24px.TravelTransportTrackingBeamLightSolid_24px]: "62850",
  [HdsIconlibrary_24px.TravelTransportTrackingBicycleOutline_24px]: "62851",
  [HdsIconlibrary_24px.TravelTransportTrackingBicycleSolid_24px]: "62852",
  [HdsIconlibrary_24px.TravelTransportTrackingBicyclePaceOutline_24px]: "62853",
  [HdsIconlibrary_24px.TravelTransportTrackingBicyclePaceSolid_24px]: "62854",
  [HdsIconlibrary_24px.TravelTransportTrackingBoatTrailerOutline_24px]: "62855",
  [HdsIconlibrary_24px.TravelTransportTrackingBoatTrailerSolid_24px]: "62856",
  [HdsIconlibrary_24px.TravelTransportTrackingBumpsOutline_24px]: "62857",
  [HdsIconlibrary_24px.TravelTransportTrackingBumpsSolid_24px]: "62858",
  [HdsIconlibrary_24px.TravelTransportTrackingBusOutline_24px]: "62859",
  [HdsIconlibrary_24px.TravelTransportTrackingBusSolid_24px]: "62860",
  [HdsIconlibrary_24px.TravelTransportTrackingBusRapidOutline_24px]: "62861",
  [HdsIconlibrary_24px.TravelTransportTrackingBusRapidSolid_24px]: "62862",
  [HdsIconlibrary_24px.TravelTransportTrackingCableWayOutline_24px]: "62863",
  [HdsIconlibrary_24px.TravelTransportTrackingCableWaySolid_24px]: "62864",
  [HdsIconlibrary_24px.TravelTransportTrackingCarFuelAltOutline_24px]: "62865",
  [HdsIconlibrary_24px.TravelTransportTrackingCarFuelAltSolid_24px]: "62866",
  [HdsIconlibrary_24px.TravelTransportTrackingCarRentalOutline_24px]: "62867",
  [HdsIconlibrary_24px.TravelTransportTrackingCarRentalSolid_24px]: "62868",
  [HdsIconlibrary_24px.TravelTransportTrackingCarRigOutline_24px]: "62869",
  [HdsIconlibrary_24px.TravelTransportTrackingCarRigSolid_24px]: "62870",
  [HdsIconlibrary_24px.TravelTransportTrackingCarWifiOffOutline_24px]: "62871",
  [HdsIconlibrary_24px.TravelTransportTrackingCarWifiOffSolid_24px]: "62872",
  [HdsIconlibrary_24px.TravelTransportTrackingCarWifiOnOutline_24px]: "62873",
  [HdsIconlibrary_24px.TravelTransportTrackingCarWifiOnSolid_24px]: "62874",
  [HdsIconlibrary_24px.TravelTransportTrackingCaravanOutline_24px]: "62875",
  [HdsIconlibrary_24px.TravelTransportTrackingCaravanSolid_24px]: "62876",
  [HdsIconlibrary_24px.TravelTransportTrackingChargingOutline_24px]: "62877",
  [HdsIconlibrary_24px.TravelTransportTrackingChargingSolid_24px]: "62878",
  [HdsIconlibrary_24px.TravelTransportTrackingClosureOutline_24px]: "62879",
  [HdsIconlibrary_24px.TravelTransportTrackingClosureSolid_24px]: "62880",
  [HdsIconlibrary_24px.TravelTransportTrackingCoachOutline_24px]: "62881",
  [HdsIconlibrary_24px.TravelTransportTrackingCoachSolid_24px]: "62882",
  [HdsIconlibrary_24px.TravelTransportTrackingDeliveryVanOutline_24px]: "62883",
  [HdsIconlibrary_24px.TravelTransportTrackingDeliveryVanSolid_24px]: "62884",
  [HdsIconlibrary_24px.TravelTransportTrackingDepartureAirportOutline_24px]: "62885",
  [HdsIconlibrary_24px.TravelTransportTrackingDepartureAirportSolid_24px]: "62886",
  [HdsIconlibrary_24px.TravelTransportTrackingDestinationOutline_24px]: "62887",
  [HdsIconlibrary_24px.TravelTransportTrackingDestinationSolid_24px]: "62888",
  [HdsIconlibrary_24px.TravelTransportTrackingDiagonalOutline_24px]: "62889",
  [HdsIconlibrary_24px.TravelTransportTrackingDiagonalSolid_24px]: "62890",
  [HdsIconlibrary_24px.TravelTransportTrackingDirectionsOutline_24px]: "62891",
  [HdsIconlibrary_24px.TravelTransportTrackingDirectionsSolid_24px]: "62892",
  [HdsIconlibrary_24px.TravelTransportTrackingDisabledVehicleOutline_24px]: "62893",
  [HdsIconlibrary_24px.TravelTransportTrackingDisabledVehicleSolid_24px]: "62894",
  [HdsIconlibrary_24px.TravelTransportTrackingDrivingOutline_24px]: "62895",
  [HdsIconlibrary_24px.TravelTransportTrackingDrivingSolid_24px]: "62896",
  [HdsIconlibrary_24px.TravelTransportTrackingDrivingOffOutline_24px]: "62897",
  [HdsIconlibrary_24px.TravelTransportTrackingDrivingOffSolid_24px]: "62898",
  [HdsIconlibrary_24px.TravelTransportTrackingDynamicRoutingOutline_24px]: "62899",
  [HdsIconlibrary_24px.TravelTransportTrackingDynamicRoutingSolid_24px]: "62900",
  [HdsIconlibrary_24px.TravelTransportTrackingEvRangeOutline_24px]: "62901",
  [HdsIconlibrary_24px.TravelTransportTrackingEvRangeSolid_24px]: "62902",
  [HdsIconlibrary_24px.TravelTransportTrackingFerryOutline_24px]: "62903",
  [HdsIconlibrary_24px.TravelTransportTrackingFerrySolid_24px]: "62904",
  [HdsIconlibrary_24px.TravelTransportTrackingFerryOffOutline_24px]: "62905",
  [HdsIconlibrary_24px.TravelTransportTrackingFerryOffSolid_24px]: "62906",
  [HdsIconlibrary_24px.TravelTransportTrackingFlightMonitorOutline_24px]: "62907",
  [HdsIconlibrary_24px.TravelTransportTrackingFlightMonitorSolid_24px]: "62908",
  [HdsIconlibrary_24px.TravelTransportTrackingFullContainerLoadOutline_24px]: "62909",
  [HdsIconlibrary_24px.TravelTransportTrackingFullContainerLoadSolid_24px]: "62910",
  [HdsIconlibrary_24px.TravelTransportTrackingFullTruckLoadOutline_24px]: "62911",
  [HdsIconlibrary_24px.TravelTransportTrackingFullTruckLoadSolid_24px]: "62912",
  [HdsIconlibrary_24px.TravelTransportTrackingGeofenceOutline_24px]: "62913",
  [HdsIconlibrary_24px.TravelTransportTrackingGeofenceSolid_24px]: "62914",
  [HdsIconlibrary_24px.TravelTransportTrackingHandsfreeDrivingOutline_24px]: "62915",
  [HdsIconlibrary_24px.TravelTransportTrackingHandsfreeDrivingSolid_24px]: "62916",
  [HdsIconlibrary_24px.TravelTransportTrackingHeadLightOutline_24px]: "62917",
  [HdsIconlibrary_24px.TravelTransportTrackingHeadLightSolid_24px]: "62918",
  [HdsIconlibrary_24px.TravelTransportTrackingHeavyMachineryOutline_24px]: "62919",
  [HdsIconlibrary_24px.TravelTransportTrackingHeavyMachinerySolid_24px]: "62920",
  [HdsIconlibrary_24px.TravelTransportTrackingHeightOutline_24px]: "62921",
  [HdsIconlibrary_24px.TravelTransportTrackingHeightSolid_24px]: "62922",
  [HdsIconlibrary_24px.TravelTransportTrackingHighwaysOutline_24px]: "62923",
  [HdsIconlibrary_24px.TravelTransportTrackingHighwaysSolid_24px]: "62924",
  [HdsIconlibrary_24px.TravelTransportTrackingInclinedOutline_24px]: "62925",
  [HdsIconlibrary_24px.TravelTransportTrackingInclinedSolid_24px]: "62926",
  [HdsIconlibrary_24px.TravelTransportTrackingJourneyOutline_24px]: "62927",
  [HdsIconlibrary_24px.TravelTransportTrackingJourneySolid_24px]: "62928",
  [HdsIconlibrary_24px.TravelTransportTrackingLaneRestrictionOutline_24px]: "62929",
  [HdsIconlibrary_24px.TravelTransportTrackingLaneRestrictionSolid_24px]: "62930",
  [HdsIconlibrary_24px.TravelTransportTrackingLessContainerLoadOutline_24px]: "62931",
  [HdsIconlibrary_24px.TravelTransportTrackingLessContainerLoadSolid_24px]: "62932",
  [HdsIconlibrary_24px.TravelTransportTrackingLessTruckLoadOutline_24px]: "62933",
  [HdsIconlibrary_24px.TravelTransportTrackingLessTruckLoadSolid_24px]: "62934",
  [HdsIconlibrary_24px.TravelTransportTrackingLightRailOutline_24px]: "62935",
  [HdsIconlibrary_24px.TravelTransportTrackingLightRailSolid_24px]: "62936",
  [HdsIconlibrary_24px.TravelTransportTrackingLightrailOutline_24px]: "62937",
  [HdsIconlibrary_24px.TravelTransportTrackingLightrailSolid_24px]: "62938",
  [HdsIconlibrary_24px.TravelTransportTrackingLocationTrackingOutline_24px]: "62939",
  [HdsIconlibrary_24px.TravelTransportTrackingLocationTrackingSolid_24px]: "62940",
  [HdsIconlibrary_24px.TravelTransportTrackingMassTransitOutline_24px]: "62941",
  [HdsIconlibrary_24px.TravelTransportTrackingMassTransitSolid_24px]: "62942",
  [HdsIconlibrary_24px.TravelTransportTrackingMaxHeightOutline_24px]: "62943",
  [HdsIconlibrary_24px.TravelTransportTrackingMaxHeightSolid_24px]: "62944",
  [HdsIconlibrary_24px.TravelTransportTrackingMaxWidthOutline_24px]: "62945",
  [HdsIconlibrary_24px.TravelTransportTrackingMaxWidthSolid_24px]: "62946",
  [HdsIconlibrary_24px.TravelTransportTrackingMetroOutline_24px]: "62947",
  [HdsIconlibrary_24px.TravelTransportTrackingMetroSolid_24px]: "62948",
  [HdsIconlibrary_24px.TravelTransportTrackingMonorailOutline_24px]: "62949",
  [HdsIconlibrary_24px.TravelTransportTrackingMonorailSolid_24px]: "62950",
  [HdsIconlibrary_24px.TravelTransportTrackingMotorcycleOutline_24px]: "62951",
  [HdsIconlibrary_24px.TravelTransportTrackingMotorcycleSolid_24px]: "62952",
  [HdsIconlibrary_24px.TravelTransportTrackingMotorhomeOutline_24px]: "62953",
  [HdsIconlibrary_24px.TravelTransportTrackingMotorhomeSolid_24px]: "62954",
  [HdsIconlibrary_24px.TravelTransportTrackingMotorscooterOutline_24px]: "62955",
  [HdsIconlibrary_24px.TravelTransportTrackingMotorscooterSolid_24px]: "62956",
  [HdsIconlibrary_24px.TravelTransportTrackingMultimodalOutline_24px]: "62957",
  [HdsIconlibrary_24px.TravelTransportTrackingMultimodalSolid_24px]: "62958",
  [HdsIconlibrary_24px.TravelTransportTrackingNavigationOutline_24px]: "62959",
  [HdsIconlibrary_24px.TravelTransportTrackingNavigationSolid_24px]: "62960",
  [HdsIconlibrary_24px.TravelTransportTrackingNoContainerLoadOutline_24px]: "62961",
  [HdsIconlibrary_24px.TravelTransportTrackingNoContainerLoadSolid_24px]: "62962",
  [HdsIconlibrary_24px.TravelTransportTrackingNoTruckLoadOutline_24px]: "62963",
  [HdsIconlibrary_24px.TravelTransportTrackingNoTruckLoadSolid_24px]: "62964",
  [HdsIconlibrary_24px.TravelTransportTrackingPlannedTourOutline_24px]: "62965",
  [HdsIconlibrary_24px.TravelTransportTrackingPlannedTourSolid_24px]: "62966",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeAOutline_24px]: "62967",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeASolid_24px]: "62968",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeBNema_14_50Outline_24px]: "62969",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeBNema_14_50Solid_24px]: "62970",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeBNema_5_15Outline_24px]: "62971",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeBNema_5_15Solid_24px]: "62972",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeCOutline_24px]: "62973",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeCSolid_24px]: "62974",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeChademoOutline_24px]: "62975",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeChademoSolid_24px]: "62976",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeEOutline_24px]: "62977",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeESolid_24px]: "62978",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeFOutline_24px]: "62979",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeFSolid_24px]: "62980",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeGOutline_24px]: "62981",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeGSolid_24px]: "62982",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeIOutline_24px]: "62983",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeISolid_24px]: "62984",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeIndustrialOutline_24px]: "62985",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeIndustrialSolid_24px]: "62986",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeJOutline_24px]: "62987",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeJSolid_24px]: "62988",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeJ1772Outline_24px]: "62989",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeJ1772Solid_24px]: "62990",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeJ1772ComboOutline_24px]: "62991",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeJ1772ComboSolid_24px]: "62992",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeMarechalOutline_24px]: "62993",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeMarechalSolid_24px]: "62994",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeMennekesOutline_24px]: "62995",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeMennekesSolid_24px]: "62996",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeMennekesComboOutline_24px]: "62997",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeMennekesComboSolid_24px]: "62998",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeTeslaOutline_24px]: "62999",
  [HdsIconlibrary_24px.TravelTransportTrackingPlugTypeTeslaSolid_24px]: "63000",
  [HdsIconlibrary_24px.TravelTransportTrackingRailHighspeedOutline_24px]: "63001",
  [HdsIconlibrary_24px.TravelTransportTrackingRailHighspeedSolid_24px]: "63002",
  [HdsIconlibrary_24px.TravelTransportTrackingRailHighspeedOffOutline_24px]: "63003",
  [HdsIconlibrary_24px.TravelTransportTrackingRailHighspeedOffSolid_24px]: "63004",
  [HdsIconlibrary_24px.TravelTransportTrackingRailIntercityOutline_24px]: "63005",
  [HdsIconlibrary_24px.TravelTransportTrackingRailIntercitySolid_24px]: "63006",
  [HdsIconlibrary_24px.TravelTransportTrackingRailLocalOutline_24px]: "63007",
  [HdsIconlibrary_24px.TravelTransportTrackingRailLocalSolid_24px]: "63008",
  [HdsIconlibrary_24px.TravelTransportTrackingRailRegionalOutline_24px]: "63009",
  [HdsIconlibrary_24px.TravelTransportTrackingRailRegionalSolid_24px]: "63010",
  [HdsIconlibrary_24px.TravelTransportTrackingRedLightCameraOutline_24px]: "63011",
  [HdsIconlibrary_24px.TravelTransportTrackingRedLightCameraSolid_24px]: "63012",
  [HdsIconlibrary_24px.TravelTransportTrackingRideHailingOutline_24px]: "63013",
  [HdsIconlibrary_24px.TravelTransportTrackingRideHailingSolid_24px]: "63014",
  [HdsIconlibrary_24px.TravelTransportTrackingRideshareOutline_24px]: "63015",
  [HdsIconlibrary_24px.TravelTransportTrackingRideshareSolid_24px]: "63016",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadClosureOutline_24px]: "63017",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadClosureSolid_24px]: "63018",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadHazardOutline_24px]: "63019",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadHazardSolid_24px]: "63020",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadTollsOutline_24px]: "63021",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadTollsSolid_24px]: "63022",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadTollsOffOutline_24px]: "63023",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadTollsOffSolid_24px]: "63024",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadUnpavedOutline_24px]: "63025",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadUnpavedSolid_24px]: "63026",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadUnpavedBicycleOutline_24px]: "63027",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadUnpavedBicycleSolid_24px]: "63028",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadUnpavedMotorcycleOutline_24px]: "63029",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadUnpavedMotorcycleSolid_24px]: "63030",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadUnpavedOffOutline_24px]: "63031",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadUnpavedOffSolid_24px]: "63032",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadsideJpOutline_24px]: "63033",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadsideJpSolid_24px]: "63034",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadworksOutline_24px]: "63035",
  [HdsIconlibrary_24px.TravelTransportTrackingRoadworksSolid_24px]: "63036",
  [HdsIconlibrary_24px.TravelTransportTrackingRouteOutline_24px]: "63037",
  [HdsIconlibrary_24px.TravelTransportTrackingRouteSolid_24px]: "63038",
  [HdsIconlibrary_24px.TravelTransportTrackingRunnerPaceOutline_24px]: "63039",
  [HdsIconlibrary_24px.TravelTransportTrackingRunnerPaceSolid_24px]: "63040",
  [HdsIconlibrary_24px.TravelTransportTrackingSchoolZoneUsOutline_24px]: "63041",
  [HdsIconlibrary_24px.TravelTransportTrackingSchoolZoneUsSolid_24px]: "63042",
  [HdsIconlibrary_24px.TravelTransportTrackingScooterOutline_24px]: "63043",
  [HdsIconlibrary_24px.TravelTransportTrackingScooterSolid_24px]: "63044",
  [HdsIconlibrary_24px.TravelTransportTrackingSecurityCameraOutline_24px]: "63045",
  [HdsIconlibrary_24px.TravelTransportTrackingSecurityCameraSolid_24px]: "63046",
  [HdsIconlibrary_24px.TravelTransportTrackingSemiTrailerOutline_24px]: "63047",
  [HdsIconlibrary_24px.TravelTransportTrackingSemiTrailerSolid_24px]: "63048",
  [HdsIconlibrary_24px.TravelTransportTrackingServiceDeskOutline_24px]: "63049",
  [HdsIconlibrary_24px.TravelTransportTrackingServiceDeskSolid_24px]: "63050",
  [HdsIconlibrary_24px.TravelTransportTrackingShipmentOutline_24px]: "63051",
  [HdsIconlibrary_24px.TravelTransportTrackingShipmentSolid_24px]: "63052",
  [HdsIconlibrary_24px.TravelTransportTrackingSpeedCameraOutline_24px]: "63053",
  [HdsIconlibrary_24px.TravelTransportTrackingSpeedCameraSolid_24px]: "63054",
  [HdsIconlibrary_24px.TravelTransportTrackingSpeedLimitOutline_24px]: "63055",
  [HdsIconlibrary_24px.TravelTransportTrackingSpeedLimitSolid_24px]: "63056",
  [HdsIconlibrary_24px.TravelTransportTrackingSpeedZoneOutline_24px]: "63057",
  [HdsIconlibrary_24px.TravelTransportTrackingSpeedZoneSolid_24px]: "63058",
  [HdsIconlibrary_24px.TravelTransportTrackingSpeedalertOutline_24px]: "63059",
  [HdsIconlibrary_24px.TravelTransportTrackingSpeedalertSolid_24px]: "63060",
  [HdsIconlibrary_24px.TravelTransportTrackingSpeedalertOffOutline_24px]: "63061",
  [HdsIconlibrary_24px.TravelTransportTrackingSpeedalertOffSolid_24px]: "63062",
  [HdsIconlibrary_24px.TravelTransportTrackingTaxiOutline_24px]: "63063",
  [HdsIconlibrary_24px.TravelTransportTrackingTaxiSolid_24px]: "63064",
  [HdsIconlibrary_24px.TravelTransportTrackingTaxiOffOutline_24px]: "63065",
  [HdsIconlibrary_24px.TravelTransportTrackingTaxiOffSolid_24px]: "63066",
  [HdsIconlibrary_24px.TravelTransportTrackingTicketOutline_24px]: "63067",
  [HdsIconlibrary_24px.TravelTransportTrackingTicketSolid_24px]: "63068",
  [HdsIconlibrary_24px.TravelTransportTrackingTourOutline_24px]: "63069",
  [HdsIconlibrary_24px.TravelTransportTrackingTourSolid_24px]: "63070",
  [HdsIconlibrary_24px.TravelTransportTrackingTrackerOutline_24px]: "63071",
  [HdsIconlibrary_24px.TravelTransportTrackingTrackerSolid_24px]: "63072",
  [HdsIconlibrary_24px.TravelTransportTrackingTrafficOutline_24px]: "63073",
  [HdsIconlibrary_24px.TravelTransportTrackingTrafficSolid_24px]: "63074",
  [HdsIconlibrary_24px.TravelTransportTrackingTrafficLightsOutline_24px]: "63075",
  [HdsIconlibrary_24px.TravelTransportTrackingTrafficLightsSolid_24px]: "63076",
  [HdsIconlibrary_24px.TravelTransportTrackingTrafficOffOutline_24px]: "63077",
  [HdsIconlibrary_24px.TravelTransportTrackingTrafficOffSolid_24px]: "63078",
  [HdsIconlibrary_24px.TravelTransportTrackingTrailerOutline_24px]: "63079",
  [HdsIconlibrary_24px.TravelTransportTrackingTrailerSolid_24px]: "63080",
  [HdsIconlibrary_24px.TravelTransportTrackingTrainOutline_24px]: "63081",
  [HdsIconlibrary_24px.TravelTransportTrackingTrainSolid_24px]: "63082",
  [HdsIconlibrary_24px.TravelTransportTrackingTramOutline_24px]: "63083",
  [HdsIconlibrary_24px.TravelTransportTrackingTramSolid_24px]: "63084",
  [HdsIconlibrary_24px.TravelTransportTrackingTruckOutline_24px]: "63085",
  [HdsIconlibrary_24px.TravelTransportTrackingTruckSolid_24px]: "63086",
  [HdsIconlibrary_24px.TravelTransportTrackingTruckAxleOutline_24px]: "63087",
  [HdsIconlibrary_24px.TravelTransportTrackingTruckAxleSolid_24px]: "63088",
  [HdsIconlibrary_24px.TravelTransportTrackingUnpavedRoadPedestrianOutline_24px]: "63089",
  [HdsIconlibrary_24px.TravelTransportTrackingUnpavedRoadPedestrianSolid_24px]: "63090",
  [HdsIconlibrary_24px.TravelTransportTrackingUnpavedRoadTruckOutline_24px]: "63091",
  [HdsIconlibrary_24px.TravelTransportTrackingUnpavedRoadTruckSolid_24px]: "63092",
  [HdsIconlibrary_24px.TravelTransportTrackingWaitPedestrianOutline_24px]: "63093",
  [HdsIconlibrary_24px.TravelTransportTrackingWaitPedestrianSolid_24px]: "63094",
  [HdsIconlibrary_24px.TravelTransportTrackingWalkingOutline_24px]: "63095",
  [HdsIconlibrary_24px.TravelTransportTrackingWalkingSolid_24px]: "63096",
  [HdsIconlibrary_24px.TravelTransportTrackingWalkingOffOutline_24px]: "63097",
  [HdsIconlibrary_24px.TravelTransportTrackingWalkingOffSolid_24px]: "63098",
  [HdsIconlibrary_24px.TravelTransportTrackingWidthOutline_24px]: "63099",
  [HdsIconlibrary_24px.TravelTransportTrackingWidthSolid_24px]: "63100",
  [HdsIconlibrary_24px.WeatherClearNightOutline_24px]: "63101",
  [HdsIconlibrary_24px.WeatherClearNightSolid_24px]: "63102",
  [HdsIconlibrary_24px.WeatherCloudyDayOutline_24px]: "63103",
  [HdsIconlibrary_24px.WeatherCloudyDaySolid_24px]: "63104",
  [HdsIconlibrary_24px.WeatherCloudyNightOutline_24px]: "63105",
  [HdsIconlibrary_24px.WeatherCloudyNightSolid_24px]: "63106",
  [HdsIconlibrary_24px.WeatherFloodOutline_24px]: "63107",
  [HdsIconlibrary_24px.WeatherFloodSolid_24px]: "63108",
  [HdsIconlibrary_24px.WeatherFogOutline_24px]: "63109",
  [HdsIconlibrary_24px.WeatherFogSolid_24px]: "63110",
  [HdsIconlibrary_24px.WeatherHurricaneOutline_24px]: "63111",
  [HdsIconlibrary_24px.WeatherHurricaneSolid_24px]: "63112",
  [HdsIconlibrary_24px.WeatherOvercastOutline_24px]: "63113",
  [HdsIconlibrary_24px.WeatherOvercastSolid_24px]: "63114",
  [HdsIconlibrary_24px.WeatherRainOutline_24px]: "63115",
  [HdsIconlibrary_24px.WeatherRainSolid_24px]: "63116",
  [HdsIconlibrary_24px.WeatherRainFreezingOutline_24px]: "63117",
  [HdsIconlibrary_24px.WeatherRainFreezingSolid_24px]: "63118",
  [HdsIconlibrary_24px.WeatherRainSnowOutline_24px]: "63119",
  [HdsIconlibrary_24px.WeatherRainSnowSolid_24px]: "63120",
  [HdsIconlibrary_24px.WeatherShowerDayOutline_24px]: "63121",
  [HdsIconlibrary_24px.WeatherShowerDaySolid_24px]: "63122",
  [HdsIconlibrary_24px.WeatherShowerNightOutline_24px]: "63123",
  [HdsIconlibrary_24px.WeatherShowerNightSolid_24px]: "63124",
  [HdsIconlibrary_24px.WeatherSmogOutline_24px]: "63125",
  [HdsIconlibrary_24px.WeatherSmogSolid_24px]: "63126",
  [HdsIconlibrary_24px.WeatherSnowfallOutline_24px]: "63127",
  [HdsIconlibrary_24px.WeatherSnowfallSolid_24px]: "63128",
  [HdsIconlibrary_24px.WeatherStormOutline_24px]: "63129",
  [HdsIconlibrary_24px.WeatherStormSolid_24px]: "63130",
  [HdsIconlibrary_24px.WeatherStormyDayOutline_24px]: "63131",
  [HdsIconlibrary_24px.WeatherStormyDaySolid_24px]: "63132",
  [HdsIconlibrary_24px.WeatherStormyNightOutline_24px]: "63133",
  [HdsIconlibrary_24px.WeatherStormyNightSolid_24px]: "63134",
  [HdsIconlibrary_24px.WeatherWeatherClearDayOutline_24px]: "63135",
  [HdsIconlibrary_24px.WeatherWeatherClearDaySolid_24px]: "63136",
  [HdsIconlibrary_24px.WeatherWindyOutline_24px]: "63137",
  [HdsIconlibrary_24px.WeatherWindySolid_24px]: "63138"
};

// node_modules/@lit/reactive-element/development/decorators/custom-element.js
var legacyCustomElement = (tagName, clazz) => {
  customElements.define(tagName, clazz);
  return clazz;
};
var standardCustomElement = (tagName, descriptor) => {
  const { kind, elements } = descriptor;
  return {
    kind,
    elements,
    // This callback is called once the class is otherwise fully defined
    finisher(clazz) {
      customElements.define(tagName, clazz);
    }
  };
};
var customElement2 = (tagName) => (classOrDescriptor) => typeof classOrDescriptor === "function" ? legacyCustomElement(tagName, classOrDescriptor) : standardCustomElement(tagName, classOrDescriptor);

// node_modules/@lit/reactive-element/development/decorators/property.js
var standardProperty = (options2, element) => {
  if (element.kind === "method" && element.descriptor && !("value" in element.descriptor)) {
    return {
      ...element,
      finisher(clazz) {
        clazz.createProperty(element.key, options2);
      }
    };
  } else {
    return {
      kind: "field",
      key: Symbol(),
      placement: "own",
      descriptor: {},
      // store the original key so subsequent decorators have access to it.
      originalKey: element.key,
      // When @babel/plugin-proposal-decorators implements initializers,
      // do this instead of the initializer below. See:
      // https://github.com/babel/babel/issues/9260 extras: [
      //   {
      //     kind: 'initializer',
      //     placement: 'own',
      //     initializer: descriptor.initializer,
      //   }
      // ],
      initializer() {
        if (typeof element.initializer === "function") {
          this[element.key] = element.initializer.call(this);
        }
      },
      finisher(clazz) {
        clazz.createProperty(element.key, options2);
      }
    };
  }
};
var legacyProperty = (options2, proto, name) => {
  proto.constructor.createProperty(name, options2);
};
function property(options2) {
  return (protoOrDescriptor, name) => name !== void 0 ? legacyProperty(options2, protoOrDescriptor, name) : standardProperty(options2, protoOrDescriptor);
}

// node_modules/@lit/reactive-element/development/decorators/state.js
function state(options2) {
  return property({
    ...options2,
    state: true
  });
}

// node_modules/@lit/reactive-element/development/decorators/base.js
var decorateProperty = ({ finisher, descriptor }) => (protoOrDescriptor, name) => {
  var _a6;
  if (name !== void 0) {
    const ctor = protoOrDescriptor.constructor;
    if (descriptor !== void 0) {
      Object.defineProperty(protoOrDescriptor, name, descriptor(name));
    }
    finisher === null || finisher === void 0 ? void 0 : finisher(ctor, name);
  } else {
    const key = (
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      (_a6 = protoOrDescriptor.originalKey) !== null && _a6 !== void 0 ? _a6 : protoOrDescriptor.key
    );
    const info = descriptor != void 0 ? {
      kind: "method",
      placement: "prototype",
      key,
      descriptor: descriptor(protoOrDescriptor.key)
    } : { ...protoOrDescriptor, key };
    if (finisher != void 0) {
      info.finisher = function(ctor) {
        finisher(ctor, key);
      };
    }
    return info;
  }
};

// node_modules/@lit/reactive-element/development/decorators/query.js
function query(selector, cache) {
  return decorateProperty({
    descriptor: (name) => {
      const descriptor = {
        get() {
          var _a6, _b5;
          return (_b5 = (_a6 = this.renderRoot) === null || _a6 === void 0 ? void 0 : _a6.querySelector(selector)) !== null && _b5 !== void 0 ? _b5 : null;
        },
        enumerable: true,
        configurable: true
      };
      if (cache) {
        const key = typeof name === "symbol" ? Symbol() : `__${name}`;
        descriptor.get = function() {
          var _a6, _b5;
          if (this[key] === void 0) {
            this[key] = (_b5 = (_a6 = this.renderRoot) === null || _a6 === void 0 ? void 0 : _a6.querySelector(selector)) !== null && _b5 !== void 0 ? _b5 : null;
          }
          return this[key];
        };
      }
      return descriptor;
    }
  });
}

// node_modules/@lit/reactive-element/development/decorators/query-all.js
function queryAll(selector) {
  return decorateProperty({
    descriptor: (_name) => ({
      get() {
        var _a6, _b5;
        return (_b5 = (_a6 = this.renderRoot) === null || _a6 === void 0 ? void 0 : _a6.querySelectorAll(selector)) !== null && _b5 !== void 0 ? _b5 : [];
      },
      enumerable: true,
      configurable: true
    })
  });
}

// node_modules/@lit/reactive-element/development/decorators/query-assigned-elements.js
var _a4;
var NODE_MODE4 = false;
var global5 = NODE_MODE4 ? globalThis : window;
var slotAssignedElements = ((_a4 = global5.HTMLSlotElement) === null || _a4 === void 0 ? void 0 : _a4.prototype.assignedElements) != null ? (slot, opts) => slot.assignedElements(opts) : (slot, opts) => slot.assignedNodes(opts).filter((node2) => node2.nodeType === Node.ELEMENT_NODE);
function queryAssignedElements(options2) {
  const { slot, selector } = options2 !== null && options2 !== void 0 ? options2 : {};
  return decorateProperty({
    descriptor: (_name) => ({
      get() {
        var _a6;
        const slotSelector = `slot${slot ? `[name=${slot}]` : ":not([name])"}`;
        const slotEl = (_a6 = this.renderRoot) === null || _a6 === void 0 ? void 0 : _a6.querySelector(slotSelector);
        const elements = slotEl != null ? slotAssignedElements(slotEl, options2) : [];
        if (selector) {
          return elements.filter((node2) => node2.matches(selector));
        }
        return elements;
      },
      enumerable: true,
      configurable: true
    })
  });
}

// node_modules/@lit/reactive-element/development/decorators/query-assigned-nodes.js
function queryAssignedNodes(slotOrOptions, flatten, selector) {
  let slot = slotOrOptions;
  let assignedNodesOptions;
  if (typeof slotOrOptions === "object") {
    slot = slotOrOptions.slot;
    assignedNodesOptions = slotOrOptions;
  } else {
    assignedNodesOptions = { flatten };
  }
  if (selector) {
    return queryAssignedElements({
      slot,
      flatten,
      selector
    });
  }
  return decorateProperty({
    descriptor: (_name) => ({
      get() {
        var _a6, _b5;
        const slotSelector = `slot${slot ? `[name=${slot}]` : ":not([name])"}`;
        const slotEl = (_a6 = this.renderRoot) === null || _a6 === void 0 ? void 0 : _a6.querySelector(slotSelector);
        return (_b5 = slotEl === null || slotEl === void 0 ? void 0 : slotEl.assignedNodes(assignedNodesOptions)) !== null && _b5 !== void 0 ? _b5 : [];
      },
      enumerable: true,
      configurable: true
    })
  });
}

// node_modules/lit-html/development/directives/class-map.js
var ClassMapDirective = class extends Directive {
  constructor(partInfo) {
    var _a6;
    super(partInfo);
    if (partInfo.type !== PartType.ATTRIBUTE || partInfo.name !== "class" || ((_a6 = partInfo.strings) === null || _a6 === void 0 ? void 0 : _a6.length) > 2) {
      throw new Error("`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.");
    }
  }
  render(classInfo) {
    return " " + Object.keys(classInfo).filter((key) => classInfo[key]).join(" ") + " ";
  }
  update(part, [classInfo]) {
    var _a6, _b5;
    if (this._previousClasses === void 0) {
      this._previousClasses = /* @__PURE__ */ new Set();
      if (part.strings !== void 0) {
        this._staticClasses = new Set(part.strings.join(" ").split(/\s/).filter((s) => s !== ""));
      }
      for (const name in classInfo) {
        if (classInfo[name] && !((_a6 = this._staticClasses) === null || _a6 === void 0 ? void 0 : _a6.has(name))) {
          this._previousClasses.add(name);
        }
      }
      return this.render(classInfo);
    }
    const classList = part.element.classList;
    this._previousClasses.forEach((name) => {
      if (!(name in classInfo)) {
        classList.remove(name);
        this._previousClasses.delete(name);
      }
    });
    for (const name in classInfo) {
      const value = !!classInfo[name];
      if (value !== this._previousClasses.has(name) && !((_b5 = this._staticClasses) === null || _b5 === void 0 ? void 0 : _b5.has(name))) {
        if (value) {
          classList.add(name);
          this._previousClasses.add(name);
        } else {
          classList.remove(name);
          this._previousClasses.delete(name);
        }
      }
    }
    return noChange;
  }
};
var classMap = directive(ClassMapDirective);

// node_modules/@here/hds-icon/build/hds-icon.css.js
var styles = css`
:host{box-sizing:border-box;display:inline-block}:host(:focus){outline:0}.hds-icon{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;box-sizing:border-box;color:var(--hds-icon-color);display:block;font-style:normal;font-variant:normal;font-weight:400!important;text-rendering:auto;text-transform:none;transition:color var(--hds-icon-fill-transition)}.hds-icon.size-16px,.hds-icon.size-24px{margin-top:0}.hds-icon:before{content:attr(data-unicode);display:block;font-size:var(--hds-icon-actual-size);height:var(--hds-icon-actual-size);line-height:var(--hds-icon-actual-size);width:var(--hds-icon-actual-size)}
`;

// node_modules/@here/hds-icon/build/hds-icon.js
var Icon_1;
var Icon = Icon_1 = class Icon2 extends LitElement {
  constructor() {
    super(...arguments);
    this.name = "";
    this.category = "core-ui";
    this.iconStyle = "solid";
    this.size = "16px";
  }
  static getNameByMediaType(type) {
    if (Icon_1._nameByMediaType === void 0) {
      Icon_1._nameByMediaType = {
        "image/jpeg": "JPG-File",
        "image/jpg": "JPG-File",
        "application/msword": "DOC-File",
        "application/postscript": "EPS-File",
        "application/eps": "EPS-File",
        "application/x-eps": "EPS-File",
        "image/eps": "EPS-File",
        "image/x-eps": "EPS-File",
        "image/gif": "GIF-File",
        "text/html": "HTML-File",
        "audio/mpeg": "MP3-File",
        "application/pdf": "PDF-File",
        "image/png": "PNG-File",
        "image/svg+xml": "SVG-File",
        "image/tiff": "TIFF-File",
        "text/plain": "TXT-File",
        "audio/wav": "WAV-File",
        "audio/x-wav": "WAV-File",
        "application/zip": "ZIP-File"
      };
    }
    if (type in Icon_1._nameByMediaType)
      return Icon_1._nameByMediaType[type];
    if (type.endsWith("/json") || type.endsWith("+json"))
      return "JSON-File";
    if (type.includes("image/"))
      return "image";
    if (type.includes("compressed"))
      return "archive";
    return "file";
  }
  async updated(_changedProperties) {
    if (_changedProperties.has("errorEventPayload")) {
      setTimeout(() => {
        this.dispatchEvent(new CustomEvent("notfound", {
          detail: this.errorEventPayload,
          bubbles: true,
          composed: true
        }));
      }, 0);
    }
  }
  render() {
    let styleIcon = this.iconStyle;
    const size2 = parseInt(this.size, 10);
    let svgSize = "16px";
    if (size2 >= 24) {
      svgSize = "24px";
    } else if (size2 < 16) {
      styleIcon = "solid";
      svgSize = "8px";
    } else {
      styleIcon = "solid";
      svgSize = "16px";
    }
    let error;
    let errorType = "IconNotFound";
    const allIconsFontFamily = `hds-iconlibrary-${svgSize}`;
    const categoryFontFamily = `hds-iconlibrary-${this.category}-${svgSize}`;
    let fontFamily;
    if (document.fonts) {
      for (const value of document.fonts) {
        const fontFamilyName = value.family.replace(/"([^"]+(?="))"/g, "$1");
        if (!fontFamilyName)
          continue;
        if (fontFamily && fontFamily === allIconsFontFamily)
          continue;
        if (fontFamilyName === allIconsFontFamily) {
          fontFamily = allIconsFontFamily;
        } else if (fontFamilyName === categoryFontFamily) {
          fontFamily = categoryFontFamily;
        }
      }
    } else {
      error = "Fonts not found in document. Maybe test environment or SSR? Falling back to all icons font family";
      this.errorEventPayload = {
        message: error,
        name: this.name,
        type: "FontNotFound",
        category: this.category,
        size: svgSize,
        style: styleIcon
      };
      fontFamily = allIconsFontFamily;
    }
    if (!fontFamily) {
      error = `Font ${categoryFontFamily} has not been found! Make sure font has been loaded properly`;
      errorType = "FontNotFound";
      fontFamily = categoryFontFamily;
    }
    let codepointsKey;
    let codepointKey;
    if (fontFamily === allIconsFontFamily) {
      codepointsKey = `HDS_ICONLIBRARY_${svgSize.toUpperCase()}_CODEPOINTS`;
      codepointKey = `${this.category}-${this.name}_${styleIcon}_${svgSize}`;
    } else {
      codepointsKey = `HDS_ICONLIBRARY_${this.category.replaceAll("-", "_").toUpperCase()}_${svgSize.toUpperCase()}_CODEPOINTS`;
      codepointKey = `${this.name}_${styleIcon}_${svgSize}`;
      if (!build_exports[codepointsKey]) {
        errorType = "CategoryNotFound";
        error = `Category ${this.category}  not found!`;
      }
    }
    const codepoint = build_exports[codepointsKey][codepointKey];
    if (!codepoint) {
      errorType = "IconNotFound";
      error = `Icon ${this.category}/${this.name} style ${styleIcon} size ${svgSize} not found!`;
    }
    if (error && !(this.category === "core-ui" && errorType === "FontNotFound")) {
      this.errorEventPayload = {
        type: errorType,
        message: error,
        category: this.category,
        name: this.name,
        style: styleIcon,
        size: svgSize
      };
    }
    const cssClasses = {};
    cssClasses[`size-${svgSize}`] = true;
    cssClasses[`style-${styleIcon}`] = true;
    const cssInlineStyle = Object.entries({
      "--hds-icon-actual-size": `var(--hds-icon-size, calc(${size2}rem / var(--hds-font-baseline)))`,
      "font-family": `${fontFamily}, serif !important`
    }).map(([k, v]) => `${k}:${v}`).join(";");
    return html`
      <i
        class="hds-icon ${classMap(cssClasses)}"
        style="${cssInlineStyle}"
        data-unicode="${Number.isNaN(codepoint) || !codepoint ? "" : String.fromCodePoint(codepoint)}"
        role="img"
        aria-label="${this.ariaLabel ? this.ariaLabel : this.name}"
      ></i>
    `;
  }
};
Icon.styles = styles;
__decorate([
  property({ type: String, reflect: true })
], Icon.prototype, "name", void 0);
__decorate([
  property({ type: String, reflect: true })
], Icon.prototype, "category", void 0);
__decorate([
  property({ type: String, attribute: "icon-style", reflect: true })
], Icon.prototype, "iconStyle", void 0);
__decorate([
  property({ type: String, reflect: true })
], Icon.prototype, "size", void 0);
__decorate([
  state()
], Icon.prototype, "errorEventPayload", void 0);
Icon = Icon_1 = __decorate([
  customElement("hds-icon")
], Icon);

// node_modules/@here/hds-banner/build/hds-banner.css.js
var styles2 = css`
:host(:focus){outline:0}.-hds-banner-wrapper{align-items:center;box-sizing:border-box;display:none;min-height:3.5rem;position:relative;transition:all .5s}.-hds-banner-wrapper.-no-action-button .action-buttons,.-hds-banner-wrapper.-no-action-link .action-links{display:none}.-hds-banner-wrapper.-has-action-link .action-links ::slotted(a){color:inherit!important;font:var(--hds-body-small-link-font);letter-spacing:var(--hds-body-small-link-letter-spacing);-webkit-text-decoration:var(--hds-body-small-link-text-decoration,inherit);text-decoration:var(--hds-body-small-link-text-decoration,inherit);text-decoration:underline}.-hds-banner-wrapper.open{display:flex;gap:var(--hds-spacing-2)}.-hds-banner-wrapper.state-informative{--hds-icon-color:var(--hds-foreground-primary);background:var(--hds-gradient);color:var(--hds-foreground-primary)}.-hds-banner-wrapper.state-positive{--hds-icon-color:var(--hds-ondarkcolor-primary);background:var(--hds-positive);color:var(--hds-ondarkcolor-primary)}.-hds-banner-wrapper.state-warning{--hds-icon-color:var(--hds-foreground-primary);background:var(--hds-warning);color:var(--hds-foreground-primary)}.-hds-banner-wrapper.state-error{--hds-icon-color:var(--hds-ondarkcolor-primary);background:var(--hds-negative);color:var(--hds-ondarkcolor-primary)}.-hds-banner-wrapper.align-center .message{justify-content:center}.-hds-banner-wrapper .action-buttons,.-hds-banner-wrapper .action-links,.-hds-banner-wrapper .content,.-hds-banner-wrapper .icon,.-hds-banner-wrapper .message{align-items:center;display:flex}.-hds-banner-wrapper .action-buttons,.-hds-banner-wrapper .action-links{white-space:nowrap}.-hds-banner-wrapper .action-buttons,.-hds-banner-wrapper .action-links,.-hds-banner-wrapper .content,.-hds-banner-wrapper .message{gap:var(--hds-spacing-2)}.-hds-banner-wrapper .close-btn{margin-left:var(--hds-spacing-2)}.-hds-banner-wrapper .message-right{display:flex;gap:var(--hds-spacing-5)}.-hds-banner-wrapper .content,.-hds-banner-wrapper .message{width:100%}.-hds-banner-wrapper.hds-banner--variant-default{padding:var(--hds-spacing-3) var(--hds-spacing-4)}.-hds-banner-wrapper.hds-banner--variant-default .message-texts{font:var(--hds-body-small-strong-font);letter-spacing:var(--hds-body-small-strong-letter-spacing);-webkit-text-decoration:var(--hds-body-small-strong-text-decoration,inherit);text-decoration:var(--hds-body-small-strong-text-decoration,inherit)}.-hds-banner-wrapper.hds-banner--variant-wide{padding:var(--hds-spacing-7) var(--hds-spacing-10)}.-hds-banner-wrapper.hds-banner--variant-wide .message-texts{font:var(--hds-body-font);letter-spacing:var(--hds-body-letter-spacing);-webkit-text-decoration:var(--hds-body-text-decoration,inherit);text-decoration:var(--hds-body-text-decoration,inherit)}.-hds-banner-wrapper.hds-banner--variant-wide .message-caption{font:var(--hds-caption-strong-font);letter-spacing:var(--hds-caption-strong-letter-spacing);margin-bottom:var(--hds-spacing-2);-webkit-text-decoration:var(--hds-caption-strong-text-decoration,inherit);text-decoration:var(--hds-caption-strong-text-decoration,inherit)}.-hds-banner-wrapper.hds-banner--variant-wide .message-headline{font:var(--hds-headline-04-font);letter-spacing:var(--hds-headline-04-letter-spacing);margin-bottom:var(--hds-spacing-2);-webkit-text-decoration:var(--hds-headline-04-text-decoration,inherit);text-decoration:var(--hds-headline-04-text-decoration,inherit)}.-hds-banner-wrapper.hds-banner--variant-wide .message-right{flex-wrap:wrap}.-hds-banner-wrapper.hds-banner--variant-wide .action-links{width:100%}@media (max-width:600px){.-hds-banner-wrapper.-has-action-link .action-links{margin-left:0;width:100%}.-hds-banner-wrapper .action-buttons,.-hds-banner-wrapper .content{flex-wrap:wrap;width:100%}.-hds-banner-wrapper .action-buttons{margin-top:var(--hds-spacing-4)}.-hds-banner-wrapper.hds-banner--variant-default{padding:var(--hds-spacing-3) var(--hds-spacing-4)}.-hds-banner-wrapper.hds-banner--variant-wide{padding:var(--hds-spacing-6)}}@media (min-width:601px) and (max-width:1024px){.-hds-banner-wrapper.hds-banner--variant-default{padding:var(--hds-spacing-3) var(--hds-spacing-4)}.-hds-banner-wrapper.hds-banner--variant-wide{padding:var(--hds-spacing-7)}}
`;

// node_modules/@here/hds-banner/build/hds-banner.js
var Banner = class Banner2 extends LitElement {
  constructor() {
    super(...arguments);
    this.variant = "default";
    this.state = "informative";
    this.alignCenter = false;
    this.timeout = 0;
    this.removable = false;
    this.icon = false;
    this.open = true;
    this.caption = "";
    this.headline = "";
  }
  set duration(value) {
    console.warn("[hds-banner] 'duration' property is depricated, use 'timeout' instead");
    this.timeout = value;
  }
  updated(_changedProperties) {
    if (_changedProperties.has("open") && _changedProperties.get("open") !== void 0) {
      this.dispatchEvent(new CustomEvent("change", {
        detail: {
          open: this.open,
          from: this.fromChangeEvent
        },
        bubbles: true,
        composed: true
      }));
      this.fromChangeEvent = void 0;
    }
    if (_changedProperties.has("timeout") && this.timeout > 0) {
      clearTimeout(this.timer);
      this.timer = setTimeout(this.timeOut.bind(this), this.timeout * 1e3);
    }
  }
  renderMessageCaption() {
    if (this.variant === "wide" && this.caption) {
      return html`<div class="message-caption">${this.caption}</div>`;
    }
    return nothing;
  }
  renderMessageHeadline() {
    if (this.variant === "wide" && this.headline) {
      return html`<div class="message-headline">${this.headline}</div>`;
    }
    return nothing;
  }
  renderIcon() {
    if (this.variant === "default" && this.icon) {
      const iconName = {
        error: "alert",
        warning: "attention",
        positive: "confirm",
        informative: "information"
      }[this.state];
      return html`<div class="message-left icon">
        <hds-icon name="${iconName}" icon-style="outline" size="24px"></hds-icon>
      </div>`;
    }
    return nothing;
  }
  render() {
    const role = this.state === "error" || this.state === "warning" ? "alert" : "banner";
    const hasActionButton = !isSlotEmpty(this.slotActionButton);
    const hasActionLink = !isSlotEmpty(this.slotActionLink);
    const classes = {
      open: this.open,
      "-hds-banner-wrapper": true,
      "align-center": this.variant === "default" && this.alignCenter
    };
    classes[`state-${this.state}`] = true;
    classes[`hds-banner--variant-${this.variant}`] = true;
    classes[`-${hasActionButton ? "has" : "no"}-action-button`] = true;
    classes[`-${hasActionLink ? "has" : "no"}-action-link`] = true;
    return html`
      <div class="${classMap(classes)}" role="${role}">
        <div class="content">
          <div class="message">
            ${this.renderIcon()}
            <div class="message-right">
              <div class="message-texts">
                ${this.renderMessageCaption()} ${this.renderMessageHeadline()}
                <slot @slotchange="${() => this.requestUpdate()}"></slot>
              </div>
              <div class="action-links">
                <slot name="action-link" @slotchange="${() => this.requestUpdate()}"></slot>
              </div>
            </div>
          </div>
          <div class="action-buttons">
            <slot name="action-button" @slotchange="${() => this.requestUpdate()}"></slot>
          </div>
        </div>
        ${this.renderCloseButton()}
      </div>
    `;
  }
  async handleRemoveClick(e) {
    e.preventDefault();
    e.stopPropagation();
    this.fromChangeEvent = "button";
    this.open = false;
  }
  async timeOut() {
    this.timeout = 0;
    this.fromChangeEvent = "timeout";
    this.open = false;
  }
  renderCloseButton() {
    if (!this.removable)
      return nothing;
    return html`
      <hds-button
        class="close-btn"
        size="small"
        variant="on-color-secondary"
        icon="cross"
        aria-label="close"
        role="button"
        @click="${this.handleRemoveClick}"
      ></hds-button>
    `;
  }
};
Banner.styles = styles2;
__decorate([
  property({ type: String })
], Banner.prototype, "variant", void 0);
__decorate([
  property({ type: String })
], Banner.prototype, "state", void 0);
__decorate([
  property({ type: Boolean, attribute: "align-center" })
], Banner.prototype, "alignCenter", void 0);
__decorate([
  property({ type: Number, reflect: true })
], Banner.prototype, "timeout", void 0);
__decorate([
  property({ type: Boolean })
], Banner.prototype, "removable", void 0);
__decorate([
  property({ type: Boolean, attribute: "icon" })
], Banner.prototype, "icon", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Banner.prototype, "open", void 0);
__decorate([
  property({ type: String })
], Banner.prototype, "caption", void 0);
__decorate([
  property({ type: String })
], Banner.prototype, "headline", void 0);
__decorate([
  property({ type: Number, attribute: "duration" })
], Banner.prototype, "duration", null);
__decorate([
  query('slot[name="action-button"]')
], Banner.prototype, "slotActionButton", void 0);
__decorate([
  query('slot[name="action-link"]')
], Banner.prototype, "slotActionLink", void 0);
Banner = __decorate([
  customElement("hds-banner")
], Banner);

// node_modules/@here/hds-react-components/Banner/HDSBanner.js
new Banner();
var HDSBanner = import_react.default.forwardRef((props, ref) => {
  const { timeout, message, state: state2, variant, alignCenter, removable, className, open, icon, children, onClose, onChange: onChange2, onTimeout, ...rest } = props;
  const innerRef = (0, import_react.useRef)(null);
  (0, import_react.useImperativeHandle)(ref, () => innerRef.current);
  const _handleAction = (e) => {
    if (e.target !== innerRef.current)
      return;
    switch (e.detail.from) {
      case "button":
        onClose && onClose(e.detail);
        break;
      case "timeout":
        onTimeout && onTimeout(e.detail);
        break;
    }
    onChange2 && onChange2(e);
  };
  (0, import_react.useEffect)(() => {
    if (innerRef.current) {
      if (onClose || onTimeout || onChange2) {
        innerRef.current.addEventListener("change", _handleAction);
      }
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleAction);
    };
  }, [onClose, onTimeout, onChange2, innerRef]);
  return import_react.default.createElement(
    "hds-banner",
    { variant, state: state2, ...className && { class: className }, timeout, ...removable && { removable }, ...alignCenter && { "align-center": alignCenter }, ...open && { open }, ...icon && { icon }, ref: innerRef, ...rest },
    message && message,
    children && children
  );
});
HDSBanner.defaultProps = {
  timeout: 0,
  variant: "default",
  alignCenter: false,
  removable: false,
  icon: false
};
var HDSBanner_default = HDSBanner;

// node_modules/@here/hds-react-components/Breadcrumb/HDSBreadcrumb.js
var import_react2 = __toESM(require_react(), 1);

// node_modules/@here/hds-breadcrumb/build/hds-breadcrumb.css.js
var styles3 = css`
:host(:focus){outline:0}.-hds-breadcrumb-wrapper .breadcrumb{background-color:initial;display:flex;flex-wrap:wrap;list-style:none;margin:var(--hds-spacing-0);padding-left:0;transition:all .15s ease-in-out}
`;

// node_modules/@popperjs/core/lib/enums.js
var top = "top";
var bottom = "bottom";
var right = "right";
var left = "left";
var auto = "auto";
var basePlacements = [top, bottom, right, left];
var start = "start";
var end = "end";
var clippingParents = "clippingParents";
var viewport = "viewport";
var popper = "popper";
var reference = "reference";
var variationPlacements = basePlacements.reduce(function(acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []);
var beforeRead = "beforeRead";
var read = "read";
var afterRead = "afterRead";
var beforeMain = "beforeMain";
var main = "main";
var afterMain = "afterMain";
var beforeWrite = "beforeWrite";
var write = "write";
var afterWrite = "afterWrite";
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

// node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element) {
  return element ? (element.nodeName || "").toLowerCase() : null;
}

// node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node2) {
  if (node2 == null) {
    return window;
  }
  if (node2.toString() !== "[object Window]") {
    var ownerDocument = node2.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }
  return node2;
}

// node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
function isElement(node2) {
  var OwnElement = getWindow(node2).Element;
  return node2 instanceof OwnElement || node2 instanceof Element;
}
function isHTMLElement(node2) {
  var OwnElement = getWindow(node2).HTMLElement;
  return node2 instanceof OwnElement || node2 instanceof HTMLElement;
}
function isShadowRoot(node2) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  var OwnElement = getWindow(node2).ShadowRoot;
  return node2 instanceof OwnElement || node2 instanceof ShadowRoot;
}

// node_modules/@popperjs/core/lib/modifiers/applyStyles.js
function applyStyles(_ref3) {
  var state2 = _ref3.state;
  Object.keys(state2.elements).forEach(function(name) {
    var style = state2.styles[name] || {};
    var attributes = state2.attributes[name] || {};
    var element = state2.elements[name];
    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    }
    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function(name2) {
      var value = attributes[name2];
      if (value === false) {
        element.removeAttribute(name2);
      } else {
        element.setAttribute(name2, value === true ? "" : value);
      }
    });
  });
}
function effect(_ref23) {
  var state2 = _ref23.state;
  var initialStyles = {
    popper: {
      position: state2.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  Object.assign(state2.elements.popper.style, initialStyles.popper);
  state2.styles = initialStyles;
  if (state2.elements.arrow) {
    Object.assign(state2.elements.arrow.style, initialStyles.arrow);
  }
  return function() {
    Object.keys(state2.elements).forEach(function(name) {
      var element = state2.elements[name];
      var attributes = state2.attributes[name] || {};
      var styleProperties = Object.keys(state2.styles.hasOwnProperty(name) ? state2.styles[name] : initialStyles[name]);
      var style = styleProperties.reduce(function(style2, property2) {
        style2[property2] = "";
        return style2;
      }, {});
      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }
      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function(attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
}
var applyStyles_default = {
  name: "applyStyles",
  enabled: true,
  phase: "write",
  fn: applyStyles,
  effect,
  requires: ["computeStyles"]
};

// node_modules/@popperjs/core/lib/utils/getBasePlacement.js
function getBasePlacement(placement) {
  return placement.split("-")[0];
}

// node_modules/@popperjs/core/lib/utils/math.js
var max = Math.max;
var min = Math.min;
var round = Math.round;

// node_modules/@popperjs/core/lib/utils/userAgent.js
function getUAString() {
  var uaData = navigator.userAgentData;
  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
    return uaData.brands.map(function(item) {
      return item.brand + "/" + item.version;
    }).join(" ");
  }
  return navigator.userAgent;
}

// node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js
function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}

// node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;
  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
  }
  var _ref3 = isElement(element) ? getWindow(element) : window, visualViewport = _ref3.visualViewport;
  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width,
    height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x,
    y
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element);
  var width = element.offsetWidth;
  var height = element.offsetHeight;
  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }
  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }
  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width,
    height
  };
}

// node_modules/@popperjs/core/lib/dom-utils/contains.js
function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode();
  if (parent.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    var next2 = child;
    do {
      if (next2 && parent.isSameNode(next2)) {
        return true;
      }
      next2 = next2.parentNode || next2.host;
    } while (next2);
  }
  return false;
}

// node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
function getComputedStyle2(element) {
  return getWindow(element).getComputedStyle(element);
}

// node_modules/@popperjs/core/lib/dom-utils/isTableElement.js
function isTableElement(element) {
  return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
}

// node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js
function getDocumentElement(element) {
  return ((isElement(element) ? element.ownerDocument : (
    // $FlowFixMe[prop-missing]
    element.document
  )) || window.document).documentElement;
}

// node_modules/@popperjs/core/lib/dom-utils/getParentNode.js
function getParentNode(element) {
  if (getNodeName(element) === "html") {
    return element;
  }
  return (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || // DOM Element detected
    (isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element)
  );
}

// node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js
function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle2(element).position === "fixed") {
    return null;
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE = /Trident/i.test(getUAString());
  if (isIE && isHTMLElement(element)) {
    var elementCss = getComputedStyle2(element);
    if (elementCss.position === "fixed") {
      return null;
    }
  }
  var currentNode = getParentNode(element);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
    var css6 = getComputedStyle2(currentNode);
    if (css6.transform !== "none" || css6.perspective !== "none" || css6.contain === "paint" || ["transform", "perspective"].indexOf(css6.willChange) !== -1 || isFirefox && css6.willChange === "filter" || isFirefox && css6.filter && css6.filter !== "none") {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
}
function getOffsetParent(element) {
  var window2 = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle2(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle2(offsetParent).position === "static")) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}

// node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
}

// node_modules/@popperjs/core/lib/utils/within.js
function within(min3, value, max3) {
  return max(min3, min(value, max3));
}
function withinMaxClamp(min3, value, max3) {
  var v = within(min3, value, max3);
  return v > max3 ? max3 : v;
}

// node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

// node_modules/@popperjs/core/lib/utils/mergePaddingObject.js
function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

// node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys) {
  return keys.reduce(function(hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

// node_modules/@popperjs/core/lib/modifiers/arrow.js
var toPaddingObject = function toPaddingObject2(padding, state2) {
  padding = typeof padding === "function" ? padding(Object.assign({}, state2.rects, {
    placement: state2.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
};
function arrow(_ref3) {
  var _state$modifiersData$;
  var state2 = _ref3.state, name = _ref3.name, options2 = _ref3.options;
  var arrowElement = state2.elements.arrow;
  var popperOffsets2 = state2.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state2.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? "height" : "width";
  if (!arrowElement || !popperOffsets2) {
    return;
  }
  var paddingObject = toPaddingObject(options2.padding, state2);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === "y" ? top : left;
  var maxProp = axis === "y" ? bottom : right;
  var endDiff = state2.rects.reference[len] + state2.rects.reference[axis] - popperOffsets2[axis] - state2.rects.popper[len];
  var startDiff = popperOffsets2[axis] - state2.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2;
  var min3 = paddingObject[minProp];
  var max3 = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset4 = within(min3, center, max3);
  var axisProp = axis;
  state2.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset4, _state$modifiersData$.centerOffset = offset4 - center, _state$modifiersData$);
}
function effect2(_ref23) {
  var state2 = _ref23.state, options2 = _ref23.options;
  var _options$element = options2.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
  if (arrowElement == null) {
    return;
  }
  if (typeof arrowElement === "string") {
    arrowElement = state2.elements.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return;
    }
  }
  if (!contains(state2.elements.popper, arrowElement)) {
    return;
  }
  state2.elements.arrow = arrowElement;
}
var arrow_default = {
  name: "arrow",
  enabled: true,
  phase: "main",
  fn: arrow,
  effect: effect2,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};

// node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split("-")[1];
}

// node_modules/@popperjs/core/lib/modifiers/computeStyles.js
var unsetSides = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function roundOffsetsByDPR(_ref3, win) {
  var x = _ref3.x, y = _ref3.y;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x * dpr) / dpr || 0,
    y: round(y * dpr) / dpr || 0
  };
}
function mapToStyles(_ref23) {
  var _Object$assign2;
  var popper2 = _ref23.popper, popperRect = _ref23.popperRect, placement = _ref23.placement, variation = _ref23.variation, offsets = _ref23.offsets, position2 = _ref23.position, gpuAcceleration = _ref23.gpuAcceleration, adaptive = _ref23.adaptive, roundOffsets = _ref23.roundOffsets, isFixed = _ref23.isFixed;
  var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
  var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
    x,
    y
  }) : {
    x,
    y
  };
  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty("x");
  var hasY = offsets.hasOwnProperty("y");
  var sideX = left;
  var sideY = top;
  var win = window;
  if (adaptive) {
    var offsetParent = getOffsetParent(popper2);
    var heightProp = "clientHeight";
    var widthProp = "clientWidth";
    if (offsetParent === getWindow(popper2)) {
      offsetParent = getDocumentElement(popper2);
      if (getComputedStyle2(offsetParent).position !== "static" && position2 === "absolute") {
        heightProp = "scrollHeight";
        widthProp = "scrollWidth";
      }
    }
    offsetParent = offsetParent;
    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        offsetParent[heightProp]
      );
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }
    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        offsetParent[widthProp]
      );
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }
  var commonStyles = Object.assign({
    position: position2
  }, adaptive && unsetSides);
  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x,
    y
  }, getWindow(popper2)) : {
    x,
    y
  };
  x = _ref4.x;
  y = _ref4.y;
  if (gpuAcceleration) {
    var _Object$assign;
    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }
  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : "", _Object$assign2[sideX] = hasX ? x + "px" : "", _Object$assign2.transform = "", _Object$assign2));
}
function computeStyles(_ref5) {
  var state2 = _ref5.state, options2 = _ref5.options;
  var _options$gpuAccelerat = options2.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options2.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options2.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  var commonStyles = {
    placement: getBasePlacement(state2.placement),
    variation: getVariation(state2.placement),
    popper: state2.elements.popper,
    popperRect: state2.rects.popper,
    gpuAcceleration,
    isFixed: state2.options.strategy === "fixed"
  };
  if (state2.modifiersData.popperOffsets != null) {
    state2.styles.popper = Object.assign({}, state2.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state2.modifiersData.popperOffsets,
      position: state2.options.strategy,
      adaptive,
      roundOffsets
    })));
  }
  if (state2.modifiersData.arrow != null) {
    state2.styles.arrow = Object.assign({}, state2.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state2.modifiersData.arrow,
      position: "absolute",
      adaptive: false,
      roundOffsets
    })));
  }
  state2.attributes.popper = Object.assign({}, state2.attributes.popper, {
    "data-popper-placement": state2.placement
  });
}
var computeStyles_default = {
  name: "computeStyles",
  enabled: true,
  phase: "beforeWrite",
  fn: computeStyles,
  data: {}
};

// node_modules/@popperjs/core/lib/modifiers/eventListeners.js
var passive = {
  passive: true
};
function effect3(_ref3) {
  var state2 = _ref3.state, instance = _ref3.instance, options2 = _ref3.options;
  var _options$scroll = options2.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options2.resize, resize = _options$resize === void 0 ? true : _options$resize;
  var window2 = getWindow(state2.elements.popper);
  var scrollParents = [].concat(state2.scrollParents.reference, state2.scrollParents.popper);
  if (scroll) {
    scrollParents.forEach(function(scrollParent) {
      scrollParent.addEventListener("scroll", instance.update, passive);
    });
  }
  if (resize) {
    window2.addEventListener("resize", instance.update, passive);
  }
  return function() {
    if (scroll) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.removeEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window2.removeEventListener("resize", instance.update, passive);
    }
  };
}
var eventListeners_default = {
  name: "eventListeners",
  enabled: true,
  phase: "write",
  fn: function fn() {
  },
  effect: effect3,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
var hash = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash[matched];
  });
}

// node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
var hash2 = {
  start: "end",
  end: "start"
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function(matched) {
    return hash2[matched];
  });
}

// node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js
function getWindowScroll(node2) {
  var win = getWindow(node2);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft,
    scrollTop
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

// node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js
function getViewportRect(element, strategy) {
  var win = getWindow(element);
  var html2 = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html2.clientWidth;
  var height = html2.clientHeight;
  var x = 0;
  var y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();
    if (layoutViewport || !layoutViewport && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x + getWindowScrollBarX(element),
    y
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js
function getDocumentRect(element) {
  var _element$ownerDocumen;
  var html2 = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html2.scrollWidth, html2.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html2.scrollHeight, html2.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;
  if (getComputedStyle2(body || html2).direction === "rtl") {
    x += max(html2.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}

// node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js
function isScrollParent(element) {
  var _getComputedStyle = getComputedStyle2(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

// node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js
function getScrollParent(node2) {
  if (["html", "body", "#document"].indexOf(getNodeName(node2)) >= 0) {
    return node2.ownerDocument.body;
  }
  if (isHTMLElement(node2) && isScrollParent(node2)) {
    return node2;
  }
  return getScrollParent(getParentNode(node2));
}

// node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js
function listScrollParents(element, list) {
  var _element$ownerDocumen;
  if (list === void 0) {
    list = [];
  }
  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    updatedList.concat(listScrollParents(getParentNode(target)))
  );
}

// node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

// node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js
function getInnerBoundingClientRect(element, strategy) {
  var rect = getBoundingClientRect(element, false, strategy === "fixed");
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}
function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
}
function getClippingParents(element) {
  var clippingParents2 = listScrollParents(getParentNode(element));
  var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle2(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
  if (!isElement(clipperElement)) {
    return [];
  }
  return clippingParents2.filter(function(clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
  });
}
function getClippingRect(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
  var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents2[0];
  var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

// node_modules/@popperjs/core/lib/utils/computeOffsets.js
function computeOffsets(_ref3) {
  var reference2 = _ref3.reference, element = _ref3.element, placement = _ref3.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference2.x + reference2.width / 2 - element.width / 2;
  var commonY = reference2.y + reference2.height / 2 - element.height / 2;
  var offsets;
  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference2.y - element.height
      };
      break;
    case bottom:
      offsets = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case right:
      offsets = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case left:
      offsets = {
        x: reference2.x - element.width,
        y: commonY
      };
      break;
    default:
      offsets = {
        x: reference2.x,
        y: reference2.y
      };
  }
  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
  if (mainAxis != null) {
    var len = mainAxis === "y" ? "height" : "width";
    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
        break;
      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
        break;
      default:
    }
  }
  return offsets;
}

// node_modules/@popperjs/core/lib/utils/detectOverflow.js
function detectOverflow(state2, options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  var _options = options2, _options$placement = _options.placement, placement = _options$placement === void 0 ? state2.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state2.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state2.rects.popper;
  var element = state2.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state2.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect(state2.elements.reference);
  var popperOffsets2 = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: "absolute",
    placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state2.modifiersData.offset;
  if (elementContext === popper && offsetData) {
    var offset4 = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function(key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
      overflowOffsets[key] += offset4[axis] * multiply;
    });
  }
  return overflowOffsets;
}

// node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js
function computeAutoPlacement(state2, options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  var _options = options2, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements3 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
    return getVariation(placement2) === variation;
  }) : basePlacements;
  var allowedPlacements = placements3.filter(function(placement2) {
    return allowedAutoPlacements.indexOf(placement2) >= 0;
  });
  if (allowedPlacements.length === 0) {
    allowedPlacements = placements3;
  }
  var overflows = allowedPlacements.reduce(function(acc, placement2) {
    acc[placement2] = detectOverflow(state2, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding
    })[getBasePlacement(placement2)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function(a, b) {
    return overflows[a] - overflows[b];
  });
}

// node_modules/@popperjs/core/lib/modifiers/flip.js
function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }
  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}
function flip(_ref3) {
  var state2 = _ref3.state, options2 = _ref3.options, name = _ref3.name;
  if (state2.modifiersData[name]._skip) {
    return;
  }
  var _options$mainAxis = options2.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options2.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options2.fallbackPlacements, padding = options2.padding, boundary = options2.boundary, rootBoundary = options2.rootBoundary, altBoundary = options2.altBoundary, _options$flipVariatio = options2.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options2.allowedAutoPlacements;
  var preferredPlacement = state2.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements3 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
    return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state2, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding,
      flipVariations,
      allowedAutoPlacements
    }) : placement2);
  }, []);
  var referenceRect = state2.rects.reference;
  var popperRect = state2.rects.popper;
  var checksMap = /* @__PURE__ */ new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements3[0];
  for (var i = 0; i < placements3.length; i++) {
    var placement = placements3[i];
    var _basePlacement = getBasePlacement(placement);
    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? "width" : "height";
    var overflow = detectOverflow(state2, {
      placement,
      boundary,
      rootBoundary,
      altBoundary,
      padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }
    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];
    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }
    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }
    if (checks.every(function(check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }
    checksMap.set(placement, checks);
  }
  if (makeFallbackChecks) {
    var numberOfChecks = flipVariations ? 3 : 1;
    var _loop = function _loop2(_i2) {
      var fittingPlacement = placements3.find(function(placement2) {
        var checks2 = checksMap.get(placement2);
        if (checks2) {
          return checks2.slice(0, _i2).every(function(check) {
            return check;
          });
        }
      });
      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };
    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);
      if (_ret === "break") break;
    }
  }
  if (state2.placement !== firstFittingPlacement) {
    state2.modifiersData[name]._skip = true;
    state2.placement = firstFittingPlacement;
    state2.reset = true;
  }
}
var flip_default = {
  name: "flip",
  enabled: true,
  phase: "main",
  fn: flip,
  requiresIfExists: ["offset"],
  data: {
    _skip: false
  }
};

// node_modules/@popperjs/core/lib/modifiers/hide.js
function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }
  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}
function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function(side) {
    return overflow[side] >= 0;
  });
}
function hide(_ref3) {
  var state2 = _ref3.state, name = _ref3.name;
  var referenceRect = state2.rects.reference;
  var popperRect = state2.rects.popper;
  var preventedOffsets = state2.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state2, {
    elementContext: "reference"
  });
  var popperAltOverflow = detectOverflow(state2, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state2.modifiersData[name] = {
    referenceClippingOffsets,
    popperEscapeOffsets,
    isReferenceHidden,
    hasPopperEscaped
  };
  state2.attributes.popper = Object.assign({}, state2.attributes.popper, {
    "data-popper-reference-hidden": isReferenceHidden,
    "data-popper-escaped": hasPopperEscaped
  });
}
var hide_default = {
  name: "hide",
  enabled: true,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: hide
};

// node_modules/@popperjs/core/lib/modifiers/offset.js
function distanceAndSkiddingToXY(placement, rects, offset4) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
  var _ref3 = typeof offset4 === "function" ? offset4(Object.assign({}, rects, {
    placement
  })) : offset4, skidding = _ref3[0], distance = _ref3[1];
  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}
function offset(_ref23) {
  var state2 = _ref23.state, options2 = _ref23.options, name = _ref23.name;
  var _options$offset = options2.offset, offset4 = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function(acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state2.rects, offset4);
    return acc;
  }, {});
  var _data$state$placement = data[state2.placement], x = _data$state$placement.x, y = _data$state$placement.y;
  if (state2.modifiersData.popperOffsets != null) {
    state2.modifiersData.popperOffsets.x += x;
    state2.modifiersData.popperOffsets.y += y;
  }
  state2.modifiersData[name] = data;
}
var offset_default = {
  name: "offset",
  enabled: true,
  phase: "main",
  requires: ["popperOffsets"],
  fn: offset
};

// node_modules/@popperjs/core/lib/modifiers/popperOffsets.js
function popperOffsets(_ref3) {
  var state2 = _ref3.state, name = _ref3.name;
  state2.modifiersData[name] = computeOffsets({
    reference: state2.rects.reference,
    element: state2.rects.popper,
    strategy: "absolute",
    placement: state2.placement
  });
}
var popperOffsets_default = {
  name: "popperOffsets",
  enabled: true,
  phase: "read",
  fn: popperOffsets,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === "x" ? "y" : "x";
}

// node_modules/@popperjs/core/lib/modifiers/preventOverflow.js
function preventOverflow(_ref3) {
  var state2 = _ref3.state, options2 = _ref3.options, name = _ref3.name;
  var _options$mainAxis = options2.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options2.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options2.boundary, rootBoundary = options2.rootBoundary, altBoundary = options2.altBoundary, padding = options2.padding, _options$tether = options2.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options2.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state2, {
    boundary,
    rootBoundary,
    padding,
    altBoundary
  });
  var basePlacement = getBasePlacement(state2.placement);
  var variation = getVariation(state2.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets2 = state2.modifiersData.popperOffsets;
  var referenceRect = state2.rects.reference;
  var popperRect = state2.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state2.rects, {
    placement: state2.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state2.modifiersData.offset ? state2.modifiersData.offset[state2.placement] : null;
  var data = {
    x: 0,
    y: 0
  };
  if (!popperOffsets2) {
    return;
  }
  if (checkMainAxis) {
    var _offsetModifierState$;
    var mainSide = mainAxis === "y" ? top : left;
    var altSide = mainAxis === "y" ? bottom : right;
    var len = mainAxis === "y" ? "height" : "width";
    var offset4 = popperOffsets2[mainAxis];
    var min3 = offset4 + overflow[mainSide];
    var max3 = offset4 - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
    var arrowElement = state2.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state2.modifiersData["arrow#persistent"] ? state2.modifiersData["arrow#persistent"].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide];
    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state2.elements.arrow && getOffsetParent(state2.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset4 + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset4 + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min3, tetherMin) : min3, offset4, tether ? max(max3, tetherMax) : max3);
    popperOffsets2[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset4;
  }
  if (checkAltAxis) {
    var _offsetModifierState$2;
    var _mainSide = mainAxis === "x" ? top : left;
    var _altSide = mainAxis === "x" ? bottom : right;
    var _offset = popperOffsets2[altAxis];
    var _len = altAxis === "y" ? "height" : "width";
    var _min = _offset + overflow[_mainSide];
    var _max = _offset - overflow[_altSide];
    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;
    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
    popperOffsets2[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }
  state2.modifiersData[name] = data;
}
var preventOverflow_default = {
  name: "preventOverflow",
  enabled: true,
  phase: "main",
  fn: preventOverflow,
  requiresIfExists: ["offset"]
};

// node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js
function getNodeScroll(node2) {
  if (node2 === getWindow(node2) || !isHTMLElement(node2)) {
    return getWindowScroll(node2);
  } else {
    return getHTMLElementScroll(node2);
  }
}

// node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js
function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
}
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

// node_modules/@popperjs/core/lib/utils/orderModifiers.js
function order(modifiers) {
  var map = /* @__PURE__ */ new Map();
  var visited = /* @__PURE__ */ new Set();
  var result = [];
  modifiers.forEach(function(modifier) {
    map.set(modifier.name, modifier);
  });
  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function(dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);
        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }
  modifiers.forEach(function(modifier) {
    if (!visited.has(modifier.name)) {
      sort(modifier);
    }
  });
  return result;
}
function orderModifiers(modifiers) {
  var orderedModifiers = order(modifiers);
  return modifierPhases.reduce(function(acc, phase) {
    return acc.concat(orderedModifiers.filter(function(modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

// node_modules/@popperjs/core/lib/utils/debounce.js
function debounce2(fn2) {
  var pending;
  return function() {
    if (!pending) {
      pending = new Promise(function(resolve) {
        Promise.resolve().then(function() {
          pending = void 0;
          resolve(fn2());
        });
      });
    }
    return pending;
  };
}

// node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function(merged2, current) {
    var existing = merged2[current.name];
    merged2[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged2;
  }, {});
  return Object.keys(merged).map(function(key) {
    return merged[key];
  });
}

// node_modules/@popperjs/core/lib/createPopper.js
var DEFAULT_OPTIONS = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return !args.some(function(element) {
    return !(element && typeof element.getBoundingClientRect === "function");
  });
}
function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }
  var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers3 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper4(reference2, popper2, options2) {
    if (options2 === void 0) {
      options2 = defaultOptions;
    }
    var state2 = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference2,
        popper: popper2
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state2,
      setOptions: function setOptions(setOptionsAction) {
        var options3 = typeof setOptionsAction === "function" ? setOptionsAction(state2.options) : setOptionsAction;
        cleanupModifierEffects();
        state2.options = Object.assign({}, defaultOptions, state2.options, options3);
        state2.scrollParents = {
          reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
          popper: listScrollParents(popper2)
        };
        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers3, state2.options.modifiers)));
        state2.orderedModifiers = orderedModifiers.filter(function(m) {
          return m.enabled;
        });
        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }
        var _state$elements = state2.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
        if (!areValidElements(reference3, popper3)) {
          return;
        }
        state2.rects = {
          reference: getCompositeRect(reference3, getOffsetParent(popper3), state2.options.strategy === "fixed"),
          popper: getLayoutRect(popper3)
        };
        state2.reset = false;
        state2.placement = state2.options.placement;
        state2.orderedModifiers.forEach(function(modifier) {
          return state2.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        for (var index2 = 0; index2 < state2.orderedModifiers.length; index2++) {
          if (state2.reset === true) {
            state2.reset = false;
            index2 = -1;
            continue;
          }
          var _state$orderedModifie = state2.orderedModifiers[index2], fn2 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
          if (typeof fn2 === "function") {
            state2 = fn2({
              state: state2,
              options: _options,
              name,
              instance
            }) || state2;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce2(function() {
        return new Promise(function(resolve) {
          instance.forceUpdate();
          resolve(state2);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };
    if (!areValidElements(reference2, popper2)) {
      return instance;
    }
    instance.setOptions(options2).then(function(state3) {
      if (!isDestroyed && options2.onFirstUpdate) {
        options2.onFirstUpdate(state3);
      }
    });
    function runModifierEffects() {
      state2.orderedModifiers.forEach(function(_ref3) {
        var name = _ref3.name, _ref$options = _ref3.options, options3 = _ref$options === void 0 ? {} : _ref$options, effect5 = _ref3.effect;
        if (typeof effect5 === "function") {
          var cleanupFn = effect5({
            state: state2,
            name,
            instance,
            options: options3
          });
          var noopFn = function noopFn2() {
          };
          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }
    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function(fn2) {
        return fn2();
      });
      effectCleanupFns = [];
    }
    return instance;
  };
}
var createPopper = popperGenerator();

// node_modules/@popperjs/core/lib/popper-lite.js
var defaultModifiers = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default];
var createPopper2 = popperGenerator({
  defaultModifiers
});

// node_modules/@popperjs/core/lib/popper.js
var defaultModifiers2 = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default, offset_default, flip_default, preventOverflow_default, arrow_default, hide_default];
var createPopper3 = popperGenerator({
  defaultModifiers: defaultModifiers2
});

// node_modules/tippy.js/dist/tippy.esm.js
var BOX_CLASS = "tippy-box";
var CONTENT_CLASS = "tippy-content";
var BACKDROP_CLASS = "tippy-backdrop";
var ARROW_CLASS = "tippy-arrow";
var SVG_ARROW_CLASS = "tippy-svg-arrow";
var TOUCH_OPTIONS = {
  passive: true,
  capture: true
};
var TIPPY_DEFAULT_APPEND_TO = function TIPPY_DEFAULT_APPEND_TO2() {
  return document.body;
};
function hasOwnProperty(obj, key) {
  return {}.hasOwnProperty.call(obj, key);
}
function getValueAtIndexOrReturn(value, index2, defaultValue) {
  if (Array.isArray(value)) {
    var v = value[index2];
    return v == null ? Array.isArray(defaultValue) ? defaultValue[index2] : defaultValue : v;
  }
  return value;
}
function isType(value, type) {
  var str = {}.toString.call(value);
  return str.indexOf("[object") === 0 && str.indexOf(type + "]") > -1;
}
function invokeWithArgsOrReturn(value, args) {
  return typeof value === "function" ? value.apply(void 0, args) : value;
}
function debounce3(fn2, ms) {
  if (ms === 0) {
    return fn2;
  }
  var timeout;
  return function(arg) {
    clearTimeout(timeout);
    timeout = setTimeout(function() {
      fn2(arg);
    }, ms);
  };
}
function removeProperties(obj, keys) {
  var clone = Object.assign({}, obj);
  keys.forEach(function(key) {
    delete clone[key];
  });
  return clone;
}
function splitBySpaces(value) {
  return value.split(/\s+/).filter(Boolean);
}
function normalizeToArray(value) {
  return [].concat(value);
}
function pushIfUnique(arr, value) {
  if (arr.indexOf(value) === -1) {
    arr.push(value);
  }
}
function unique(arr) {
  return arr.filter(function(item, index2) {
    return arr.indexOf(item) === index2;
  });
}
function getBasePlacement2(placement) {
  return placement.split("-")[0];
}
function arrayFrom(value) {
  return [].slice.call(value);
}
function removeUndefinedProps(obj) {
  return Object.keys(obj).reduce(function(acc, key) {
    if (obj[key] !== void 0) {
      acc[key] = obj[key];
    }
    return acc;
  }, {});
}
function div() {
  return document.createElement("div");
}
function isElement2(value) {
  return ["Element", "Fragment"].some(function(type) {
    return isType(value, type);
  });
}
function isNodeList(value) {
  return isType(value, "NodeList");
}
function isMouseEvent(value) {
  return isType(value, "MouseEvent");
}
function isReferenceElement(value) {
  return !!(value && value._tippy && value._tippy.reference === value);
}
function getArrayOfElements(value) {
  if (isElement2(value)) {
    return [value];
  }
  if (isNodeList(value)) {
    return arrayFrom(value);
  }
  if (Array.isArray(value)) {
    return value;
  }
  return arrayFrom(document.querySelectorAll(value));
}
function setTransitionDuration(els, value) {
  els.forEach(function(el) {
    if (el) {
      el.style.transitionDuration = value + "ms";
    }
  });
}
function setVisibilityState(els, state2) {
  els.forEach(function(el) {
    if (el) {
      el.setAttribute("data-state", state2);
    }
  });
}
function getOwnerDocument(elementOrElements) {
  var _element$ownerDocumen;
  var _normalizeToArray = normalizeToArray(elementOrElements), element = _normalizeToArray[0];
  return element != null && (_element$ownerDocumen = element.ownerDocument) != null && _element$ownerDocumen.body ? element.ownerDocument : document;
}
function isCursorOutsideInteractiveBorder(popperTreeData, event) {
  var clientX = event.clientX, clientY = event.clientY;
  return popperTreeData.every(function(_ref3) {
    var popperRect = _ref3.popperRect, popperState = _ref3.popperState, props = _ref3.props;
    var interactiveBorder = props.interactiveBorder;
    var basePlacement = getBasePlacement2(popperState.placement);
    var offsetData = popperState.modifiersData.offset;
    if (!offsetData) {
      return true;
    }
    var topDistance = basePlacement === "bottom" ? offsetData.top.y : 0;
    var bottomDistance = basePlacement === "top" ? offsetData.bottom.y : 0;
    var leftDistance = basePlacement === "right" ? offsetData.left.x : 0;
    var rightDistance = basePlacement === "left" ? offsetData.right.x : 0;
    var exceedsTop = popperRect.top - clientY + topDistance > interactiveBorder;
    var exceedsBottom = clientY - popperRect.bottom - bottomDistance > interactiveBorder;
    var exceedsLeft = popperRect.left - clientX + leftDistance > interactiveBorder;
    var exceedsRight = clientX - popperRect.right - rightDistance > interactiveBorder;
    return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight;
  });
}
function updateTransitionEndListener(box, action, listener) {
  var method = action + "EventListener";
  ["transitionend", "webkitTransitionEnd"].forEach(function(event) {
    box[method](event, listener);
  });
}
function actualContains(parent, child) {
  var target = child;
  while (target) {
    var _target$getRootNode;
    if (parent.contains(target)) {
      return true;
    }
    target = target.getRootNode == null ? void 0 : (_target$getRootNode = target.getRootNode()) == null ? void 0 : _target$getRootNode.host;
  }
  return false;
}
var currentInput = {
  isTouch: false
};
var lastMouseMoveTime = 0;
function onDocumentTouchStart() {
  if (currentInput.isTouch) {
    return;
  }
  currentInput.isTouch = true;
  if (window.performance) {
    document.addEventListener("mousemove", onDocumentMouseMove);
  }
}
function onDocumentMouseMove() {
  var now = performance.now();
  if (now - lastMouseMoveTime < 20) {
    currentInput.isTouch = false;
    document.removeEventListener("mousemove", onDocumentMouseMove);
  }
  lastMouseMoveTime = now;
}
function onWindowBlur() {
  var activeElement = document.activeElement;
  if (isReferenceElement(activeElement)) {
    var instance = activeElement._tippy;
    if (activeElement.blur && !instance.state.isVisible) {
      activeElement.blur();
    }
  }
}
function bindGlobalEventListeners() {
  document.addEventListener("touchstart", onDocumentTouchStart, TOUCH_OPTIONS);
  window.addEventListener("blur", onWindowBlur);
}
var isBrowser = typeof window !== "undefined" && typeof document !== "undefined";
var isIE11 = isBrowser ? (
  // @ts-ignore
  !!window.msCrypto
) : false;
function createMemoryLeakWarning(method) {
  var txt = method === "destroy" ? "n already-" : " ";
  return [method + "() was called on a" + txt + "destroyed instance. This is a no-op but", "indicates a potential memory leak."].join(" ");
}
function clean(value) {
  var spacesAndTabs = /[ \t]{2,}/g;
  var lineStartWithSpaces = /^[ \t]*/gm;
  return value.replace(spacesAndTabs, " ").replace(lineStartWithSpaces, "").trim();
}
function getDevMessage(message) {
  return clean("\n  %ctippy.js\n\n  %c" + clean(message) + "\n\n  %c👷‍ This is a development-only message. It will be removed in production.\n  ");
}
function getFormattedMessage(message) {
  return [
    getDevMessage(message),
    // title
    "color: #00C584; font-size: 1.3em; font-weight: bold;",
    // message
    "line-height: 1.5",
    // footer
    "color: #a6a095;"
  ];
}
var visitedMessages;
if (true) {
  resetVisitedMessages();
}
function resetVisitedMessages() {
  visitedMessages = /* @__PURE__ */ new Set();
}
function warnWhen(condition, message) {
  if (condition && !visitedMessages.has(message)) {
    var _console;
    visitedMessages.add(message);
    (_console = console).warn.apply(_console, getFormattedMessage(message));
  }
}
function errorWhen(condition, message) {
  if (condition && !visitedMessages.has(message)) {
    var _console2;
    visitedMessages.add(message);
    (_console2 = console).error.apply(_console2, getFormattedMessage(message));
  }
}
function validateTargets(targets) {
  var didPassFalsyValue = !targets;
  var didPassPlainObject = Object.prototype.toString.call(targets) === "[object Object]" && !targets.addEventListener;
  errorWhen(didPassFalsyValue, ["tippy() was passed", "`" + String(targets) + "`", "as its targets (first) argument. Valid types are: String, Element,", "Element[], or NodeList."].join(" "));
  errorWhen(didPassPlainObject, ["tippy() was passed a plain object which is not supported as an argument", "for virtual positioning. Use props.getReferenceClientRect instead."].join(" "));
}
var pluginProps = {
  animateFill: false,
  followCursor: false,
  inlinePositioning: false,
  sticky: false
};
var renderProps = {
  allowHTML: false,
  animation: "fade",
  arrow: true,
  content: "",
  inertia: false,
  maxWidth: 350,
  role: "tooltip",
  theme: "",
  zIndex: 9999
};
var defaultProps = Object.assign({
  appendTo: TIPPY_DEFAULT_APPEND_TO,
  aria: {
    content: "auto",
    expanded: "auto"
  },
  delay: 0,
  duration: [300, 250],
  getReferenceClientRect: null,
  hideOnClick: true,
  ignoreAttributes: false,
  interactive: false,
  interactiveBorder: 2,
  interactiveDebounce: 0,
  moveTransition: "",
  offset: [0, 10],
  onAfterUpdate: function onAfterUpdate() {
  },
  onBeforeUpdate: function onBeforeUpdate() {
  },
  onCreate: function onCreate() {
  },
  onDestroy: function onDestroy() {
  },
  onHidden: function onHidden() {
  },
  onHide: function onHide() {
  },
  onMount: function onMount() {
  },
  onShow: function onShow() {
  },
  onShown: function onShown() {
  },
  onTrigger: function onTrigger() {
  },
  onUntrigger: function onUntrigger() {
  },
  onClickOutside: function onClickOutside() {
  },
  placement: "top",
  plugins: [],
  popperOptions: {},
  render: null,
  showOnCreate: false,
  touch: true,
  trigger: "mouseenter focus",
  triggerTarget: null
}, pluginProps, renderProps);
var defaultKeys = Object.keys(defaultProps);
var setDefaultProps = function setDefaultProps2(partialProps) {
  if (true) {
    validateProps(partialProps, []);
  }
  var keys = Object.keys(partialProps);
  keys.forEach(function(key) {
    defaultProps[key] = partialProps[key];
  });
};
function getExtendedPassedProps(passedProps) {
  var plugins = passedProps.plugins || [];
  var pluginProps2 = plugins.reduce(function(acc, plugin) {
    var name = plugin.name, defaultValue = plugin.defaultValue;
    if (name) {
      var _name;
      acc[name] = passedProps[name] !== void 0 ? passedProps[name] : (_name = defaultProps[name]) != null ? _name : defaultValue;
    }
    return acc;
  }, {});
  return Object.assign({}, passedProps, pluginProps2);
}
function getDataAttributeProps(reference2, plugins) {
  var propKeys = plugins ? Object.keys(getExtendedPassedProps(Object.assign({}, defaultProps, {
    plugins
  }))) : defaultKeys;
  var props = propKeys.reduce(function(acc, key) {
    var valueAsString = (reference2.getAttribute("data-tippy-" + key) || "").trim();
    if (!valueAsString) {
      return acc;
    }
    if (key === "content") {
      acc[key] = valueAsString;
    } else {
      try {
        acc[key] = JSON.parse(valueAsString);
      } catch (e) {
        acc[key] = valueAsString;
      }
    }
    return acc;
  }, {});
  return props;
}
function evaluateProps(reference2, props) {
  var out = Object.assign({}, props, {
    content: invokeWithArgsOrReturn(props.content, [reference2])
  }, props.ignoreAttributes ? {} : getDataAttributeProps(reference2, props.plugins));
  out.aria = Object.assign({}, defaultProps.aria, out.aria);
  out.aria = {
    expanded: out.aria.expanded === "auto" ? props.interactive : out.aria.expanded,
    content: out.aria.content === "auto" ? props.interactive ? null : "describedby" : out.aria.content
  };
  return out;
}
function validateProps(partialProps, plugins) {
  if (partialProps === void 0) {
    partialProps = {};
  }
  if (plugins === void 0) {
    plugins = [];
  }
  var keys = Object.keys(partialProps);
  keys.forEach(function(prop) {
    var nonPluginProps = removeProperties(defaultProps, Object.keys(pluginProps));
    var didPassUnknownProp = !hasOwnProperty(nonPluginProps, prop);
    if (didPassUnknownProp) {
      didPassUnknownProp = plugins.filter(function(plugin) {
        return plugin.name === prop;
      }).length === 0;
    }
    warnWhen(didPassUnknownProp, ["`" + prop + "`", "is not a valid prop. You may have spelled it incorrectly, or if it's", "a plugin, forgot to pass it in an array as props.plugins.", "\n\n", "All props: https://atomiks.github.io/tippyjs/v6/all-props/\n", "Plugins: https://atomiks.github.io/tippyjs/v6/plugins/"].join(" "));
  });
}
var innerHTML = function innerHTML2() {
  return "innerHTML";
};
function dangerouslySetInnerHTML(element, html2) {
  element[innerHTML()] = html2;
}
function createArrowElement(value) {
  var arrow3 = div();
  if (value === true) {
    arrow3.className = ARROW_CLASS;
  } else {
    arrow3.className = SVG_ARROW_CLASS;
    if (isElement2(value)) {
      arrow3.appendChild(value);
    } else {
      dangerouslySetInnerHTML(arrow3, value);
    }
  }
  return arrow3;
}
function setContent(content, props) {
  if (isElement2(props.content)) {
    dangerouslySetInnerHTML(content, "");
    content.appendChild(props.content);
  } else if (typeof props.content !== "function") {
    if (props.allowHTML) {
      dangerouslySetInnerHTML(content, props.content);
    } else {
      content.textContent = props.content;
    }
  }
}
function getChildren(popper2) {
  var box = popper2.firstElementChild;
  var boxChildren = arrayFrom(box.children);
  return {
    box,
    content: boxChildren.find(function(node2) {
      return node2.classList.contains(CONTENT_CLASS);
    }),
    arrow: boxChildren.find(function(node2) {
      return node2.classList.contains(ARROW_CLASS) || node2.classList.contains(SVG_ARROW_CLASS);
    }),
    backdrop: boxChildren.find(function(node2) {
      return node2.classList.contains(BACKDROP_CLASS);
    })
  };
}
function render2(instance) {
  var popper2 = div();
  var box = div();
  box.className = BOX_CLASS;
  box.setAttribute("data-state", "hidden");
  box.setAttribute("tabindex", "-1");
  var content = div();
  content.className = CONTENT_CLASS;
  content.setAttribute("data-state", "hidden");
  setContent(content, instance.props);
  popper2.appendChild(box);
  box.appendChild(content);
  onUpdate(instance.props, instance.props);
  function onUpdate(prevProps, nextProps) {
    var _getChildren = getChildren(popper2), box2 = _getChildren.box, content2 = _getChildren.content, arrow3 = _getChildren.arrow;
    if (nextProps.theme) {
      box2.setAttribute("data-theme", nextProps.theme);
    } else {
      box2.removeAttribute("data-theme");
    }
    if (typeof nextProps.animation === "string") {
      box2.setAttribute("data-animation", nextProps.animation);
    } else {
      box2.removeAttribute("data-animation");
    }
    if (nextProps.inertia) {
      box2.setAttribute("data-inertia", "");
    } else {
      box2.removeAttribute("data-inertia");
    }
    box2.style.maxWidth = typeof nextProps.maxWidth === "number" ? nextProps.maxWidth + "px" : nextProps.maxWidth;
    if (nextProps.role) {
      box2.setAttribute("role", nextProps.role);
    } else {
      box2.removeAttribute("role");
    }
    if (prevProps.content !== nextProps.content || prevProps.allowHTML !== nextProps.allowHTML) {
      setContent(content2, instance.props);
    }
    if (nextProps.arrow) {
      if (!arrow3) {
        box2.appendChild(createArrowElement(nextProps.arrow));
      } else if (prevProps.arrow !== nextProps.arrow) {
        box2.removeChild(arrow3);
        box2.appendChild(createArrowElement(nextProps.arrow));
      }
    } else if (arrow3) {
      box2.removeChild(arrow3);
    }
  }
  return {
    popper: popper2,
    onUpdate
  };
}
render2.$$tippy = true;
var idCounter = 1;
var mouseMoveListeners = [];
var mountedInstances = [];
function createTippy(reference2, passedProps) {
  var props = evaluateProps(reference2, Object.assign({}, defaultProps, getExtendedPassedProps(removeUndefinedProps(passedProps))));
  var showTimeout;
  var hideTimeout;
  var scheduleHideAnimationFrame;
  var isVisibleFromClick = false;
  var didHideDueToDocumentMouseDown = false;
  var didTouchMove = false;
  var ignoreOnFirstUpdate = false;
  var lastTriggerEvent;
  var currentTransitionEndListener;
  var onFirstUpdate;
  var listeners = [];
  var debouncedOnMouseMove = debounce3(onMouseMove, props.interactiveDebounce);
  var currentTarget;
  var id2 = idCounter++;
  var popperInstance = null;
  var plugins = unique(props.plugins);
  var state2 = {
    // Is the instance currently enabled?
    isEnabled: true,
    // Is the tippy currently showing and not transitioning out?
    isVisible: false,
    // Has the instance been destroyed?
    isDestroyed: false,
    // Is the tippy currently mounted to the DOM?
    isMounted: false,
    // Has the tippy finished transitioning in?
    isShown: false
  };
  var instance = {
    // properties
    id: id2,
    reference: reference2,
    popper: div(),
    popperInstance,
    props,
    state: state2,
    plugins,
    // methods
    clearDelayTimeouts,
    setProps,
    setContent: setContent2,
    show,
    hide: hide3,
    hideWithInteractivity,
    enable,
    disable,
    unmount,
    destroy
  };
  if (!props.render) {
    if (true) {
      errorWhen(true, "render() function has not been supplied.");
    }
    return instance;
  }
  var _props$render = props.render(instance), popper2 = _props$render.popper, onUpdate = _props$render.onUpdate;
  popper2.setAttribute("data-tippy-root", "");
  popper2.id = "tippy-" + instance.id;
  instance.popper = popper2;
  reference2._tippy = instance;
  popper2._tippy = instance;
  var pluginsHooks = plugins.map(function(plugin) {
    return plugin.fn(instance);
  });
  var hasAriaExpanded = reference2.hasAttribute("aria-expanded");
  addListeners();
  handleAriaExpandedAttribute();
  handleStyles();
  invokeHook("onCreate", [instance]);
  if (props.showOnCreate) {
    scheduleShow();
  }
  popper2.addEventListener("mouseenter", function() {
    if (instance.props.interactive && instance.state.isVisible) {
      instance.clearDelayTimeouts();
    }
  });
  popper2.addEventListener("mouseleave", function() {
    if (instance.props.interactive && instance.props.trigger.indexOf("mouseenter") >= 0) {
      getDocument().addEventListener("mousemove", debouncedOnMouseMove);
    }
  });
  return instance;
  function getNormalizedTouchSettings() {
    var touch = instance.props.touch;
    return Array.isArray(touch) ? touch : [touch, 0];
  }
  function getIsCustomTouchBehavior() {
    return getNormalizedTouchSettings()[0] === "hold";
  }
  function getIsDefaultRenderFn() {
    var _instance$props$rende;
    return !!((_instance$props$rende = instance.props.render) != null && _instance$props$rende.$$tippy);
  }
  function getCurrentTarget() {
    return currentTarget || reference2;
  }
  function getDocument() {
    var parent = getCurrentTarget().parentNode;
    return parent ? getOwnerDocument(parent) : document;
  }
  function getDefaultTemplateChildren() {
    return getChildren(popper2);
  }
  function getDelay(isShow) {
    if (instance.state.isMounted && !instance.state.isVisible || currentInput.isTouch || lastTriggerEvent && lastTriggerEvent.type === "focus") {
      return 0;
    }
    return getValueAtIndexOrReturn(instance.props.delay, isShow ? 0 : 1, defaultProps.delay);
  }
  function handleStyles(fromHide) {
    if (fromHide === void 0) {
      fromHide = false;
    }
    popper2.style.pointerEvents = instance.props.interactive && !fromHide ? "" : "none";
    popper2.style.zIndex = "" + instance.props.zIndex;
  }
  function invokeHook(hook, args, shouldInvokePropsHook) {
    if (shouldInvokePropsHook === void 0) {
      shouldInvokePropsHook = true;
    }
    pluginsHooks.forEach(function(pluginHooks) {
      if (pluginHooks[hook]) {
        pluginHooks[hook].apply(pluginHooks, args);
      }
    });
    if (shouldInvokePropsHook) {
      var _instance$props;
      (_instance$props = instance.props)[hook].apply(_instance$props, args);
    }
  }
  function handleAriaContentAttribute() {
    var aria = instance.props.aria;
    if (!aria.content) {
      return;
    }
    var attr = "aria-" + aria.content;
    var id3 = popper2.id;
    var nodes = normalizeToArray(instance.props.triggerTarget || reference2);
    nodes.forEach(function(node2) {
      var currentValue = node2.getAttribute(attr);
      if (instance.state.isVisible) {
        node2.setAttribute(attr, currentValue ? currentValue + " " + id3 : id3);
      } else {
        var nextValue = currentValue && currentValue.replace(id3, "").trim();
        if (nextValue) {
          node2.setAttribute(attr, nextValue);
        } else {
          node2.removeAttribute(attr);
        }
      }
    });
  }
  function handleAriaExpandedAttribute() {
    if (hasAriaExpanded || !instance.props.aria.expanded) {
      return;
    }
    var nodes = normalizeToArray(instance.props.triggerTarget || reference2);
    nodes.forEach(function(node2) {
      if (instance.props.interactive) {
        node2.setAttribute("aria-expanded", instance.state.isVisible && node2 === getCurrentTarget() ? "true" : "false");
      } else {
        node2.removeAttribute("aria-expanded");
      }
    });
  }
  function cleanupInteractiveMouseListeners() {
    getDocument().removeEventListener("mousemove", debouncedOnMouseMove);
    mouseMoveListeners = mouseMoveListeners.filter(function(listener) {
      return listener !== debouncedOnMouseMove;
    });
  }
  function onDocumentPress(event) {
    if (currentInput.isTouch) {
      if (didTouchMove || event.type === "mousedown") {
        return;
      }
    }
    var actualTarget = event.composedPath && event.composedPath()[0] || event.target;
    if (instance.props.interactive && actualContains(popper2, actualTarget)) {
      return;
    }
    if (normalizeToArray(instance.props.triggerTarget || reference2).some(function(el) {
      return actualContains(el, actualTarget);
    })) {
      if (currentInput.isTouch) {
        return;
      }
      if (instance.state.isVisible && instance.props.trigger.indexOf("click") >= 0) {
        return;
      }
    } else {
      invokeHook("onClickOutside", [instance, event]);
    }
    if (instance.props.hideOnClick === true) {
      instance.clearDelayTimeouts();
      instance.hide();
      didHideDueToDocumentMouseDown = true;
      setTimeout(function() {
        didHideDueToDocumentMouseDown = false;
      });
      if (!instance.state.isMounted) {
        removeDocumentPress();
      }
    }
  }
  function onTouchMove() {
    didTouchMove = true;
  }
  function onTouchStart() {
    didTouchMove = false;
  }
  function addDocumentPress() {
    var doc = getDocument();
    doc.addEventListener("mousedown", onDocumentPress, true);
    doc.addEventListener("touchend", onDocumentPress, TOUCH_OPTIONS);
    doc.addEventListener("touchstart", onTouchStart, TOUCH_OPTIONS);
    doc.addEventListener("touchmove", onTouchMove, TOUCH_OPTIONS);
  }
  function removeDocumentPress() {
    var doc = getDocument();
    doc.removeEventListener("mousedown", onDocumentPress, true);
    doc.removeEventListener("touchend", onDocumentPress, TOUCH_OPTIONS);
    doc.removeEventListener("touchstart", onTouchStart, TOUCH_OPTIONS);
    doc.removeEventListener("touchmove", onTouchMove, TOUCH_OPTIONS);
  }
  function onTransitionedOut(duration, callback) {
    onTransitionEnd(duration, function() {
      if (!instance.state.isVisible && popper2.parentNode && popper2.parentNode.contains(popper2)) {
        callback();
      }
    });
  }
  function onTransitionedIn(duration, callback) {
    onTransitionEnd(duration, callback);
  }
  function onTransitionEnd(duration, callback) {
    var box = getDefaultTemplateChildren().box;
    function listener(event) {
      if (event.target === box) {
        updateTransitionEndListener(box, "remove", listener);
        callback();
      }
    }
    if (duration === 0) {
      return callback();
    }
    updateTransitionEndListener(box, "remove", currentTransitionEndListener);
    updateTransitionEndListener(box, "add", listener);
    currentTransitionEndListener = listener;
  }
  function on(eventType, handler, options2) {
    if (options2 === void 0) {
      options2 = false;
    }
    var nodes = normalizeToArray(instance.props.triggerTarget || reference2);
    nodes.forEach(function(node2) {
      node2.addEventListener(eventType, handler, options2);
      listeners.push({
        node: node2,
        eventType,
        handler,
        options: options2
      });
    });
  }
  function addListeners() {
    if (getIsCustomTouchBehavior()) {
      on("touchstart", onTrigger2, {
        passive: true
      });
      on("touchend", onMouseLeave, {
        passive: true
      });
    }
    splitBySpaces(instance.props.trigger).forEach(function(eventType) {
      if (eventType === "manual") {
        return;
      }
      on(eventType, onTrigger2);
      switch (eventType) {
        case "mouseenter":
          on("mouseleave", onMouseLeave);
          break;
        case "focus":
          on(isIE11 ? "focusout" : "blur", onBlurOrFocusOut);
          break;
        case "focusin":
          on("focusout", onBlurOrFocusOut);
          break;
      }
    });
  }
  function removeListeners() {
    listeners.forEach(function(_ref3) {
      var node2 = _ref3.node, eventType = _ref3.eventType, handler = _ref3.handler, options2 = _ref3.options;
      node2.removeEventListener(eventType, handler, options2);
    });
    listeners = [];
  }
  function onTrigger2(event) {
    var _lastTriggerEvent;
    var shouldScheduleClickHide = false;
    if (!instance.state.isEnabled || isEventListenerStopped(event) || didHideDueToDocumentMouseDown) {
      return;
    }
    var wasFocused = ((_lastTriggerEvent = lastTriggerEvent) == null ? void 0 : _lastTriggerEvent.type) === "focus";
    lastTriggerEvent = event;
    currentTarget = event.currentTarget;
    handleAriaExpandedAttribute();
    if (!instance.state.isVisible && isMouseEvent(event)) {
      mouseMoveListeners.forEach(function(listener) {
        return listener(event);
      });
    }
    if (event.type === "click" && (instance.props.trigger.indexOf("mouseenter") < 0 || isVisibleFromClick) && instance.props.hideOnClick !== false && instance.state.isVisible) {
      shouldScheduleClickHide = true;
    } else {
      scheduleShow(event);
    }
    if (event.type === "click") {
      isVisibleFromClick = !shouldScheduleClickHide;
    }
    if (shouldScheduleClickHide && !wasFocused) {
      scheduleHide(event);
    }
  }
  function onMouseMove(event) {
    var target = event.target;
    var isCursorOverReferenceOrPopper = getCurrentTarget().contains(target) || popper2.contains(target);
    if (event.type === "mousemove" && isCursorOverReferenceOrPopper) {
      return;
    }
    var popperTreeData = getNestedPopperTree().concat(popper2).map(function(popper3) {
      var _instance$popperInsta;
      var instance2 = popper3._tippy;
      var state3 = (_instance$popperInsta = instance2.popperInstance) == null ? void 0 : _instance$popperInsta.state;
      if (state3) {
        return {
          popperRect: popper3.getBoundingClientRect(),
          popperState: state3,
          props
        };
      }
      return null;
    }).filter(Boolean);
    if (isCursorOutsideInteractiveBorder(popperTreeData, event)) {
      cleanupInteractiveMouseListeners();
      scheduleHide(event);
    }
  }
  function onMouseLeave(event) {
    var shouldBail = isEventListenerStopped(event) || instance.props.trigger.indexOf("click") >= 0 && isVisibleFromClick;
    if (shouldBail) {
      return;
    }
    if (instance.props.interactive) {
      instance.hideWithInteractivity(event);
      return;
    }
    scheduleHide(event);
  }
  function onBlurOrFocusOut(event) {
    if (instance.props.trigger.indexOf("focusin") < 0 && event.target !== getCurrentTarget()) {
      return;
    }
    if (instance.props.interactive && event.relatedTarget && popper2.contains(event.relatedTarget)) {
      return;
    }
    scheduleHide(event);
  }
  function isEventListenerStopped(event) {
    return currentInput.isTouch ? getIsCustomTouchBehavior() !== event.type.indexOf("touch") >= 0 : false;
  }
  function createPopperInstance() {
    destroyPopperInstance();
    var _instance$props2 = instance.props, popperOptions = _instance$props2.popperOptions, placement = _instance$props2.placement, offset4 = _instance$props2.offset, getReferenceClientRect = _instance$props2.getReferenceClientRect, moveTransition = _instance$props2.moveTransition;
    var arrow3 = getIsDefaultRenderFn() ? getChildren(popper2).arrow : null;
    var computedReference = getReferenceClientRect ? {
      getBoundingClientRect: getReferenceClientRect,
      contextElement: getReferenceClientRect.contextElement || getCurrentTarget()
    } : reference2;
    var tippyModifier = {
      name: "$$tippy",
      enabled: true,
      phase: "beforeWrite",
      requires: ["computeStyles"],
      fn: function fn2(_ref23) {
        var state3 = _ref23.state;
        if (getIsDefaultRenderFn()) {
          var _getDefaultTemplateCh = getDefaultTemplateChildren(), box = _getDefaultTemplateCh.box;
          ["placement", "reference-hidden", "escaped"].forEach(function(attr) {
            if (attr === "placement") {
              box.setAttribute("data-placement", state3.placement);
            } else {
              if (state3.attributes.popper["data-popper-" + attr]) {
                box.setAttribute("data-" + attr, "");
              } else {
                box.removeAttribute("data-" + attr);
              }
            }
          });
          state3.attributes.popper = {};
        }
      }
    };
    var modifiers = [{
      name: "offset",
      options: {
        offset: offset4
      }
    }, {
      name: "preventOverflow",
      options: {
        padding: {
          top: 2,
          bottom: 2,
          left: 5,
          right: 5
        }
      }
    }, {
      name: "flip",
      options: {
        padding: 5
      }
    }, {
      name: "computeStyles",
      options: {
        adaptive: !moveTransition
      }
    }, tippyModifier];
    if (getIsDefaultRenderFn() && arrow3) {
      modifiers.push({
        name: "arrow",
        options: {
          element: arrow3,
          padding: 3
        }
      });
    }
    modifiers.push.apply(modifiers, (popperOptions == null ? void 0 : popperOptions.modifiers) || []);
    instance.popperInstance = createPopper3(computedReference, popper2, Object.assign({}, popperOptions, {
      placement,
      onFirstUpdate,
      modifiers
    }));
  }
  function destroyPopperInstance() {
    if (instance.popperInstance) {
      instance.popperInstance.destroy();
      instance.popperInstance = null;
    }
  }
  function mount() {
    var appendTo = instance.props.appendTo;
    var parentNode;
    var node2 = getCurrentTarget();
    if (instance.props.interactive && appendTo === TIPPY_DEFAULT_APPEND_TO || appendTo === "parent") {
      parentNode = node2.parentNode;
    } else {
      parentNode = invokeWithArgsOrReturn(appendTo, [node2]);
    }
    if (!parentNode.contains(popper2)) {
      parentNode.appendChild(popper2);
    }
    instance.state.isMounted = true;
    createPopperInstance();
    if (true) {
      warnWhen(instance.props.interactive && appendTo === defaultProps.appendTo && node2.nextElementSibling !== popper2, ["Interactive tippy element may not be accessible via keyboard", "navigation because it is not directly after the reference element", "in the DOM source order.", "\n\n", "Using a wrapper <div> or <span> tag around the reference element", "solves this by creating a new parentNode context.", "\n\n", "Specifying `appendTo: document.body` silences this warning, but it", "assumes you are using a focus management solution to handle", "keyboard navigation.", "\n\n", "See: https://atomiks.github.io/tippyjs/v6/accessibility/#interactivity"].join(" "));
    }
  }
  function getNestedPopperTree() {
    return arrayFrom(popper2.querySelectorAll("[data-tippy-root]"));
  }
  function scheduleShow(event) {
    instance.clearDelayTimeouts();
    if (event) {
      invokeHook("onTrigger", [instance, event]);
    }
    addDocumentPress();
    var delay = getDelay(true);
    var _getNormalizedTouchSe = getNormalizedTouchSettings(), touchValue = _getNormalizedTouchSe[0], touchDelay = _getNormalizedTouchSe[1];
    if (currentInput.isTouch && touchValue === "hold" && touchDelay) {
      delay = touchDelay;
    }
    if (delay) {
      showTimeout = setTimeout(function() {
        instance.show();
      }, delay);
    } else {
      instance.show();
    }
  }
  function scheduleHide(event) {
    instance.clearDelayTimeouts();
    invokeHook("onUntrigger", [instance, event]);
    if (!instance.state.isVisible) {
      removeDocumentPress();
      return;
    }
    if (instance.props.trigger.indexOf("mouseenter") >= 0 && instance.props.trigger.indexOf("click") >= 0 && ["mouseleave", "mousemove"].indexOf(event.type) >= 0 && isVisibleFromClick) {
      return;
    }
    var delay = getDelay(false);
    if (delay) {
      hideTimeout = setTimeout(function() {
        if (instance.state.isVisible) {
          instance.hide();
        }
      }, delay);
    } else {
      scheduleHideAnimationFrame = requestAnimationFrame(function() {
        instance.hide();
      });
    }
  }
  function enable() {
    instance.state.isEnabled = true;
  }
  function disable() {
    instance.hide();
    instance.state.isEnabled = false;
  }
  function clearDelayTimeouts() {
    clearTimeout(showTimeout);
    clearTimeout(hideTimeout);
    cancelAnimationFrame(scheduleHideAnimationFrame);
  }
  function setProps(partialProps) {
    if (true) {
      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning("setProps"));
    }
    if (instance.state.isDestroyed) {
      return;
    }
    invokeHook("onBeforeUpdate", [instance, partialProps]);
    removeListeners();
    var prevProps = instance.props;
    var nextProps = evaluateProps(reference2, Object.assign({}, prevProps, removeUndefinedProps(partialProps), {
      ignoreAttributes: true
    }));
    instance.props = nextProps;
    addListeners();
    if (prevProps.interactiveDebounce !== nextProps.interactiveDebounce) {
      cleanupInteractiveMouseListeners();
      debouncedOnMouseMove = debounce3(onMouseMove, nextProps.interactiveDebounce);
    }
    if (prevProps.triggerTarget && !nextProps.triggerTarget) {
      normalizeToArray(prevProps.triggerTarget).forEach(function(node2) {
        node2.removeAttribute("aria-expanded");
      });
    } else if (nextProps.triggerTarget) {
      reference2.removeAttribute("aria-expanded");
    }
    handleAriaExpandedAttribute();
    handleStyles();
    if (onUpdate) {
      onUpdate(prevProps, nextProps);
    }
    if (instance.popperInstance) {
      createPopperInstance();
      getNestedPopperTree().forEach(function(nestedPopper) {
        requestAnimationFrame(nestedPopper._tippy.popperInstance.forceUpdate);
      });
    }
    invokeHook("onAfterUpdate", [instance, partialProps]);
  }
  function setContent2(content) {
    instance.setProps({
      content
    });
  }
  function show() {
    if (true) {
      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning("show"));
    }
    var isAlreadyVisible = instance.state.isVisible;
    var isDestroyed = instance.state.isDestroyed;
    var isDisabled = !instance.state.isEnabled;
    var isTouchAndTouchDisabled = currentInput.isTouch && !instance.props.touch;
    var duration = getValueAtIndexOrReturn(instance.props.duration, 0, defaultProps.duration);
    if (isAlreadyVisible || isDestroyed || isDisabled || isTouchAndTouchDisabled) {
      return;
    }
    if (getCurrentTarget().hasAttribute("disabled")) {
      return;
    }
    invokeHook("onShow", [instance], false);
    if (instance.props.onShow(instance) === false) {
      return;
    }
    instance.state.isVisible = true;
    if (getIsDefaultRenderFn()) {
      popper2.style.visibility = "visible";
    }
    handleStyles();
    addDocumentPress();
    if (!instance.state.isMounted) {
      popper2.style.transition = "none";
    }
    if (getIsDefaultRenderFn()) {
      var _getDefaultTemplateCh2 = getDefaultTemplateChildren(), box = _getDefaultTemplateCh2.box, content = _getDefaultTemplateCh2.content;
      setTransitionDuration([box, content], 0);
    }
    onFirstUpdate = function onFirstUpdate2() {
      var _instance$popperInsta2;
      if (!instance.state.isVisible || ignoreOnFirstUpdate) {
        return;
      }
      ignoreOnFirstUpdate = true;
      void popper2.offsetHeight;
      popper2.style.transition = instance.props.moveTransition;
      if (getIsDefaultRenderFn() && instance.props.animation) {
        var _getDefaultTemplateCh3 = getDefaultTemplateChildren(), _box = _getDefaultTemplateCh3.box, _content = _getDefaultTemplateCh3.content;
        setTransitionDuration([_box, _content], duration);
        setVisibilityState([_box, _content], "visible");
      }
      handleAriaContentAttribute();
      handleAriaExpandedAttribute();
      pushIfUnique(mountedInstances, instance);
      (_instance$popperInsta2 = instance.popperInstance) == null ? void 0 : _instance$popperInsta2.forceUpdate();
      invokeHook("onMount", [instance]);
      if (instance.props.animation && getIsDefaultRenderFn()) {
        onTransitionedIn(duration, function() {
          instance.state.isShown = true;
          invokeHook("onShown", [instance]);
        });
      }
    };
    mount();
  }
  function hide3() {
    if (true) {
      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning("hide"));
    }
    var isAlreadyHidden = !instance.state.isVisible;
    var isDestroyed = instance.state.isDestroyed;
    var isDisabled = !instance.state.isEnabled;
    var duration = getValueAtIndexOrReturn(instance.props.duration, 1, defaultProps.duration);
    if (isAlreadyHidden || isDestroyed || isDisabled) {
      return;
    }
    invokeHook("onHide", [instance], false);
    if (instance.props.onHide(instance) === false) {
      return;
    }
    instance.state.isVisible = false;
    instance.state.isShown = false;
    ignoreOnFirstUpdate = false;
    isVisibleFromClick = false;
    if (getIsDefaultRenderFn()) {
      popper2.style.visibility = "hidden";
    }
    cleanupInteractiveMouseListeners();
    removeDocumentPress();
    handleStyles(true);
    if (getIsDefaultRenderFn()) {
      var _getDefaultTemplateCh4 = getDefaultTemplateChildren(), box = _getDefaultTemplateCh4.box, content = _getDefaultTemplateCh4.content;
      if (instance.props.animation) {
        setTransitionDuration([box, content], duration);
        setVisibilityState([box, content], "hidden");
      }
    }
    handleAriaContentAttribute();
    handleAriaExpandedAttribute();
    if (instance.props.animation) {
      if (getIsDefaultRenderFn()) {
        onTransitionedOut(duration, instance.unmount);
      }
    } else {
      instance.unmount();
    }
  }
  function hideWithInteractivity(event) {
    if (true) {
      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning("hideWithInteractivity"));
    }
    getDocument().addEventListener("mousemove", debouncedOnMouseMove);
    pushIfUnique(mouseMoveListeners, debouncedOnMouseMove);
    debouncedOnMouseMove(event);
  }
  function unmount() {
    if (true) {
      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning("unmount"));
    }
    if (instance.state.isVisible) {
      instance.hide();
    }
    if (!instance.state.isMounted) {
      return;
    }
    destroyPopperInstance();
    getNestedPopperTree().forEach(function(nestedPopper) {
      nestedPopper._tippy.unmount();
    });
    if (popper2.parentNode) {
      popper2.parentNode.removeChild(popper2);
    }
    mountedInstances = mountedInstances.filter(function(i) {
      return i !== instance;
    });
    instance.state.isMounted = false;
    invokeHook("onHidden", [instance]);
  }
  function destroy() {
    if (true) {
      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning("destroy"));
    }
    if (instance.state.isDestroyed) {
      return;
    }
    instance.clearDelayTimeouts();
    instance.unmount();
    removeListeners();
    delete reference2._tippy;
    instance.state.isDestroyed = true;
    invokeHook("onDestroy", [instance]);
  }
}
function tippy(targets, optionalProps) {
  if (optionalProps === void 0) {
    optionalProps = {};
  }
  var plugins = defaultProps.plugins.concat(optionalProps.plugins || []);
  if (true) {
    validateTargets(targets);
    validateProps(optionalProps, plugins);
  }
  bindGlobalEventListeners();
  var passedProps = Object.assign({}, optionalProps, {
    plugins
  });
  var elements = getArrayOfElements(targets);
  if (true) {
    var isSingleContentElement = isElement2(passedProps.content);
    var isMoreThanOneReferenceElement = elements.length > 1;
    warnWhen(isSingleContentElement && isMoreThanOneReferenceElement, ["tippy() was passed an Element as the `content` prop, but more than", "one tippy instance was created by this invocation. This means the", "content element will only be appended to the last tippy instance.", "\n\n", "Instead, pass the .innerHTML of the element, or use a function that", "returns a cloned version of the element instead.", "\n\n", "1) content: element.innerHTML\n", "2) content: () => element.cloneNode(true)"].join(" "));
  }
  var instances = elements.reduce(function(acc, reference2) {
    var instance = reference2 && createTippy(reference2, passedProps);
    if (instance) {
      acc.push(instance);
    }
    return acc;
  }, []);
  return isElement2(targets) ? instances[0] : instances;
}
tippy.defaultProps = defaultProps;
tippy.setDefaultProps = setDefaultProps;
tippy.currentInput = currentInput;
var applyStylesModifier = Object.assign({}, applyStyles_default, {
  effect: function effect4(_ref3) {
    var state2 = _ref3.state;
    var initialStyles = {
      popper: {
        position: state2.options.strategy,
        left: "0",
        top: "0",
        margin: "0"
      },
      arrow: {
        position: "absolute"
      },
      reference: {}
    };
    Object.assign(state2.elements.popper.style, initialStyles.popper);
    state2.styles = initialStyles;
    if (state2.elements.arrow) {
      Object.assign(state2.elements.arrow.style, initialStyles.arrow);
    }
  }
});
tippy.setDefaultProps({
  render: render2
});
var tippy_esm_default = tippy;

// node_modules/@here/hds-tooltip/build/hds-tooltip.js
var Tooltip = class Tooltip2 extends LitElement {
  constructor() {
    super();
    this.position = "bottom";
    this.interactive = false;
    this.trigger = "mouseenter focus";
    this.isDisabled = false;
    this.hide = this.hide.bind(this);
  }
  get disabled() {
    return this.isDisabled;
  }
  set disabled(value) {
    var _a6;
    const oldVal = this.isDisabled;
    this.isDisabled = value;
    if ((_a6 = this.tooltipInstance) == null ? void 0 : _a6.length) {
      if (this.isDisabled) {
        this.tooltipInstance[0].disable();
      } else {
        this.tooltipInstance[0].enable();
      }
    }
    this.requestUpdate("disable", oldVal);
  }
  get tippyInstance() {
    return this.tooltipInstance;
  }
  connectedCallback() {
    super.connectedCallback();
    this.hide();
  }
  firstUpdated() {
    this.createTooltip();
  }
  disconnectedCallback() {
    super.disconnectedCallback();
    this.destroyTooltip();
  }
  hide() {
    this.destroyTooltip();
  }
  render() {
    return html`<span>
      <slot></slot>
    </span>`;
  }
  createTooltip() {
    var _a6;
    if (!this.id) {
      return;
    }
    const parent = closestElement("[data-theme^='hds-']", this) || this.parentElement;
    this.tooltipInstance = tippy_esm_default(`[data-hds-tooltip=${this.id}]`, {
      content: this.children[0],
      placement: this.position,
      allowHTML: true,
      interactive: this.interactive,
      maxWidth: 256,
      theme: "hds",
      appendTo: () => parent,
      trigger: this.trigger,
      offset: [0, 15]
    });
    if (this.disabled) {
      if ((_a6 = this.tooltipInstance) == null ? void 0 : _a6.length) {
        this.tooltipInstance[0].disable();
      }
    }
  }
  destroyTooltip() {
    if (this.tooltipInstance) {
      this.tooltipInstance.forEach((instance) => instance.destroy());
      this.tooltipInstance = null;
    }
  }
};
Tooltip.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: String })
], Tooltip.prototype, "position", void 0);
__decorate([
  property({ type: Boolean })
], Tooltip.prototype, "interactive", void 0);
__decorate([
  property({ type: String })
], Tooltip.prototype, "trigger", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Tooltip.prototype, "disabled", null);
Tooltip = __decorate([
  customElement("hds-tooltip")
], Tooltip);

// node_modules/@here/hds-breadcrumb/build/hds-breadcrumb-item.css.js
var styles4 = css`
:host(:focus){outline:0}.breadcrumb-item{--hds-icon-color:var(--hds-foreground-tertiary);align-items:center;display:flex;font:var(--hds-body-extrasmall-font);height:1.25rem;letter-spacing:var(--hds-body-extrasmall-letter-spacing);margin-right:var(--hds-spacing-2);-webkit-text-decoration:var(--hds-body-extrasmall-text-decoration,inherit);text-decoration:var(--hds-body-extrasmall-text-decoration,inherit)}.breadcrumb-item:focus:not(:focus-visible),.breadcrumb-item:hover{outline:none}.breadcrumb-item .breadcrumb-link{display:flex}.breadcrumb-item .breadcrumb-link:focus-visible{outline:var(--hds-object-focused) solid .0625rem}.breadcrumb-item ::slotted(a){color:var(--hds-foreground-secondary)!important;cursor:pointer!important;font:inherit!important;letter-spacing:inherit!important;text-decoration:none!important;transition:color .15s ease-in-out!important}.breadcrumb-item ::slotted(a):after{content:"";display:block}.breadcrumb-item ::slotted(a:hover){color:var(--hds-foreground-secondary-hover)!important}.breadcrumb-item ::slotted(a:focus-visible){color:var(--hds-foreground-secondary-hover)!important;outline:var(--hds-object-focused) solid .0625rem!important}.breadcrumb-item .breadcrumb-text-truncate>::slotted(*){max-width:10rem!important;overflow:hidden!important;text-overflow:ellipsis!important;white-space:nowrap}.breadcrumb-item .active{color:var(--hds-foreground-primary)}.breadcrumb-item .breadcrumb-arrow{margin-left:var(--hds-spacing-2);pointer-events:none}.breadcrumb-item .breadcrumb-ellipsis{--hds-icon-color:var(--hds-foreground-secondary);color:var(--hds-foreground-secondary);cursor:pointer}.breadcrumb-item .breadcrumb-ellipsis:focus-visible,.breadcrumb-item .breadcrumb-ellipsis:hover{--hds-icon-color:var(--hds-foreground-secondary-hover);color:var(--hds-foreground-secondary-hover)}.breadcrumb-item .breadcrumb-ellipsis:focus-visible{outline:var(--hds-object-focused) solid .0625rem}
`;

// node_modules/@here/hds-breadcrumb/build/hds-breadcrumb-item.js
var BreadcrumbItem_1;
var BreadcrumbItem = BreadcrumbItem_1 = class BreadcrumbItem2 extends LitElement {
  constructor() {
    super(...arguments);
    this.active = false;
    this.visible = true;
    this.isEllipsis = false;
    this.isLastItem = false;
    this.hasTooltip = false;
    this._handleKeydown = (e) => {
      let customKeyEvent = false;
      switch (e.key) {
        case "Enter":
        case " ":
          if (this.ellipsisContainer) {
            this.ellipsisContainer.click();
            customKeyEvent = true;
          } else {
            this.itemContentSlot.assignedNodes()[0].click();
            customKeyEvent = true;
          }
          break;
      }
      if (customKeyEvent) {
        e.stopPropagation();
        e.preventDefault();
      }
    };
  }
  connectedCallback() {
    super.connectedCallback && super.connectedCallback();
    this.id = this.id || `hds-breadcrumb-item-${BreadcrumbItem_1.itemCounter += 1}`;
    this.setAttribute("data-hds-tooltip", this.id);
  }
  render() {
    return html` ${this._renderAsLink()} `;
  }
  _handleSlotChange() {
    this.itemContentSlot.assignedElements().forEach((el) => {
      const isEllipsisActive = el instanceof HTMLElement && el.offsetWidth < el.scrollWidth;
      if (isEllipsisActive) {
        this.hasTooltip = true;
      }
    });
  }
  renderTooltip() {
    if (this.hasTooltip) {
      return html`
        <hds-tooltip id="${this.id}">
          <div style="word-break: break-all">${this.textContent}</div>
        </hds-tooltip>
      `;
    }
    return nothing;
  }
  _renderAsLink() {
    const classes = {
      "breadcrumb-link": !this.active,
      "breadcrumb-text-truncate": true,
      active: this.active
    };
    const renderedNonLastItem = !this.isLastItem ? html` <hds-icon class="breadcrumb-arrow" name="chevron-right" size="8px"></hds-icon> ` : nothing;
    const renderedEllipsis = this.isEllipsis ? html`
          <li class="breadcrumb-item" @keydown="${this._handleKeydown}">
            <div
              tabindex="0"
              class="breadcrumb-link breadcrumb-expand"
              @click="${this._handleExpandClick}"
              role="button"
            >
              <span class="breadcrumb-ellipsis">...</span>
            </div>
            <hds-icon class="breadcrumb-arrow" name="chevron-right" size="8px"></hds-icon>
          </li>
        ` : nothing;
    const renderedItem = html`
      <li
        class="breadcrumb-item"
        id="breadcrumb-item-slot-container"
        @slotchange="${this._handleSlotChange}"
        @keydown="${this._handleKeydown}"
      >
        <div class="${classMap(classes)}">
          <slot></slot>
        </div>
        ${renderedNonLastItem} ${this.renderTooltip()}
      </li>
    `;
    return html`${this.visible ? renderedItem : renderedEllipsis}`;
  }
  async _handleExpandClick() {
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("expand", { detail: this.id, bubbles: true }));
  }
};
BreadcrumbItem.styles = styles4;
BreadcrumbItem.itemCounter = 0;
__decorate([
  property({ type: Boolean })
], BreadcrumbItem.prototype, "active", void 0);
__decorate([
  property({ type: Boolean })
], BreadcrumbItem.prototype, "visible", void 0);
__decorate([
  property({ type: Boolean, attribute: "is-ellipsis" })
], BreadcrumbItem.prototype, "isEllipsis", void 0);
__decorate([
  property({ type: Boolean, attribute: "is-last-item" })
], BreadcrumbItem.prototype, "isLastItem", void 0);
__decorate([
  state()
], BreadcrumbItem.prototype, "hasTooltip", void 0);
__decorate([
  query("slot:not([name])")
], BreadcrumbItem.prototype, "itemContentSlot", void 0);
__decorate([
  query(".breadcrumb-expand")
], BreadcrumbItem.prototype, "ellipsisContainer", void 0);
BreadcrumbItem = BreadcrumbItem_1 = __decorate([
  customElement("hds-breadcrumb-item")
], BreadcrumbItem);

// node_modules/@here/hds-breadcrumb/build/hds-breadcrumb.js
var Breadcrumb = class Breadcrumb2 extends LitElement {
  constructor() {
    super(...arguments);
    this.truncateItems = false;
    this.truncateItemBuffer = 5;
  }
  firstUpdated() {
    this._setDefaultActive();
  }
  render() {
    return html`
      <nav class="-hds-breadcrumb-wrapper" aria-label="breadcrumb" @expand="${this._handleExpand}">
        <ol class="breadcrumb">
          <slot></slot>
        </ol>
      </nav>
    `;
  }
  async _handleExpand(evt) {
    evt.stopPropagation();
    evt.preventDefault();
    this._getItems().forEach((item) => item.visible = true);
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("change", {
      detail: {
        expanded: true
      }
    }));
  }
  _setDefaultActive() {
    const items = this._getItems();
    if (items.length === 0) {
      return;
    }
    if (this.truncateItems) {
      items.forEach((item, index2) => {
        if (item && items.length >= this.truncateItemBuffer && index2 > 0 && index2 < items.length - 1) {
          item.visible = false;
        }
      });
      items[1].isEllipsis = true;
    }
    items[items.length - 1].isLastItem = true;
  }
  _getItems() {
    return this.itemsSlot.assignedNodes({ flatten: true }).filter((e) => e instanceof BreadcrumbItem);
  }
};
Breadcrumb.styles = styles3;
__decorate([
  property({ type: Boolean, attribute: "truncate-items" })
], Breadcrumb.prototype, "truncateItems", void 0);
__decorate([
  property({ type: Number, attribute: "truncate-item-buffer" })
], Breadcrumb.prototype, "truncateItemBuffer", void 0);
__decorate([
  query("slot:not([name])")
], Breadcrumb.prototype, "itemsSlot", void 0);
Breadcrumb = __decorate([
  customElement("hds-breadcrumb")
], Breadcrumb);

// node_modules/@here/hds-react-components/Breadcrumb/HDSBreadcrumb.js
new Breadcrumb();
var HDSBreadcrumb = import_react2.default.forwardRef((props, ref) => {
  const { children, truncateItems, truncateItemsBuffer, className, onExpand, onChange: onChange2, ...rest } = props;
  const innerRef = (0, import_react2.useRef)(null);
  (0, import_react2.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    onExpand && onExpand(e.detail);
    onChange2 && onChange2(e.detail);
  };
  (0, import_react2.useEffect)(() => {
    if (innerRef.current && (onExpand || onChange2)) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, onExpand, innerRef]);
  return import_react2.default.createElement("hds-breadcrumb", { ref: innerRef, ...truncateItems && { "truncate-items": truncateItems }, ...truncateItemsBuffer && {
    "truncate-item-buffer": truncateItemsBuffer
  }, ...className && { class: className }, ...rest }, children);
});
HDSBreadcrumb.defaultProps = {
  truncateItems: true,
  truncateItemsBuffer: 5
};
var HDSBreadcrumb_default = HDSBreadcrumb;

// node_modules/@here/hds-react-components/Breadcrumb/HDSBreadcrumbItem.js
var import_react3 = __toESM(require_react(), 1);
new BreadcrumbItem();
var HDSBreadcrumbItem = import_react3.default.forwardRef(({ active, children, className, ...rest }, ref) => import_react3.default.createElement("hds-breadcrumb-item", { ...active && { active }, ...className && { class: className }, ref, ...rest }, children));
HDSBreadcrumbItem.defaultProps = {
  active: false
};
var HDSBreadcrumbItem_default = HDSBreadcrumbItem;

// node_modules/@here/hds-react-components/Button/HDSButton.js
var import_react5 = __toESM(require_react(), 1);
var React5 = __toESM(require_react(), 1);

// node_modules/lit-html/development/directives/if-defined.js
var ifDefined = (value) => value !== null && value !== void 0 ? value : nothing;

// node_modules/lit-html/development/directives/style-map.js
var important = "important";
var importantFlag = " !" + important;
var flagTrim = 0 - importantFlag.length;
var StyleMapDirective = class extends Directive {
  constructor(partInfo) {
    var _a6;
    super(partInfo);
    if (partInfo.type !== PartType.ATTRIBUTE || partInfo.name !== "style" || ((_a6 = partInfo.strings) === null || _a6 === void 0 ? void 0 : _a6.length) > 2) {
      throw new Error("The `styleMap` directive must be used in the `style` attribute and must be the only part in the attribute.");
    }
  }
  render(styleInfo) {
    return Object.keys(styleInfo).reduce((style, prop) => {
      const value = styleInfo[prop];
      if (value == null) {
        return style;
      }
      prop = prop.includes("-") ? prop : prop.replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, "-$&").toLowerCase();
      return style + `${prop}:${value};`;
    }, "");
  }
  update(part, [styleInfo]) {
    const { style } = part.element;
    if (this._previousStyleProperties === void 0) {
      this._previousStyleProperties = /* @__PURE__ */ new Set();
      for (const name in styleInfo) {
        this._previousStyleProperties.add(name);
      }
      return this.render(styleInfo);
    }
    this._previousStyleProperties.forEach((name) => {
      if (styleInfo[name] == null) {
        this._previousStyleProperties.delete(name);
        if (name.includes("-")) {
          style.removeProperty(name);
        } else {
          style[name] = "";
        }
      }
    });
    for (const name in styleInfo) {
      const value = styleInfo[name];
      if (value != null) {
        this._previousStyleProperties.add(name);
        const isImportant = typeof value === "string" && value.endsWith(importantFlag);
        if (name.includes("-") || isImportant) {
          style.setProperty(name, isImportant ? value.slice(0, flagTrim) : value, isImportant ? important : "");
        } else {
          style[name] = value;
        }
      }
    }
    return noChange;
  }
};
var styleMap = directive(StyleMapDirective);

// node_modules/@here/hds-button/build/hds-button.css.js
var styles5 = css`
:host{-webkit-appearance:auto!important;appearance:auto!important}:host{display:inline-block;height:2.5rem}:host([width="100%"]){width:100%}:host([size=extra-small]){height:1.5rem}:host([size=small]){height:2rem}:host([size=small][variant=link]){height:auto}:host([size=medium]){height:2.5rem}:host([size=medium][variant=link]){height:auto}:host([size=large]){height:3rem}:host([size=large][variant=link]){height:auto}:host(:focus){outline:0}.hds-button{--hds-icon-color:var(--hds-onlightcolor-primary);align-items:center;background:var(--hds-gradient);border-radius:3.125rem;border-width:0;box-sizing:border-box;color:var(--hds-onlightcolor-primary);cursor:pointer;display:inline-flex;font:var(--hds-button-font);justify-content:center;letter-spacing:var(--hds-button-letter-spacing);padding:var(--hds-spacing-2) var(--hds-spacing-4);position:relative;-webkit-text-decoration:var(--hds-button-text-decoration,inherit);text-decoration:var(--hds-button-text-decoration,inherit);text-decoration:none}.hds-button :active,.hds-button :focus,.hds-button :focus:active,.hds-button :focus:not(:focus-visible){outline:0}.hds-button:before{background:none;border-radius:3.125rem;bottom:0;content:"";display:block;left:0;position:absolute;right:0;top:0}.hds-button:focus-visible{border-radius:3.125rem;outline:var(--hds-object-focused) solid .125rem}.hds-button:hover{background:var(--hds-gradient-hover)}.hds-button:hover,.hds-button:visited{color:var(--hds-onlightcolor-primary)}.hds-button.hds-button--icon:not(.hds-button--icononly) .hds-button-label{margin-left:var(--hds-spacing-2);margin-top:var(--hds-spacing-1px)}.hds-button.hds-button--icon-right:not(.hds-button--icononly) .hds-button-label{margin-right:var(--hds-spacing-2)}.hds-button .hds-button-label-container{align-items:center;display:flex;justify-content:center}.hds-button .hds-button-loading-container{align-items:center;display:inline-flex;position:absolute}.hds-button.hds-button--disabled{--hds-icon-color:var(--hds-foreground-inactive);background:var(--hds-gradient-disabled);color:var(--hds-foreground-inactive);cursor:not-allowed}.hds-button.hds-button--loading{cursor:not-allowed}.hds-button.hds-button--size-extra-small{--hds-icon-size:1rem;height:1.5rem;padding:var(--hds-spacing-1) var(--hds-spacing-3)}.hds-button.hds-button--size-extra-small.hds-button--icononly{--hds-icon-size:0.5rem;height:1.5rem;padding:var(--hds-spacing-1);width:1.5rem}.hds-button.hds-button--size-small{--hds-icon-size:1rem;height:2rem;padding:var(--hds-spacing-2) var(--hds-spacing-4)}.hds-button.hds-button--size-small.hds-button--icononly{height:2rem;padding:var(--hds-spacing-2);width:2rem}.hds-button.hds-button--size-medium{--hds-icon-size:1rem;height:2.5rem;padding:var(--hds-spacing-3) var(--hds-spacing-4)}.hds-button.hds-button--size-medium.hds-button--icononly{height:2.5rem;padding:var(--hds-spacing-3);width:2.5rem}.hds-button.hds-button--size-large{--hds-icon-size:1rem;height:3rem;padding:var(--hds-spacing-4) var(--hds-spacing-6)}.hds-button.hds-button--size-large.hds-button--icononly{--hds-icon-size:1.5rem;height:3rem;padding:var(--hds-spacing-4);width:3rem}.hds-button.hds-button--variant-secondary{--hds-icon-color:var(--hds-foreground-primary);background:var(--hds-background-object);color:var(--hds-foreground-primary)}.hds-button.hds-button--variant-secondary:hover{background:var(--hds-background-object-hover);color:var(--hds-foreground-primary)}.hds-button.hds-button--variant-secondary.hds-button--not-disabled:active{background:var(--hds-background-object-press)}.hds-button.hds-button--variant-secondary.hds-button--disabled{--hds-icon-color:var(--hds-foreground-inactive);background:var(--hds-background-object);color:var(--hds-foreground-inactive)}@media not all and (-webkit-min-device-pixel-ratio:0),not all and (min-resolution:0.001dpcm){@supports (-webkit-appearance:none){.hds-button.hds-button--variant-secondary.hds-button--disabled{--hds-icon-color:var(--hds-foreground-primary);color:var(--hds-foreground-primary)}.hds-button.hds-button--variant-secondary.hds-button--disabled:hover{background:var(--hds-background-object);color:var(--hds-foreground-inactive)}.hds-button.hds-button--variant-secondary.hds-button--disabled .hds-button-label-container{opacity:.3}}}.hds-button.hds-button--variant-subtle{--hds-icon-color:var(--hds-foreground-primary);background:#0000;border-width:0;color:var(--hds-foreground-primary)}.hds-button.hds-button--variant-subtle:hover{background:var(--hds-background-hover);color:var(--hds-foreground-primary)}.hds-button.hds-button--variant-subtle.hds-button--not-disabled:active{background:var(--hds-background-press)}.hds-button.hds-button--variant-subtle.hds-button--disabled{--hds-icon-color:var(--hds-foreground-primary-disabled);background:#0000;color:var(--hds-foreground-primary-disabled)}.hds-button.hds-button--variant-success{--hds-icon-color:var(--hds-ondarkcolor-primary);background:var(--hds-positive);color:var(--hds-ondarkcolor-primary)}.hds-button.hds-button--variant-success:hover{background:var(--hds-positive-hover);color:var(--hds-ondarkcolor-primary)}.hds-button.hds-button--variant-success.hds-button--not-disabled:active{background:var(--hds-positive-press)}.hds-button.hds-button--variant-success.hds-button--disabled{--hds-icon-color:var(--hds-ondarkcolor-primary);background:var(--hds-positive-disabled);color:var(--hds-ondarkcolor-primary)}.hds-button.hds-button--variant-warning{--hds-icon-color:var(--hds-onlightcolor-primary);background:var(--hds-warning);color:var(--hds-onlightcolor-primary)}.hds-button.hds-button--variant-warning:hover{background:var(--hds-warning-hover);color:var(--hds-onlightcolor-primary)}.hds-button.hds-button--variant-warning.hds-button--not-disabled:active{--hds-icon-color:var(--hds-ondarkcolor-primary);background:var(--hds-warning-press);color:var(--hds-ondarkcolor-primary)}.hds-button.hds-button--variant-warning.hds-button--disabled{--hds-icon-color:var(--hds-onlightcolor-inactive);background:var(--hds-warning-disabled);color:var(--hds-onlightcolor-inactive)}.hds-button.hds-button--variant-danger{--hds-icon-color:var(--hds-ondarkcolor-primary);background:var(--hds-negative);color:var(--hds-ondarkcolor-primary)}.hds-button.hds-button--variant-danger:hover{background:var(--hds-negative-hover);color:var(--hds-ondarkcolor-primary)}.hds-button.hds-button--variant-danger.hds-button--not-disabled:active{--hds-icon-color:var(--hds-ondarkcolor-primary);background:var(--hds-negative-press);color:var(--hds-ondarkcolor-primary)}.hds-button.hds-button--variant-danger.hds-button--disabled{background:var(--hds-negative-disabled)}.hds-button.hds-button--variant-danger.hds-button--disabled:before{border:0}.hds-button.hds-button--variant-link{--hds-icon-color:var(--hds-action);background:#0000;border-width:0;color:var(--hds-action);height:auto;padding:var(--hds-spacing-0) var(--hds-spacing-0)}.hds-button.hds-button--variant-link ::slotted(a){color:var(--hds-action);font:inherit;letter-spacing:inherit;text-decoration:none}.hds-button.hds-button--variant-link:hover{--hds-icon-color:var(--hds-action-hover);background:#0000;color:var(--hds-action-hover)}.hds-button.hds-button--variant-link:before{border-radius:var(--hds-border-radius)}.hds-button.hds-button--variant-link:before:hover{--hds-icon-color:var(--hds-action-hover);background:#0000;color:var(--hds-action-hover)}.hds-button.hds-button--variant-link:focus-visible{border-radius:var(--hds-border-radius)}.hds-button.hds-button--variant-link.hds-button--not-disabled:active{--hds-icon-color:var(--hds-action-press);background:#0000;color:var(--hds-action-press)}.hds-button.hds-button--variant-link.hds-button--disabled{--hds-icon-color:var(--hds-action-disabled);color:var(--hds-action-disabled)}.hds-button.hds-button--variant-link.hds-button--disabled ::slotted(a){color:var(--hds-action-disabled);font:inherit;letter-spacing:inherit;text-decoration:none}.hds-button.hds-button--variant-danger-quiet{--hds-icon-color:var(--hds-foreground-negative);background:var(--hds-negative-secondary);color:var(--hds-foreground-negative)}.hds-button.hds-button--variant-danger-quiet:hover{background:var(--hds-negative-secondary-hover);color:var(--hds-foreground-negative)}.hds-button.hds-button--variant-danger-quiet.hds-button--not-disabled:active{--hds-icon-color:var(--hds-ondarkcolor-primary);background:var(--hds-negative-secondary-press);color:var(--hds-ondarkcolor-primary)}.hds-button.hds-button--variant-danger-quiet.hds-button--disabled{--hds-icon-color:var(--hds-negative-disabled);background:var(--hds-negative-secondary-disabled);color:var(--hds-negative-disabled)}.hds-button.hds-button--variant-success-quiet{--hds-icon-color:var(--hds-foreground-positive);background:var(--hds-positive-secondary);color:var(--hds-foreground-positive)}.hds-button.hds-button--variant-success-quiet:hover{background:var(--hds-positive-secondary-hover);color:var(--hds-foreground-positive)}.hds-button.hds-button--variant-success-quiet.hds-button--not-disabled:active{--hds-icon-color:var(--hds-ondarkcolor-primary);background:var(--hds-positive-secondary-press);color:var(--hds-ondarkcolor-primary)}.hds-button.hds-button--variant-success-quiet.hds-button--disabled{--hds-icon-color:var(--hds-positive-disabled);background:var(--hds-positive-secondary-disabled);color:var(--hds-positive-disabled)}.hds-button.hds-button--variant-warning-quiet{--hds-icon-color:var(--hds-foreground-warning);background:var(--hds-warning-secondary);color:var(--hds-foreground-warning)}.hds-button.hds-button--variant-warning-quiet:hover{background:var(--hds-warning-secondary-hover);color:var(--hds-foreground-warning)}.hds-button.hds-button--variant-warning-quiet.hds-button--not-disabled:active{background:var(--hds-warning-secondary-press)}.hds-button.hds-button--variant-warning-quiet.hds-button--disabled{--hds-icon-color:var(--hds-warning-disabled);background:var(--hds-warning-secondary-disabled);color:var(--hds-warning-disabled)}.hds-button.hds-button--variant-subtle-quiet{--hds-icon-color:var(--hds-foreground-secondary);background:#0000;color:var(--hds-foreground-secondary)}.hds-button.hds-button--variant-subtle-quiet:hover{background:var(--hds-background-hover);color:var(--hds-foreground-secondary)}.hds-button.hds-button--variant-subtle-quiet.hds-button--not-disabled:active{background:var(--hds-background-press)}.hds-button.hds-button--variant-subtle-quiet.hds-button--disabled{--hds-icon-color:var(--hds-foreground-secondary-disabled);background:#0000;color:var(--hds-foreground-secondary-disabled)}.hds-button.hds-button--variant-floating{--hds-icon-color:var(--hds-foreground-primary);background:var(--hds-background-secondary);color:var(--hds-foreground-primary);filter:var(--hds-object)}.hds-button.hds-button--variant-floating:hover{background:var(--hds-background-oncolor-hover);color:var(--hds-foreground-primary)}.hds-button.hds-button--variant-floating.hds-button--not-disabled:active{background:var(--hds-background-oncolor-press)}.hds-button.hds-button--variant-floating.hds-button--disabled{--hds-icon-color:var(--hds-foreground-inactive);background:var(--hds-background-secondary);color:var(--hds-foreground-inactive)}.hds-button.hds-button--variant-on-color-primary{--hds-icon-color:var(--hds-foreground-primary);background:var(--hds-background-secondary);color:var(--hds-foreground-primary)}.hds-button.hds-button--variant-on-color-primary:hover{background:var(--hds-background-oncolor-hover);color:var(--hds-foreground-primary)}.hds-button.hds-button--variant-on-color-primary.hds-button--not-disabled:active{background:var(--hds-background-oncolor-press)}.hds-button.hds-button--variant-on-color-primary.hds-button--disabled{--hds-icon-color:var(--hds-foreground-inactive);background:var(--hds-background-secondary);color:var(--hds-foreground-inactive)}.hds-button.hds-button--variant-on-color-secondary{--hds-icon-color:var(--hds-inverse-primary);background:var(--hds-foreground-tertiary);color:var(--hds-inverse-primary)}.hds-button.hds-button--variant-on-color-secondary:hover{background:var(--hds-foreground-tertiary-hover);color:var(--hds-inverse-primary)}.hds-button.hds-button--variant-on-color-secondary.hds-button--not-disabled:active{background:var(--hds-foreground-tertiary-press)}.hds-button.hds-button--variant-on-color-secondary.hds-button--disabled{--hds-icon-color:var(--hds-inverse-inactive);background:var(--hds-foreground-tertiary);color:var(--hds-inverse-inactive)}.hds-button.hds-button--selected{--hds-icon-color:var(--hds-inverse-primary);background:var(--hds-action);color:var(--hds-inverse-primary)}.hds-button.hds-button--selected:hover{background:var(--hds-action-hover);color:var(--hds-inverse-primary)}.hds-button.hds-button--selected:active{background:var(--hds-action-press);color:var(--hds-inverse-primary)}.hds-button.hds-button--selected:focus-visible{background:var(--hds-action);outline:var(--hds-object-focused) solid .125rem}.hds-button.hds-button--selected.hds-button--disabled{--hds-icon-color:var(--hds-inverse-inactive);background:var(--hds-action-disabled);color:var(--hds-inverse-inactive)}.hds-button.hds-button--selected.hds-button--loading{--hds-icon-color:var(--hds-inverse-primary);background:var(--hds-action-disabled);color:var(--hds-inverse-primary)}.hds-button.hds-button--variant-danger-quiet.hds-button--selected:not(.hds-button.hds-button--variant-danger-quiet.hds-button--disabled):active,.hds-button.hds-button--variant-danger.hds-button--selected:not(.hds-button.hds-button--variant-danger.hds-button--disabled):active,.hds-button.hds-button--variant-floating.hds-button--selected:not(.hds-button.hds-button--variant-floating.hds-button--disabled):active,.hds-button.hds-button--variant-on-color-primary.hds-button--selected:not(.hds-button.hds-button--variant-on-color-primary.hds-button--disabled):active,.hds-button.hds-button--variant-on-color-secondary.hds-button--selected:not(.hds-button.hds-button--variant-on-color-secondary.hds-button--disabled):active,.hds-button.hds-button--variant-secondary.hds-button--selected:not(.hds-button.hds-button--variant-secondary.hds-button--disabled):active,.hds-button.hds-button--variant-subtle-quiet.hds-button--selected:not(.hds-button.hds-button--variant-subtle-quiet.hds-button--disabled):active,.hds-button.hds-button--variant-subtle.hds-button--selected:not(.hds-button.hds-button--variant-subtle.hds-button--disabled):active,.hds-button.hds-button--variant-success-quiet.hds-button--selected:not(.hds-button.hds-button--variant-success-quiet.hds-button--disabled):active,.hds-button.hds-button--variant-success.hds-button--selected:not(.hds-button.hds-button--variant-success.hds-button--disabled):active,.hds-button.hds-button--variant-warning-quiet.hds-button--selected:not(.hds-button.hds-button--variant-warning-quiet.hds-button--disabled):active,.hds-button.hds-button--variant-warning.hds-button--selected:not(.hds-button.hds-button--variant-warning.hds-button--disabled):active{background:var(--hds-action-press);color:var(--hds-inverse-primary)}
`;

// node_modules/@here/hds-button/build/hds-button.js
var spinnerVariantColor = {
  primary: "on-light",
  secondary: "on-light",
  subtle: "on-light",
  danger: "on-dark",
  success: "on-dark",
  warning: "on-light",
  "danger-quiet": "on-dark",
  "success-quiet": "on-dark",
  "warning-quiet": "on-light",
  link: "action",
  "subtle-quiet": "on-light-subtle",
  floating: "on-light",
  "on-color-primary": "on-light",
  "on-color-secondary": "on-dark"
};
var Button = class Button2 extends BaseElement {
  constructor() {
    super(...arguments);
    this.selected = false;
    this.selectable = false;
    this.variant = "primary";
    this.size = "medium";
    this.disabled = false;
    this.iconStyle = "solid";
    this.iconCategory = "core-ui";
    this.iconRight = "";
    this.iconRightCategory = "core-ui";
    this.iconRightStyle = "solid";
    this.loading = false;
    this.type = "button";
    this.iconOnly = false;
    this.isTabbable = true;
  }
  focus() {
    return this.buttonElement && this.buttonElement.focus();
  }
  blur() {
    return this.buttonElement && this.buttonElement.blur();
  }
  click() {
    if (!this.isButtonDisabled()) {
      this.buttonElement.click();
    }
  }
  update(_changedProperties) {
    super.update(_changedProperties);
    if (_changedProperties.has("selected") && _changedProperties.get("selected") !== void 0) {
      this.dispatchEvent(new CustomEvent("select", {
        detail: { selected: this.selected },
        bubbles: true,
        composed: true
      }));
    }
    if (!_changedProperties.has("iconOnly") && (_changedProperties.has("icon") || _changedProperties.has("icon-style") || _changedProperties.has("icon-category"))) {
      this.iconOnly = this.icon !== void 0 && isSlotEmpty(this.listLabelItems);
      this.requestUpdate();
    }
  }
  render() {
    const _disabled = this.isButtonDisabled();
    const _ariaLabel = this.getAriaLabel();
    const classes = {
      "hds-button--icon": !!this.icon,
      "hds-button--icon-right": !!this.iconRight,
      "hds-button--icononly": this.iconOnly,
      "hds-button--disabled": _disabled,
      "hds-button--not-disabled": !_disabled
    };
    classes[`hds-button--variant-${this.variant}`] = true;
    classes[`hds-button--size-${this.size}`] = true;
    if (this.variant !== "link")
      classes["hds-button--loading"] = this.loading;
    if (this.selected)
      classes["hds-button--selected"] = this.selected;
    const labelStyles = {
      visibility: this.loading && this.variant !== "link" ? "hidden" : void 0
    };
    const localStyles = {
      width: this.width
    };
    return html`
      <div @click="${this._handleClick}">
        <button
          id="Button"
          @focus="${this.focus}"
          @blur="${this.blur}"
          class="hds-button ${classMap(classes)}"
          style="${styleMap(localStyles)}"
          ?disabled="${_disabled}"
          type="${this.type}"
          aria-label="${ifDefined(_ariaLabel)}"
        >
          ${this.loading && this.variant !== "link" ? this.renderSpinner() : nothing}
          <span class="hds-button-label-container" style=${styleMap(labelStyles)}>
            ${this.renderIcon(this.icon, this.iconCategory, this.iconStyle)}
            <span class="hds-button-label">
              <slot></slot>
            </span>
            ${this.renderIcon(this.iconRight, this.iconRightCategory, this.iconRightStyle)}
          </span>
        </button>
      </div>
    `;
  }
  renderIcon(icon, category, style) {
    if (!icon || icon.trim() === "")
      return nothing;
    let iconSize = "16px";
    if (this.iconOnly) {
      if (this.size === "extra-small") {
        iconSize = "8px";
      } else if (this.size === "large") {
        iconSize = "24px";
      }
    }
    return html` <hds-icon
      name="${icon}"
      size="${iconSize}"
      icon-style="${style}"
      category="${category}"
    ></hds-icon>`;
  }
  renderSpinner() {
    const color = this.selected ? "on-dark" : spinnerVariantColor[this.variant];
    return html`
      <span class="hds-button-loading-container">
        <hds-progress-indicator
          size="small"
          color="${color}"
          indicator-type="circular"
        ></hds-progress-indicator>
      </span>
    `;
  }
  isButtonDisabled() {
    if (this.disabled)
      return true;
    if (this.variant !== "link")
      return this.loading;
    return false;
  }
  getAriaLabel() {
    if (!this.ariaLabel || this.ariaLabel === "") {
      if (this.loading) {
        return "Loading";
      }
      return void 0;
    }
    return this.ariaLabel;
  }
  _handleClick(e) {
    e.stopPropagation();
    e.preventDefault();
    if (this.selectable) {
      this.selected = !this.selected;
    }
    if (this.isButtonDisabled())
      return;
    if (!(e.target instanceof HTMLButtonElement))
      return;
    this.updateComplete;
    if (this.type === "submit" || this.type === "reset") {
      const form = closestElement("FORM", this);
      if (form) {
        if (this.type === "submit") {
          form.requestSubmit();
        } else {
          form.reset();
        }
      }
    }
    this.dispatchEvent(new MouseEvent("click", {
      bubbles: true,
      composed: true
    }));
  }
};
Button.styles = styles5;
Button.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: Boolean, reflect: true })
], Button.prototype, "selected", void 0);
__decorate([
  property({ type: Boolean })
], Button.prototype, "selectable", void 0);
__decorate([
  property({ type: String, reflect: true })
], Button.prototype, "variant", void 0);
__decorate([
  property({ type: String, reflect: true })
], Button.prototype, "size", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Button.prototype, "disabled", void 0);
__decorate([
  property({ type: String })
], Button.prototype, "width", void 0);
__decorate([
  property({ type: String })
], Button.prototype, "icon", void 0);
__decorate([
  property({ type: String, attribute: "icon-style" })
], Button.prototype, "iconStyle", void 0);
__decorate([
  property({ type: String, attribute: "icon-category" })
], Button.prototype, "iconCategory", void 0);
__decorate([
  property({ type: String, attribute: "icon-right" })
], Button.prototype, "iconRight", void 0);
__decorate([
  property({ type: String, attribute: "icon-right-category" })
], Button.prototype, "iconRightCategory", void 0);
__decorate([
  property({ type: String, attribute: "icon-right-style" })
], Button.prototype, "iconRightStyle", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Button.prototype, "loading", void 0);
__decorate([
  property({ type: String, reflect: true })
], Button.prototype, "type", void 0);
__decorate([
  query("#Button")
], Button.prototype, "buttonElement", void 0);
__decorate([
  query("slot")
], Button.prototype, "labelSlot", void 0);
__decorate([
  queryAssignedNodes("", true)
], Button.prototype, "listLabelItems", void 0);
Button = __decorate([
  customElement("hds-button")
], Button);

// node_modules/@here/hds-react-components/Icon/HDSIcon.js
var import_react4 = __toESM(require_react(), 1);
var React4 = __toESM(require_react(), 1);
new Icon();
var HDSIcon = React4.forwardRef((props, ref) => {
  const { iconStyle, className, onNotFound, ...rest } = props;
  const innerRef = React4.useRef(null);
  (0, import_react4.useImperativeHandle)(ref, () => innerRef.current);
  const _handleNotFound = (e) => {
    if (e.target !== innerRef.current)
      return;
    onNotFound && onNotFound(e.detail);
  };
  (0, import_react4.useEffect)(() => {
    if (onNotFound && innerRef.current) {
      innerRef.current.addEventListener("notfound", _handleNotFound);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("notfound", _handleNotFound);
    };
  }, [onNotFound, innerRef]);
  return React4.createElement("hds-icon", { ...className && { class: className }, ...iconStyle && { "icon-style": iconStyle }, ref: innerRef, ...rest });
});
HDSIcon.defaultProps = {
  category: "core-ui",
  iconStyle: "solid",
  size: "16px"
};
var HDSIcon_default = HDSIcon;

// node_modules/@here/hds-react-components/Button/HDSButton.js
new Button();
var HDSLinkButton = React5.forwardRef((props, ref) => {
  var _a6;
  const { children, disabled, size: size2, variant, icon, iconRight, iconCategory, iconRightCategory, iconOnly, ...rest } = props;
  const classesMap = {
    "hds-button": true
  };
  classesMap[`hds-button--size-${size2 ?? "medium"}`] = true;
  classesMap[`hds-button--variant-${variant ?? "primary"}`] = true;
  classesMap["hds-button--icon"] = !!icon || !!iconRight;
  classesMap["hds-button--icononly"] = !!iconOnly;
  classesMap["hds-button--disabled"] = !!disabled;
  const classes = Object.keys(classesMap).reduce((acc, key) => {
    if (classesMap[key]) {
      acc.push(key);
    }
    return acc;
  }, []).join(" ");
  const Icon3 = icon ? React5.createElement(HDSIcon_default, { name: icon, size: "16px", category: iconCategory }) : null;
  const IconRight = iconRight ? React5.createElement(HDSIcon_default, { name: iconRight, category: iconRightCategory, size: "16px" }) : null;
  const linkProps = {
    ...rest,
    ...children == null ? void 0 : children.props,
    link: void 0,
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    ref,
    className: classes,
    tabIndex: disabled ? -1 : 0,
    children: React5.createElement(
      React5.Fragment,
      null,
      Icon3,
      !iconOnly && ((_a6 = children == null ? void 0 : children.props) == null ? void 0 : _a6.children) && React5.createElement("span", { className: "hds-button-label" }, children.props.children),
      IconRight
    )
  };
  return React5.isValidElement(children) ? React5.cloneElement(children, { ...linkProps }) : React5.createElement(
    "span",
    { ...linkProps, role: "button" },
    React5.createElement(
      React5.Fragment,
      null,
      Icon3,
      !iconOnly && React5.createElement("span", { className: "hds-button-label" }, children)
    )
  );
});
var HDSButton = React5.forwardRef((props, ref) => {
  const { children, className, disabled, selected, selectable, onClick, onSelect, size: size2, variant, width, icon, iconCategory, iconRight, iconRightCategory, link, loading, ...rest } = props;
  if (link) {
    return React5.createElement(HDSLinkButton, { ...props, ...className && { class: className } }, children);
  }
  const innerRef = (0, import_react5.useRef)(null);
  (0, import_react5.useImperativeHandle)(ref, () => innerRef.current);
  const _handleClick = (e) => {
    if (!disabled && onClick) {
      onClick(e);
    }
  };
  const _handleSelect = (e) => {
    if (e.target !== innerRef.current)
      return;
    onSelect && onSelect(e);
  };
  (0, import_react5.useEffect)(() => {
    if (innerRef.current) {
      innerRef.current.addEventListener("click", _handleClick);
      innerRef.current.addEventListener("select", _handleSelect);
    }
    return () => {
      var _a6, _b5;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("click", _handleClick);
      (_b5 = innerRef.current) == null ? void 0 : _b5.removeEventListener("select", _handleSelect);
    };
  }, [onClick, onSelect, innerRef]);
  return React5.createElement("hds-button", { ...rest, ...className && { class: className }, variant, ...selected && { selected: true }, ...selectable && { selectable: true }, ...disabled && { disabled: true }, ...width && { width }, ...icon && { icon }, ...loading && { loading: true }, ...iconCategory && { "icon-category": iconCategory }, ...iconRight && { "icon-right": iconRight }, ...iconRightCategory && { "icon-right-category": iconRightCategory }, size: size2, ref: innerRef }, children);
});
HDSButton.defaultProps = {
  type: "button",
  variant: "primary",
  size: "medium",
  iconCategory: "core-ui",
  iconRightCategory: "core-ui"
};
var HDSButton_default = HDSButton;

// node_modules/@here/hds-react-components/Checkbox/HDSCheckbox.js
var import_react6 = __toESM(require_react(), 1);

// node_modules/@here/hds-checkbox/build/hds-checkbox.css.js
var styles6 = css`
:host(:focus){outline:0}:host{box-sizing:border-box;display:inline-block;line-height:1rem;-webkit-user-select:none;user-select:none}.-hds-checkbox-wrapper{--hds-icon-color:#0000;align-items:center;cursor:pointer;display:flex;justify-content:center}.-hds-checkbox-wrapper:active{outline:none}.-hds-checkbox-wrapper:hover .checkbox-trigger{border-color:var(--hds-foreground-tertiary-hover)}.-hds-checkbox-wrapper.hds-checkbox--size-small .checkbox-trigger{height:1rem;width:1rem}.-hds-checkbox-wrapper.hds-checkbox--size-medium .checkbox-trigger{height:1.25rem;width:1.25rem}.-hds-checkbox-wrapper .checkbox-trigger{align-items:center;border-color:var(--hds-foreground-tertiary);border-radius:var(--hds-border-radius);border-style:solid;border-width:.0625rem;box-sizing:border-box;display:flex;flex-shrink:0;justify-content:center;position:relative;transition:all .15s ease-in-out}.-hds-checkbox-wrapper .checkbox-trigger:active,.-hds-checkbox-wrapper .checkbox-trigger:focus{outline:none}.-hds-checkbox-wrapper.disabled{cursor:default;pointer-events:none}.-hds-checkbox-wrapper.disabled .checkbox-trigger{border-color:var(--hds-foreground-inactive)}.-hds-checkbox-wrapper.disabled .checkbox-label{color:var(--hds-foreground-inactive)}.-hds-checkbox-wrapper.-checked{--hds-icon-color:var(--hds-ondarkcolor-primary)}.-hds-checkbox-wrapper.-checked .checkbox-trigger{background:var(--hds-action);border-color:var(--hds-action)}.-hds-checkbox-wrapper.-checked.disabled{--hds-icon-color:var(--hds-foreground-tertiary-disabled)}.-hds-checkbox-wrapper.-checked.disabled .checkbox-trigger{background-color:unset;border-color:var(--hds-foreground-tertiary-disabled)}.-hds-checkbox-wrapper .checkbox-content{display:flex;flex-direction:column;font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);margin-left:var(--hds-spacing-2);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.-hds-checkbox-wrapper .checkbox-label{color:var(--hds-foreground-primary);padding-top:var(--hds-spacing-1px)}.-hds-checkbox-wrapper ::slotted([slot=description]){color:var(--hds-foreground-secondary);display:block;margin-top:var(--hds-spacing-2);max-width:14.25rem}.-hds-checkbox-wrapper>input{opacity:0;pointer-events:none;position:absolute}.-hds-checkbox-wrapper>input:focus-visible+.checkbox-trigger{outline:var(--hds-object-focused) solid .125rem}.-hds-checkbox-wrapper hds-icon{color:#0000;transition:all .15s ease-in-out}.-hds-checkbox-wrapper .checkbox-required{color:var(--hds-negative)}
`;

// node_modules/@here/hds-checkbox/build/hds-checkbox.js
var Checkbox = class Checkbox2 extends LitElement {
  constructor() {
    super(...arguments);
    this.size = "medium";
    this.checked = false;
    this.disabled = false;
    this.required = false;
    this.indeterminate = false;
    this.id = "";
    this.name = "";
    this.ariaLabel = "";
    this.showRequired = false;
    this.autocomplete = "";
    this._value = "on";
  }
  get value() {
    if (this.checked) {
      return this._value;
    }
    return void 0;
  }
  set value(v) {
    if (v === void 0) {
      this._value = "on";
      this.checked = false;
    } else {
      if (typeof v === "boolean") {
        this.checked = v;
      }
      this._value = v;
    }
  }
  get defaultChecked() {
    return this.formElement.defaultChecked;
  }
  updated(_changedProperties) {
    if (_changedProperties.has("checked") && _changedProperties.get("checked") !== void 0) {
      this._propertyChangeHandler();
    }
    if (_changedProperties.has("indeterminate")) {
      this.formElement.indeterminate = this.indeterminate;
    }
  }
  render() {
    const classes = {
      disabled: this.disabled,
      "-checked": this.checked || this.indeterminate
    };
    classes[`hds-checkbox--size-${this.size}`] = true;
    return html`
      <label class="-hds-checkbox-wrapper ${classMap(classes)}">
        <input
          type="checkbox"
          autocomplete="${ifDefined(this.autocomplete || void 0)}"
          id="${ifDefined(this.id === "" ? void 0 : this.id)}"
          name="${ifDefined(this.name === "" ? void 0 : this.name)}"
          ?checked="${this.checked}"
          .value="${this.value}"
          ?disabled="${this.disabled}"
          ?required="${this.required}"
          @change="${this._changeHandler}"
          @click="${(e) => e.stopPropagation()}"
          aria-label="${ifDefined(this.ariaLabel)}"
        />
        <span class="checkbox-trigger"> ${this.displayIcon()} </span>
        ${this.renderContent()}
      </label>
    `;
  }
  displayIcon() {
    const iconSize = this.size === "small" ? "8px" : "16px";
    const iconName = this.indeterminate ? "minus" : "checkmark";
    return html` <hds-icon name="${iconName}" size="${iconSize}"></hds-icon>`;
  }
  renderContent() {
    return html` <div class="checkbox-content">
      <span class="checkbox-label">
        <slot></slot>
        ${this.showRequired && this.required ? html`<span class="checkbox-required">*</span>` : nothing}
      </span>
      <slot name="description" class="description"></slot>
    </div>`;
  }
  _changeHandler() {
    this.checked = this.formElement.checked;
  }
  _propertyChangeHandler() {
    this.formElement.checked = this.checked;
    this.dispatchEvent(new CustomEvent("change", {
      detail: { name: this.name, id: this.id, value: this.value, checked: this.checked },
      bubbles: true,
      composed: true
    }));
  }
};
Checkbox.styles = styles6;
Checkbox.formAssociated = true;
__decorate([
  property({ type: String, reflect: true })
], Checkbox.prototype, "size", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Checkbox.prototype, "checked", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Checkbox.prototype, "disabled", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Checkbox.prototype, "required", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], Checkbox.prototype, "indeterminate", void 0);
__decorate([
  property({ type: String, reflect: true })
], Checkbox.prototype, "id", void 0);
__decorate([
  property({ type: String, reflect: true })
], Checkbox.prototype, "name", void 0);
__decorate([
  property({ type: String, attribute: "aria-label" })
], Checkbox.prototype, "ariaLabel", void 0);
__decorate([
  property({ type: Boolean, attribute: "show-required" })
], Checkbox.prototype, "showRequired", void 0);
__decorate([
  property({ type: String })
], Checkbox.prototype, "autocomplete", void 0);
__decorate([
  query("input")
], Checkbox.prototype, "formElement", void 0);
__decorate([
  property({ type: String, attribute: "value", reflect: true })
], Checkbox.prototype, "_value", void 0);
Checkbox = __decorate([
  customElement("hds-checkbox")
], Checkbox);

// node_modules/@here/hds-checkbox/build/hds-checkbox-group.css.js
var styles7 = css`
:host(hds-checkbox-group){outline:none!important}:host(:focus){outline:0}.label-text{box-sizing:inherit}.label-text.label-text-primary{color:var(--hds-foreground-primary);font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);overflow:inherit;-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit);text-overflow:inherit;white-space:inherit}.label-text.label-text-secondary{color:var(--hds-foreground-secondary);font:var(--hds-caption-font);letter-spacing:var(--hds-caption-letter-spacing);-webkit-text-decoration:var(--hds-caption-text-decoration,inherit);text-decoration:var(--hds-caption-text-decoration,inherit)}.label-container{align-items:center;box-sizing:inherit;display:flex;flex-direction:row;margin-bottom:var(--hds-spacing-2)}.label-container .label-primary{flex:1;overflow:hidden;text-align:left;text-overflow:ellipsis;white-space:nowrap}.label-container .label-secondary{min-width:20%;text-align:right}.clearfix:after{clear:both;content:"";display:table}.-hds-checkbox-group-wrapper{align-items:flex-start;box-sizing:border-box;display:flex;flex-direction:column}.-hds-checkbox-group-wrapper ::slotted(hds-checkbox){margin-top:var(--hds-spacing-4)}.-hds-checkbox-group-wrapper ::slotted(hds-checkbox:first-of-type){margin-top:var(--hds-spacing-0)}
`;

// node_modules/@here/hds-checkbox/build/hds-checkbox-group.js
var CheckboxGroup_1;
var CheckboxGroup = CheckboxGroup_1 = class CheckboxGroup2 extends BaseElement {
  constructor() {
    super(...arguments);
    this.ariaLabel = "";
    this.isTabbable = true;
  }
  connectedCallback() {
    super.connectedCallback();
    CheckboxGroup_1.id++;
    if (this.label) {
      this.labelId = `hds-checkbox-group-label-${CheckboxGroup_1.id}`;
    }
    if (this.secondaryLabel) {
      this.secondaryLabelId = `hds-checkbox-group-secondary-label-${CheckboxGroup_1.id}`;
    }
  }
  renderPrimaryLabel() {
    if (this.label) {
      return html` <label class="label-primary" id="${ifDefined(this.labelId)}">
        <div class="label-text label-text-primary">${this.label}</div>
      </label>`;
    }
    return nothing;
  }
  renderSecondaryLabel() {
    if (this.secondaryLabel) {
      return html` <label class="label-secondary" id="${ifDefined(this.secondaryLabelId)}">
        <div class="label-text label-text-secondary">${this.secondaryLabel}</div>
      </label>`;
    }
    return nothing;
  }
  renderLabels() {
    if (this.label || this.secondaryLabel) {
      return html` <div class="label-container clearfix">
        ${this.renderPrimaryLabel()} ${this.renderSecondaryLabel()}
      </div>`;
    }
    return nothing;
  }
  render() {
    const ariaLabelledBy = `${this.label ? this.labelId : ""} ${this.secondaryLabel ? this.secondaryLabelId : ""}`;
    return html` ${this.renderLabels()}
      <div
        class="-hds-checkbox-group-wrapper"
        role="group"
        .ariaLabel="${ifDefined(this.ariaLabel.trim())}"
        aria-labelledby="${ifDefined(ariaLabelledBy.trim())}"
      >
        <slot></slot>
      </div>`;
  }
};
CheckboxGroup.styles = styles7;
CheckboxGroup.id = 0;
__decorate([
  property({ type: String })
], CheckboxGroup.prototype, "label", void 0);
__decorate([
  property({ type: String, attribute: "secondary-label" })
], CheckboxGroup.prototype, "secondaryLabel", void 0);
__decorate([
  property({ type: String, attribute: "aria-label" })
], CheckboxGroup.prototype, "ariaLabel", void 0);
CheckboxGroup = CheckboxGroup_1 = __decorate([
  customElement("hds-checkbox-group")
], CheckboxGroup);

// node_modules/@here/hds-react-components/Checkbox/HDSCheckbox.js
new Checkbox();
var HDSCheckbox = import_react6.default.forwardRef(({ children, checked, value, size: size2, disabled, id: id2, name, description, ariaLabel, className, onCheck, onChange: onChange2, showRequired, required, autocomplete, ...rest }, ref) => {
  const innerRef = (0, import_react6.useRef)(null);
  (0, import_react6.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onCheck && onCheck(e.detail);
    onChange2 && onChange2(e);
  };
  (0, import_react6.useEffect)(() => {
    if (innerRef.current && (onCheck || onChange2)) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onCheck, onChange2, innerRef]);
  return import_react6.default.createElement(
    "hds-checkbox",
    { ...checked && { checked: true }, ...disabled && { disabled: true }, ...showRequired && { "show-required": showRequired }, ...className && { class: className }, ...autocomplete && { autocomplete }, ...ariaLabel && { "aria-label": ariaLabel }, value, size: size2, required, id: id2, name, ref: innerRef, ...rest },
    children,
    description && import_react6.default.createElement("span", { slot: "description" }, description)
  );
});
HDSCheckbox.defaultProps = {
  size: "medium",
  checked: false,
  disabled: false,
  required: false,
  showRequired: false,
  name: "",
  autocomplete: "",
  ariaLabel: ""
};
var HDSCheckbox_default = HDSCheckbox;

// node_modules/@here/hds-react-components/Checkbox/HDSCheckboxGroup.js
var import_react7 = __toESM(require_react(), 1);
new CheckboxGroup();
var HDSCheckboxGroup = import_react7.default.forwardRef(({ children, label, secondaryLabel, ariaLabel, className, ...rest }, ref) => import_react7.default.createElement("hds-checkbox-group", { ref, ...label && { label }, ...secondaryLabel && { "secondary-label": secondaryLabel }, ...className && { class: className }, ...ariaLabel && { "aria-label": ariaLabel }, ...rest }, children));
HDSCheckboxGroup.defaultProps = {
  label: "",
  secondaryLabel: "",
  ariaLabel: ""
};
var HDSCheckboxGroup_default = HDSCheckboxGroup;

// node_modules/@here/hds-dropdown/build/hds-dropdown.css.js
var styles8 = css`
:host{--hds-dropdown--z-index:100}:host(:focus){outline:0}.hds-dropdown-wrapper{display:inline-block;left:0;position:relative;top:0}.hds-dropdown-wrapper :active,.hds-dropdown-wrapper :focus,.hds-dropdown-wrapper:active,.hds-dropdown-wrapper:focus{outline:0}.menu-wrapper{background:var(--hds-background-secondary);border-radius:var(--hds-border-radius);display:none;filter:var(--hds-overlay);left:0;position:fixed;top:0;width:max-content;will-change:filter;z-index:var(--hds-dropdown--z-index)}.menu-wrapper.open{display:block}.menu-wrapper:focus,.menu-wrapper:hover{outline:none}
`;

// node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs
var sides = ["top", "right", "bottom", "left"];
var alignments = ["start", "end"];
var placements2 = sides.reduce((acc, side) => acc.concat(side, side + "-" + alignments[0], side + "-" + alignments[1]), []);
var min2 = Math.min;
var max2 = Math.max;
var round2 = Math.round;
var floor = Math.floor;
var createCoords = (v) => ({
  x: v,
  y: v
});
var oppositeSideMap = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
var oppositeAlignmentMap = {
  start: "end",
  end: "start"
};
function evaluate(value, param) {
  return typeof value === "function" ? value(param) : value;
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getOppositeAxis(axis) {
  return axis === "x" ? "y" : "x";
}
function getAxisLength(axis) {
  return axis === "y" ? "height" : "width";
}
function getSideAxis(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "y" : "x";
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const length2 = getAxisLength(alignmentAxis);
  let mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  if (rects.reference[length2] > rects.floating[length2]) {
    mainAlignmentSide = getOppositePlacement2(mainAlignmentSide);
  }
  return [mainAlignmentSide, getOppositePlacement2(mainAlignmentSide)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getOppositePlacement2(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getPaddingObject(padding) {
  return typeof padding !== "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect2(rect) {
  const {
    x,
    y,
    width,
    height
  } = rect;
  return {
    width,
    height,
    top: y,
    left: x,
    right: x + width,
    bottom: y + height,
    x,
    y
  };
}

// node_modules/@floating-ui/core/dist/floating-ui.core.mjs
function computeCoordsFromPlacement(_ref3, placement, rtl) {
  let {
    reference: reference2,
    floating
  } = _ref3;
  const sideAxis = getSideAxis(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const alignLength = getAxisLength(alignmentAxis);
  const side = getSide(placement);
  const isVertical = sideAxis === "y";
  const commonX = reference2.x + reference2.width / 2 - floating.width / 2;
  const commonY = reference2.y + reference2.height / 2 - floating.height / 2;
  const commonAlign = reference2[alignLength] / 2 - floating[alignLength] / 2;
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference2.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case "right":
      coords = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference2.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference2.x,
        y: reference2.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
var computePosition = async (reference2, floating, config) => {
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware: middleware2 = [],
    platform: platform2
  } = config;
  const validMiddleware = middleware2.filter(Boolean);
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
  let rects = await platform2.getElementRects({
    reference: reference2,
    floating,
    strategy
  });
  let {
    x,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < validMiddleware.length; i++) {
    const {
      name,
      fn: fn2
    } = validMiddleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn2({
      x,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference: reference2,
        floating
      }
    });
    x = nextX != null ? nextX : x;
    y = nextY != null ? nextY : y;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    };
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === "object") {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform2.getElementRects({
            reference: reference2,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
    }
  }
  return {
    x,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
async function detectOverflow2(state2, options2) {
  var _await$platform$isEle;
  if (options2 === void 0) {
    options2 = {};
  }
  const {
    x,
    y,
    platform: platform2,
    rects,
    elements,
    strategy
  } = state2;
  const {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = false,
    padding = 0
  } = evaluate(options2, state2);
  const paddingObject = getPaddingObject(padding);
  const altContext = elementContext === "floating" ? "reference" : "floating";
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect2(await platform2.getClippingRect({
    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === "floating" ? {
    x,
    y,
    width: rects.floating.width,
    height: rects.floating.height
  } : rects.reference;
  const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));
  const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = rectToClientRect2(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements,
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
function getPlacementList(alignment, autoAlignment, allowedPlacements) {
  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter((placement) => getAlignment(placement) === alignment), ...allowedPlacements.filter((placement) => getAlignment(placement) !== alignment)] : allowedPlacements.filter((placement) => getSide(placement) === placement);
  return allowedPlacementsSortedByAlignment.filter((placement) => {
    if (alignment) {
      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);
    }
    return true;
  });
}
var autoPlacement = function(options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  return {
    name: "autoPlacement",
    options: options2,
    async fn(state2) {
      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;
      const {
        rects,
        middlewareData,
        placement,
        platform: platform2,
        elements
      } = state2;
      const {
        crossAxis = false,
        alignment,
        allowedPlacements = placements2,
        autoAlignment = true,
        ...detectOverflowOptions
      } = evaluate(options2, state2);
      const placements$1 = alignment !== void 0 || allowedPlacements === placements2 ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;
      const overflow = await detectOverflow2(state2, detectOverflowOptions);
      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;
      const currentPlacement = placements$1[currentIndex];
      if (currentPlacement == null) {
        return {};
      }
      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)));
      if (placement !== currentPlacement) {
        return {
          reset: {
            placement: placements$1[0]
          }
        };
      }
      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];
      const allOverflows = [...((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || [], {
        placement: currentPlacement,
        overflows: currentOverflows
      }];
      const nextPlacement = placements$1[currentIndex + 1];
      if (nextPlacement) {
        return {
          data: {
            index: currentIndex + 1,
            overflows: allOverflows
          },
          reset: {
            placement: nextPlacement
          }
        };
      }
      const placementsSortedByMostSpace = allOverflows.map((d2) => {
        const alignment2 = getAlignment(d2.placement);
        return [d2.placement, alignment2 && crossAxis ? (
          // Check along the mainAxis and main crossAxis side.
          d2.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0)
        ) : (
          // Check only the mainAxis.
          d2.overflows[0]
        ), d2.overflows];
      }).sort((a, b) => a[1] - b[1]);
      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter((d2) => d2[2].slice(
        0,
        // Aligned placements should not check their opposite crossAxis
        // side.
        getAlignment(d2[0]) ? 2 : 3
      ).every((v) => v <= 0));
      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];
      if (resetPlacement !== placement) {
        return {
          data: {
            index: currentIndex + 1,
            overflows: allOverflows
          },
          reset: {
            placement: resetPlacement
          }
        };
      }
      return {};
    }
  };
};
async function convertValueToCoords(state2, options2) {
  const {
    placement,
    platform: platform2,
    elements
  } = state2;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical = getSideAxis(placement) === "y";
  const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = evaluate(options2, state2);
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...rawValue
  };
  if (alignment && typeof alignmentAxis === "number") {
    crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
var offset2 = function(options2) {
  if (options2 === void 0) {
    options2 = 0;
  }
  return {
    name: "offset",
    options: options2,
    async fn(state2) {
      var _middlewareData$offse, _middlewareData$arrow;
      const {
        x,
        y,
        placement,
        middlewareData
      } = state2;
      const diffCoords = await convertValueToCoords(state2, options2);
      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      return {
        x: x + diffCoords.x,
        y: y + diffCoords.y,
        data: {
          ...diffCoords,
          placement
        }
      };
    }
  };
};

// node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs
function getNodeName2(node2) {
  if (isNode(node2)) {
    return (node2.nodeName || "").toLowerCase();
  }
  return "#document";
}
function getWindow2(node2) {
  var _node$ownerDocument;
  return (node2 == null || (_node$ownerDocument = node2.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement2(node2) {
  var _ref3;
  return (_ref3 = (isNode(node2) ? node2.ownerDocument : node2.document) || window.document) == null ? void 0 : _ref3.documentElement;
}
function isNode(value) {
  return value instanceof Node || value instanceof getWindow2(value).Node;
}
function isElement3(value) {
  return value instanceof Element || value instanceof getWindow2(value).Element;
}
function isHTMLElement2(value) {
  return value instanceof HTMLElement || value instanceof getWindow2(value).HTMLElement;
}
function isShadowRoot2(value) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  return value instanceof ShadowRoot || value instanceof getWindow2(value).ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle3(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement2(element) {
  return ["table", "td", "th"].includes(getNodeName2(element));
}
function isTopLayer(element) {
  return [":popover-open", ":modal"].some((selector) => {
    try {
      return element.matches(selector);
    } catch (e) {
      return false;
    }
  });
}
function isContainingBlock(elementOrCss) {
  const webkit = isWebKit();
  const css6 = isElement3(elementOrCss) ? getComputedStyle3(elementOrCss) : elementOrCss;
  return css6.transform !== "none" || css6.perspective !== "none" || (css6.containerType ? css6.containerType !== "normal" : false) || !webkit && (css6.backdropFilter ? css6.backdropFilter !== "none" : false) || !webkit && (css6.filter ? css6.filter !== "none" : false) || ["transform", "perspective", "filter"].some((value) => (css6.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css6.contain || "").includes(value));
}
function getContainingBlock2(element) {
  let currentNode = getParentNode2(element);
  while (isHTMLElement2(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else if (isTopLayer(currentNode)) {
      return null;
    }
    currentNode = getParentNode2(currentNode);
  }
  return null;
}
function isWebKit() {
  if (typeof CSS === "undefined" || !CSS.supports) return false;
  return CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node2) {
  return ["html", "body", "#document"].includes(getNodeName2(node2));
}
function getComputedStyle3(element) {
  return getWindow2(element).getComputedStyle(element);
}
function getNodeScroll2(element) {
  if (isElement3(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.scrollX,
    scrollTop: element.scrollY
  };
}
function getParentNode2(node2) {
  if (getNodeName2(node2) === "html") {
    return node2;
  }
  const result = (
    // Step into the shadow DOM of the parent of a slotted node.
    node2.assignedSlot || // DOM Element detected.
    node2.parentNode || // ShadowRoot detected.
    isShadowRoot2(node2) && node2.host || // Fallback.
    getDocumentElement2(node2)
  );
  return isShadowRoot2(result) ? result.host : result;
}
function getNearestOverflowAncestor(node2) {
  const parentNode = getParentNode2(node2);
  if (isLastTraversableNode(parentNode)) {
    return node2.ownerDocument ? node2.ownerDocument.body : node2.body;
  }
  if (isHTMLElement2(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node2, list, traverseIframes) {
  var _node$ownerDocument2;
  if (list === void 0) {
    list = [];
  }
  if (traverseIframes === void 0) {
    traverseIframes = true;
  }
  const scrollableAncestor = getNearestOverflowAncestor(node2);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node2.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = getWindow2(scrollableAncestor);
  if (isBody) {
    const frameElement = getFrameElement(win);
    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);
  }
  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}
function getFrameElement(win) {
  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;
}

// node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs
function getCssDimensions(element) {
  const css6 = getComputedStyle3(element);
  let width = parseFloat(css6.width) || 0;
  let height = parseFloat(css6.height) || 0;
  const hasOffset = isHTMLElement2(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width;
  const offsetHeight = hasOffset ? element.offsetHeight : height;
  const shouldFallback = round2(width) !== offsetWidth || round2(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    $: shouldFallback
  };
}
function unwrapElement(element) {
  return !isElement3(element) ? element.contextElement : element;
}
function getScale(element) {
  const domElement = unwrapElement(element);
  if (!isHTMLElement2(domElement)) {
    return createCoords(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    $
  } = getCssDimensions(domElement);
  let x = ($ ? round2(rect.width) : rect.width) / width;
  let y = ($ ? round2(rect.height) : rect.height) / height;
  if (!x || !Number.isFinite(x)) {
    x = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x,
    y
  };
}
var noOffsets = createCoords(0);
function getVisualOffsets(element) {
  const win = getWindow2(element);
  if (!isWebKit() || !win.visualViewport) {
    return noOffsets;
  }
  return {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow2(element)) {
    return false;
  }
  return isFixed;
}
function getBoundingClientRect2(element, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale2 = createCoords(1);
  if (includeScale) {
    if (offsetParent) {
      if (isElement3(offsetParent)) {
        scale2 = getScale(offsetParent);
      }
    } else {
      scale2 = getScale(element);
    }
  }
  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
  let x = (clientRect.left + visualOffsets.x) / scale2.x;
  let y = (clientRect.top + visualOffsets.y) / scale2.y;
  let width = clientRect.width / scale2.x;
  let height = clientRect.height / scale2.y;
  if (domElement) {
    const win = getWindow2(domElement);
    const offsetWin = offsetParent && isElement3(offsetParent) ? getWindow2(offsetParent) : offsetParent;
    let currentWin = win;
    let currentIFrame = getFrameElement(currentWin);
    while (currentIFrame && offsetParent && offsetWin !== currentWin) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css6 = getComputedStyle3(currentIFrame);
      const left2 = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css6.paddingLeft)) * iframeScale.x;
      const top2 = iframeRect.top + (currentIFrame.clientTop + parseFloat(css6.paddingTop)) * iframeScale.y;
      x *= iframeScale.x;
      y *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x += left2;
      y += top2;
      currentWin = getWindow2(currentIFrame);
      currentIFrame = getFrameElement(currentWin);
    }
  }
  return rectToClientRect2({
    width,
    height,
    x,
    y
  });
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref3) {
  let {
    elements,
    rect,
    offsetParent,
    strategy
  } = _ref3;
  const isFixed = strategy === "fixed";
  const documentElement = getDocumentElement2(offsetParent);
  const topLayer = elements ? isTopLayer(elements.floating) : false;
  if (offsetParent === documentElement || topLayer && isFixed) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale2 = createCoords(1);
  const offsets = createCoords(0);
  const isOffsetParentAnElement = isHTMLElement2(offsetParent);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName2(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll2(offsetParent);
    }
    if (isHTMLElement2(offsetParent)) {
      const offsetRect = getBoundingClientRect2(offsetParent);
      scale2 = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  return {
    width: rect.width * scale2.x,
    height: rect.height * scale2.y,
    x: rect.x * scale2.x - scroll.scrollLeft * scale2.x + offsets.x,
    y: rect.y * scale2.y - scroll.scrollTop * scale2.y + offsets.y
  };
}
function getClientRects(element) {
  return Array.from(element.getClientRects());
}
function getWindowScrollBarX2(element) {
  return getBoundingClientRect2(getDocumentElement2(element)).left + getNodeScroll2(element).scrollLeft;
}
function getDocumentRect2(element) {
  const html2 = getDocumentElement2(element);
  const scroll = getNodeScroll2(element);
  const body = element.ownerDocument.body;
  const width = max2(html2.scrollWidth, html2.clientWidth, body.scrollWidth, body.clientWidth);
  const height = max2(html2.scrollHeight, html2.clientHeight, body.scrollHeight, body.clientHeight);
  let x = -scroll.scrollLeft + getWindowScrollBarX2(element);
  const y = -scroll.scrollTop;
  if (getComputedStyle3(body).direction === "rtl") {
    x += max2(html2.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getViewportRect2(element, strategy) {
  const win = getWindow2(element);
  const html2 = getDocumentElement2(element);
  const visualViewport = win.visualViewport;
  let width = html2.clientWidth;
  let height = html2.clientHeight;
  let x = 0;
  let y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const visualViewportBased = isWebKit();
    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getInnerBoundingClientRect2(element, strategy) {
  const clientRect = getBoundingClientRect2(element, true, strategy === "fixed");
  const top2 = clientRect.top + element.clientTop;
  const left2 = clientRect.left + element.clientLeft;
  const scale2 = isHTMLElement2(element) ? getScale(element) : createCoords(1);
  const width = element.clientWidth * scale2.x;
  const height = element.clientHeight * scale2.y;
  const x = left2 * scale2.x;
  const y = top2 * scale2.y;
  return {
    width,
    height,
    x,
    y
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport") {
    rect = getViewportRect2(element, strategy);
  } else if (clippingAncestor === "document") {
    rect = getDocumentRect2(getDocumentElement2(element));
  } else if (isElement3(clippingAncestor)) {
    rect = getInnerBoundingClientRect2(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element);
    rect = {
      ...clippingAncestor,
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y
    };
  }
  return rectToClientRect2(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  const parentNode = getParentNode2(element);
  if (parentNode === stopNode || !isElement3(parentNode) || isLastTraversableNode(parentNode)) {
    return false;
  }
  return getComputedStyle3(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
}
function getClippingElementAncestors(element, cache) {
  const cachedResult = cache.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result = getOverflowAncestors(element, [], false).filter((el) => isElement3(el) && getNodeName2(el) !== "body");
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = getComputedStyle3(element).position === "fixed";
  let currentNode = elementIsFixed ? getParentNode2(element) : element;
  while (isElement3(currentNode) && !isLastTraversableNode(currentNode)) {
    const computedStyle = getComputedStyle3(currentNode);
    const currentNodeIsContaining = isContainingBlock(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === "fixed") {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
    if (shouldDropCurrentNode) {
      result = result.filter((ancestor) => ancestor !== currentNode);
    } else {
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = getParentNode2(currentNode);
  }
  cache.set(element, result);
  return result;
}
function getClippingRect2(_ref3) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref3;
  const elementClippingAncestors = boundary === "clippingAncestors" ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max2(rect.top, accRect.top);
    accRect.right = min2(rect.right, accRect.right);
    accRect.bottom = min2(rect.bottom, accRect.bottom);
    accRect.left = max2(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element) {
  const {
    width,
    height
  } = getCssDimensions(element);
  return {
    width,
    height
  };
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement2(offsetParent);
  const documentElement = getDocumentElement2(offsetParent);
  const isFixed = strategy === "fixed";
  const rect = getBoundingClientRect2(element, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName2(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll2(offsetParent);
    }
    if (isOffsetParentAnElement) {
      const offsetRect = getBoundingClientRect2(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX2(documentElement);
    }
  }
  const x = rect.left + scroll.scrollLeft - offsets.x;
  const y = rect.top + scroll.scrollTop - offsets.y;
  return {
    x,
    y,
    width: rect.width,
    height: rect.height
  };
}
function isStaticPositioned(element) {
  return getComputedStyle3(element).position === "static";
}
function getTrueOffsetParent2(element, polyfill) {
  if (!isHTMLElement2(element) || getComputedStyle3(element).position === "fixed") {
    return null;
  }
  if (polyfill) {
    return polyfill(element);
  }
  return element.offsetParent;
}
function getOffsetParent2(element, polyfill) {
  const win = getWindow2(element);
  if (isTopLayer(element)) {
    return win;
  }
  if (!isHTMLElement2(element)) {
    let svgOffsetParent = getParentNode2(element);
    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {
      if (isElement3(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {
        return svgOffsetParent;
      }
      svgOffsetParent = getParentNode2(svgOffsetParent);
    }
    return win;
  }
  let offsetParent = getTrueOffsetParent2(element, polyfill);
  while (offsetParent && isTableElement2(offsetParent) && isStaticPositioned(offsetParent)) {
    offsetParent = getTrueOffsetParent2(offsetParent, polyfill);
  }
  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {
    return win;
  }
  return offsetParent || getContainingBlock2(element) || win;
}
var getElementRects = async function(data) {
  const getOffsetParentFn = this.getOffsetParent || getOffsetParent2;
  const getDimensionsFn = this.getDimensions;
  const floatingDimensions = await getDimensionsFn(data.floating);
  return {
    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),
    floating: {
      x: 0,
      y: 0,
      width: floatingDimensions.width,
      height: floatingDimensions.height
    }
  };
};
function isRTL(element) {
  return getComputedStyle3(element).direction === "rtl";
}
var platform = {
  convertOffsetParentRelativeRectToViewportRelativeRect,
  getDocumentElement: getDocumentElement2,
  getClippingRect: getClippingRect2,
  getOffsetParent: getOffsetParent2,
  getElementRects,
  getClientRects,
  getDimensions,
  getScale,
  isElement: isElement3,
  isRTL
};
function observeMove(element, onMove) {
  let io = null;
  let timeoutId;
  const root = getDocumentElement2(element);
  function cleanup() {
    var _io;
    clearTimeout(timeoutId);
    (_io = io) == null || _io.disconnect();
    io = null;
  }
  function refresh(skip, threshold) {
    if (skip === void 0) {
      skip = false;
    }
    if (threshold === void 0) {
      threshold = 1;
    }
    cleanup();
    const {
      left: left2,
      top: top2,
      width,
      height
    } = element.getBoundingClientRect();
    if (!skip) {
      onMove();
    }
    if (!width || !height) {
      return;
    }
    const insetTop = floor(top2);
    const insetRight = floor(root.clientWidth - (left2 + width));
    const insetBottom = floor(root.clientHeight - (top2 + height));
    const insetLeft = floor(left2);
    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
    const options2 = {
      rootMargin,
      threshold: max2(0, min2(1, threshold)) || 1
    };
    let isFirstUpdate = true;
    function handleObserve(entries) {
      const ratio = entries[0].intersectionRatio;
      if (ratio !== threshold) {
        if (!isFirstUpdate) {
          return refresh();
        }
        if (!ratio) {
          timeoutId = setTimeout(() => {
            refresh(false, 1e-7);
          }, 1e3);
        } else {
          refresh(false, ratio);
        }
      }
      isFirstUpdate = false;
    }
    try {
      io = new IntersectionObserver(handleObserve, {
        ...options2,
        // Handle <iframe>s
        root: root.ownerDocument
      });
    } catch (e) {
      io = new IntersectionObserver(handleObserve, options2);
    }
    io.observe(element);
  }
  refresh(true);
  return cleanup;
}
function autoUpdate(reference2, floating, update, options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  const {
    ancestorScroll = true,
    ancestorResize = true,
    elementResize = typeof ResizeObserver === "function",
    layoutShift = typeof IntersectionObserver === "function",
    animationFrame = false
  } = options2;
  const referenceEl = unwrapElement(reference2);
  const ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener("resize", update);
  });
  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
  let reobserveFrame = -1;
  let resizeObserver = null;
  if (elementResize) {
    resizeObserver = new ResizeObserver((_ref3) => {
      let [firstEntry] = _ref3;
      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
        resizeObserver.unobserve(floating);
        cancelAnimationFrame(reobserveFrame);
        reobserveFrame = requestAnimationFrame(() => {
          var _resizeObserver;
          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);
        });
      }
      update();
    });
    if (referenceEl && !animationFrame) {
      resizeObserver.observe(referenceEl);
    }
    resizeObserver.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect2(reference2) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect2(reference2);
    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update();
  return () => {
    var _resizeObserver2;
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update);
      ancestorResize && ancestor.removeEventListener("resize", update);
    });
    cleanupIo == null || cleanupIo();
    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();
    resizeObserver = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}
var offset3 = offset2;
var autoPlacement2 = autoPlacement;
var computePosition2 = (reference2, floating, options2) => {
  const cache = /* @__PURE__ */ new Map();
  const mergedOptions = {
    platform,
    ...options2
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache
  };
  return computePosition(reference2, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};

// node_modules/@here/hds-dropdown/build/hds-dropdown.js
var Dropdown_1;
var Dropdown = Dropdown_1 = class Dropdown2 extends BaseElement {
  constructor() {
    super();
    this.isTabbable = true;
    this.open = false;
    this.placement = "bottom";
    this.hideOnScroll = false;
    this.allowedPlacements = ["top", "right", "bottom", "left"];
    this._handleKeydown = this._handleKeydown.bind(this);
    this._handleClickOutside = this._handleClickOutside.bind(this);
    this._handleScroll = this._handleScroll.bind(this);
  }
  connectedCallback() {
    super.connectedCallback && super.connectedCallback();
    this._addEventListeners();
  }
  disconnectedCallback() {
    super.disconnectedCallback && super.disconnectedCallback();
    this._removeEventListeners();
  }
  async updated(changedPropertyValues) {
    if (changedPropertyValues.has("open") && changedPropertyValues.get("open") !== void 0) {
      this.dispatchEvent(new CustomEvent("change", {
        detail: {
          open: this.open
        },
        bubbles: true,
        composed: true
      }));
    }
    if (this.open) {
      this.updatePosition();
      this._getMenu()[0].focus();
    }
  }
  async updatePosition() {
    const isAuto = this.getAttribute("placement") === "auto";
    const offsetFn = Dropdown_1.utils.offset(8);
    const autoPlacementFn = isAuto ? Dropdown_1.utils.autoPlacement({
      allowedPlacements: this.allowedPlacements
    }) : void 0;
    const middleware2 = isAuto ? [autoPlacementFn, offsetFn] : [offsetFn];
    const placement = isAuto ? void 0 : this.placement;
    const pos = await Dropdown_1.utils.computePosition(this, this.menuWrapper, {
      placement,
      strategy: "fixed",
      middleware: middleware2
    });
    Object.assign(this.menuWrapper.style, {
      top: `${pos.y}px`,
      left: `${pos.x}px`
    });
    this.placement = pos.placement;
  }
  render() {
    const menuClasses = {
      "menu-wrapper": true,
      open: this.open,
      [`placement-${this.placement}`]: true
    };
    return html`
      <div
        id="hds-dropdown"
        class="hds-dropdown-wrapper"
        @click="${(e) => e.stopPropagation()}"
        @select="${this._handleOnSelect}"
      >
        <div class="trigger-wrapper">
          <slot name="trigger" @click="${this._handleToggleClick}"></slot>
        </div>
        <div class="${classMap(menuClasses)}">
          <slot name="menu"></slot>
        </div>
      </div>
    `;
  }
  _handleKeydown(e) {
    if (e.key === "Escape") {
      this._handleClose();
    }
  }
  _handleClose() {
    this.open = false;
    this.querySelectorAll("hds-list-item[selected]").forEach((itemElement) => {
      const item = itemElement;
      item.selected = false;
    });
    this.querySelectorAll("hds-list").forEach((listElement) => {
      const list = listElement;
      list.selectedIndex = -1;
    });
  }
  _handleClickOutside(e) {
    const closestDropdown = e.target.closest && e.target.closest(this.tagName.toLowerCase());
    if (closestDropdown !== this) {
      this._handleClose();
    }
  }
  _removeEventListeners() {
    var _a6;
    this.ownerDocument.removeEventListener("click", this._handleClickOutside, true);
    this.ownerDocument.removeEventListener("scroll", this._handleScroll, true);
    this.ownerDocument.removeEventListener("wheel", this._handleScroll, true);
    this.ownerDocument.removeEventListener("keydown", this._handleKeydown);
    (_a6 = this.ownerDocument.defaultView) == null ? void 0 : _a6.removeEventListener("resize", this._handleScroll);
  }
  _addEventListeners() {
    var _a6;
    this._removeEventListeners();
    this.ownerDocument.addEventListener("click", this._handleClickOutside, true);
    this.ownerDocument.addEventListener("scroll", this._handleScroll, true);
    this.ownerDocument.addEventListener("wheel", this._handleScroll, true);
    this.ownerDocument.addEventListener("keydown", this._handleKeydown);
    (_a6 = this.ownerDocument.defaultView) == null ? void 0 : _a6.addEventListener("resize", this._handleScroll);
  }
  async _handleOnSelect(e) {
    e.stopPropagation();
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("select", {
      detail: e.detail,
      bubbles: true,
      composed: true
    }));
    this._handleClose();
  }
  async _handleToggleClick() {
    this.open = !this.open;
  }
  _getMenu() {
    return this.menuSlot.assignedNodes({ flatten: true });
  }
  _handleScroll() {
    if (this.open) {
      if (this.hideOnScroll) {
        this.open = false;
        this.requestUpdate("open", true);
      } else {
        this.updatePosition();
      }
    }
  }
};
Dropdown.styles = styles8;
Dropdown.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
Dropdown.utils = { computePosition: computePosition2, autoPlacement: autoPlacement2, offset: offset3 };
__decorate([
  property({ type: Boolean, reflect: true })
], Dropdown.prototype, "open", void 0);
__decorate([
  property({ type: String })
], Dropdown.prototype, "placement", void 0);
__decorate([
  property({ type: Boolean, attribute: "hide-on-scroll" })
], Dropdown.prototype, "hideOnScroll", void 0);
__decorate([
  property({
    type: Array,
    attribute: "allowed-placements",
    converter: {
      fromAttribute: (value) => value == null ? void 0 : value.split(",")
    }
  })
], Dropdown.prototype, "allowedPlacements", void 0);
__decorate([
  query('[name="menu"]')
], Dropdown.prototype, "menuSlot", void 0);
__decorate([
  query(".menu-wrapper")
], Dropdown.prototype, "menuWrapper", void 0);
Dropdown = Dropdown_1 = __decorate([
  customElement("hds-dropdown")
], Dropdown);

// node_modules/@here/hds-list/build/hds-list-item.css.js
var styles9 = css`
:host{display:block}:host(:focus){outline:0}:host([draggable=true]),:host([dragging]){background-color:var(--hds-background-secondary);border-radius:var(--hds-border-radius);filter:var(--hds-object--dragged)}:host(:host:focus-visible) .-hds-list-item-wrapper{border:2px solid var(--hds-object-focused)}:host(:host:focus-visible) .dragging{border-color:#0000}.-hds-list-item-wrapper{--hds-icon-fill-transition:0.4s ease;align-items:center;cursor:pointer;display:flex;font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);padding-left:var(--hds-spacing-4);padding-right:var(--hds-spacing-4);text-align:left;-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit);transition:all .4s ease,transform 0ms,border 0ms,outline 0ms}.-hds-list-item-wrapper,.-hds-list-item-wrapper .text{overflow:inherit;text-overflow:inherit;white-space:inherit}.-hds-list-item-wrapper .text{width:100%}.-hds-list-item-wrapper .icon{--hds-icon-color:var(--hds-foreground-secondary)}.-hds-list-item-wrapper .icon.icon-left{margin-right:var(--hds-spacing-2)}.-hds-list-item-wrapper .icon.icon-right{margin-left:var(--hds-spacing-2)}.-hds-list-item-wrapper ::slotted(a){color:var(--hds-foreground-primary)!important;font:inherit!important;letter-spacing:inherit!important;text-decoration:none!important}.-hds-list-item-wrapper.disabled .icon{--hds-icon-color:var(--hds-foreground-inactive)}.-hds-list-item-wrapper.unselectable{cursor:default}.-hds-list-item-wrapper .disabled,.-hds-list-item-wrapper.disabled,.-hds-list-item-wrapper.disabled ::slotted(a){color:var(--hds-foreground-inactive)!important;cursor:default!important;pointer-events:none!important}.-hds-list-item-wrapper:active,.-hds-list-item-wrapper:focus,.-hds-list-item-wrapper:focus:active{outline:0}.hds-list-item--has-anchor .text{padding:var(--hds-spacing-0)}.hds-list-item--has-anchor .text slot{overflow:inherit;text-overflow:inherit;white-space:inherit}.hds-list-item--has-anchor .text ::slotted(a){display:block;overflow:inherit;text-overflow:inherit;white-space:inherit;width:100%}.hds-list-item-size-small{height:2rem}.hds-list-item-size-medium{height:2.5rem}.hds-list-item-size-large{height:3rem}.hds-list-item-size-extra-large{height:3.5rem}.hds-list-item-h-padding-default{padding-left:calc(var(--hds-spacing-4) - 2px);padding-right:calc(var(--hds-spacing-4) - 2px)}.hds-list-item-h-padding-dense{padding-left:calc(var(--hds-spacing-2) - 2px);padding-right:calc(var(--hds-spacing-2) - 2px)}.hds-list-item-variant-subtle-default,.hds-list-item-variant-subtle-divider-default{background-color:initial;border:2px solid #0000}.hds-list-item-variant-subtle-default.hoverable:hover,.hds-list-item-variant-subtle-divider-default.hoverable:hover{background-color:var(--hds-background-hover)}.hds-list-item-variant-subtle-default.pressable:active,.hds-list-item-variant-subtle-divider-default.pressable:active{background-color:var(--hds-background-press)}.hds-list-item-variant-subtle-default.selectable.selected,.hds-list-item-variant-subtle-divider-default.selectable.selected{background-color:var(--hds-background-selected)}.hds-list-item-variant-subtle-default.selectable.selected:hover,.hds-list-item-variant-subtle-divider-default.selectable.selected:hover{background-color:var(--hds-background-selected-hover)}.hds-list-item-variant-subtle-default.selectable.selected:active,.hds-list-item-variant-subtle-divider-default.selectable.selected:active{background-color:var(--hds-background-selected-press)}.hds-list-item-variant-subtle-default.disabled,.hds-list-item-variant-subtle-divider-default.disabled{background-color:initial}.hds-list-item-variant-subtle-default.dragging,.hds-list-item-variant-subtle-default.dragging.selected,.hds-list-item-variant-subtle-divider-default.dragging,.hds-list-item-variant-subtle-divider-default.dragging.selected{background-color:var(--hds-background-press)}.hds-list-item-variant-subtle-divider-success,.hds-list-item-variant-subtle-success{background-color:var(--hds-positive-secondary);border:2px solid #0000}.hds-list-item-variant-subtle-divider-success.hoverable:hover,.hds-list-item-variant-subtle-success.hoverable:hover{background-color:var(--hds-positive-secondary-hover)}.hds-list-item-variant-subtle-divider-success.pressable:active,.hds-list-item-variant-subtle-divider-success.pressable:active:focus,.hds-list-item-variant-subtle-success.pressable:active,.hds-list-item-variant-subtle-success.pressable:active:focus{background-color:var(--hds-positive-secondary-press);color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-subtle-divider-success.pressable:active .icon,.hds-list-item-variant-subtle-divider-success.pressable:active:focus .icon,.hds-list-item-variant-subtle-success.pressable:active .icon,.hds-list-item-variant-subtle-success.pressable:active:focus .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-subtle-divider-success.pressable:active ::slotted(a),.hds-list-item-variant-subtle-divider-success.pressable:active:focus ::slotted(a),.hds-list-item-variant-subtle-success.pressable:active ::slotted(a),.hds-list-item-variant-subtle-success.pressable:active:focus ::slotted(a){color:var(--hds-ondarkcolor-primary)!important}.hds-list-item-variant-subtle-divider-success.focusable:focus,.hds-list-item-variant-subtle-success.focusable:focus{background-color:var(--hds-positive-secondary)}.hds-list-item-variant-subtle-divider-success.selectable.selected,.hds-list-item-variant-subtle-success.selectable.selected{background-color:var(--hds-positive);color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-subtle-divider-success.selectable.selected:hover,.hds-list-item-variant-subtle-success.selectable.selected:hover{background-color:var(--hds-positive-hover)}.hds-list-item-variant-subtle-divider-success.selectable.selected:active,.hds-list-item-variant-subtle-success.selectable.selected:active{background-color:var(--hds-positive-press)}.hds-list-item-variant-subtle-divider-success.selectable.selected .icon,.hds-list-item-variant-subtle-success.selectable.selected .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-subtle-divider-success.selectable.selected ::slotted(a),.hds-list-item-variant-subtle-success.selectable.selected ::slotted(a){color:var(--hds-ondarkcolor-primary)!important}.hds-list-item-variant-subtle-divider-success.disabled,.hds-list-item-variant-subtle-success.disabled{background-color:initial}.hds-list-item-variant-subtle-divider-success.dragging,.hds-list-item-variant-subtle-divider-success.dragging.selected,.hds-list-item-variant-subtle-divider-success.dragging:hover,.hds-list-item-variant-subtle-success.dragging,.hds-list-item-variant-subtle-success.dragging.selected,.hds-list-item-variant-subtle-success.dragging:hover{background-color:var(--hds-positive-press);color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-subtle-divider-success.dragging .icon,.hds-list-item-variant-subtle-divider-success.dragging.selected .icon,.hds-list-item-variant-subtle-divider-success.dragging:hover .icon,.hds-list-item-variant-subtle-success.dragging .icon,.hds-list-item-variant-subtle-success.dragging.selected .icon,.hds-list-item-variant-subtle-success.dragging:hover .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-subtle-divider-success.dragging ::slotted(a),.hds-list-item-variant-subtle-divider-success.dragging.selected ::slotted(a),.hds-list-item-variant-subtle-divider-success.dragging:hover ::slotted(a),.hds-list-item-variant-subtle-success.dragging ::slotted(a),.hds-list-item-variant-subtle-success.dragging.selected ::slotted(a),.hds-list-item-variant-subtle-success.dragging:hover ::slotted(a){color:var(--hds-ondarkcolor-primary)!important}.hds-list-item-variant-subtle-divider-error,.hds-list-item-variant-subtle-error{background-color:var(--hds-negative-secondary);border:2px solid #0000}.hds-list-item-variant-subtle-divider-error.hoverable:hover,.hds-list-item-variant-subtle-error.hoverable:hover{background-color:var(--hds-negative-secondary-hover)}.hds-list-item-variant-subtle-divider-error.pressable:active,.hds-list-item-variant-subtle-divider-error.pressable:active:focus,.hds-list-item-variant-subtle-error.pressable:active,.hds-list-item-variant-subtle-error.pressable:active:focus{background-color:var(--hds-negative-secondary-press);color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-subtle-divider-error.pressable:active .icon,.hds-list-item-variant-subtle-divider-error.pressable:active:focus .icon,.hds-list-item-variant-subtle-error.pressable:active .icon,.hds-list-item-variant-subtle-error.pressable:active:focus .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-subtle-divider-error.pressable:active ::slotted(a),.hds-list-item-variant-subtle-divider-error.pressable:active:focus ::slotted(a),.hds-list-item-variant-subtle-error.pressable:active ::slotted(a),.hds-list-item-variant-subtle-error.pressable:active:focus ::slotted(a){color:var(--hds-ondarkcolor-primary)!important}.hds-list-item-variant-subtle-divider-error.focusable:focus,.hds-list-item-variant-subtle-error.focusable:focus{background-color:var(--hds-negative-secondary)}.hds-list-item-variant-subtle-divider-error.selectable.selected,.hds-list-item-variant-subtle-error.selectable.selected{background-color:var(--hds-negative);color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-subtle-divider-error.selectable.selected:hover,.hds-list-item-variant-subtle-error.selectable.selected:hover{background-color:var(--hds-negative-hover)}.hds-list-item-variant-subtle-divider-error.selectable.selected:active,.hds-list-item-variant-subtle-error.selectable.selected:active{background-color:var(--hds-negative-press)}.hds-list-item-variant-subtle-divider-error.selectable.selected .icon,.hds-list-item-variant-subtle-error.selectable.selected .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-subtle-divider-error.selectable.selected ::slotted(a),.hds-list-item-variant-subtle-error.selectable.selected ::slotted(a){color:var(--hds-ondarkcolor-primary)!important}.hds-list-item-variant-subtle-divider-error.disabled,.hds-list-item-variant-subtle-error.disabled{background-color:initial}.hds-list-item-variant-subtle-divider-error.dragging,.hds-list-item-variant-subtle-divider-error.dragging.selected,.hds-list-item-variant-subtle-divider-error.dragging:active,.hds-list-item-variant-subtle-divider-error.dragging:focus,.hds-list-item-variant-subtle-error.dragging,.hds-list-item-variant-subtle-error.dragging.selected,.hds-list-item-variant-subtle-error.dragging:active,.hds-list-item-variant-subtle-error.dragging:focus{background-color:var(--hds-negative-press);color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-subtle-divider-error.dragging .icon,.hds-list-item-variant-subtle-divider-error.dragging.selected .icon,.hds-list-item-variant-subtle-divider-error.dragging:active .icon,.hds-list-item-variant-subtle-divider-error.dragging:focus .icon,.hds-list-item-variant-subtle-error.dragging .icon,.hds-list-item-variant-subtle-error.dragging.selected .icon,.hds-list-item-variant-subtle-error.dragging:active .icon,.hds-list-item-variant-subtle-error.dragging:focus .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-subtle-divider-error.dragging ::slotted(a),.hds-list-item-variant-subtle-divider-error.dragging.selected ::slotted(a),.hds-list-item-variant-subtle-divider-error.dragging:active ::slotted(a),.hds-list-item-variant-subtle-divider-error.dragging:focus ::slotted(a),.hds-list-item-variant-subtle-error.dragging ::slotted(a),.hds-list-item-variant-subtle-error.dragging.selected ::slotted(a),.hds-list-item-variant-subtle-error.dragging:active ::slotted(a),.hds-list-item-variant-subtle-error.dragging:focus ::slotted(a){color:var(--hds-ondarkcolor-primary)!important}.hds-list-item-variant-solid-default{background-color:var(--hds-background-object);border:2px solid #0000;border-radius:var(--hds-border-radius)}.hds-list-item-variant-solid-default.hoverable:hover{background-color:var(--hds-background-object-hover)}.hds-list-item-variant-solid-default.pressable:active{background-color:var(--hds-background-object-press);color:var(--hds-foreground-primary)}.hds-list-item-variant-solid-default.selectable.selected{background-color:var(--hds-action);color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-default.selectable.selected:hover{background-color:var(--hds-action-hover)}.hds-list-item-variant-solid-default.selectable.selected:active{background-color:var(--hds-action-press)}.hds-list-item-variant-solid-default.selectable.selected .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-default.selectable.selected ::slotted(a){color:var(--hds-ondarkcolor-primary)!important}.hds-list-item-variant-solid-default.disabled{background-color:var(--hds-background-object)}.hds-list-item-variant-solid-default.disabled .icon{--hds-icon-color:var(--hds-foreground-inactive)}.hds-list-item-variant-solid-default.dragging,.hds-list-item-variant-solid-default.dragging.selected,.hds-list-item-variant-solid-default.dragging:active,.hds-list-item-variant-solid-default.dragging:focus{background-color:var(--hds-background-object-press);color:var(--hds-foreground-primary)}.hds-list-item-variant-solid-default.dragging .icon,.hds-list-item-variant-solid-default.dragging.selected .icon,.hds-list-item-variant-solid-default.dragging:active .icon,.hds-list-item-variant-solid-default.dragging:focus .icon{--hds-icon-color:var(--hds-foreground-primary)}.hds-list-item-variant-solid-default.dragging ::slotted(a),.hds-list-item-variant-solid-default.dragging.selected ::slotted(a),.hds-list-item-variant-solid-default.dragging:active ::slotted(a),.hds-list-item-variant-solid-default.dragging:focus ::slotted(a){color:var(--hds-foreground-primary)!important}.hds-list-item-variant-solid-success{background-color:var(--hds-positive-secondary);border:2px solid #0000;border-radius:var(--hds-border-radius);color:var(--hds-foreground-primary)}.hds-list-item-variant-solid-success.hoverable:hover{background-color:var(--hds-positive-secondary-hover)}.hds-list-item-variant-solid-success.pressable:active,.hds-list-item-variant-solid-success.pressable:active:focus{background-color:var(--hds-positive-secondary-press);border:2px solid #0000;color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-success.pressable:active .icon,.hds-list-item-variant-solid-success.pressable:active:focus .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-success.pressable:active ::slotted(a),.hds-list-item-variant-solid-success.pressable:active:focus ::slotted(a){color:var(--hds-ondarkcolor-primary)!important}.hds-list-item-variant-solid-success.focusable:focus{background-color:var(--hds-positive-secondary)}.hds-list-item-variant-solid-success.selectable.selected{background-color:var(--hds-positive);color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-success.selectable.selected:hover{background-color:var(--hds-positive-hover)}.hds-list-item-variant-solid-success.selectable.selected:active{background-color:var(--hds-positive-press)}.hds-list-item-variant-solid-success.selectable.selected .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-success.selectable.selected ::slotted(a){color:var(--hds-ondarkcolor-primary)!important}.hds-list-item-variant-solid-success.disabled{background-color:var(--hds-background-object)}.hds-list-item-variant-solid-success.dragging,.hds-list-item-variant-solid-success.dragging.selected,.hds-list-item-variant-solid-success.dragging:active,.hds-list-item-variant-solid-success.dragging:focus{background-color:var(--hds-positive-secondary-press);color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-success.dragging .icon,.hds-list-item-variant-solid-success.dragging.selected .icon,.hds-list-item-variant-solid-success.dragging:active .icon,.hds-list-item-variant-solid-success.dragging:focus .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-success.dragging ::slotted(a),.hds-list-item-variant-solid-success.dragging.selected ::slotted(a),.hds-list-item-variant-solid-success.dragging:active ::slotted(a),.hds-list-item-variant-solid-success.dragging:focus ::slotted(a){color:var(--hds-ondarkcolor-primary)!important}.hds-list-item-variant-solid-error{background-color:var(--hds-negative-secondary);border:2px solid #0000;border-radius:var(--hds-border-radius);color:var(--hds-foreground-primary)}.hds-list-item-variant-solid-error.hoverable:hover{background-color:var(--hds-negative-secondary-hover)}.hds-list-item-variant-solid-error.pressable:active,.hds-list-item-variant-solid-error.pressable:active:focus{background-color:var(--hds-negative-secondary-press);color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-error.pressable:active .icon,.hds-list-item-variant-solid-error.pressable:active:focus .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-error.pressable:active ::slotted(a),.hds-list-item-variant-solid-error.pressable:active:focus ::slotted(a){color:var(--hds-ondarkcolor-primary)!important}.hds-list-item-variant-solid-error.focusable:focus{background-color:var(--hds-negative-secondary)}.hds-list-item-variant-solid-error.selectable.selected{background-color:var(--hds-negative);color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-error.selectable.selected:hover{background-color:var(--hds-negative-hover)}.hds-list-item-variant-solid-error.selectable.selected:active{background-color:var(--hds-negative-press)}.hds-list-item-variant-solid-error.selectable.selected .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-error.selectable.selected ::slotted(a){color:var(--hds-ondarkcolor-primary)!important}.hds-list-item-variant-solid-error.disabled{background-color:var(--hds-background-object)}.hds-list-item-variant-solid-error.dragging,.hds-list-item-variant-solid-error.dragging.selected,.hds-list-item-variant-solid-error.dragging:active,.hds-list-item-variant-solid-error.dragging:focus{background-color:var(--hds-negative-secondary-press);color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-error.dragging .icon,.hds-list-item-variant-solid-error.dragging.selected .icon,.hds-list-item-variant-solid-error.dragging:active .icon,.hds-list-item-variant-solid-error.dragging:focus .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-list-item-variant-solid-error.dragging ::slotted(a),.hds-list-item-variant-solid-error.dragging.selected ::slotted(a),.hds-list-item-variant-solid-error.dragging:active ::slotted(a),.hds-list-item-variant-solid-error.dragging:focus ::slotted(a){color:var(--hds-ondarkcolor-primary)!important}
`;

// node_modules/@here/hds-list/build/hds-list-item.js
var ListItem_1;
var ListItem = ListItem_1 = class ListItem2 extends BaseElement {
  constructor() {
    super(...arguments);
    this.isTabbable = true;
    this.parentDisabled = false;
    this.selected = false;
    this.dragging = false;
    this.iconCategory = "core-ui";
    this.iconRightCategory = "core-ui";
    this.hasTooltip = false;
    this.hasAnchor = false;
    this.variant = "default";
    this.groupVariant = "subtle";
    this.size = "small";
    this.unhoverable = false;
    this.unpressable = false;
    this.unselectable = false;
    this.unfocusable = false;
    this.horizontalPadding = "default";
    this._disabled = false;
  }
  get disabled() {
    return this._disabled || this.parentDisabled;
  }
  set disabled(value) {
    const oldValue = this._disabled;
    this._disabled = value;
    this.requestUpdate("disabled", oldValue);
  }
  firstUpdated() {
    var _a6;
    this.id = this.id || `hds-list-item-${ListItem_1.itemIdCounter += 1}`;
    this.setAttribute("data-hds-tooltip", this.id);
    if (this.textContainer && this.textContainer.scrollWidth > this.textContainer.offsetWidth) {
      this.hasTooltip = true;
    }
    const slotElements = (_a6 = this.listItemContentSlot) == null ? void 0 : _a6.assignedElements({ flatten: true });
    const anchorTag = slotElements.find((element) => element.nodeName === "A");
    if (anchorTag && this.size !== "auto") {
      this.hasAnchor = true;
      if (anchorTag.scrollWidth > anchorTag.offsetWidth) {
        this.hasTooltip = true;
      }
    }
  }
  updated(_changedProperties) {
    if (_changedProperties.has("selected") && !this.disabled && this.selected && !this.unselectable) {
      this.updateComplete;
      this.dispatchEvent(new CustomEvent("select", { detail: this.id, bubbles: true }));
    }
  }
  render() {
    const classes = {
      item: true,
      selected: this.selected,
      disabled: this.disabled,
      dragging: this.dragging,
      [`${this.unhoverable ? "unhoverable" : "hoverable"}`]: true,
      [`${this.unselectable ? "unselectable" : "selectable"}`]: true,
      [`${this.unpressable ? "unpressable" : "pressable"}`]: true,
      [`${this.unfocusable ? "unfocusable" : "focusable"}`]: true,
      "hds-list-item--has-anchor": this.hasAnchor
    };
    classes[`hds-list-item-variant-${this.groupVariant}-${this.variant}`] = true;
    classes[`hds-list-item-size-${this.size}`] = true;
    classes[`hds-list-item-h-padding-${this.horizontalPadding}`] = true;
    return html`
      <div
        class="-hds-list-item-wrapper ${classMap(classes)}"
        role="option"
        aria-selected="${ifDefined(this.selected)}"
        tabindex="0"
        @click="${this.onItemClick}"
        ?disabled="${this.disabled}"
      >
        ${this.renderIcon()}
        <span class="text">
          <slot></slot>
        </span>
        <slot name="right"></slot>
        ${this.renderIconRight()}
      </div>
      ${this.renderTooltip()}
    `;
  }
  renderIcon() {
    if (this.icon) {
      return html`
        <hds-icon
          class="icon icon-left"
          name="${this.icon}"
          category="${this.iconCategory}"
          size="16px"
        ></hds-icon>
      `;
    }
    return nothing;
  }
  renderIconRight() {
    if (this.iconRight) {
      return html`
        <hds-icon
          class="icon icon-right"
          name="${this.iconRight}"
          category="${this.iconRightCategory}"
          size="16px"
        ></hds-icon>
      `;
    }
    return nothing;
  }
  async onItemClick() {
    if (!this.disabled && !this.unselectable) {
      this.selected = true;
    }
  }
  renderTooltip() {
    var _a6;
    if (this.hasTooltip) {
      return html`
        <hds-tooltip id="${this.id}" position="right">
          <div>${(_a6 = this.listItemContentSlot.assignedNodes()[0]) == null ? void 0 : _a6.textContent}</div>
        </hds-tooltip>
      `;
    }
    return nothing;
  }
};
ListItem.styles = styles9;
ListItem.itemIdCounter = 0;
ListItem.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: Boolean, attribute: false })
], ListItem.prototype, "parentDisabled", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], ListItem.prototype, "selected", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], ListItem.prototype, "dragging", void 0);
__decorate([
  property({ type: String })
], ListItem.prototype, "icon", void 0);
__decorate([
  property({ type: String, attribute: "icon-category" })
], ListItem.prototype, "iconCategory", void 0);
__decorate([
  property({ type: String, attribute: "icon-right" })
], ListItem.prototype, "iconRight", void 0);
__decorate([
  property({ type: String, attribute: "icon-right-category" })
], ListItem.prototype, "iconRightCategory", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], ListItem.prototype, "hasTooltip", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], ListItem.prototype, "hasAnchor", void 0);
__decorate([
  property({ type: String })
], ListItem.prototype, "variant", void 0);
__decorate([
  property({ type: String })
], ListItem.prototype, "groupVariant", void 0);
__decorate([
  property({ type: String })
], ListItem.prototype, "size", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], ListItem.prototype, "unhoverable", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], ListItem.prototype, "unpressable", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], ListItem.prototype, "unselectable", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], ListItem.prototype, "unfocusable", void 0);
__decorate([
  property({ type: String, attribute: false })
], ListItem.prototype, "horizontalPadding", void 0);
__decorate([
  query("slot")
], ListItem.prototype, "listItemContentSlot", void 0);
__decorate([
  query(".text")
], ListItem.prototype, "textContainer", void 0);
__decorate([
  property({ type: Boolean })
], ListItem.prototype, "disabled", null);
ListItem = ListItem_1 = __decorate([
  customElement("hds-list-item")
], ListItem);

// node_modules/@here/hds-list/build/hds-list.css.js
var styles10 = css`
:host(:focus){outline:0}:host{display:block}.-hds-list-wrapper{box-sizing:border-box}.-hds-list-wrapper :active,.-hds-list-wrapper :focus,.-hds-list-wrapper:focus,.-hds-list-wrapper:hover .-hds-list-wrapper:active{outline:0}.-hds-list-wrapper.truncate ::slotted(hds-list-item){display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.-hds-list-wrapper .group-title{box-shadow:0 1px 0 var(--hds-foreground-inactive);color:var(--hds-foreground-secondary);font:var(--hds-caption-font);letter-spacing:var(--hds-caption-letter-spacing);margin:var(--hds-spacing-0) var(--hds-spacing-0) var(--hds-spacing-4);padding:var(--hds-spacing-4) var(--hds-spacing-4) var(--hds-spacing-2) var(--hds-spacing-4);-webkit-text-decoration:var(--hds-caption-text-decoration,inherit);text-decoration:var(--hds-caption-text-decoration,inherit)}.-hds-list-wrapper.nested{border-width:0;filter:none;padding:var(--hds-spacing-0)}:host([variant=subtle-divider]) ::slotted([id^=hds-list-item-]){box-shadow:0 var(--hds-border-width) 0 var(--hds-foreground-divider)}:host([variant=subtle-divider]) ::slotted([id^=hds-list-item-]:focus),:host([variant=subtle-divider]) ::slotted([id^=hds-list-item-]:last-of-type){box-shadow:none}:host([variant=solid]) ::slotted([id^=hds-list-item-]){margin-bottom:var(--hds-spacing-2)}:host([variant=solid]) ::slotted([id^=hds-list-item-]:last-of-type){margin-bottom:var(--hds-spacing-0)}:host([variant=subtle-divider][unfocusable]) ::slotted([id^=hds-list-item-]:focus),:host([variant=subtle-divider][unselectable]) ::slotted([id^=hds-list-item-]:focus){box-shadow:0 var(--hds-border-width) 0 var(--hds-foreground-divider)}:host([variant=subtle-divider][unfocusable]) ::slotted([id^=hds-list-item-]:last-of-type),:host([variant=subtle-divider][unselectable]) ::slotted([id^=hds-list-item-]:last-of-type){box-shadow:none}
`;

// node_modules/@here/hds-list/build/hds-list.js
var List_1;
var List = List_1 = class List2 extends LitElement {
  constructor() {
    super(...arguments);
    this.innerRole = null;
    this.innerAriaLabel = null;
    this.truncate = true;
    this.groupTitle = "";
    this.variant = "subtle";
    this.size = "small";
    this.horizontalPadding = "default";
    this.selectedIndex = -1;
    this.disabled = false;
    this.unhoverable = false;
    this.unpressable = false;
    this.unselectable = false;
    this.unfocusable = false;
    this._selectedElementId = "";
  }
  firstUpdated(_changedProperties) {
    this.id = this.id || `hds-list-${List_1.listCounter += 1}`;
  }
  updated(_changedProperties) {
    this.updateItems();
    if (_changedProperties.has("selectedIndex") && this.selectedIndex > -1) {
      this.dispatchEvent(new CustomEvent("select", {
        detail: { index: this.selectedIndex, id: this._selectedElementId },
        bubbles: true,
        composed: true
      }));
    }
  }
  renderGroupTitle() {
    if (!this.groupTitle) {
      return void 0;
    }
    return html` <h4 class="group-title">${this.groupTitle}</h4> `;
  }
  render() {
    const role = this.innerRole || "listbox";
    const ariaLabel = this.innerAriaLabel || "list";
    const isNested = this.groupTitle && this.id !== "hds-list-1";
    const classes = {
      truncate: this.truncate && this.size !== "auto",
      list: true,
      nested: isNested
    };
    classes[`hds-list-variant-${this.variant}`] = true;
    const localStyles = {
      maxWidth: "initial",
      width: this.width
    };
    return html`
      <div
        class="-hds-list-wrapper ${classMap(classes)}"
        style="${styleMap(localStyles)}"
        tabindex="0"
        role="${role}"
        aria-label="${ariaLabel}"
        @select="${ifDefined(!isNested ? this.onSelect : void 0)}"
        @keydown="${ifDefined(!isNested ? this.onKeypress : void 0)}"
      >
        ${this.renderGroupTitle()}
        <slot @slotchange="${this._onSlotChange}"></slot>
      </div>
    `;
  }
  async onKeypress(evt) {
    var _a6, _b5;
    evt.preventDefault();
    const listItems = this._getAllItems();
    const itemsLen = listItems.length;
    const currentSelectedItem = this._getFocusedItem();
    const index2 = currentSelectedItem ? this._getItemIndex(currentSelectedItem.id) : -1;
    switch (evt.key) {
      case "ArrowUp":
        {
          const prevIndex = index2 - 1;
          if (prevIndex > -1) {
            const item = listItems[prevIndex];
            ((_a6 = item.shadowRoot) == null ? void 0 : _a6.querySelector('div[role="option"]')).focus();
          }
        }
        break;
      case "ArrowDown":
        {
          const nextIndex = index2 + 1;
          if (nextIndex < itemsLen) {
            const item = listItems[nextIndex];
            ((_b5 = item.shadowRoot) == null ? void 0 : _b5.querySelector('div[role="option"]')).focus();
          }
        }
        break;
      case "Enter":
        if (currentSelectedItem && index2 > -1) {
          this.selectedIndex = index2;
        }
        break;
    }
  }
  updateItems() {
    const items = this._getItems(this.itemsSlot);
    for (let i = 0; i < items.length; i += 1) {
      if (items[i].parentElement === this) {
        items[i].groupVariant = this.variant;
        items[i].size = this.size;
        items[i].unhoverable = this.unhoverable;
        items[i].unpressable = this.unpressable;
        items[i].unselectable = this.unselectable;
        items[i].unfocusable = this.unfocusable;
        items[i].horizontalPadding = this.horizontalPadding;
        items[i].parentDisabled = this.disabled;
      }
      if (items[i].selected && this.selectedIndex === -1) {
        this.selectedIndex = i;
      }
      items[i].selected = i === this.selectedIndex;
      this._selectedElementId = items[i].selected ? items[i].id : this._selectedElementId;
    }
    const groups = this._getGroupLists(this.itemsSlot);
    for (let i = 0; i < groups.length; i += 1) {
      groups[i].disabled = this.disabled;
    }
  }
  async onSelect(e) {
    const selectedItemId = e.detail;
    e.stopPropagation();
    const selectedElement = this._getAllItems()[this.selectedIndex];
    if (!selectedElement || selectedItemId !== selectedElement.id) {
      this.selectedIndex = this._getItemIndex(selectedItemId);
    }
  }
  async _onSlotChange() {
    await this.updateComplete;
    this.updateItems();
  }
  _getFocusedItem() {
    return this._getAllItems().filter((item) => item === document.activeElement)[0];
  }
  _getItemIndex(itemId) {
    return this._getAllItems().findIndex((item) => item.id === itemId);
  }
  _getItems(itemsSlot) {
    return findElementsInSlot(itemsSlot, ListItem);
  }
  _getGroupLists(itemsSlot) {
    return itemsSlot.assignedElements().filter((e) => e instanceof List_1);
  }
  _getGroupedItems(itemsSlot) {
    const items = [];
    if (itemsSlot) {
      this._getGroupLists(itemsSlot).forEach((list) => {
        items.push(...this._getItems(list.itemsSlot));
      });
    }
    return items;
  }
  _getAllItems() {
    return [
      ...this._getItems(this.itemsSlot),
      ...this._getGroupedItems(this.itemsSlot)
    ];
  }
};
List.styles = styles10;
List.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
List.listCounter = 0;
__decorate([
  property({ type: String, attribute: "inner-role" })
], List.prototype, "innerRole", void 0);
__decorate([
  property({ type: String, attribute: "inner-aria-label" })
], List.prototype, "innerAriaLabel", void 0);
__decorate([
  property({ type: Boolean })
], List.prototype, "truncate", void 0);
__decorate([
  property({ type: String, attribute: "group-title" })
], List.prototype, "groupTitle", void 0);
__decorate([
  property({ type: String })
], List.prototype, "width", void 0);
__decorate([
  property({ type: String, attribute: true })
], List.prototype, "variant", void 0);
__decorate([
  property({ type: String, attribute: true })
], List.prototype, "size", void 0);
__decorate([
  property({ type: String, attribute: "horizontal-padding", reflect: true })
], List.prototype, "horizontalPadding", void 0);
__decorate([
  property({ type: Number, attribute: "selected-index", reflect: true })
], List.prototype, "selectedIndex", void 0);
__decorate([
  property({ type: Boolean })
], List.prototype, "disabled", void 0);
__decorate([
  property({ type: Boolean })
], List.prototype, "unhoverable", void 0);
__decorate([
  property({ type: Boolean })
], List.prototype, "unpressable", void 0);
__decorate([
  property({ type: Boolean })
], List.prototype, "unselectable", void 0);
__decorate([
  property({ type: Boolean })
], List.prototype, "unfocusable", void 0);
__decorate([
  query("slot")
], List.prototype, "itemsSlot", void 0);
List = List_1 = __decorate([
  customElement("hds-list")
], List);

// node_modules/@here/hds-react-components/Dropdown/HDSDropdown.js
var import_react8 = __toESM(require_react(), 1);
new Dropdown();
new List();
var HDSDropdown = import_react8.default.forwardRef((props, ref) => {
  const { open, hideOnScroll, placement, allowedPlacements, menu, trigger, onSelect, onChange: onChange2, className, ...rest } = props;
  const innerRef = (0, import_react8.useRef)(null);
  (0, import_react8.useImperativeHandle)(ref, () => innerRef.current);
  const _handleSelected = (e) => {
    if (e.target !== innerRef.current)
      return;
    onSelect && onSelect(e.detail);
  };
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onChange2 && onChange2(e.detail);
  };
  (0, import_react8.useEffect)(() => {
    if (innerRef.current) {
      if (onSelect) {
        innerRef.current.addEventListener("select", _handleSelected);
      }
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("select", _handleSelected);
    };
  }, [onSelect, innerRef]);
  (0, import_react8.useEffect)(() => {
    if (innerRef.current) {
      if (onChange2) {
        innerRef.current.addEventListener("change", _handleChange);
      }
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, innerRef]);
  return import_react8.default.createElement(
    "hds-dropdown",
    { ...open && { open }, ...placement && { placement }, ...className && { class: className }, ...allowedPlacements && allowedPlacements.length && { "allowed-placements": allowedPlacements.join(",") }, ...hideOnScroll && { "hide-on-scroll": true }, ...rest, ref: innerRef },
    trigger && import_react8.default.createElement("span", { slot: "trigger" }, trigger),
    menu && import_react8.default.createElement("div", { slot: "menu" }, menu)
  );
});
HDSDropdown.defaultProps = {
  open: false,
  hideOnScroll: false,
  placement: "bottom"
};
var HDSDropdown_default = HDSDropdown;

// node_modules/@here/hds-react-components/Dropzone/HDSDropzone.js
var import_react9 = __toESM(require_react(), 1);

// node_modules/@here/hds-progress-indicator/build/hds-progress-indicator.css.js
var styles11 = css`
:host(:focus){outline:0}@keyframes linear-animation{0%{transform:translateX(-15%) scaleX(.15)}to{transform:translateX(100%) scaleX(.15)}}@keyframes clockwise-animation{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.-hds-progress-indicator-wrapper{align-items:center;box-sizing:border-box;color:var(--hds-onlightcolor-primary);display:flex;font:var(--hds-body-font);letter-spacing:var(--hds-body-letter-spacing);-webkit-text-decoration:var(--hds-body-text-decoration,inherit);text-decoration:var(--hds-body-text-decoration,inherit);width:100%}.-hds-progress-indicator-wrapper.disabled{background:var(--hds-background-object);color:var(--hds-foreground-inactive)}.-hds-progress-indicator-wrapper svg{display:block;margin:auto}.-hds-progress-indicator-wrapper svg line{stroke-linecap:round;stroke-width:.125rem}.-hds-progress-indicator-wrapper svg .track{stroke-dashoffset:0;stroke-opacity:.4}.-hds-progress-indicator-wrapper svg .progress{stroke-opacity:1}.-hds-progress-indicator-wrapper.linear.determinate.progress-0 .progress{stroke-opacity:0}.-hds-progress-indicator-wrapper.linear.determinate .progress{transition:all .25s ease-in}.-hds-progress-indicator-wrapper.linear.indeterminate .progress{animation:linear-animation 1s linear infinite}.-hds-progress-indicator-wrapper.accent svg line{stroke:var(--hds-accent)}.-hds-progress-indicator-wrapper.action svg line{stroke:var(--hds-action)}.-hds-progress-indicator-wrapper.on-light svg line{stroke:var(--hds-foreground-primary)}.-hds-progress-indicator-wrapper.on-light-subtle svg line{stroke:var(--hds-foreground-secondary)}.-hds-progress-indicator-wrapper.on-dark svg line{stroke:var(--hds-ondarkcolor-primary)}.-hds-progress-indicator-wrapper.circular{align-items:center;display:flex}.-hds-progress-indicator-wrapper.circular svg{display:block;margin:auto;overflow:visible;transform:rotate(-90deg)}.-hds-progress-indicator-wrapper.circular svg circle{fill:#0000;stroke-linecap:butt;stroke-width:.125rem;vector-effect:non-scaling-stroke}.-hds-progress-indicator-wrapper.circular svg .path{stroke-opacity:.4}.-hds-progress-indicator-wrapper.circular svg .circularProgress{stroke-opacity:1}.-hds-progress-indicator-wrapper.circular svg .circularDeterminateProgress{stroke-dasharray:100 100;stroke-dashoffset:0;transition:stroke-dashoffset 1s ease-in-out}.-hds-progress-indicator-wrapper.circular.small{height:1rem;width:1rem}.-hds-progress-indicator-wrapper.circular.small svg{height:.875rem;width:.875rem}.-hds-progress-indicator-wrapper.circular.small .circularProgress{stroke-dasharray:38;stroke-dashoffset:25}.-hds-progress-indicator-wrapper.circular.small.circularProgress.determinate{stroke-dasharray:100 100;stroke-dashoffset:0}.-hds-progress-indicator-wrapper.circular.large{height:2rem;width:2rem}.-hds-progress-indicator-wrapper.circular.large svg{height:1.875rem;width:1.875rem}.-hds-progress-indicator-wrapper.circular.large .circularProgress{stroke-dasharray:88;stroke-dashoffset:59}.-hds-progress-indicator-wrapper.circular.determinate .circularProgress{opacity:0}.-hds-progress-indicator-wrapper.circular.indeterminate .circularProgress{animation:clockwise-animation 1s linear infinite;transform-origin:center}.-hds-progress-indicator-wrapper.circular.accent svg circle{stroke:var(--hds-accent)}.-hds-progress-indicator-wrapper.circular.action svg circle{stroke:var(--hds-action)}.-hds-progress-indicator-wrapper.circular.on-light svg circle{stroke:var(--hds-foreground-primary)}.-hds-progress-indicator-wrapper.circular.on-light-subtle svg circle{stroke:var(--hds-foreground-secondary)}.-hds-progress-indicator-wrapper.circular.on-dark svg circle{stroke:var(--hds-ondarkcolor-primary)}.-hds-progress-indicator-wrapper.circular.on-light-danger svg circle{stroke:var(--hds-foreground-negative)}.-hds-progress-indicator-wrapper.circular.on-light-success svg circle{stroke:var(--hds-foreground-positive)}.-hds-progress-indicator-wrapper.circular.on-light-warning svg circle{stroke:var(--hds-foreground-warning)}
`;

// node_modules/@here/hds-progress-indicator/build/hds-progress-indicator.js
var ProgressIndicator = class ProgressIndicator2 extends LitElement {
  constructor() {
    super(...arguments);
    this.color = "accent";
    this.size = "small";
    this.indicatorType = "linear";
    this.variant = "indeterminate";
    this.progress = 0;
  }
  firstUpdated() {
    var _a6;
    this._circularProgressLength = (_a6 = this.circularDeterminateVariant) == null ? void 0 : _a6.getAttribute("r");
  }
  updated() {
    if (this.variant !== "determinate")
      return;
    if (this.indicatorType === "circular") {
      if (this.progress === 0) {
        this.circularDeterminateVariant.style.opacity = "0";
      } else if (this.progress > 0) {
        const r = this._circularProgressLength;
        const c = Math.PI * (r * 2);
        const pct = (100 - this.progress) / 100 * c;
        if (this.circularDeterminateVariant !== null) {
          this.circularDeterminateVariant.style.opacity = "1";
          this.circularDeterminateVariant.style.strokeDashoffset = `${Math.round(pct)}`;
        }
      }
    }
  }
  // eslint-disable-next-line no-undef
  update(changedProperties) {
    super.update(changedProperties);
    this.progress = clamp(this.progress, 0, 100);
  }
  render() {
    const classes = {};
    classes[this.size] = true;
    classes[this.color] = true;
    classes[this.indicatorType] = true;
    classes[this.variant] = true;
    classes["progress-0"] = this.progress === 0;
    return html`
      <div
        class="-hds-progress-indicator-wrapper ${classMap(classes)}"
        role="progressbar"
        aria-label="${this.ariaLabel || "progress indicator"}"
        aria-live="polite"
      >
        ${this.indicatorType === "circular" ? this._renderCircularVariant() : this._renderLinearVariant()}
      </div>
    `;
  }
  _renderLinearVariant() {
    return html`
      <svg width="100%" height="2">
        <line class="track" x1="0" y1="50%" x2="100%" y2="50%"></line>
        <line
          class="progress"
          x1="0%"
          y1="50%"
          x2="${this.variant === "indeterminate" ? "100%" : `${clamp(this.progress, 0, 100)}%`}"
          y2="50%"
        ></line>
      </svg>
    `;
  }
  _renderCircularVariant() {
    const { cx, cy, r, viewBox } = this.getCircularDimensions();
    return html`
      <svg viewBox="${viewBox}" xmlns="http://www.w3.org/2000/svg">
        <circle class="path" cx="${cx}" cy="${cy}" r="${r}"></circle>
        <circle cx="${cx}" cy="${cy}" r="${r}" class="circularProgress"></circle>
      </svg>
    `;
  }
  getCircularDimensions() {
    const dimensions = {};
    switch (this.size) {
      case "small":
        dimensions.cx = 7;
        dimensions.r = 6;
        break;
      case "large":
      default:
        dimensions.cx = 15;
        dimensions.r = 14;
        break;
    }
    dimensions.cy = dimensions.cx;
    dimensions.viewBox = `0 0 ${2 * dimensions.cx} ${2 * dimensions.cy}`;
    return dimensions;
  }
};
ProgressIndicator.styles = styles11;
__decorate([
  property({ type: String })
], ProgressIndicator.prototype, "color", void 0);
__decorate([
  property({ type: String })
], ProgressIndicator.prototype, "size", void 0);
__decorate([
  property({ type: String, attribute: "indicator-type" })
], ProgressIndicator.prototype, "indicatorType", void 0);
__decorate([
  property({ type: String })
], ProgressIndicator.prototype, "variant", void 0);
__decorate([
  property({ type: Number, reflect: true })
], ProgressIndicator.prototype, "progress", void 0);
__decorate([
  property({ type: String, attribute: "aria-label" })
], ProgressIndicator.prototype, "ariaLabel", void 0);
__decorate([
  query(".circularProgress")
], ProgressIndicator.prototype, "circularDeterminateVariant", void 0);
ProgressIndicator = __decorate([
  customElement("hds-progress-indicator")
], ProgressIndicator);

// node_modules/@here/hds-dropzone/build/hds-dropzone.css.js
var styles12 = css`
:host(:focus){outline:0}:host{display:block}.-hds-dropzone-wrapper{display:flex;flex-direction:column;font-size:var(--hds-body-small-font-size);height:100%}.-hds-dropzone-wrapper [type=file]{opacity:0;pointer-events:none;position:absolute}.-hds-dropzone-wrapper.orientation-vertical .dropzone .row{flex-direction:column}.-hds-dropzone-wrapper.disabled{pointer-events:none}.-hds-dropzone-wrapper.disabled .dropzone{border-color:var(--hds-foreground-incactive)}.-hds-dropzone-wrapper.disabled .dropzone,.-hds-dropzone-wrapper.disabled .dropzone .button{--hds-icon-color:var(--hds-foreground-inactive);color:var(--hds-foreground-inactive)}.-hds-dropzone-wrapper .row{align-items:center;display:flex;justify-content:center;text-align:center;width:100%}.-hds-dropzone-wrapper .row.uploading{flex-direction:column}.-hds-dropzone-wrapper .footer,.-hds-dropzone-wrapper .header{display:flex;justify-content:space-between}.-hds-dropzone-wrapper .header{color:var(--hds-foreground-secondary)}.-hds-dropzone-wrapper .footer{color:var(--hds-foreground-tertiary);margin-top:var(--hds-spacing-1)}.-hds-dropzone-wrapper .caption{font-size:var(--hds-caption-font-size)}.-hds-dropzone-wrapper.error .footer{color:var(--hds-negative)}.-hds-dropzone-wrapper.dragging-over .dropzone{background-color:var(--hds-background-hover)}.dropzone{--hds-icon-color:var(--hds-action);align-items:center;border:var(--hds-border-width) dashed var(--hds-foreground-tertiary);border-radius:var(--hds-border-radius);color:var(--hds-foreground-primary);display:flex;flex:1;flex-direction:column;justify-content:center;padding:var(--hds-spacing-9) var(--hds-spacing-7)}.dropzone:hover{background-color:var(--hds-background-hover);border-color:var(--hds-foreground-tertiary-hover)}.dropzone .icon{display:block;margin:auto auto var(--hds-spacing-4)}.dropzone .dropzone-file-restrictions{color:var(--hds-foreground-tertiary);margin-top:var(--hds-spacing-2)}.dropzone .button{--hds-icon-color:var(--hds-action);margin-left:var(--hds-spacing-1)}.dropzone .progress-indicator{margin-bottom:var(--hds-spacing-1)}
`;

// node_modules/@here/hds-dropzone/build/hds-dropzone.js
var Dropzone = class Dropzone2 extends LitElement {
  constructor() {
    super(...arguments);
    this.progress = false;
    this.dragging = false;
    this.error = false;
    this.disabled = false;
    this.multiple = false;
    this.accept = "";
    this.files = null;
    this.icon = "";
    this.iconCategory = "core-ui";
    this.orientation = "horizontal";
    this.textDropzoneBrowseFiles = "Browse files";
    this.textDropzoneDropFiles = "Drop files here";
    this.textDropzoneOr = "or";
    this.textDropzoneUploading = "Uploading";
    this.textDropzoneDraggingOver = "";
    this.textDropzoneFileRestrictions = "";
    this.textAssistive = "";
    this.textError = "";
    this.textTitle = "";
    this.textFileRestrictions = "";
  }
  /**
   * Asynchronous function that clears all selected/dragged files
   */
  async reset() {
    this.nativeInput.value = "";
    await this._emitChange(this.nativeInput.files);
  }
  browse() {
    this.nativeInput.click();
  }
  render() {
    const classes = {
      disabled: this.disabled,
      progress: this.progress,
      error: this.error,
      "dragging-over": this.dragging
    };
    classes[`orientation-${this.orientation}`] = true;
    const isDraggingOver = this.dragging && this.textDropzoneDraggingOver && this.textDropzoneDraggingOver.length;
    let dropzoneContent = nothing;
    if (this.progress)
      dropzoneContent = this.renderProgress();
    else if (isDraggingOver)
      dropzoneContent = this.renderDraggingOver();
    else
      dropzoneContent = this.renderDropzone();
    return html`
      <div
        class="-hds-dropzone-wrapper ${classMap(classes)}"
        @drop="${this._onDrop}"
        @dragover="${this._onDragOver}"
        @dragleave="${this._onDragLeave}"
      >
        <div class="header">
          <span> ${ifDefined(this.textTitle)} </span>
          <span class="caption"> ${ifDefined(this.textFileRestrictions)} </span>
        </div>
        <div class="dropzone">${dropzoneContent}</div>
        <div class="footer">
          <span class="caption">
            ${ifDefined(this.error && this.textError ? this.textError : this.textAssistive)}
          </span>
        </div>
        <input
          type="file"
          accept="${this.accept}"
          ?multiple="${this.multiple}"
          @change="${this._onNativeInputChange}"
        />
      </div>
    `;
  }
  async _emitChange(files) {
    if (!this.progress) {
      this.files = files;
      await this.updateComplete;
      this.dispatchEvent(new CustomEvent("change", {
        detail: { files },
        bubbles: true,
        composed: true
      }));
    }
  }
  async _onNativeInputChange(e) {
    e.stopPropagation();
    e.preventDefault();
    await this._emitChange(this.nativeInput.files);
  }
  async _onDrop(e) {
    this.dragging = false;
    e.stopPropagation();
    e.preventDefault();
    await this._emitChange(e.dataTransfer.files);
  }
  _onDragOver(e) {
    this.dragging = true;
    e.stopPropagation();
    e.preventDefault();
  }
  _onDragLeave(e) {
    this.dragging = false;
    e.stopPropagation();
    e.preventDefault();
  }
  renderProgress() {
    return html` <div class="row uploading">
      <hds-progress-indicator
        class="progress-indicator"
        size="large"
        color="action"
        indicator-type="circular"
      ></hds-progress-indicator>
      <div>${this.textDropzoneUploading}</div>
    </div>`;
  }
  renderDraggingOver() {
    return html` <div class="row">${this.textDropzoneDraggingOver}</div>`;
  }
  renderIcon() {
    return this.icon ? html` <div class="row uploading">
          <hds-icon
            class="icon"
            size="16px"
            name="${this.icon}"
            category="${this.iconCategory}"
          ></hds-icon>
        </div>` : nothing;
  }
  renderSeparator() {
    return this.orientation === "vertical" ? html` <div class="row"></div>` : nothing;
  }
  renderDropzone() {
    const textDropzoneBrowseFiles = this.textDropzoneBrowseFiles.trim() !== "" ? this.textDropzoneBrowseFiles : "Browse files";
    return html`
      ${this.renderIcon()}
      <div class="row">
        <span>${this.textDropzoneDropFiles} ${this.renderSeparator()} ${this.textDropzoneOr}</span>
        <span>${this.renderSeparator()}</span>
        <hds-button
          @click="${this.browse}"
          ?disabled="${this.disabled}"
          class="button"
          variant="link"
          size="small"
          icon-right="folder-open"
          icon-category="core-ui"
          >${textDropzoneBrowseFiles}</hds-button
        >
      </div>
      <div class="row dropzone-file-restrictions">${this.textDropzoneFileRestrictions}</div>
    `;
  }
};
Dropzone.styles = styles12;
__decorate([
  property({ type: Boolean, reflect: true })
], Dropzone.prototype, "progress", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], Dropzone.prototype, "dragging", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Dropzone.prototype, "error", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Dropzone.prototype, "disabled", void 0);
__decorate([
  property({ type: Boolean })
], Dropzone.prototype, "multiple", void 0);
__decorate([
  property({ type: String })
], Dropzone.prototype, "accept", void 0);
__decorate([
  property({ type: Object, attribute: false })
], Dropzone.prototype, "files", void 0);
__decorate([
  property({ type: String })
], Dropzone.prototype, "icon", void 0);
__decorate([
  property({ type: String, attribute: "icon-category" })
], Dropzone.prototype, "iconCategory", void 0);
__decorate([
  property({ type: String })
], Dropzone.prototype, "orientation", void 0);
__decorate([
  property({ type: String, attribute: "text-dropzone-browse-files" })
], Dropzone.prototype, "textDropzoneBrowseFiles", void 0);
__decorate([
  property({ type: String, attribute: "text-dropzone-drop-files" })
], Dropzone.prototype, "textDropzoneDropFiles", void 0);
__decorate([
  property({ type: String, attribute: "text-dropzone-or" })
], Dropzone.prototype, "textDropzoneOr", void 0);
__decorate([
  property({ type: String, attribute: "text-dropzone-uploading" })
], Dropzone.prototype, "textDropzoneUploading", void 0);
__decorate([
  property({ type: String, attribute: "text-dropzone-dragging-over" })
], Dropzone.prototype, "textDropzoneDraggingOver", void 0);
__decorate([
  property({ type: String, attribute: "text-dropzone-file-restrictions" })
], Dropzone.prototype, "textDropzoneFileRestrictions", void 0);
__decorate([
  property({ type: String, attribute: "text-assistive" })
], Dropzone.prototype, "textAssistive", void 0);
__decorate([
  property({ type: String, attribute: "text-error" })
], Dropzone.prototype, "textError", void 0);
__decorate([
  property({ type: String, attribute: "text-title" })
], Dropzone.prototype, "textTitle", void 0);
__decorate([
  property({ type: String, attribute: "text-file-restrictions" })
], Dropzone.prototype, "textFileRestrictions", void 0);
__decorate([
  query("input[type=file]")
], Dropzone.prototype, "nativeInput", void 0);
Dropzone = __decorate([
  customElement("hds-dropzone")
], Dropzone);

// node_modules/@here/hds-react-components/Dropzone/HDSDropzone.js
new Dropzone();
var HDSDropzone = import_react9.default.forwardRef((props, ref) => {
  const { progress, error, disabled, multiple, accept, icon, iconCategory, orientation, reset, textDropzoneBrowseFiles, textDropzoneDropFiles, textDropzoneOr, textDropzoneUploading, textDropzoneDraggingOver, textDropzoneFileRestrictions, textAssistive, textError, textTitle, textFileRestrictions, className, onChange: onChange2, ...rest } = props;
  const innerRef = import_react9.default.useRef(null);
  (0, import_react9.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onChange2 && onChange2(e.detail);
  };
  (0, import_react9.useEffect)(() => {
    if (onChange2 && innerRef.current) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, innerRef]);
  (0, import_react9.useEffect)(() => {
    if (reset && innerRef.current) {
      innerRef.current.reset();
    }
  }, [reset, innerRef]);
  const attributes = {};
  progress && (attributes.progress = true);
  error && (attributes.error = true);
  disabled && (attributes.disabled = true);
  multiple && (attributes.multiple = true);
  textDropzoneBrowseFiles && (attributes["text-dropzone-browse-files"] = textDropzoneBrowseFiles);
  textDropzoneDropFiles && (attributes["text-dropzone-drop-files"] = textDropzoneDropFiles);
  textDropzoneOr && (attributes["text-dropzone-or"] = textDropzoneOr);
  textDropzoneUploading && (attributes["text-dropzone-uploading"] = textDropzoneUploading);
  textDropzoneDraggingOver && (attributes["text-dropzone-dragging-over"] = textDropzoneDraggingOver);
  textDropzoneFileRestrictions && (attributes["text-dropzone-file-restrictions"] = textDropzoneFileRestrictions);
  textAssistive && (attributes["text-assistive"] = textAssistive);
  textError && (attributes["text-error"] = textError);
  textTitle && (attributes["text-title"] = textTitle);
  textFileRestrictions && (attributes["text-file-restrictions"] = textFileRestrictions);
  return import_react9.default.createElement("hds-dropzone", { icon, ...iconCategory && { "icon-category": iconCategory }, ...className && { class: className }, accept, orientation, ref: innerRef, ...attributes, ...rest });
});
HDSDropzone.displayName = "hds-dropzone";
HDSDropzone.defaultProps = {
  progress: false,
  error: false,
  disabled: false,
  multiple: false,
  accept: "",
  icon: "",
  iconCategory: "core-ui",
  orientation: "horizontal",
  textDropzoneBrowseFiles: "Browse files",
  textDropzoneDropFiles: "Drop files here",
  textDropzoneOr: "or",
  textDropzoneUploading: "Uploading",
  textDropzoneDraggingOver: "",
  textDropzoneFileRestrictions: "",
  textAssistive: "",
  textError: "",
  textTitle: "",
  textFileRestrictions: ""
};
var HDSDropzone_default = HDSDropzone;

// node_modules/@here/hds-react-components/List/HDSList.js
var import_react10 = __toESM(require_react(), 1);
new List();
var HDSList = import_react10.default.forwardRef((props, ref) => {
  const { unhoverable, unpressable, unfocusable, unselectable, disabled, onSelect, groupTitle, innerAriaLabel, innerRole, selectedIndex, variant, size: size2, horizontalPadding, className, children, ...rest } = props;
  const innerRef = (0, import_react10.useRef)(null);
  (0, import_react10.useImperativeHandle)(ref, () => innerRef.current);
  const _handleSelected = (e) => {
    if (e.target !== innerRef.current)
      return;
    onSelect && onSelect(e.detail);
  };
  (0, import_react10.useEffect)(() => {
    if (innerRef.current) {
      if (onSelect) {
        innerRef.current.addEventListener("select", _handleSelected);
      }
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("select", _handleSelected);
    };
  }, [onSelect, innerRef]);
  return import_react10.default.createElement("hds-list", { ...unhoverable && { unhoverable }, ...unpressable && { unpressable }, ...unfocusable && { unfocusable }, ...unselectable && { unselectable }, ...disabled && { disabled }, ...groupTitle && { "group-title": groupTitle }, ...innerAriaLabel && { "inner-aria-label": innerAriaLabel }, ...innerRole && { "inner-role": innerRole }, ...selectedIndex && { "selected-index": selectedIndex }, ...horizontalPadding && { "horizontal-padding": horizontalPadding }, ...variant && { variant }, ...size2 && { size: size2 }, ...className && { class: className }, ...rest, ref: innerRef }, children);
});
HDSList.defaultProps = {
  innerRole: void 0,
  innerAriaLabel: void 0,
  truncate: true,
  groupTitle: "",
  variant: "subtle",
  size: "small",
  horizontalPadding: "default",
  selectedIndex: -1,
  disabled: false,
  unhoverable: false,
  unpressable: false,
  unfocusable: false,
  unselectable: false
};
var HDSList_default = HDSList;

// node_modules/@here/hds-react-components/List/HDSListItem.js
var import_react11 = __toESM(require_react(), 1);
new ListItem();
var HDSListItem = import_react11.default.forwardRef(({ unhoverable, unselectable, unpressable, unfocusable, selected, disabled, dragging, children, iconRight, iconRightCategory, iconCategory, className, onSelect, ...rest }, ref) => {
  const innerRef = (0, import_react11.useRef)(null);
  (0, import_react11.useImperativeHandle)(ref, () => innerRef.current);
  const _handleSelected = (e) => {
    if (e.target !== innerRef.current)
      return;
    onSelect && onSelect(e.detail);
  };
  (0, import_react11.useEffect)(() => {
    if (innerRef.current) {
      if (onSelect) {
        innerRef.current.addEventListener("select", _handleSelected);
      }
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("select", _handleSelected);
    };
  }, [onSelect, innerRef]);
  return import_react11.default.createElement("hds-list-item", { ...unhoverable && { unhoverable }, ...unselectable && { unselectable }, ...unpressable && { unpressable }, ...unfocusable && { unfocusable }, ...selected && { selected }, ...disabled && { disabled }, ...dragging && { dragging }, ...iconRight && { "icon-right": iconRight }, ...iconRightCategory && { "icon-right-category": iconRightCategory }, ...iconCategory && { "icon-category": iconCategory }, ...className && { class: className }, ref: innerRef, ...rest }, children);
});
HDSListItem.defaultProps = {
  unhoverable: false,
  unpressable: false,
  unselectable: false,
  unfocusable: false,
  selected: false,
  dragging: false,
  icon: void 0,
  iconCategory: "core-ui",
  iconRight: void 0,
  iconRightCategory: "core-ui",
  variant: "default",
  groupVariant: "subtle",
  size: "small"
};
var HDSListItem_default = HDSListItem;

// node_modules/@here/hds-rich-list/build/hds-rich-list-item.css.js
var styles13 = css`
.-hds-rich-list-item-wrapper hds-icon{--hds-icon-color:var(--hds-foreground-secondary)}.-hds-rich-list-item-wrapper.disabled{background:var(--hds-background-object);color:var(--hds-foreground-inactive)}.-hds-rich-list-item-wrapper.disabled .progress,.-hds-rich-list-item-wrapper.disabled .sub-title,.-hds-rich-list-item-wrapper.disabled .title,.-hds-rich-list-item-wrapper.disabled.has-error-text .sub-title{color:var(--hds-foreground-inactive)}.-hds-rich-list-item-wrapper.disabled .thumbnail hds-icon,.-hds-rich-list-item-wrapper.disabled hds-icon{--hds-icon-color:var(--hds-foreground-inactive)}.-hds-rich-list-item-wrapper.has-sub-title-text .sub-title{margin-top:var(--hds-spacing-2)}.-rich-list-item-state-success .thumbnail hds-icon{--hds-icon-color:var(--hds-positive)}.-rich-list-item-state-error .thumbnail hds-icon{--hds-icon-color:var(--hds-foreground-negative)}.-rich-list-item-variant-default.selectable.selected .progress,.-rich-list-item-variant-default.selectable.selected .sub-title,.-rich-list-item-variant-default.selectable.selected .title,.-rich-list-item-variant-default.selectable.selected .title span,.-rich-list-item-variant-default.selectable.selected.has-error-text .sub-title{color:var(--hds-ondarkcolor-primary)}.-rich-list-item-variant-default.selectable.selected hds-icon,.-rich-list-item-variant-default.selectable.selected slot[name=action]::slotted(hds-icon){--hds-icon-color:var(--hds-ondarkcolor-primary)}.-rich-list-item-variant-default .progress-wrapper{height:.125rem;margin-top:.5rem;overflow:hidden;width:100%}.-rich-list-item-variant-default.-rich-list-item-state-progress .sub-title{display:none}.-rich-list-item-variant-default.has-error-text .sub-title{color:var(--hds-foreground-negative)}.-rich-list-item-variant-default .thumbnail{align-items:center;background-color:var(--hds-background-object);border-radius:var(--hds-border-radius);display:flex;height:2.5rem;justify-content:center;overflow:hidden}.-rich-list-item-variant-default .thumbnail hds-icon{align-items:center;display:flex;height:2.5rem;justify-content:center;margin:auto;width:2.5rem}.-rich-list-item-variant-default .thumbnail img{object-fit:cover}.-rich-list-item-variant-default .content-wrapper{flex:auto;font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);margin-left:var(--hds-spacing-4);margin-right:var(--hds-spacing-4);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.-rich-list-item-variant-default .content-wrapper .upper{display:flex;justify-content:space-between}.-rich-list-item-variant-default .title{color:var(--hds-foreground-primary)}.-rich-list-item-variant-default .progress,.-rich-list-item-variant-default .sub-title,.-rich-list-item-variant-default .title span{color:var(--hds-foreground-tertiary)}.-rich-list-item-variant-default .actions{--hds-icon-color:var(--hds-foreground-secondary);display:flex}.-rich-list-item-variant-default .actions slot[name=action]{align-items:center;display:flex;height:2rem;justify-content:center}.-rich-list-item-variant-default .actions hds-icon,.-rich-list-item-variant-default .actions slot[name=action]::slotted(hds-icon){align-items:center;display:flex;height:2rem;justify-content:center;width:2rem}
`;

// node_modules/@here/hds-rich-list/build/hds-rich-list-item.js
var RichListItem = class RichListItem2 extends ListItem {
  constructor() {
    super(...arguments);
    this.richVariant = "default";
    this.state = "default";
    this.headline = "";
    this.subTitle = "";
    this.progressText = "";
    this.progress = 0;
    this.progressVariant = "determinate";
    this.errorText = "";
    this.filePreview = false;
    this.iconDefault = "time";
    this.iconDefaultCategory = "core-ui";
    this.iconProgress = "time";
    this.iconProgressCategory = "core-ui";
    this.iconError = "alert";
    this.iconErrorCategory = "core-ui";
    this.iconSuccess = "checkmark";
    this.iconSuccessCategory = "core-ui";
    this.hideIcon = false;
    this.hideCancel = false;
    this.hideRetry = false;
    this.hideDelete = false;
    this.unhoverable = false;
    this.unpressable = false;
    this.unselectable = false;
    this.unfocusable = false;
  }
  static get styles() {
    return [super.styles, styles13];
  }
  async updated(_changedProperties) {
    await this.updateComplete;
    super.updated(_changedProperties);
    if (_changedProperties.has("file")) {
      this._loadFilePreview();
    }
  }
  render() {
    const title = this.file !== void 0 ? this.file.name.replace(/(\.[a-zA-Z0-9]+)$/, "<span>$1</span>") : this.headline;
    const canRenderErrorText = this.state === "error" && this.errorText !== "";
    const subTitleText = canRenderErrorText ? this.errorText : this.subTitle;
    const classes = {
      item: true,
      "-hds-rich-list-item-wrapper": true,
      "-hds-list-item-wrapper": true,
      "hds-list-item-variant-solid-default": true,
      "hds-list-item-h-padding-dense": true,
      disabled: this.disabled,
      dragging: this.dragging,
      selected: this.selected,
      [`${this.unhoverable ? "unhoverable" : "hoverable"}`]: true,
      [`${this.unselectable ? "unselectable" : "selectable"}`]: true,
      [`${this.unpressable ? "unpressable" : "pressable"}`]: true,
      [`${this.unfocusable ? "unfocusable" : "focusable"}`]: true,
      "has-error-text": canRenderErrorText,
      "has-sub-title-text": subTitleText
    };
    classes[`-rich-list-item-variant-${this.richVariant}`] = true;
    if (this.richVariant === "default") {
      classes["hds-list-item-size-extra-large"] = true;
    } else if (this.richVariant === "dense") {
      classes["hds-list-item-size-small"] = true;
    }
    classes[`-rich-list-item-state-${this.state}`] = true;
    if (this.state === "error") {
      classes["hds-list-item-variant-solid-error"] = true;
    }
    return html`
      <div class="${classMap(classes)}" @click="${super.onItemClick}" tabindex="-1">
        <div class="thumbnail">${this._renderFilePreview()} ${this._renderIcon()}</div>
        <div class="content-wrapper">
          <div class="upper">
            <div class="title">${StringToHtml_default(title)}</div>
            <div class="progress">${this.progressText}</div>
          </div>
          <div class="lower">
            <div class="sub-title">${subTitleText}</div>
          </div>
          ${this._renderProgressBar()}
        </div>
        <div class="actions">
          <slot name="action" @click="${this._emitEventOnAction}"></slot>
          ${this._renderAction("retry", "refresh")} ${this._renderAction("cancel", "cross")}
          ${this._renderAction("delete", "delete")}
        </div>
      </div>
    `;
  }
  canRenderFilePreview() {
    return this.filePreview && this.file !== void 0 && this.file.type.indexOf("image/") === 0;
  }
  async _emitEventOnAction(e) {
    e.stopPropagation();
    const action = e.target.getAttribute("data-action") || "custom";
    const detail = { id: this.id, action };
    if (this.file !== void 0) {
      detail.file = this.file;
    }
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("action", {
      detail,
      bubbles: true
    }));
  }
  _renderIcon() {
    if (this.hideIcon || this.canRenderFilePreview()) {
      return nothing;
    }
    const iconProps = {
      "default--default": {
        size: "24px",
        style: "outline",
        name: this.iconDefault,
        category: this.iconDefaultCategory
      },
      "default--progress": {
        size: "24px",
        style: "outline",
        name: this.iconProgress,
        category: this.iconProgressCategory
      },
      "default--error": {
        size: "24px",
        style: "outline",
        name: this.iconError,
        category: this.iconErrorCategory
      },
      "default--success": {
        size: "24px",
        style: "outline",
        name: this.iconSuccess,
        category: this.iconSuccessCategory
      },
      "dense--default": {
        size: "16px",
        style: "solid",
        name: this.iconDefault,
        category: this.iconDefaultCategory
      },
      "dense--progress": {
        size: "16px",
        style: "solid",
        name: this.iconProgress,
        category: this.iconProgressCategory
      },
      "dense--error": {
        size: "16px",
        style: "solid",
        name: this.iconError,
        category: this.iconErrorCategory
      },
      "dense--success": {
        size: "16px",
        style: "solid",
        name: this.iconSuccess,
        category: this.iconSuccessCategory
      }
    }[`${this.richVariant}--${this.state}`];
    if (this.file !== void 0) {
      iconProps.name = Icon.getNameByMediaType(this.file.type);
      iconProps.category = "file";
    }
    return html`
      <hds-icon
        name="${iconProps.name}"
        size="${iconProps.size}"
        category="${iconProps.category}"
        icon-style="${iconProps.style}"
      >
      </hds-icon>
    `;
  }
  _renderProgressBar() {
    if (this.state === "progress") {
      return html`
        <div class="progress-wrapper">
          <hds-progress-indicator
            color="${this.selected ? "on-dark" : "action"}"
            type="linear"
            variant="${this.progressVariant}"
            ?disabled="${this.disabled}"
            progress="${this.progress}"
          ></hds-progress-indicator>
        </div>
      `;
    }
    return nothing;
  }
  _renderFilePreview() {
    if (this.canRenderFilePreview()) {
      return html`<img width="40" height="40" alt="preview" />`;
    }
    return nothing;
  }
  _loadFilePreview() {
    if (this.canRenderFilePreview()) {
      this.imgFilePreview.src = "";
      const reader = new FileReader();
      reader.onloadend = () => {
        this.imgFilePreview.src = reader.result;
      };
      reader.readAsDataURL(this.file);
    }
  }
  _renderAction(action, icon) {
    const canRenderRetry = action === "retry" && this.state === "error" && !this.hideRetry;
    const canRenderCancel = action === "cancel" && ["default", "progress", "error"].includes(this.state) && !this.hideCancel;
    const canRenderDelete = action === "delete" && this.state === "success" && !this.hideDelete;
    if (canRenderRetry || canRenderCancel || canRenderDelete) {
      return html` <hds-icon
        @click="${this._emitEventOnAction}"
        data-action="${action}"
        name="${icon}"
        size="16px"
      >
      </hds-icon>`;
    }
    return nothing;
  }
};
__decorate([
  property({ type: String, attribute: false })
], RichListItem.prototype, "richVariant", void 0);
__decorate([
  property({ type: String, attribute: "state" })
], RichListItem.prototype, "state", void 0);
__decorate([
  property({ type: String })
], RichListItem.prototype, "headline", void 0);
__decorate([
  property({ type: String, attribute: "sub-title" })
], RichListItem.prototype, "subTitle", void 0);
__decorate([
  property({ type: String, attribute: "progress-text" })
], RichListItem.prototype, "progressText", void 0);
__decorate([
  property({ type: Number, attribute: "progress" })
], RichListItem.prototype, "progress", void 0);
__decorate([
  property({ type: String, attribute: "progress-variant" })
], RichListItem.prototype, "progressVariant", void 0);
__decorate([
  property({ type: String, attribute: "error-text" })
], RichListItem.prototype, "errorText", void 0);
__decorate([
  property({ type: Object, attribute: false })
], RichListItem.prototype, "file", void 0);
__decorate([
  property({ type: Boolean, attribute: "file-preview" })
], RichListItem.prototype, "filePreview", void 0);
__decorate([
  property({ type: String, attribute: "icon-default" })
], RichListItem.prototype, "iconDefault", void 0);
__decorate([
  property({ type: String, attribute: "icon-default-category" })
], RichListItem.prototype, "iconDefaultCategory", void 0);
__decorate([
  property({ type: String, attribute: "icon-progress" })
], RichListItem.prototype, "iconProgress", void 0);
__decorate([
  property({ type: String, attribute: "icon-progress-category" })
], RichListItem.prototype, "iconProgressCategory", void 0);
__decorate([
  property({ type: String, attribute: "icon-error" })
], RichListItem.prototype, "iconError", void 0);
__decorate([
  property({ type: String, attribute: "icon-error-category" })
], RichListItem.prototype, "iconErrorCategory", void 0);
__decorate([
  property({ type: String, attribute: "icon-success" })
], RichListItem.prototype, "iconSuccess", void 0);
__decorate([
  property({ type: String, attribute: "icon-success-category" })
], RichListItem.prototype, "iconSuccessCategory", void 0);
__decorate([
  property({ type: Boolean, attribute: "hide-icon" })
], RichListItem.prototype, "hideIcon", void 0);
__decorate([
  property({ type: Boolean, attribute: "hide-cancel" })
], RichListItem.prototype, "hideCancel", void 0);
__decorate([
  property({ type: Boolean, attribute: "hide-retry" })
], RichListItem.prototype, "hideRetry", void 0);
__decorate([
  property({ type: Boolean, attribute: "hide-delete" })
], RichListItem.prototype, "hideDelete", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], RichListItem.prototype, "unhoverable", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], RichListItem.prototype, "unpressable", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], RichListItem.prototype, "unselectable", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], RichListItem.prototype, "unfocusable", void 0);
__decorate([
  query("img")
], RichListItem.prototype, "imgFilePreview", void 0);
RichListItem = __decorate([
  customElement("hds-rich-list-item")
], RichListItem);

// node_modules/@here/hds-rich-list/build/hds-rich-list.css.js
var styles14 = css`
:host(:focus){outline:0}:host ::slotted([id^=hds-list-item-]){margin-bottom:var(--hds-spacing-2)}:host ::slotted([id^=hds-list-item-]:last-of-type){margin-bottom:var(--hds-spacing-0)}
`;

// node_modules/@here/hds-rich-list/build/hds-rich-list.js
var RichList = class RichList2 extends List {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.richVariant = "default";
    this.horizontalPadding = "dense";
  }
  static get styles() {
    return [super.styles, styles14];
  }
  async updated(_changedProperties) {
    super.updated(_changedProperties);
    const items = this._getSlotItems();
    for (let i = 0; i < items.length; i += 1) {
      if (_changedProperties.has("variant")) {
        items[i].richVariant = this.richVariant;
      }
    }
  }
  render() {
    const role = this.innerRole || "listbox";
    const ariaLabel = this.innerAriaLabel || "list";
    const classes = {
      list: true,
      "-hds-rich-list-wrapper": true,
      "-hds-list-wrapper": true,
      disabled: this.disabled
    };
    return html`
      <div
        class="${classMap(classes)}"
        role="${role}"
        tabindex="0"
        aria-label="${ariaLabel}"
        @select="${super.onSelect}"
        @keydown="${super.onKeypress}"
      >
        <slot></slot>
      </div>
    `;
  }
  _getSlotItems() {
    return this.itemsSlot.assignedNodes({ flatten: true }).filter((e) => e instanceof RichListItem);
  }
};
__decorate([
  property({ type: Boolean })
], RichList.prototype, "disabled", void 0);
__decorate([
  property({ type: String, attribute: "variant" })
], RichList.prototype, "richVariant", void 0);
__decorate([
  property({ type: String, attribute: false })
], RichList.prototype, "horizontalPadding", void 0);
__decorate([
  query("slot")
], RichList.prototype, "itemsSlot", void 0);
RichList = __decorate([
  customElement("hds-rich-list")
], RichList);

// node_modules/@here/hds-react-components/RichList/HDSRichList.js
var import_react12 = __toESM(require_react(), 1);
new RichList();
var HDSRichList = import_react12.default.forwardRef((props, ref) => {
  const { children, variant, onAction, onSelect, disabled, className, ...rest } = props;
  const innerRef = import_react12.default.useRef(null);
  (0, import_react12.useImperativeHandle)(ref, () => innerRef.current);
  const _handleAction = (e) => {
    onAction && onAction(e.detail);
  };
  (0, import_react12.useEffect)(() => {
    if (onAction && innerRef.current) {
      innerRef.current.addEventListener("action", _handleAction);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("action", _handleAction);
    };
  }, [onAction, innerRef]);
  const _handleSelected = (e) => {
    if (e.target !== innerRef.current)
      return;
    onSelect && onSelect(e.detail);
  };
  (0, import_react12.useEffect)(() => {
    if (onSelect && innerRef.current) {
      innerRef.current.addEventListener("select", _handleSelected);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("select", _handleSelected);
    };
  }, [onSelect, innerRef]);
  return import_react12.default.createElement("hds-rich-list", { ref: innerRef, variant, ...disabled && { disabled }, ...className && { class: className }, ...rest }, children);
});
HDSRichList.defaultProps = {
  disabled: false,
  variant: "default"
};
var HDSRichList_default = HDSRichList;

// node_modules/@here/hds-react-components/RichList/HDSRichListItem.js
var import_react13 = __toESM(require_react(), 1);
new RichListItem();
var HDSRichListItem = import_react13.default.forwardRef((props, ref) => {
  const { children, disabled, state: state2, headline, subTitle, progressText, progress, errorText, filePreview, iconDefault, iconDefaultCategory, iconProgress, iconProgressCategory, iconError, iconErrorCategory, iconSuccess, iconSuccessCategory, hideIcon, hideCancel, hideRetry, hideDelete, actions, file, className, progressVariant, ...rest } = props;
  const innerRef = import_react13.default.useRef(null);
  (0, import_react13.useImperativeHandle)(ref, () => innerRef.current);
  (0, import_react13.useEffect)(() => {
    if (innerRef.current) {
      innerRef.current.file = file;
    }
  }, [file, innerRef]);
  const attributes = {};
  subTitle && (attributes["sub-title"] = subTitle);
  progressText && (attributes["progress-text"] = progressText);
  errorText && (attributes["error-text"] = errorText);
  filePreview && (attributes["file-preview"] = true);
  iconDefault && (attributes["icon-default"] = iconDefault);
  iconDefaultCategory && (attributes["icon-default-category"] = iconDefaultCategory);
  iconProgress && (attributes["icon-progress"] = iconProgress);
  iconProgressCategory && (attributes["icon-progress-category"] = iconProgressCategory);
  iconError && (attributes["icon-error"] = iconError);
  iconErrorCategory && (attributes["icon-error-category"] = iconErrorCategory);
  iconSuccess && (attributes["icon-success"] = iconSuccess);
  iconSuccessCategory && (attributes["icon-success-category"] = iconSuccessCategory);
  hideIcon && (attributes["hide-icon"] = false);
  hideCancel && (attributes["hide-cancel"] = false);
  hideRetry && (attributes["hide-retry"] = false);
  hideDelete && (attributes["hide-delete"] = false);
  progressVariant && (attributes["progress-variant"] = progressVariant);
  return import_react13.default.createElement(
    "hds-rich-list-item",
    { ...attributes, progress, state: state2, headline, ref: innerRef, ...disabled && { disabled }, ...className && { class: className }, ...rest },
    children,
    actions
  );
});
HDSRichListItem.defaultProps = {
  disabled: false,
  state: "default",
  headline: "",
  subTitle: "",
  progressText: "",
  progress: 0,
  progressVariant: "determinate",
  errorText: "",
  filePreview: false,
  iconDefault: "time",
  iconDefaultCategory: "core-ui",
  iconProgress: "time",
  iconProgressCategory: "core-ui",
  iconError: "alert",
  iconErrorCategory: "core-ui",
  iconSuccess: "checkmark",
  iconSuccessCategory: "core-ui",
  hideIcon: false,
  hideCancel: false,
  hideRetry: false,
  hideDelete: false
};
var HDSRichListItem_default = HDSRichListItem;

// node_modules/@here/hds-react-components/Accordion/HDSAccordion.js
var import_react14 = __toESM(require_react(), 1);

// node_modules/@here/hds-accordion/build/hds-accordion.css.js
var styles15 = css`
:host(:focus){outline:0}
`;

// node_modules/@here/hds-accordion/build/hds-accordion-item.css.js
var styles16 = css`
:host(:focus){outline:0}.arrow{display:flex}.content{display:none}.-hds-accordion-button{--hds-icon-color:var(--hds-foreground-secondary);align-items:center;box-sizing:border-box;color:var(--hds-foreground-primary);cursor:pointer;display:flex;justify-content:space-between;line-height:var(--hds-button-line-height);width:100%}.-hds-accordion-button .headline{align-items:center;display:flex;line-height:normal;width:100%}.-hds-accordion-button .headline .icon{margin-right:var(--hds-spacing-2)}.-hds-accordion-button .headline .headline-text{font:var(--hds-button-font);letter-spacing:var(--hds-button-letter-spacing);overflow:hidden;text-align:left;-webkit-text-decoration:var(--hds-button-text-decoration,inherit);text-decoration:var(--hds-button-text-decoration,inherit);text-overflow:ellipsis;white-space:nowrap;width:100%}.-hds-accordion-button:disabled{cursor:default}.-hds-accordion-button :active,.-hds-accordion-button :focus,.-hds-accordion-button :focus-visible,.-hds-accordion-button :focus:active,.-hds-accordion-button :focus:not(:focus-visible){outline:0}.expanded .arrow{transform:rotate(180deg)}.expanded .content{display:flex}.arrow-pos-start .-hds-accordion-button{flex-direction:row-reverse}.arrow-pos-start .headline{margin-left:var(--hds-spacing-2)}.arrow-pos-end .-hds-accordion-button{flex-direction:row}.hds-accordion-variant-default.last-child .-hds-accordion-button{border-bottom:var(--hds-border-width) solid var(--hds-foreground-divider)}.hds-accordion-variant-default.last-child.expanded .-hds-accordion-button{border-bottom-color:#0000}.hds-accordion-variant-default.last-child.expanded .content{border-bottom:var(--hds-border-width) solid var(--hds-foreground-divider)}.hds-accordion-variant-default.content-padding .content{padding:var(--hds-spacing-4) var(--hds-spacing-7) var(--hds-spacing-7) var(--hds-spacing-7)}.hds-accordion-variant-default .-hds-accordion-button{background:#0000;border-bottom:var(--hds-border-width) solid #0000;border-left:.125rem solid #0000;border-right:.125rem solid #0000;border-top:var(--hds-border-width) solid var(--hds-foreground-divider);height:3rem;padding-left:var(--hds-spacing-3);padding-right:var(--hds-spacing-3)}.hds-accordion-variant-default .-hds-accordion-button:hover{background:var(--hds-background-hover)}.hds-accordion-variant-default .-hds-accordion-button.disabled{--hds-icon-color:var(--hds-foreground-inactive);color:var(--hds-foreground-inactive);cursor:not-allowed}.hds-accordion-variant-default .-hds-accordion-button:active{background:var(--hds-background-press)}.hds-accordion-variant-default .-hds-accordion-button:focus-visible{outline:var(--hds-object-focused) solid .125rem}.hds-accordion-variant-default .-hds-accordion-button.disabled:hover{background:#0000}.hds-accordion-variant-solid{margin:var(--hds-spacing-1) var(--hds-spacing-0)}.hds-accordion-variant-solid.first-child{margin-top:var(--hds-spacing-0)}.hds-accordion-variant-solid.last-child{margin-bottom:var(--hds-spacing-0)}.hds-accordion-variant-solid .headline hds-icon{margin-right:var(--hds-spacing-2)}.hds-accordion-variant-solid.content-padding .content{padding:var(--hds-spacing-2)}.hds-accordion-variant-solid .-hds-accordion-button{background:var(--hds-background-object);border-color:#0000;border-radius:var(--hds-border-radius);height:2rem;padding-left:var(--hds-spacing-2);padding-right:var(--hds-spacing-2)}.hds-accordion-variant-solid .-hds-accordion-button:hover{background:var(--hds-background-object-hover)}.hds-accordion-variant-solid .-hds-accordion-button:active{background:var(--hds-background-object-press)}.hds-accordion-variant-solid .-hds-accordion-button:focus-visible{outline:var(--hds-object-focused) solid .125rem}.hds-accordion-variant-dense{margin:var(--hds-spacing-2) var(--hds-spacing-0)}.hds-accordion-variant-dense.first-child{margin-top:var(--hds-spacing-0)}.hds-accordion-variant-dense.last-child{margin-bottom:var(--hds-spacing-0)}.hds-accordion-variant-dense.last-child .expanded .-hds-accordion-button{border-bottom-color:#0000}.hds-accordion-variant-dense.last-child .expanded .content{border-bottom:var(--hds-border-width) solid var(--hds-foreground-divider)}.hds-accordion-variant-dense.content-padding .content{padding:var(--hds-spacing-2)}.hds-accordion-variant-dense .-hds-accordion-button{background:#0000;border-left:.125rem solid #0000;border-right:.125rem solid #0000;color:var(--hds-foreground-secondary);font:var(--hds-caption-font);height:1.5rem;letter-spacing:var(--hds-caption-letter-spacing);padding-left:var(--hds-spacing-2);padding-right:var(--hds-spacing-2);-webkit-text-decoration:var(--hds-caption-text-decoration,inherit);text-decoration:var(--hds-caption-text-decoration,inherit)}.hds-accordion-variant-dense .-hds-accordion-button.arrow-pos-end .headline{margin-right:var(--hds-spacing-4)}.hds-accordion-variant-dense .-hds-accordion-button.arrow-pos-end .arrow{margin-left:var(--hds-spacing-4)}.hds-accordion-variant-dense .-hds-accordion-button.arrow-pos-start .headline{margin-right:var(--hds-spacing-4)}.hds-accordion-variant-dense .-hds-accordion-button .headline{color:var(--hds-foreground-secondary);width:auto}.hds-accordion-variant-dense .-hds-accordion-button .h-line{display:flex;flex-grow:1;position:relative}.hds-accordion-variant-dense .-hds-accordion-button .h-line:after{background-color:var(--hds-foreground-divider);content:"";display:block;height:var(--hds-border-width);left:0;position:absolute;right:0;top:50%}.hds-accordion-variant-dense .-hds-accordion-button:hover{--hds-icon-color:var(--hds-foreground-secondary-hover)}.hds-accordion-variant-dense .-hds-accordion-button:hover .headline{color:var(--hds-foreground-secondary-hover)}.hds-accordion-variant-dense .-hds-accordion-button:active{--hds-icon-color:var(--hds-foreground-secondary-press)}.hds-accordion-variant-dense .-hds-accordion-button:active .headline{color:var(--hds-foreground-secondary-press)}.hds-accordion-variant-dense .-hds-accordion-button.disabled{--hds-icon-color:var(--hds-foreground-inactive);color:var(--hds-foreground-inactive);cursor:not-allowed}.hds-accordion-variant-dense .-hds-accordion-button:focus-visible{outline:var(--hds-object-focused) solid .125rem}.hds-accordion-variant-dense .-hds-accordion-button.disabled:hover{background:#0000}.hds-accordion-variant-dense .-hds-accordion-button,.hds-accordion-variant-dense.last-child .-hds-accordion-button,.hds-accordion-variant-dense.last-child.expanded .content{border-bottom:none;border-top:none}
`;

// node_modules/@here/hds-accordion/build/hds-accordion-item.js
var AccordionItem_1;
var AccordionItem = AccordionItem_1 = class AccordionItem2 extends LitElement {
  constructor() {
    super(...arguments);
    this.variant = "default";
    this.arrowPosition = "end";
    this.parentDisabled = false;
    this.headline = "";
    this.expanded = false;
    this.iconCategory = "core-ui";
    this.isLastChild = false;
    this.isFirstChild = false;
    this.disableContentPadding = false;
    this.index = -1;
    this._disabled = false;
  }
  get disabled() {
    return this._disabled || this.parentDisabled;
  }
  set disabled(value) {
    const oldValue = this._disabled;
    this._disabled = value;
    this.requestUpdate("disabled", oldValue);
  }
  firstUpdated(_changedProperties) {
    this.id = this.id || `hds-accordion-item-${++AccordionItem_1.itemIdCounter}`;
  }
  focus() {
    return this.buttonElement && this.buttonElement.focus();
  }
  blur() {
    return this.buttonElement && this.buttonElement.blur();
  }
  updated(_changedProperties) {
    if (_changedProperties.has("expanded") && _changedProperties.get("expanded") !== void 0) {
      this.dispatchEvent(new CustomEvent("change", {
        detail: {
          index: this.index,
          id: this.id,
          expanded: this.expanded
        },
        composed: true,
        bubbles: true
      }));
    }
  }
  renderIcon() {
    if (!this.icon)
      return nothing;
    return html`
      <hds-icon
        class="icon"
        name="${this.icon}"
        category="${this.iconCategory}"
        size="16px"
      ></hds-icon>
    `;
  }
  render() {
    const classes = {
      disabled: this.disabled,
      expanded: this.expanded,
      "last-child": this.isLastChild,
      "first-child": this.isFirstChild
    };
    classes[`hds-accordion-variant-${this.variant}`] = true;
    classes[`arrow-pos-${this.arrowPosition}`] = true;
    classes["content-padding"] = !this.disableContentPadding;
    classes["disable-content-padding"] = this.disableContentPadding;
    const buttonClasses = {
      "-hds-accordion-button": true,
      disabled: this.disabled
    };
    buttonClasses[`arrow-pos-${this.arrowPosition}`] = true;
    const arrowIcon = html` <hds-icon name="chevron-down" size="16px"></hds-icon>`;
    return html`
      <div class="-hds-accordion-item-wrapper ${classMap(classes)}">
        <div
          tabindex="0"
          role="button"
          class="${classMap(buttonClasses)}"
          @click="${this._toggle}"
          id="${`accordion-control-${this.index}`}"
          aria-expanded="${this.expanded}"
          aria-controls="accordion-section-${this.index}"
          aria-disabled="${this.expanded && this.disabled}"
        >
          ${this.variant === "dense" && this.arrowPosition === "start" ? html`<div class="h-line"></div>` : nothing}
          <div class="headline">
            ${this.renderIcon()}
            <span class="headline-text">
              <slot name="headline">${this.headline}</slot>
            </span>
          </div>
          ${this.variant === "dense" && this.arrowPosition === "end" ? html`<div class="h-line"></div>` : nothing}
          <div class="arrow">${arrowIcon}</div>
        </div>
        <div
          class="content"
          role="region"
          id="${`accordion-section-${this.index}`}"
          aria-labelledby="${`accordion-control-${this.index}`}"
        >
          <slot></slot>
        </div>
      </div>
    `;
  }
  _toggle() {
    if (this.disabled)
      return;
    this.expanded = !this.expanded;
  }
};
AccordionItem.styles = styles16;
AccordionItem.itemIdCounter = 0;
AccordionItem.shadowRootOptions = {
  ...LitElement.shadowRootOptions,
  delegatesFocus: true
};
__decorate([
  property({ type: String, attribute: false })
], AccordionItem.prototype, "variant", void 0);
__decorate([
  property({ type: String, attribute: false })
], AccordionItem.prototype, "arrowPosition", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], AccordionItem.prototype, "parentDisabled", void 0);
__decorate([
  property({ type: String, reflect: true })
], AccordionItem.prototype, "headline", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], AccordionItem.prototype, "expanded", void 0);
__decorate([
  property({ type: String })
], AccordionItem.prototype, "icon", void 0);
__decorate([
  property({ type: String, attribute: "icon-category" })
], AccordionItem.prototype, "iconCategory", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], AccordionItem.prototype, "isLastChild", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], AccordionItem.prototype, "isFirstChild", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], AccordionItem.prototype, "disableContentPadding", void 0);
__decorate([
  property({ type: Number, attribute: false })
], AccordionItem.prototype, "index", void 0);
__decorate([
  query(".-hds-accordion-button")
], AccordionItem.prototype, "buttonElement", void 0);
__decorate([
  property({ type: Boolean })
], AccordionItem.prototype, "disabled", null);
AccordionItem = AccordionItem_1 = __decorate([
  customElement("hds-accordion-item")
], AccordionItem);

// node_modules/@here/hds-accordion/build/hds-accordion.js
var Accordion = class Accordion2 extends LitElement {
  constructor() {
    super(...arguments);
    this.variant = "default";
    this.arrowPosition = "end";
    this.expandMode = "many";
    this.defaultExpanded = false;
    this.disableContentPadding = false;
    this.disabled = false;
    this._accordionAssignedElementsCache = [];
  }
  updated() {
    this._updateAccordionItems();
  }
  render() {
    return html`
      <div
        class="-hds-accordion-wrapper"
        @keydown="${this._onKeyDown}"
        @slotchange="${this._onSlotChange}"
        @change="${this._onChange}"
      >
        <slot></slot>
      </div>
    `;
  }
  _onSlotChange() {
    this._accordionAssignedElementsCache = this.slotElement.assignedElements();
    if (this.defaultExpanded) {
      const items = this._getItems();
      for (let i = 0; i < items.length; i += 1) {
        if (this.expandMode === "one" && i === 0 || this.expandMode === "many") {
          items[i].expanded = true;
        }
      }
    }
    this._updateAccordionItems();
  }
  _getFocusedItem() {
    return this._getItems().find((item) => item === document.activeElement);
  }
  _focusItemByIndex(index2) {
    var _a6;
    (_a6 = this._getItems()[index2]) == null ? void 0 : _a6.focus();
  }
  _onKeyDown(e) {
    if (["ArrowDown", "ArrowUp", "Home", "End", " ", "Enter"].includes(e.key)) {
      const focusedItem = this._getFocusedItem();
      const itemsCount = this._getItems().length;
      if (focusedItem !== void 0 && itemsCount > 1) {
        e.preventDefault();
        if (e.key === "ArrowUp") {
          this._focusItemByIndex(focusedItem.index === 0 ? itemsCount - 1 : focusedItem.index - 1);
        } else if (e.key === "ArrowDown") {
          this._focusItemByIndex(focusedItem.index === itemsCount - 1 ? 0 : focusedItem.index + 1);
        } else if (e.key === "Home") {
          this._focusItemByIndex(0);
        } else if (e.key === "End") {
          this._focusItemByIndex(itemsCount - 1);
        } else if (e.key === " " || e.key === "Enter") {
          focusedItem.expanded = !focusedItem.expanded;
        }
      }
    }
  }
  _onChange(e) {
    if (this.expandMode === "one" && e.detail.expanded) {
      this._getItems().forEach((item) => {
        if (item !== e.target)
          item.expanded = false;
      });
    }
  }
  _updateAccordionItems() {
    const items = this._getItems();
    for (let i = 0; i < items.length; i += 1) {
      items[i].variant = this.variant;
      items[i].arrowPosition = this.arrowPosition;
      items[i].parentDisabled = this.disabled;
      items[i].index = i;
      items[i].isFirstChild = i === 0;
      items[i].isLastChild = i === items.length - 1;
      items[i].disableContentPadding = this.disableContentPadding;
    }
  }
  _getItems() {
    return this._accordionAssignedElementsCache.filter((e) => e instanceof AccordionItem);
  }
};
Accordion.styles = styles15;
Accordion.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: String, reflect: true })
], Accordion.prototype, "variant", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "arrow-position" })
], Accordion.prototype, "arrowPosition", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "expand-mode" })
], Accordion.prototype, "expandMode", void 0);
__decorate([
  property({ type: Boolean, reflect: true, attribute: "default-expanded" })
], Accordion.prototype, "defaultExpanded", void 0);
__decorate([
  property({ type: Boolean, attribute: "disable-content-padding" })
], Accordion.prototype, "disableContentPadding", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Accordion.prototype, "disabled", void 0);
__decorate([
  query("slot")
], Accordion.prototype, "slotElement", void 0);
Accordion = __decorate([
  customElement("hds-accordion")
], Accordion);

// node_modules/@here/hds-react-components/Accordion/HDSAccordion.js
new Accordion();
var HDSAccordion = import_react14.default.forwardRef((props, ref) => {
  const { children, disabled, variant, className, arrowPosition, expandMode, defaultExpanded, disableContentPadding, onChange: onChange2, ...rest } = props;
  const innerRef = import_react14.default.useRef(null);
  (0, import_react14.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    if (e.currentTarget !== innerRef.current)
      return;
    onChange2 && onChange2(e.detail);
  };
  (0, import_react14.useEffect)(() => {
    if (onChange2 && innerRef.current) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, innerRef]);
  return import_react14.default.createElement("hds-accordion", { variant, ...className && { class: className }, ...disabled && { disabled }, ...arrowPosition && { "arrow-position": arrowPosition }, ...expandMode && { "expand-mode": expandMode }, ...defaultExpanded && { "default-expanded": defaultExpanded }, ...disableContentPadding && { "disable-content-padding": disableContentPadding }, ref: innerRef, ...rest }, children);
});
HDSAccordion.defaultProps = {
  variant: "default",
  arrowPosition: "end",
  expandMode: "many",
  defaultExpanded: false,
  disableContentPadding: false,
  disabled: false
};
var HDSAccordion_default = HDSAccordion;

// node_modules/@here/hds-react-components/Accordion/HDSAccordionItem.js
var import_react15 = __toESM(require_react(), 1);
new AccordionItem();
var HDSAccordionItem = import_react15.default.forwardRef(({ children, disabled, expanded, iconCategory, className, ...rest }, ref) => import_react15.default.createElement("hds-accordion-item", { ref, ...className && { class: className }, ...disabled && { disabled }, ...expanded && { expanded }, ...iconCategory && { "icon-category": iconCategory }, ...rest }, children));
HDSAccordionItem.defaultProps = {
  disabled: false,
  headline: "",
  expanded: false,
  iconCategory: "core-ui"
};
var HDSAccordionItem_default = HDSAccordionItem;

// node_modules/@here/hds-react-components/Flag/HDSFlag.js
var React16 = __toESM(require_react(), 1);

// node_modules/@here/hds-flag/build/hds-flag.css.js
var styles17 = css`
:host(:focus){outline:0}:host{display:inline-block}.hds-flag-wrapper{align-items:center;background-color:initial;border-radius:50px;box-sizing:border-box;color:var(--hds-ondarkcolor-primary);display:flex;font:var(--hds-caption-font);letter-spacing:var(--hds-caption-letter-spacing);-webkit-text-decoration:var(--hds-caption-text-decoration,inherit);text-decoration:var(--hds-caption-text-decoration,inherit);vertical-align:middle;width:fit-content}.hds-flag-wrapper.--size-small{height:1rem;padding:var(--hds-spacing-0) calc(var(--hds-spacing-2) - var(--hds-spacing-1px)*2)}.hds-flag-wrapper.--size-small.--icon-only{line-height:.5rem;width:1rem}.hds-flag-wrapper.--size-medium{height:1.5rem;padding:var(--hds-spacing-0) var(--hds-spacing-2)}.hds-flag-wrapper.--size-medium.--icon-only{width:1.5rem}.hds-flag-wrapper.--size-large,.hds-flag-wrapper.--size-medium.--icon-only{font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.hds-flag-wrapper.--size-large{height:2rem;padding:var(--hds-spacing-0) var(--hds-spacing-4)}.hds-flag-wrapper.--size-large.--icon-only{line-height:1rem;width:2rem}.hds-flag-wrapper.--icon-only{justify-content:center;padding:var(--hds-spacing-0)}.hds-flag-wrapper:not(.--icon-only) hds-icon{margin-right:var(--hds-spacing-1)}.hds-flag-wrapper .hds-flag-label-wrapper{white-space:nowrap}.hds-flag-wrapper:focus,.hds-flag-wrapper:focus-visible,.hds-flag-wrapper:focus:not(:focus-visible){outline:none}.--variant-subtle{background-color:var(--hds-background-object);border-color:var(--hds-background-object)}.--variant-subtle,.--variant-warning{--hds-icon-color:var(--hds-foreground-primary);color:var(--hds-foreground-primary)}.--variant-warning{background-color:var(--hds-warning);border-color:var(--hds-warning)}.--variant-success{background-color:var(--hds-positive);border-color:var(--hds-positive)}.--variant-error,.--variant-success{--hds-icon-color:var(--hds-ondarkcolor-primary);color:var(--hds-ondarkcolor-primary)}.--variant-error{background-color:var(--hds-negative);border-color:var(--hds-negative)}.--variant-custom{background-color:var(--hds-flag-custom-accent-color);border-color:var(--hds-flag-custom-accent-color);color:var(--hds-flag-custom-font-color)}.--variant-subtle-quiet{--hds-icon-color:var(--hds-foreground-secondary);border-color:var(--hds-foreground-secondary);color:var(--hds-foreground-secondary)}.--variant-subtle-quiet,.--variant-warning-quiet{border-style:solid;border-width:var(--hds-border-width)}.--variant-warning-quiet{--hds-icon-color:var(--hds-foreground-warning);border-color:var(--hds-foreground-warning);color:var(--hds-foreground-warning)}.--variant-success-quiet{--hds-icon-color:var(--hds-foreground-positive);border-color:var(--hds-foreground-positive);color:var(--hds-foreground-positive)}.--variant-error-quiet,.--variant-success-quiet{border-style:solid;border-width:var(--hds-border-width)}.--variant-error-quiet{--hds-icon-color:var(--hds-foreground-negative);border-color:var(--hds-foreground-negative);color:var(--hds-foreground-negative)}.--variant-custom-quiet{--hds-icon-color:var(--hds-flag-custom-accent-color);border-color:var(--hds-flag-custom-accent-color);border-style:solid;border-width:var(--hds-border-width);color:var(--hds-flag-custom-accent-color)}
`;

// node_modules/@here/hds-flag/build/hds-flag.js
var Flag_1;
var Flag = Flag_1 = class Flag2 extends LitElement {
  constructor() {
    super(...arguments);
    this.variant = "subtle";
    this.size = "small";
    this.iconCategory = "core-ui";
    this.iconOnly = false;
  }
  connectedCallback() {
    super.connectedCallback();
    this.id = this.id || `hds-flag-${++Flag_1.flagIdCounter}`;
  }
  updated(_changedProperties) {
    super.updated(_changedProperties);
    if (this.icon) {
      this.iconOnly = isSlotEmpty(this.slotItemsList);
    }
  }
  renderIcon() {
    if (!this.icon) {
      return nothing;
    }
    const iconSize = this.size === "small" ? "8px" : "16px";
    return html` <hds-icon
      name="${this.icon}"
      category="${this.iconCategory}"
      size="${iconSize}"
    ></hds-icon>`;
  }
  render() {
    const classes = {
      [`--size-${this.size}`]: true,
      [`--variant-${this.variant}`]: true,
      "--icon-only": this.iconOnly
    };
    return html` <div class="hds-flag-wrapper ${classMap(classes)}">
      ${this.renderIcon()}
      <div class="hds-flag-label-wrapper">
        <slot></slot>
      </div>
    </div>`;
  }
};
Flag.flagIdCounter = 0;
Flag.styles = styles17;
__decorate([
  property({ type: String })
], Flag.prototype, "variant", void 0);
__decorate([
  property({ type: String })
], Flag.prototype, "size", void 0);
__decorate([
  property({ type: String })
], Flag.prototype, "icon", void 0);
__decorate([
  property({ type: String, attribute: "icon-category" })
], Flag.prototype, "iconCategory", void 0);
__decorate([
  query("slot")
], Flag.prototype, "slotElement", void 0);
__decorate([
  query(".hds-flag-label-wrapper")
], Flag.prototype, "labelEl", void 0);
__decorate([
  queryAssignedNodes("", true)
], Flag.prototype, "slotItemsList", void 0);
__decorate([
  state()
], Flag.prototype, "iconOnly", void 0);
Flag = Flag_1 = __decorate([
  customElement("hds-flag")
], Flag);

// node_modules/@here/hds-react-components/Flag/HDSFlag.js
new Flag();
var HDSFlag = React16.forwardRef((props, ref) => {
  const { children, iconCategory, className, ...rest } = props;
  return React16.createElement("hds-flag", { ref, ...iconCategory && { "icon-category": iconCategory }, ...className && { class: className }, ...rest }, children);
});
HDSFlag.defaultProps = {
  variant: "subtle",
  size: "small",
  icon: void 0,
  iconCategory: "core-ui"
};
var HDSFlag_default = HDSFlag;

// node_modules/@here/hds-react-components/Input/HDSInput.js
var import_react16 = __toESM(require_react(), 1);

// node_modules/@here/hds-label/build/hds-label.css.js
var styles18 = css`
:host(:focus){outline:0}.-hds-label-wrapper .label-container{align-items:baseline;box-sizing:inherit;display:flex;flex-direction:row;margin-bottom:var(--hds-spacing-1)}.-hds-label-wrapper .label-container:after{clear:both;content:"";display:table}.-hds-label-wrapper .label-container .label-primary{--hds-icon-color:var(--hds-foreground-secondary);color:var(--hds-foreground-secondary);flex:1;font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);text-align:left;-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.-hds-label-wrapper .label-container .label-primary.error{color:var(--hds-negative)}.-hds-label-wrapper .label-container .label-primary.warning{color:var(--hds-warning)}.-hds-label-wrapper .label-container .label-primary.success{color:var(--hds-positive)}.-hds-label-wrapper .label-container .label-primary.focus{color:var(--hds-accent)}.-hds-label-wrapper .label-container .label-primary.disabled{color:var(--hds-foreground-tertiary-disabled)}.-hds-label-wrapper .label-container .label-secondary{--hds-icon-color:var(--hds-foreground-secondary);color:var(--hds-foreground-secondary);font:var(--hds-caption-font);letter-spacing:var(--hds-caption-letter-spacing);min-width:20%;text-align:right;-webkit-text-decoration:var(--hds-caption-text-decoration,inherit);text-decoration:var(--hds-caption-text-decoration,inherit)}.-hds-label-wrapper.default{align-items:end}.-hds-label-wrapper.default .label-container .label-primary{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.-hds-label-wrapper.assistive{align-items:start}.-hds-label-wrapper.assistive .label-container{margin-top:var(--hds-spacing-2)}.-hds-label-wrapper.assistive .label-container .label-primary{font:var(--hds-caption-font);letter-spacing:var(--hds-caption-letter-spacing);-webkit-text-decoration:var(--hds-caption-text-decoration,inherit);text-decoration:var(--hds-caption-text-decoration,inherit)}.-hds-label-wrapper.assistive .label-container .label-secondary{margin-left:var(--hds-spacing-8);min-width:auto}
`;

// node_modules/@here/hds-label/build/hds-label.js
var Label_1;
var Label = Label_1 = class Label2 extends LitElement {
  constructor() {
    super(...arguments);
    this.type = "default";
    this.variant = "default";
  }
  firstUpdated() {
    this.id = this.id || `hds-label-${Label_1.idCounter++}`;
    this.assignAriaLabelledBy();
  }
  updated(_changedProperties) {
    var _a6;
    if (_changedProperties.has("id") || _changedProperties.has("for")) {
      this.assignAriaLabelledBy();
    }
    if (isSlotEmpty(this.secondaryLabelSlot)) {
      (_a6 = this.secondaryLabel) == null ? void 0 : _a6.remove();
    }
  }
  render() {
    const cssClasses = {};
    cssClasses[this.type] = true;
    return html`
      <div class="-hds-label-wrapper ${classMap(cssClasses)}">
        <div class="label-container">
          ${this.renderPrimaryLabel()} ${this.renderSecondaryLabel()}
        </div>
        ${this.renderFormElement()}
      </div>
    `;
  }
  renderPrimaryLabel() {
    const cssClasses = {};
    cssClasses[this.variant] = true;
    return html`
      <div class="label-primary ${classMap(cssClasses)}" @click="${this.labelClick}">
        <slot></slot>
      </div>
    `;
  }
  renderSecondaryLabel() {
    return html`
      <div class="label-secondary">
        <slot name="secondary"></slot>
      </div>
    `;
  }
  renderFormElement() {
    return html` <slot name="form-element"></slot> `;
  }
  labelClick(e) {
    e.stopPropagation();
    if (!this.currentLabelTarget)
      return;
    this.currentLabelTarget.focus();
    this.currentLabelTarget.click();
  }
  findLabelTarget() {
    var _a6;
    if (this.for) {
      const scope = this.getRootNode();
      const target = scope.querySelector(`#${this.for}`);
      if (target) {
        return target;
      }
    }
    const slotNodes = (_a6 = this.formElement) == null ? void 0 : _a6.assignedElements({ flatten: true });
    if (slotNodes.length > 0) {
      return slotNodes[0];
    }
    return void 0;
  }
  assignAriaLabelledBy() {
    var _a6;
    const target = this.findLabelTarget();
    if (target !== this.currentLabelTarget) {
      if (this.currentLabelTarget) {
        this.currentLabelTarget.removeAttribute("aria-labelledby");
      }
      this.currentLabelTarget = target;
      (_a6 = this.currentLabelTarget) == null ? void 0 : _a6.setAttribute("aria-labelledby", this.id);
    }
  }
};
Label.styles = styles18;
Label.idCounter = 0;
__decorate([
  property({ type: String })
], Label.prototype, "for", void 0);
__decorate([
  property({ type: String })
], Label.prototype, "type", void 0);
__decorate([
  property({ type: String })
], Label.prototype, "variant", void 0);
__decorate([
  query('slot[name="form-element"]', true)
], Label.prototype, "formElement", void 0);
__decorate([
  query(".label-secondary", true)
], Label.prototype, "secondaryLabel", void 0);
__decorate([
  query('slot[name="secondary"]')
], Label.prototype, "secondaryLabelSlot", void 0);
__decorate([
  state()
], Label.prototype, "currentLabelTarget", void 0);
Label = Label_1 = __decorate([
  customElement("hds-label")
], Label);

// node_modules/@here/hds-input/build/hds-input.css.js
var styles19 = css`
:host{outline:none!important}:host(:focus){outline:0}::slotted(*){color:var(--hds-foreground-secondary);display:flex}.wrapper{--hds-icon-color:var(--hds-foreground-primary);box-sizing:border-box}.wrapper .input-wrapper{--hds-icon-color:var(--hds-foreground-secondary);align-items:center;background:var(--hds-background-secondary);border:var(--hds-border-width) solid var(--hds-foreground-tertiary);border-radius:var(--hds-border-radius);display:flex;overflow:hidden;position:relative;transition:color var(--hds-transition-duration-short)}.wrapper .input-wrapper.-slot-left-has-content .slot-left-wrapper,.wrapper .input-wrapper.-slot-right-has-content .slot-right-wrapper{align-items:center;display:flex;gap:var(--hds-spacing-3)}.wrapper .input-wrapper.-slot-left-has-content .slot-left-wrapper{margin-left:var(--hds-spacing-4)}.wrapper .input-wrapper.-slot-left-has-content input{padding-left:var(--hds-spacing-2)}.wrapper .input-wrapper.-slot-right-has-content .slot-right-wrapper{margin-right:var(--hds-spacing-4)}.wrapper .input-wrapper.-slot-right-has-content input{padding-right:var(--hds-spacing-2)}.wrapper .input-wrapper.-icon hds-icon{margin-left:var(--hds-spacing-4)}.wrapper .input-wrapper.-icon input{padding-left:var(--hds-spacing-2)}.wrapper .input-wrapper.-extra-small{height:1.375rem}.wrapper .input-wrapper.-extra-small input{padding:var(--hds-spacing-0) var(--hds-spacing-2)}.wrapper .input-wrapper.-extra-small.-icon hds-icon{margin-left:var(--hds-spacing-2)}.wrapper .input-wrapper.-extra-small ::placeholder{line-height:1.25rem}.wrapper .input-wrapper.-extra-small .input-controls{padding-right:var(--hds-spacing-2)}.wrapper .input-wrapper.-extra-small .input-controls .input-control{--hds-icon-size:8px;height:.5rem;line-height:.5rem}.wrapper .input-wrapper.-small{height:1.875rem}.wrapper .input-wrapper.-small ::placeholder{line-height:1.75rem}.wrapper .input-wrapper.-small .input-controls{padding-right:var(--hds-spacing-2)}.wrapper .input-wrapper.-small .input-controls .input-control{--hds-icon-size:16px;height:.75rem;line-height:.75rem}.wrapper .input-wrapper.-medium{height:2.375rem}.wrapper .input-wrapper.-medium ::placeholder{line-height:2.25rem}.wrapper .input-wrapper.-medium .input-controls{padding-right:calc(var(--hds-spacing-4) - var(--hds-spacing-1px))}.wrapper .input-wrapper.-medium .input-controls .input-control{height:.75rem;line-height:.75rem}.wrapper .input-wrapper:hover{border-color:var(--hds-foreground-tertiary-hover)}.wrapper .input-wrapper:active,.wrapper .input-wrapper:focus,.wrapper .input-wrapper:focus-within{border:var(--hds-border-width) solid #0000;box-shadow:0 0 0 .125rem var(--hds-object-focused)}.wrapper .input-wrapper.error{border-color:var(--hds-negative)!important}.wrapper .input-wrapper.disabled{--hds-icon-color:var(--hds-foreground-tertiary-disabled);background-color:var(--hds-background-object);border-color:var(--hds-foreground-tertiary-disabled)!important;color:var(--hds-foreground-tertiary-disabled)!important;cursor:not-allowed}.wrapper .input-wrapper.disabled .input-control,.wrapper .input-wrapper.disabled input{cursor:not-allowed}.wrapper .input-wrapper.readonly{--hds-icon-color:var(--hds-foreground-primary);background-color:var(--hds-background-object);border-color:var(--hds-foreground-tertiary-disabled)!important}.wrapper .input-wrapper.readonly .input-control,.wrapper .input-wrapper.readonly input{cursor:not-allowed}.wrapper .input-wrapper input[type=number]::-webkit-inner-spin-button,.wrapper .input-wrapper input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;appearance:none;margin:var(--hds-spacing-0)}.wrapper .input-wrapper input[type=number]{-webkit-appearance:textfield;appearance:textfield}.wrapper .input-wrapper input[type=search]::-webkit-search-cancel-button{-webkit-appearance:none;appearance:none}.wrapper .input-wrapper input{background:#0000;border:0;box-sizing:inherit;color:var(--hds-foreground-primary);height:100%;outline:none;padding:var(--hds-spacing-0) var(--hds-spacing-4);transition:color var(--hds-transition-duration-short),border-color var(--hds-transition-duration-short);width:100%}.wrapper .input-wrapper input,.wrapper .input-wrapper input::placeholder{font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.wrapper .input-wrapper input::placeholder{color:var(--hds-foreground-tertiary)}.wrapper .input-wrapper input:disabled::placeholder,.wrapper .input-wrapper input:read-only::placeholder{color:var(--hds-foreground-tertiary-disabled)}.wrapper .input-wrapper input:read-only{color:var(--hds-foreground-primary)}.wrapper .input-wrapper input:disabled{color:var(--hds-foreground-tertiary-disabled)}.wrapper input[type=number]{color:var(--hds-foreground-primary)}.wrapper .input-controls{align-items:center;box-sizing:border-box;display:flex;flex-direction:column;justify-content:space-around;margin-top:-5px;-webkit-user-select:none;user-select:none}.wrapper .input-controls .input-control{color:var(--hds-foreground-secondary);cursor:pointer}
`;

// node_modules/@here/hds-input/build/hds-input.js
var Input_1;
var Input = Input_1 = class Input2 extends LitElement {
  constructor() {
    super(...arguments);
    this.type = "text";
    this.id = "";
    this.size = "medium";
    this.iconCategory = "core-ui";
    this.disabled = false;
    this.readonly = false;
    this.required = false;
    this.autofocus = false;
    this.minlength = -1;
    this.maxlength = -1;
    this.step = 1;
    this.charCounter = false;
    this.error = false;
    this.passwordVisibility = "masked";
    this.autocomplete = "";
    this._value = "";
    this._min = Number.NEGATIVE_INFINITY;
    this._max = Number.POSITIVE_INFINITY;
    this.slotLeftHasContent = false;
    this.slotRightHasContent = false;
  }
  get value() {
    return this._value;
  }
  get min() {
    return this._min;
  }
  get max() {
    return this._max;
  }
  set value(val) {
    const oldValue = this._value;
    if (this.type === "number") {
      const numericVal = clamp(parseInt(val, 10), this.min, this.max);
      this._value = Number.isNaN(numericVal) ? val : numericVal;
    } else {
      this._value = val;
    }
    this.requestUpdate("value", oldValue);
  }
  set min(val) {
    const oldValue = this._min;
    const numberValue = Number.parseInt(val, 10);
    const isNotANumber = Number.isNaN(numberValue) || val === 0 && this.getAttribute("min") === "";
    this._min = isNotANumber ? Number.NEGATIVE_INFINITY : numberValue;
    this.requestUpdate("min", oldValue);
  }
  set max(val) {
    const oldValue = this._max;
    const numberValue = Number.parseInt(val, 10);
    const isNotANumber = Number.isNaN(numberValue) || val === 0 && this.getAttribute("max") === "";
    this._max = isNotANumber ? Number.POSITIVE_INFINITY : numberValue;
    this.requestUpdate("max", oldValue);
  }
  get charCounterVisible() {
    return this.charCounter && this.maxlength !== -1;
  }
  get errorTextVisible() {
    return this.error && !!this.errorText;
  }
  connectedCallback() {
    super.connectedCallback && super.connectedCallback();
    Input_1.idCounter += 1;
    if (this.label) {
      this.labelId = `hds-input-label-${Input_1.idCounter}`;
    }
    this.initialType = this.type;
  }
  firstUpdated() {
    this.onActionSlotChange();
    this.autofocus && this.focus();
  }
  updated(_changedProps) {
    if (_changedProps.has("value") && _changedProps.get("value") !== void 0) {
      this.inputElement.value = this.value;
    }
  }
  async clear() {
    this.value = "";
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("change", {
      detail: { value: this.value },
      bubbles: true,
      composed: true
    }));
  }
  focus() {
    this.inputElement.focus();
  }
  blur() {
    this.inputElement.blur();
  }
  togglePassword() {
    if (this.disabled || !this._isPasswordVisibilityEnabled()) {
      return;
    }
    this.passwordVisibility = this.passwordVisibility === "masked" ? "text" : "masked";
    this.type = this.passwordVisibility === "masked" ? "password" : "text";
  }
  async stepUp(n) {
    if (this.type !== "number" || this.disabled)
      return;
    await this._changeByStep(n || this.step);
  }
  async stepDown(n) {
    if (this.type !== "number" || this.disabled)
      return;
    await this._changeByStep(-1 * (n || this.step));
  }
  setSelectionRange(start2, end2, direction) {
    this.inputElement.setSelectionRange(start2, end2, direction);
  }
  setRangeText(replacement, start2, end2, selectionMode) {
    if (start2 && end2) {
      this.inputElement.setRangeText(replacement, start2, end2, selectionMode);
    } else {
      this.inputElement.setRangeText(replacement);
    }
    this.value = this.inputElement.value;
  }
  checkValidity() {
    return this.inputElement.checkValidity();
  }
  reportValidity() {
    return this.inputElement.reportValidity();
  }
  select() {
    this.inputElement.select();
  }
  setCustomValidity(error) {
    this.inputElement.setCustomValidity(error);
  }
  async onActionClick(e) {
    e.stopPropagation();
    const action = e.target.getAttribute("data-action") || e.target instanceof Icon && e.target.name || "custom";
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("action", {
      detail: { action },
      bubbles: true,
      composed: true
    }));
  }
  renderSlotLeft() {
    return html`<div class="slot-left-wrapper">
      <slot
        name="left"
        @slotchange="${this.onActionSlotChange}"
        @click="${this.onActionClick}"
      ></slot>
    </div>`;
  }
  renderSlotRight() {
    return html`<div class="slot-right-wrapper">
      <slot
        name="right"
        @slotchange="${this.onActionSlotChange}"
        @click="${this.onActionClick}"
      ></slot>
    </div>`;
  }
  async onActionSlotChange() {
    this.slotLeftHasContent = !isSlotEmpty(this.slotLeft);
    this.slotRightHasContent = !isSlotEmpty(this.slotRight);
  }
  render() {
    const classes = {
      disabled: this.disabled,
      readonly: this.readonly,
      required: this.required,
      error: this.error,
      "-icon": this.icon,
      "-slot-left-has-content": this.slotLeftHasContent,
      "-slot-right-has-content": this.slotRightHasContent
    };
    classes[`-${this.size}`] = true;
    return html`
      <div class="wrapper">
        ${this.renderLabel()}
        <div class="input-wrapper ${classMap(classes)}">
          ${this.renderIcon()} ${this.renderSlotLeft()} ${this.renderInput()}
          ${this.renderSlotRight()} ${this._renderIconControls()}
        </div>
        ${this.renderHelperText()}
      </div>
    `;
  }
  getAriaLabelledBy() {
    if (this.label)
      return this.labelId;
    if (this.ariaLabelledby)
      return this.ariaLabelledby;
    return void 0;
  }
  renderInput() {
    const classes = {
      "input-width-with-icon": this.type === "number" || this.type === "search" || this._isPasswordVisibilityEnabled()
    };
    return html`
      <input
        .value="${this.value}"
        autocomplete="${ifDefined(this.autocomplete || void 0)}"
        type="${this.type}"
        id="${ifDefined(this.id === "" ? void 0 : this.id)}"
        name="${ifDefined(this.name === "" ? void 0 : this.name)}"
        placeholder="${ifDefined(this.placeholder === "" ? void 0 : this.placeholder)}"
        ?required="${this.required}"
        ?disabled="${this.disabled}"
        ?readonly="${this.readonly}"
        minlength="${ifDefined(this.minlength === -1 ? void 0 : this.minlength)}"
        maxlength="${ifDefined(this.maxlength === -1 ? void 0 : this.maxlength)}"
        min="${ifDefined(this.type !== "number" ? void 0 : this.min)}"
        max="${ifDefined(this.type !== "number" ? void 0 : this.max)}"
        step="${ifDefined(this.type !== "number" ? void 0 : this.step)}"
        pattern="${ifDefined(this.pattern)}"
        @change="${this._nativeChange}"
        @input="${this._nativeInput}"
        @focus="${this._nativeFocus}"
        @blur="${this._nativeBlur}"
        @keydown="${this._nativeKeyPress}"
        @keyup="${this._nativeKeyPress}"
        .ariaLabelledBy="${this.getAriaLabelledBy()}"
        .ariaLabel="${this.ariaLabel ? this.ariaLabel : null}"
        class="${classMap(classes)}"
      />
    `;
  }
  renderCharCounter() {
    if (!this.charCounterVisible) {
      return nothing;
    }
    const length2 = Math.min(String(this.value).length, this.maxlength);
    return html` <span slot="secondary">${length2}/${this.maxlength}</span> `;
  }
  renderLabel() {
    if (this.label || this.secondaryLabel) {
      let optionalLabel = html``;
      if (this.secondaryLabel && this.secondaryLabel.trim() !== "") {
        optionalLabel = html`<span slot="secondary">${this.secondaryLabel}</span>`;
      }
      return html` <hds-label id="${this.labelId}">${this.label} ${optionalLabel}</hds-label> `;
    }
    return nothing;
  }
  renderIcon() {
    if (!this.icon) {
      return void 0;
    }
    return html` <hds-icon name="${this.icon}" category="${this.iconCategory}"></hds-icon>`;
  }
  renderHelperText() {
    if (!this.charCounterVisible && !this.errorTextVisible) {
      return nothing;
    }
    return html`
      <hds-label type="assistive" variant="error">
        ${this.errorText} ${this.renderCharCounter()}
      </hds-label>
    `;
  }
  async _nativeFocus(e) {
    e.stopPropagation();
    e.preventDefault();
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("focus", {
      detail: this,
      bubbles: true,
      composed: true
    }));
    this.requestUpdate();
  }
  async _nativeBlur(e) {
    e.stopPropagation();
    e.preventDefault();
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("blur", {
      detail: this,
      bubbles: true,
      composed: true
    }));
    this.requestUpdate();
  }
  async _handleUp(e) {
    if (this.readonly)
      return;
    e.stopPropagation();
    e.preventDefault();
    await this.stepUp(this.step);
  }
  async _handleDown(e) {
    if (this.readonly)
      return;
    e.stopPropagation();
    e.preventDefault();
    await this.stepDown(this.step);
  }
  async _nativeKeyPress(evt) {
    evt.stopPropagation();
    await this.updateComplete;
    this.dispatchEvent(new KeyboardEvent(evt.type, evt));
  }
  async _nativeInput(e) {
    e.stopPropagation();
    e.preventDefault();
    this.value = this.inputElement.value;
    await this.updateComplete;
    this.triggerInputEvent();
  }
  triggerInputEvent() {
    this.dispatchEvent(new CustomEvent("input", {
      detail: { value: this.value },
      bubbles: true,
      composed: true
    }));
  }
  async _nativeChange(e) {
    e.stopPropagation();
    e.preventDefault();
    this.value = this.inputElement.value;
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("change", {
      detail: { value: this.value },
      bubbles: true,
      composed: true
    }));
  }
  async _changeByStep(step = 1) {
    let val = this.value;
    if (!val && parseInt(val, 10) !== 0 || Number.isNaN(val)) {
      val = 0;
    }
    this.value = clamp(parseInt(val, 10) + step, this.min, this.max);
    await this.updateComplete;
    this.triggerInputEvent();
    this.dispatchEvent(new CustomEvent("change", {
      detail: { value: this.value },
      bubbles: true,
      composed: true
    }));
  }
  _isPasswordVisibilityEnabled() {
    return this.initialType === "password" && this.passwordVisibility !== "disabled";
  }
  _renderIconControls() {
    var _a6;
    if (this.type === "number") {
      const iconSize = this.size === "extra-small" ? "8px" : "16px";
      return html` <div class="input-controls">
        <div class="input-control up" @click="${this._handleUp}">
          <hds-icon name="chevron-up" size="${iconSize}"></hds-icon>
        </div>
        <div class="input-control down" @click="${this._handleDown}">
          <hds-icon name="chevron-down" size="${iconSize}"></hds-icon>
        </div>
      </div>`;
    }
    if (this._isPasswordVisibilityEnabled()) {
      const iconName = this.passwordVisibility === "masked" ? "show" : "hide";
      return html` <div class="input-controls">
        <div class="input-control toggle-password" @click="${this.togglePassword}">
          <hds-icon name="${iconName}" size="16px"></hds-icon>
        </div>
      </div>`;
    }
    if (this.type === "search" && ((_a6 = this.value) == null ? void 0 : _a6.length) > 0) {
      return html` <div class="input-controls" @click="${this.clear}">
        <div class="input-control search">
          <hds-icon name="clear" size="16px"></hds-icon>
        </div>
      </div>`;
    }
    return nothing;
  }
};
Input.styles = styles19;
Input.idCounter = 0;
Input.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
Input.formAssociated = true;
__decorate([
  property({ type: String })
], Input.prototype, "type", void 0);
__decorate([
  property({ type: String })
], Input.prototype, "id", void 0);
__decorate([
  property({ type: String })
], Input.prototype, "name", void 0);
__decorate([
  property({ type: String })
], Input.prototype, "placeholder", void 0);
__decorate([
  property({ type: String })
], Input.prototype, "label", void 0);
__decorate([
  property({ type: String, attribute: "secondary-label" })
], Input.prototype, "secondaryLabel", void 0);
__decorate([
  property({ type: String })
], Input.prototype, "size", void 0);
__decorate([
  property({ type: String })
], Input.prototype, "icon", void 0);
__decorate([
  property({ type: String })
], Input.prototype, "pattern", void 0);
__decorate([
  property({ type: String, attribute: "icon-category" })
], Input.prototype, "iconCategory", void 0);
__decorate([
  property({ type: Boolean })
], Input.prototype, "disabled", void 0);
__decorate([
  property({ type: Boolean })
], Input.prototype, "readonly", void 0);
__decorate([
  property({ type: Boolean })
], Input.prototype, "required", void 0);
__decorate([
  property({ type: Boolean })
], Input.prototype, "autofocus", void 0);
__decorate([
  property({ type: Number })
], Input.prototype, "minlength", void 0);
__decorate([
  property({ type: Number })
], Input.prototype, "maxlength", void 0);
__decorate([
  property({ type: Number })
], Input.prototype, "step", void 0);
__decorate([
  property({ type: Boolean, attribute: "char-counter" })
], Input.prototype, "charCounter", void 0);
__decorate([
  property({ type: Boolean })
], Input.prototype, "error", void 0);
__decorate([
  property({ type: String, attribute: "error-text" })
], Input.prototype, "errorText", void 0);
__decorate([
  property({ type: String, attribute: "aria-labelledby" })
], Input.prototype, "ariaLabelledby", void 0);
__decorate([
  property({ type: String, attribute: "password-visibility" })
], Input.prototype, "passwordVisibility", void 0);
__decorate([
  property({ type: String })
], Input.prototype, "autocomplete", void 0);
__decorate([
  query("input")
], Input.prototype, "inputElement", void 0);
__decorate([
  query('slot[name="left"]')
], Input.prototype, "slotLeft", void 0);
__decorate([
  query('slot[name="right"]')
], Input.prototype, "slotRight", void 0);
__decorate([
  state()
], Input.prototype, "slotLeftHasContent", void 0);
__decorate([
  state()
], Input.prototype, "slotRightHasContent", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "value" })
], Input.prototype, "value", null);
__decorate([
  property({ type: Number, attribute: "min" })
], Input.prototype, "min", null);
__decorate([
  property({ type: Number, attribute: "max" })
], Input.prototype, "max", null);
Input = Input_1 = __decorate([
  customElement("hds-input")
], Input);

// node_modules/@here/hds-react-components/Input/HDSInput.js
new Input();
var HDSInput = import_react16.default.forwardRef((props, ref) => {
  const { value, type, id: id2, name, placeholder, label, secondaryLabel, icon, iconCategory, size: size2, disabled, readonly, required, autofocus, passwordVisibility, minlength, maxlength, min: min3, max: max3, pattern, charCounter, error, errorText, onAction, onChange: onChange2, onBlur, onFocus: onFocus2, onKeyDown, onKeyUp, onInput, className, ariaLabelledby, ariaLabel, step, autocomplete, ...rest } = props;
  const innerRef = import_react16.default.useRef(null);
  (0, import_react16.useImperativeHandle)(ref, () => innerRef.current);
  const _handleAction = (e) => {
    if (e.target !== innerRef.current)
      return;
    onAction && onAction(e);
  };
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onChange2 && onChange2(e);
  };
  const _handleInput = (e) => {
    if (e.target !== innerRef.current)
      return;
    onInput && onInput(e);
  };
  const _handleBlur = (e) => {
    if (e.target !== innerRef.current)
      return;
    onBlur && onBlur(e);
  };
  const _handleFocus = (e) => {
    if (e.target !== innerRef.current)
      return;
    onFocus2 && onFocus2(e);
  };
  const _handleKeyDown = (e) => {
    if (e.target !== innerRef.current)
      return;
    onKeyDown && onKeyDown(e);
  };
  const _handleKeyUp = (e) => {
    if (e.target !== innerRef.current)
      return;
    onKeyUp && onKeyUp(e);
  };
  (0, import_react16.useEffect)(() => {
    if (onAction && innerRef.current) {
      innerRef.current.addEventListener("action", _handleAction);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("action", _handleAction);
    };
  }, [onAction, innerRef]);
  (0, import_react16.useEffect)(() => {
    if (onChange2 && innerRef.current) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, innerRef]);
  (0, import_react16.useEffect)(() => {
    if (onInput && innerRef.current) {
      innerRef.current.addEventListener("input", _handleInput);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("input", _handleInput);
    };
  }, [onInput, innerRef]);
  (0, import_react16.useEffect)(() => {
    if (onBlur && innerRef.current) {
      innerRef.current.addEventListener("blur", _handleBlur);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("blur", _handleBlur);
    };
  }, [onBlur, innerRef]);
  (0, import_react16.useEffect)(() => {
    if (onFocus2 && innerRef.current) {
      innerRef.current.addEventListener("focus", _handleFocus);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("focus", _handleFocus);
    };
  }, [onFocus2, innerRef]);
  (0, import_react16.useEffect)(() => {
    if (onKeyDown && innerRef.current) {
      innerRef.current.addEventListener("keydown", _handleKeyDown);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("keydown", _handleKeyDown);
    };
  }, [onKeyDown, innerRef]);
  (0, import_react16.useEffect)(() => {
    if (onKeyUp && innerRef.current) {
      innerRef.current.addEventListener("keyup", _handleKeyUp);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("keyup", _handleKeyUp);
    };
  }, [onKeyUp, innerRef]);
  return import_react16.default.createElement("hds-input", { value, type, id: id2, name, placeholder, label, ...secondaryLabel && { "secondary-label": secondaryLabel }, ...passwordVisibility && { "password-visibility": passwordVisibility }, icon, ...iconCategory && { "icon-category": iconCategory }, size: size2, ...disabled && { disabled: true }, ...readonly && { readonly: true }, ...required && { required: true }, ...autofocus && { autofocus: true }, ...className && { class: className }, minlength, maxlength, min: min3, max: max3, step, pattern, ...charCounter && { "char-counter": charCounter }, ...error && { error: true }, ...errorText && { "error-text": errorText }, ...ariaLabelledby && { "aria-labelledby": ariaLabelledby }, ...ariaLabel && { "aria-label": ariaLabel }, ...autocomplete && { autocomplete }, ref: innerRef, ...rest });
});
HDSInput.defaultProps = {
  type: "text",
  id: "",
  name: void 0,
  placeholder: void 0,
  label: void 0,
  secondaryLabel: void 0,
  size: "medium",
  icon: void 0,
  pattern: void 0,
  iconCategory: "core-ui",
  disabled: false,
  readonly: false,
  required: false,
  autofocus: false,
  minlength: -1,
  maxlength: -1,
  step: 1,
  charCounter: false,
  error: false,
  errorText: void 0,
  ariaLabelledby: void 0,
  ariaLabel: "",
  passwordVisibility: "masked",
  autocomplete: ""
};
var HDSInput_default = HDSInput;

// node_modules/@here/hds-react-components/Stepper/HDSStepper.js
var import_react17 = __toESM(require_react(), 1);

// node_modules/@here/hds-stepper/build/hds-step.css.js
var styles20 = css`
:host(:focus){outline:0}.hds-step-wrapper{position:relative}.hds-step-wrapper .hds-step-button{background:none;border:0;cursor:default;padding:var(--hds-spacing-0);position:relative}.hds-step-wrapper .hds-step-button-label-container{align-items:center;display:flex;flex-direction:row}.hds-step-wrapper .hds-step-button-node-container{align-items:center;background:var(--hds-background-secondary);border-radius:50%;display:flex;flex-shrink:0;height:2.5rem;justify-content:center;padding:calc(var(--hds-spacing-1)/2);width:2.5rem}.hds-step-wrapper .hds-step-button-node-container .hds-step-button-node-inner-container{align-items:inherit;background:var(--hds-background-secondary);border-radius:50%;display:inherit;height:2.5rem;justify-content:inherit;width:2.5rem}.hds-step-wrapper .hds-step-button-node-number{color:var(--hds-foreground-primary);font:var(--hds-headline-04-font);letter-spacing:var(--hds-headline-04-letter-spacing);-webkit-text-decoration:var(--hds-headline-04-text-decoration,inherit);text-decoration:var(--hds-headline-04-text-decoration,inherit)}.hds-step-wrapper .hds-step-button-label-text-container{margin-left:var(--hds-spacing-3);text-align:left;width:100%}.hds-step-wrapper .hds-step-button-label-text-container span{display:block}.hds-step-wrapper .hds-step-button-label-text-primary{color:var(--hds-foreground-primary);font:var(--hds-body-small-strong-font);letter-spacing:var(--hds-body-small-strong-letter-spacing);-webkit-text-decoration:var(--hds-body-small-strong-text-decoration,inherit);text-decoration:var(--hds-body-small-strong-text-decoration,inherit)}.hds-step-wrapper .hds-step-button-label-text-secondary{color:var(--hds-foreground-primary);font:var(--hds-caption-font);letter-spacing:var(--hds-caption-letter-spacing);margin-top:var(--hds-spacing-3);-webkit-text-decoration:var(--hds-caption-text-decoration,inherit);text-decoration:var(--hds-caption-text-decoration,inherit)}.hds-step--label-bottom .hds-step-button-label-container{flex-direction:column}.hds-step--label-bottom .hds-step-button-label-text-container{margin-left:var(--hds-spacing-0);margin-top:var(--hds-spacing-3);text-align:center}.hds-step--orientation-horizontal.hds-step-wrapper{text-align:center}.hds-step-button--state-completed .hds-step-button-node-container{background:var(--hds-foreground-divider)}.hds-step-button--state-completed .hds-step-button-node-container .hds-step-button-node-inner-container{background:#0000}.hds-step-button--state-completed .hds-step-button-label-text-secondary{color:var(--hds-foreground-secondary)}.hds-step-button--state-error .hds-step-button-node-container{--hds-icon-color:var(--hds-negative);background:var(--hds-negative)}.hds-step-button--state-error .hds-step-button-label-text-primary,.hds-step-button--state-error .hds-step-button-label-text-secondary{color:var(--hds-negative)}.hds-step-button--state-disabled .hds-step-button-node-container{background:var(--hds-foreground-tertiary)}.hds-step-button--state-disabled .hds-step-button-label-text-primary,.hds-step-button--state-disabled .hds-step-button-label-text-secondary,.hds-step-button--state-disabled .hds-step-button-node-number{color:var(--hds-foreground-tertiary)}.hds-step-button--state-active .hds-step-button-node-container{background:var(--hds-gradient)}.hds-step-button--non-linear-interaction{cursor:pointer!important}.hds-step-button:focus{outline:none}.hds-step-button:focus-visible{outline:var(--hds-object-focused) solid .125rem;outline-offset:.25rem}
`;

// node_modules/@here/hds-stepper/build/hds-step.js
var Step = class Step2 extends LitElement {
  constructor() {
    super(...arguments);
    this.label = "";
    this.hideLabel = false;
    this.nonLinear = false;
    this.bottomLabel = false;
    this.orientation = "horizontal";
    this.optional = false;
    this.index = 0;
    this.state = "disabled";
    this.isTabbable = true;
  }
  _handleClick(e) {
    if (!this.nonLinear) {
      e.stopPropagation();
      e.preventDefault();
      return;
    }
    this.dispatchEvent(new CustomEvent("activate-step-internal", {
      detail: {
        stepIndex: this.index
      },
      bubbles: true
    }));
  }
  getStepConnector() {
    if (this.index !== 0 && this.orientation === "horizontal" && this.bottomLabel) {
      return html` <hds-step-connector
        orientation="${this.orientation}"
        .bottomLabel="${this.bottomLabel}"
      ></hds-step-connector>`;
    }
    return nothing;
  }
  async updated(_changedProperties) {
    super.updated(_changedProperties);
    if (_changedProperties.has("state")) {
      this.dispatchEvent(new CustomEvent("state", {
        detail: {
          currentState: this.state,
          previousState: _changedProperties.get("state"),
          stepIndex: this.index
        },
        bubbles: true,
        composed: true
      }));
      this.dispatchEvent(new CustomEvent("step-state", {
        detail: {
          currentState: this.state,
          previousState: _changedProperties.get("state"),
          stepIndex: this.index
        },
        bubbles: true,
        composed: true
      }));
    }
  }
  render() {
    const buttonClasses = {
      [`hds-step-button--state-${this.state}`]: true,
      "hds-step-button--non-linear-interaction": this.nonLinear
    };
    const stepClasses = {
      "hds-step--label-bottom": this.orientation === "horizontal" && this.bottomLabel,
      [`hds-step--orientation-${this.orientation}`]: true
    };
    const _index = this.index + 1;
    const _hasNumberedNode = this.state !== "error" && this.state !== "completed";
    return html`
      <div
        class="hds-step-wrapper ${classMap(stepClasses)}"
        aria-current="${this.state === "active" ? "step" : "false"}"
        aria-disabled="${!this.nonLinear}"
      >
        ${this.getStepConnector()}
        <button
          class="hds-step-button ${classMap(buttonClasses)}"
          ?disabled="${!this.nonLinear}"
          @click="${(e) => this._handleClick(e)}"
        >
          <span class="hds-step-button-label-container">
            <div class="hds-step-button-node-container">
              <div class="hds-step-button-node-inner-container">
                ${_hasNumberedNode && html`<span class="hds-step-button-node-number">${_index}</span>` || nothing}
                ${this.state === "completed" && html` <hds-icon name="checkmark" icon-style="solid" size="24px"></hds-icon>` || nothing}
                ${this.state === "error" && html` <hds-icon name="cross" icon-style="solid" size="24px"></hds-icon>` || nothing}
              </div>
            </div>
            ${!this.hideLabel && html`<span class="hds-step-button-label-text-container">
                <span class="hds-step-button-label-text-primary">${this.label}</span>
                ${this.optional && this.state !== "error" && html`<span class="hds-step-button-label-text-secondary">Optional</span>` || nothing}
                ${this.state === "error" && html`<span class="hds-step-button-label-text-secondary">Error</span>` || nothing}
              </span>` || nothing}
          </span>
        </button>
      </div>
    `;
  }
};
Step.styles = styles20;
__decorate([
  property({ type: String })
], Step.prototype, "label", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], Step.prototype, "hideLabel", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], Step.prototype, "nonLinear", void 0);
__decorate([
  property({ type: Boolean, attribute: false, reflect: true })
], Step.prototype, "bottomLabel", void 0);
__decorate([
  property({ type: String, attribute: false, reflect: true })
], Step.prototype, "orientation", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Step.prototype, "optional", void 0);
__decorate([
  property({ type: Number, attribute: false, reflect: true })
], Step.prototype, "index", void 0);
__decorate([
  property({ type: String, attribute: false, reflect: true })
], Step.prototype, "state", void 0);
Step = __decorate([
  customElement("hds-step")
], Step);

// node_modules/@here/hds-stepper/build/hds-step-connector.css.js
var styles21 = css`
:host(:focus){outline:0}.hds-step-connector-wrapper{flex:1 1 auto;position:relative}.hds-step-connector-wrapper .hds-step-connector{border:var(--hds-border-width) solid var(--hds-foreground-divider);box-sizing:inherit;display:block}.hds-step--label-bottom.hds-step-connector-wrapper{left:calc(-50% + 24px);position:absolute;right:calc(50% + 24px);top:21px}.hds-step--orientation-vertical{width:0}.hds-step--orientation-vertical.hds-step-connector-wrapper{margin-left:calc(var(--hds-spacing-5) + var(--hds-spacing-1px)*2)}.hds-step--orientation-vertical .hds-step-connector{margin:var(--hds-spacing-1) var(--hds-spacing-0);min-height:2.1875rem}.hds-step--orientation-horizontal .hds-step-connector{margin:var(--hds-spacing-0) var(--hds-spacing-2)}
`;

// node_modules/@here/hds-stepper/build/hds-step-connector.js
var StepConnector = class StepConnector2 extends LitElement {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.active = false;
    this.completed = false;
    this.bottomLabel = false;
    this.orientation = "horizontal";
    this.index = 0;
  }
  render() {
    const classes = {
      "hds-step--label-bottom": this.orientation === "horizontal" && this.bottomLabel,
      [`hds-step--orientation-${this.orientation}`]: true
    };
    return html` <div class="hds-step-connector-wrapper ${classMap(classes)}">
      <span class="hds-step-connector"></span>
    </div>`;
  }
};
StepConnector.styles = styles21;
__decorate([
  property({ type: Boolean, reflect: true })
], StepConnector.prototype, "disabled", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], StepConnector.prototype, "active", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], StepConnector.prototype, "completed", void 0);
__decorate([
  property({ type: Boolean, attribute: false, reflect: true })
], StepConnector.prototype, "bottomLabel", void 0);
__decorate([
  property({ type: String, attribute: false, reflect: true })
], StepConnector.prototype, "orientation", void 0);
__decorate([
  property({ type: Number, attribute: false, reflect: true })
], StepConnector.prototype, "index", void 0);
StepConnector = __decorate([
  customElement("hds-step-connector")
], StepConnector);

// node_modules/@here/hds-stepper/build/hds-stepper.css.js
var styles22 = css`
:host(:focus){outline:0}.hds-stepper-wrapper{display:flex}.hds-stepper-wrapper ::slotted(hds-step-connector){flex:1 1 auto}.hds-stepper--label-bottom{align-items:flex-start}.hds-stepper--label-bottom ::slotted(hds-step){flex:1}.hds-stepper--orientation-vertical{align-items:flex-start;flex-direction:column}.hds-stepper--orientation-horizontal{align-items:center;flex-direction:row}.hds-stepper--orientation-horizontal.hds-stepper--label-bottom{align-items:flex-start}
`;

// node_modules/@here/hds-stepper/build/hds-stepper.js
var stepperCounter = 0;
var Stepper = class Stepper2 extends LitElement {
  constructor() {
    super(...arguments);
    this.nonLinear = false;
    this.hideLabel = false;
    this.bottomLabel = false;
    this.orientation = "horizontal";
    this.activeStep = 0;
    this.stepsLength = 0;
  }
  connectedCallback() {
    super.connectedCallback();
    this.id = this.id || `hds-stepper-${++stepperCounter}`;
    this.addEventListener("activate-step-internal", this._handleStepClick);
  }
  disconnectedCallback() {
    super.disconnectedCallback();
    this.removeEventListener("activate-step-internal", this._handleStepClick);
  }
  reset() {
    const steps = this._getSteps();
    for (const step of steps) {
      step.state = "disabled";
    }
    this.completeStep = void 0;
    this.activeStep = 0;
  }
  _handleStepClick({ detail }) {
    if (detail) {
      this.activeStep = detail.stepIndex;
    }
  }
  firstUpdated(_changedProperties) {
    super.firstUpdated(_changedProperties);
    this.setupStep();
  }
  async updated(_changedProperties) {
    super.updated(_changedProperties);
    this.stepsLength = this._getSteps().length;
    if (_changedProperties.has("activeStep")) {
      await this.activeStepUpdated(_changedProperties.get("activeStep"));
    }
    if (_changedProperties.has("completeStep")) {
      this.completeStepUpdated();
    }
    if (_changedProperties.has("errorStep")) {
      this.errorStepUpdated();
    }
  }
  async activeStepUpdated(oldVal) {
    var _a6;
    const steps = this._getSteps();
    const value = this.activeStep;
    const selectedStep = steps[value];
    if (!selectedStep) {
      throw new Error("Invalid step index");
    }
    if (this.nonLinear) {
      for (const step of steps) {
        if (step.index !== value && step.state !== "completed" && step.state !== "error") {
          step.state = "disabled";
        }
      }
      if (selectedStep.state !== "completed" && selectedStep.state !== "error") {
        selectedStep.state = "active";
      }
    } else {
      if (value !== 0 && value - oldVal > 0) {
        if (value - oldVal === 2 && steps[oldVal + 1] && !((_a6 = steps[oldVal + 1]) == null ? void 0 : _a6.optional) || value - oldVal === 1 && steps[value - 2] && steps[value - 2].state !== "completed" || value - oldVal > 2) {
          this.activeStep = oldVal;
          throw new Error("In linear mode, you can only activate this step if the last step is completed or optional");
        }
      }
      if (value > oldVal && steps[oldVal]) {
        steps[oldVal].state = "completed";
      } else if (value < oldVal && steps[oldVal]) {
        steps[oldVal].state = "disabled";
      }
      selectedStep.state = "active";
    }
    this.dispatchEvent(new CustomEvent("current-active-step", {
      detail: {
        currentState: selectedStep.state,
        stepIndex: value
      },
      bubbles: true,
      composed: true
    }));
  }
  completeStepUpdated() {
    if (this.completeStep === void 0)
      return;
    const steps = this._getSteps();
    const selectedStep = steps[this.completeStep];
    if (!selectedStep) {
      throw new Error("Invalid step index");
    } else if (selectedStep.state !== "active" && selectedStep.state !== "error") {
      throw new Error("You can only complete the currently active or errored step");
    } else {
      selectedStep.state = "completed";
    }
    this.completeStep = void 0;
  }
  errorStepUpdated() {
    if (this.errorStep === void 0)
      return;
    const steps = this._getSteps();
    const selectedStep = steps[this.errorStep];
    if (!selectedStep) {
      throw new Error("Invalid step index");
    }
    if (!this.nonLinear) {
      throw new Error("Step can't be set in error state in Linear mode");
    }
    selectedStep.state = "error";
    this.errorStep = void 0;
  }
  setupStep() {
    var _a6, _b5;
    const steps = this._getSteps();
    for (let i = 0; i < steps.length; i += 1) {
      steps[i].index = i;
      steps[i].bottomLabel = this.bottomLabel;
      steps[i].orientation = this.orientation;
      steps[i].hideLabel = this.hideLabel;
      steps[i].nonLinear = this.nonLinear;
      if (i === 0) {
        steps[i].state = "active";
      } else if (i !== 0) {
        steps[i].state = "disabled";
        if (this.orientation === "vertical" || !this.bottomLabel) {
          const stepConnector = new StepConnector();
          stepConnector.bottomLabel = this.bottomLabel;
          stepConnector.orientation = this.orientation;
          (_b5 = (_a6 = steps[i]) == null ? void 0 : _a6.parentNode) == null ? void 0 : _b5.insertBefore(stepConnector, steps[i]);
        }
      }
    }
  }
  render() {
    const classes = {
      "hds-stepper--label-bottom": this.orientation === "horizontal" && this.bottomLabel,
      [`hds-stepper--orientation-${this.orientation}`]: true
    };
    return html`
      <div role="group" aria-label="progress" class="hds-stepper-wrapper ${classMap(classes)}">
        <slot></slot>
      </div>
    `;
  }
  _getSteps() {
    return this.stepsSlot.assignedNodes({ flatten: true }).filter((e) => e instanceof Step);
  }
};
Stepper.styles = styles22;
__decorate([
  property({ type: Boolean, attribute: "non-linear" })
], Stepper.prototype, "nonLinear", void 0);
__decorate([
  property({ type: Boolean, attribute: "hide-label" })
], Stepper.prototype, "hideLabel", void 0);
__decorate([
  property({ type: Boolean, attribute: "bottom-label" })
], Stepper.prototype, "bottomLabel", void 0);
__decorate([
  property({ type: String })
], Stepper.prototype, "orientation", void 0);
__decorate([
  property({ type: Number, reflect: true, attribute: "active-step" })
], Stepper.prototype, "activeStep", void 0);
__decorate([
  property({ type: Number, reflect: true, attribute: "complete-step" })
], Stepper.prototype, "completeStep", void 0);
__decorate([
  property({ type: Number, reflect: true, attribute: "error-step" })
], Stepper.prototype, "errorStep", void 0);
__decorate([
  property({ type: Number, attribute: false })
], Stepper.prototype, "stepsLength", void 0);
__decorate([
  query("slot")
], Stepper.prototype, "stepsSlot", void 0);
Stepper = __decorate([
  customElement("hds-stepper")
], Stepper);

// node_modules/@here/hds-react-components/Stepper/HDSStepper.js
new Stepper();
var HDSStepper = import_react17.default.forwardRef((props, ref) => {
  const { children, nonLinear, hideLabel, activeStep, completeStep, className, errorStep, onStepStateChange, getCurrentActiveStep, bottomLabel, orientation, ...rest } = props;
  const innerRef = (0, import_react17.useRef)(null);
  (0, import_react17.useImperativeHandle)(ref, () => innerRef.current);
  const _handleStepStateChange = (e) => {
    onStepStateChange && onStepStateChange(e.detail);
  };
  const _handleCurrentActiveStepChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    getCurrentActiveStep && getCurrentActiveStep(e.detail);
  };
  (0, import_react17.useEffect)(() => {
    if (innerRef.current) {
      if (onStepStateChange) {
        innerRef.current.addEventListener("state", _handleStepStateChange);
      }
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("state", _handleStepStateChange);
    };
  }, [onStepStateChange, innerRef]);
  (0, import_react17.useEffect)(() => {
    if (innerRef.current) {
      if (getCurrentActiveStep) {
        innerRef.current.addEventListener("current-active-step", _handleCurrentActiveStepChange);
      }
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("current-active-step", _handleCurrentActiveStepChange);
    };
  }, [getCurrentActiveStep, innerRef]);
  return import_react17.default.createElement("hds-stepper", { ...nonLinear && { "non-linear": nonLinear }, ...bottomLabel && { "bottom-label": bottomLabel }, ...hideLabel && { "hide-label": hideLabel }, ...className && { class: className }, "active-step": activeStep, ...(completeStep || completeStep === 0) && {
    "complete-step": completeStep
  }, ...(errorStep || errorStep === 0) && { "error-step": errorStep }, orientation, ref: innerRef, ...rest }, children);
});
HDSStepper.defaultProps = {
  orientation: "horizontal",
  nonLinear: false,
  hideLabel: false,
  bottomLabel: false,
  activeStep: 0
};
var HDSStepper_default = HDSStepper;

// node_modules/@here/hds-react-components/Stepper/HDSStep.js
var React19 = __toESM(require_react(), 1);
new Step();
var HDSStep = React19.forwardRef((props, ref) => {
  const { children, optional, className, label, ...rest } = props;
  return React19.createElement("hds-step", { ...className && { class: className }, label, ...optional && { optional }, ref, ...rest }, children);
});
HDSStep.defaultProps = {
  optional: false,
  label: ""
};
var HDSStep_default = HDSStep;

// node_modules/@here/hds-react-components/Logo/HDSLogo.js
var React20 = __toESM(require_react(), 1);

// node_modules/@here/hds-logo/build/hds-logo.css.js
var styles23 = css`
:host(:focus){outline:0}.hds-logo-wrapper{--hds-logo-size:2rem;display:block;padding:var(--hds-spacing-0);width:fit-content}.hds-logo-wrapper.monochrome .logo-icon--monochrome{fill:var(--hds-inverse-primary-logo)}.hds-logo-wrapper.non-monochrome .logo-icon--monochrome{fill:var(--hds-aqua-ondark-300)}.hds-logo-wrapper.has-background{background-color:var(--hds-inverse-primary)}.hds-logo-wrapper.inverted .logo-icon--text{fill:var(--hds-inverse-primary)}.hds-logo-wrapper.has-background.inverted{background-color:var(--hds-inverse-primary-logo)}.hds-logo-wrapper.monochrome.inverted .logo-icon--monochrome{fill:var(--hds-inverse-primary)}.hds-logo-wrapper.no-background{background-color:inherit}.hds-logo-wrapper .logo-icon--text{fill:var(--hds-inverse-primary-logo)}.hds-logo-wrapper svg{display:block;height:var(--hds-logo-size);width:var(--hds-logo-size)}.hds-logo-wrapper.size-extra-small{--hds-logo-size:2rem}.hds-logo-wrapper.size-extra-small.padded{padding:var(--hds-spacing-3)}.hds-logo-wrapper.size-small{--hds-logo-size:2.5rem}.hds-logo-wrapper.size-small.padded{padding:var(--hds-spacing-3)}.hds-logo-wrapper.size-medium{--hds-logo-size:3.5rem}.hds-logo-wrapper.size-medium.padded{padding:var(--hds-spacing-5)}.hds-logo-wrapper.size-large{--hds-logo-size:4.5rem}.hds-logo-wrapper.size-large.padded{padding:var(--hds-spacing-6)}.hds-logo-wrapper.size-extra-large{--hds-logo-size:5.5rem}.hds-logo-wrapper.size-extra-large.padded{padding:var(--hds-spacing-7)}
`;

// node_modules/@here/hds-logo/build/logo.svg.js
var HERE_LOGO = `
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 40">
    <!-- Here text -->
    <path
        class="logo-icon--text"
        d="M19.0262 20.43C17.8776 19.0817 17.9276 18.3326 18.6267 17.6335C19.4756 16.7845 20.3745 17.1341 21.3733 18.0829L19.0262 20.43ZM30.8115 5.44869C31.6604 4.59975 32.5593 4.94932 33.558 5.89813L31.211 8.2452C30.0125 6.89688 30.0624 6.19776 30.8115 5.44869ZM37.9026 7.8457C36.8539 9.4437 34.9563 12.0405 33.0087 10.0929L37.9526 5.14907C37.5031 4.69963 37.2035 4.30013 36.9039 4.05044C34.2572 1.40375 31.2609 1.35381 28.9138 3.70088C27.3658 5.24894 26.9163 7.04669 27.3658 8.74457L25.8177 6.99676C25.4182 7.19651 23.5206 8.89438 24.9188 11.3913L23.171 9.94308L20.824 12.2901L24.02 15.4861C21.573 13.5386 18.9263 13.7383 16.829 15.8357C14.5818 18.0829 14.7316 20.8295 16.4294 23.0767L16.0799 22.7271C13.8327 20.4799 11.3858 21.2789 10.1873 22.4774C9.23844 23.4262 8.68912 24.6747 8.93881 25.5735L4.09486 20.7296L1.49811 23.3264L11.0861 32.9144H16.2297L12.784 29.4687C10.9863 27.621 10.9363 26.6722 11.8352 25.7733C12.6841 24.9244 13.6829 25.4737 15.4307 27.1715L18.8265 30.5673L21.3733 28.0205L18.1273 24.7745C20.4744 26.5224 23.2709 26.6222 25.7678 24.1254L25.8177 24.0754C27.3658 22.6772 27.8152 21.2789 27.8152 21.2789L25.8677 19.9805C24.819 21.5785 22.9713 24.1753 21.0237 22.2277L25.9675 17.2839L29.0637 20.38L31.7603 17.6834L27.9151 13.8382C26.1173 12.0405 27.166 10.3426 27.9151 9.69339C28.2647 10.4425 28.764 11.1416 29.4132 11.7908C31.9101 14.2876 35.1061 14.787 37.9526 11.9905L38.0025 11.9406C39.5506 10.5423 40 9.14407 40 9.14407L37.9026 7.8457Z"
      />
      <!-- Monochrome Icon -->
    <path
      class="logo-icon--monochrome"
      d="M10.9863 32.9144L5.49314 38.4076L0 32.9144H10.9863Z"
  />
  `;

// node_modules/@here/hds-logo/build/hds-logo.js
var Logo_1;
var Logo = Logo_1 = class Logo2 extends LitElement {
  constructor() {
    super(...arguments);
    this.inverted = false;
    this.monochrome = false;
    this.size = "extra-small";
    this.padding = false;
    this.background = false;
  }
  static getSvgLogo() {
    return html`${StringToHtml_default(HERE_LOGO)}`;
  }
  render() {
    const logoClasses = {
      "hds-logo-wrapper": true,
      [`size-${this.size}`]: true,
      padded: this.background || this.padding,
      [this.inverted ? "inverted" : "non-inverted"]: true,
      [this.monochrome ? "monochrome" : "non-monochrome"]: true,
      [this.background ? "has-background" : "no-background"]: true
    };
    return html` <div class="${classMap(logoClasses)}">${Logo_1.getSvgLogo()}</div> `;
  }
};
Logo.styles = styles23;
Logo.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: Boolean })
], Logo.prototype, "inverted", void 0);
__decorate([
  property({ type: Boolean })
], Logo.prototype, "monochrome", void 0);
__decorate([
  property({ type: String })
], Logo.prototype, "size", void 0);
__decorate([
  property({ type: Boolean })
], Logo.prototype, "padding", void 0);
__decorate([
  property({ type: Boolean })
], Logo.prototype, "background", void 0);
Logo = Logo_1 = __decorate([
  customElement("hds-logo")
], Logo);

// node_modules/@here/hds-react-components/Logo/HDSLogo.js
new Logo();
var HDSLogo = React20.forwardRef((props, ref) => {
  const { className, monochrome, size: size2, padding, inverted, background, ...rest } = props;
  return React20.createElement("hds-logo", { ref, size: size2, ...className && { class: className }, ...inverted && { inverted }, ...background && { background }, ...monochrome && { monochrome }, ...padding && { padding }, ...rest });
});
HDSLogo.defaultProps = {
  size: "extra-small",
  inverted: false,
  background: false,
  monochrome: false,
  padding: false
};
var HDSLogo_default = HDSLogo;

// node_modules/@here/hds-react-components/NavBar/HDSNavBarTop.js
var React21 = __toESM(require_react(), 1);

// node_modules/@here/hds-navbar/build/hds-navbar-top.css.js
var styles24 = css`
:host(:focus){outline:0}:host slot[name=page-title]::slotted(a){color:unset!important;text-decoration:unset!important}:host .hds-navbar-top--variant-default{height:3rem}:host .hds-navbar-top--variant-wide{height:4rem}.hds-navbar-top-container{align-items:center;background:var(--hds-background-secondary);box-shadow:0 1px 0 var(--hds-foreground-divider);display:flex;padding-left:var(--hds-navbar-top-min-lr-spacing,var(--hds-spacing-6));padding-right:var(--hds-navbar-top-min-lr-spacing,var(--hds-spacing-6))}.hds-navbar-top-container.page-title-slot-empty .hds-navbar-top .hds-navbar-top-title{display:none}.hds-navbar-top{display:flex;flex:1 1 auto;flex-wrap:nowrap;font:var(--hds-body-font);gap:var(--hds-spacing-6);letter-spacing:var(--hds-body-letter-spacing);margin:0 auto;max-width:var(--hds-navbar-top-max-width,auto);-webkit-text-decoration:var(--hds-body-text-decoration,inherit);text-decoration:var(--hds-body-text-decoration,inherit)}.hds-navbar-top .hds-navbar-top-logo-container{align-items:center;display:flex}.hds-navbar-top .hds-navbar-top-logo-container ::slotted(*){box-sizing:inherit;display:flex;justify-content:center;overflow:inherit}.hds-navbar-top .hds-navbar-top-title{align-items:center;display:flex;font:var(--hds-subheadline-font);letter-spacing:var(--hds-subheadline-letter-spacing);-webkit-text-decoration:var(--hds-subheadline-text-decoration,inherit);text-decoration:var(--hds-subheadline-text-decoration,inherit)}.hds-navbar-top .hds-navbar-top-tabs{align-items:center;display:flex;flex:1 1 auto}.hds-navbar-top .hds-navbar-top-right-end-container{align-items:center;display:flex;gap:var(--hds-spacing-2)}.hds-navbar-top hr{align-self:center;border:0;border-left:.0625rem solid var(--hds-foreground-divider);height:1.5rem;margin-right:24px}
`;

// node_modules/@here/hds-avatar/build/hds-avatar.css.js
var styles25 = css`
:root{--hds-avatar-background:#fff}:host(:focus){outline:0}.-hds-avatar-wrapper{--hds-icon-color:var(--hds-foreground-primary);border-radius:100%;box-sizing:border-box;color:var(--hds-foreground-primary);position:relative}.-hds-avatar-wrapper.bordered{background:var(--hds-avatar-border-background,var(--hds-gradient));padding:.125rem}.-hds-avatar-wrapper.small{height:var(--hds-avatar-size,1.5rem);width:var(--hds-avatar-size,1.5rem)}.-hds-avatar-wrapper.small .avatar-image{border-radius:100%;height:100%;object-fit:cover;width:100%}.-hds-avatar-wrapper.small .focus-ring{border:.125rem solid var(--hds-avatar-focus-ring-color);border-radius:100%;box-sizing:border-box;height:calc(var(--hds-avatar-size, 1.5rem) - .25rem);left:.125rem;pointer-events:none;position:absolute;top:.125rem;width:calc(var(--hds-avatar-size, 1.5rem) - .25rem)}.-hds-avatar-wrapper.small{font:var(--hds-avatar-initials-small-font);letter-spacing:var(--hds-avatar-initials-small-letter-spacing);-webkit-text-decoration:var(--hds-avatar-initials-small-text-decoration,inherit);text-decoration:var(--hds-avatar-initials-small-text-decoration,inherit)}.-hds-avatar-wrapper.medium{height:var(--hds-avatar-size,2rem);width:var(--hds-avatar-size,2rem)}.-hds-avatar-wrapper.medium .avatar-image{border-radius:100%;height:100%;object-fit:cover;width:100%}.-hds-avatar-wrapper.medium .focus-ring{border:.125rem solid var(--hds-avatar-focus-ring-color);border-radius:100%;box-sizing:border-box;height:calc(var(--hds-avatar-size, 2rem) - .25rem);left:.125rem;pointer-events:none;position:absolute;top:.125rem;width:calc(var(--hds-avatar-size, 2rem) - .25rem)}.-hds-avatar-wrapper.medium{font:var(--hds-avatar-initials-medium-font);letter-spacing:var(--hds-avatar-initials-medium-letter-spacing);-webkit-text-decoration:var(--hds-avatar-initials-medium-text-decoration,inherit);text-decoration:var(--hds-avatar-initials-medium-text-decoration,inherit)}.-hds-avatar-wrapper.large{height:var(--hds-avatar-size,2.5rem);width:var(--hds-avatar-size,2.5rem)}.-hds-avatar-wrapper.large .avatar-image{border-radius:100%;height:100%;object-fit:cover;width:100%}.-hds-avatar-wrapper.large .focus-ring{border:.125rem solid var(--hds-avatar-focus-ring-color);border-radius:100%;box-sizing:border-box;height:calc(var(--hds-avatar-size, 2.5rem) - .25rem);left:.125rem;pointer-events:none;position:absolute;top:.125rem;width:calc(var(--hds-avatar-size, 2.5rem) - .25rem)}.-hds-avatar-wrapper.large{font:var(--hds-avatar-initials-large-font);letter-spacing:var(--hds-avatar-initials-large-letter-spacing);-webkit-text-decoration:var(--hds-avatar-initials-large-text-decoration,inherit);text-decoration:var(--hds-avatar-initials-large-text-decoration,inherit)}.-hds-avatar-wrapper.x-large{height:var(--hds-avatar-size,6rem);width:var(--hds-avatar-size,6rem)}.-hds-avatar-wrapper.x-large .avatar-image{border-radius:100%;height:100%;object-fit:cover;width:100%}.-hds-avatar-wrapper.x-large .focus-ring{border:.125rem solid var(--hds-avatar-focus-ring-color);border-radius:100%;box-sizing:border-box;height:calc(var(--hds-avatar-size, 6rem) - .25rem);left:.125rem;pointer-events:none;position:absolute;top:.125rem;width:calc(var(--hds-avatar-size, 6rem) - .25rem)}.-hds-avatar-wrapper.x-large{font:var(--hds-headline-02-font);letter-spacing:var(--hds-headline-02-letter-spacing);-webkit-text-decoration:var(--hds-headline-02-text-decoration,inherit);text-decoration:var(--hds-headline-02-text-decoration,inherit)}.-hds-avatar-wrapper .content{align-items:center;background:var(--hds-avatar-background);border-radius:100%;box-sizing:border-box;display:flex;height:100%;justify-content:center;text-transform:uppercase}
`;

// node_modules/@here/hds-avatar/build/hds-avatar.js
var Avatar = class Avatar2 extends LitElement {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.borderless = false;
    this.size = "medium";
    this.iconCategory = "core-ui";
    this.iconStyle = "solid";
  }
  /**
   * @example
   * this.getInitials('Jane Mary Doe'); // returns 'JM'
   * @example
   * this.getInitials('Jane'); // returns 'Ja'
   * @example
   * this.getInitials(' '); // returns ''
   */
  getInitials(name) {
    let initials = "";
    if (name !== void 0) {
      const words = name.trim().split(" ");
      if (words.length === 1) {
        initials = words[0].slice(0, 2);
      } else {
        initials = words[0].slice(0, 1) + words[1].slice(0, 1);
      }
    }
    return initials;
  }
  render() {
    const classes = {
      disabled: this.disabled,
      bordered: !this.borderless
    };
    classes[this.size] = true;
    return html`
      <div
        class="-hds-avatar-wrapper ${classMap(classes)}"
        aria-hidden="true"
        aria-disabled="${ifDefined(this.disabled)}"
      >
        <div class="content">${this.renderContent()}</div>
        <div class="focus-ring"></div>
      </div>
    `;
  }
  getIconSize() {
    switch (this.size) {
      case "x-large":
        return "24px";
      case "small":
        return "12px";
      default:
        return "16px";
    }
  }
  renderContent() {
    if (this.imageUrl) {
      return html`<img
        src="${this.imageUrl}"
        alt="${ifDefined(this.name)}"
        class="avatar-image"
        @error="${() => this.imageUrl = ""}"
      />`;
    }
    const initials = this.getInitials(this.name);
    if (initials) {
      return html`${initials}`;
    }
    return html` <hds-icon
      class="avatar-icon"
      name="${this.icon || "profile"}"
      category="${this.iconCategory}"
      size="${this.getIconSize()}"
      role="presentation"
      icon-style="${parseInt(this.getIconSize(), 10) > 16 ? this.iconStyle : "solid"}"
      @error="${() => this.icon = ""}"
    ></hds-icon>`;
  }
};
Avatar.styles = styles25;
__decorate([
  property({ type: Boolean })
], Avatar.prototype, "disabled", void 0);
__decorate([
  property({ type: Boolean })
], Avatar.prototype, "borderless", void 0);
__decorate([
  property({ type: String, reflect: true })
], Avatar.prototype, "size", void 0);
__decorate([
  property({ type: String })
], Avatar.prototype, "name", void 0);
__decorate([
  property({ type: String, attribute: "image-url" })
], Avatar.prototype, "imageUrl", void 0);
__decorate([
  property({ type: String })
], Avatar.prototype, "icon", void 0);
__decorate([
  property({ type: String, attribute: "icon-category" })
], Avatar.prototype, "iconCategory", void 0);
__decorate([
  property({ type: String, attribute: "icon-style" })
], Avatar.prototype, "iconStyle", void 0);
Avatar = __decorate([
  customElement("hds-avatar")
], Avatar);

// node_modules/@here/hds-navbar/build/hds-profile-menu.css.js
var styles26 = css`
:host(:focus){outline:0}.hds-profile-menu-closed-avatar{align-items:center;cursor:pointer;display:flex}.hds-profile-menu-closed-avatar.disabled{background:var(--hds-background-object);color:var(--hds-foreground-inactive)}.hds-profile-menu-closed-avatar:focus-visible{outline:var(--hds-object-focused) solid .125rem;outline-offset:.375rem}slot[name=signup-link]::slotted(a){color:var(--hds-action)!important;font:var(--hds-button-font);letter-spacing:var(--hds-button-letter-spacing);line-height:var(--hds-button-line-height);-webkit-text-decoration:var(--hds-button-text-decoration,inherit);text-decoration:var(--hds-button-text-decoration,inherit)}slot[name=singup-info]::slotted(p){background-color:lime;font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);line-height:var(--hds-body-small-line-height);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.hds-profile-menu-wrapper{position:relative}.hds-profile-menu-wrapper .hds-profile-menu{display:none}.hds-profile-menu-wrapper .hds-profile-menu.open{min-width:15.5rem;position:absolute}.hds-profile-menu-wrapper .hds-profile-menu.open.--navbar-top-variant-default{right:0;top:calc(3.0625rem - var(--hds-spacing-2))}.hds-profile-menu-wrapper .hds-profile-menu.open.--navbar-top-variant-wide{right:0;top:calc(4.0625rem - var(--hds-spacing-4))}.hds-profile-menu-wrapper .hds-profile-menu.no-trigger,.hds-profile-menu-wrapper .hds-profile-menu.open{display:block}.hds-profile-menu{background:var(--hds-background-secondary);display:flex;flex-direction:column;list-style:none;margin:var(--hds-spacing-0);min-width:14.5625rem;overflow:inherit;padding:var(--hds-spacing-2) var(--hds-spacing-0)}.hds-profile-menu.has-trigger{border-color:var(--hds-foreground-divider);border-radius:0 0 var(--hds-border-radius) var(--hds-border-radius);border-style:solid;border-width:0 .0625rem .0625rem}.hds-profile-details{align-items:center;display:flex;min-height:3.125rem;padding:var(--hds-spacing-5) var(--hds-spacing-4) var(--hds-spacing-3)}.hds-profile-details .hds-profile-details-avatar-wrapper:focus:focus-within{outline:0}.hds-profile-details .hds-profile-details-text-container{display:flex}.hds-profile-details .hds-profile-details-text.hds-profile-details-text--name{color:var(--hds-foreground-primary);font:var(--hds-body-strong-font);letter-spacing:var(--hds-body-strong-letter-spacing);line-height:var(--hds-body-strong-line-height);-webkit-text-decoration:var(--hds-body-strong-text-decoration,inherit);text-decoration:var(--hds-body-strong-text-decoration,inherit)}.hds-profile-details .hds-profile-details-text.hds-profile-details-text--email{color:var(--hds-foreground-primary)}.hds-profile-details .hds-profile-details-text.hds-profile-details-text--email,.hds-profile-details .hds-profile-details-text.hds-profile-details-text--info{font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);line-height:var(--hds-body-small-line-height);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.hds-profile-details .hds-profile-details-text.hds-profile-details-text--info{color:var(--hds-foreground-secondary)}@media (min-width:1025px){.hds-profile-details{flex-direction:column;gap:var(--hds-spacing-3)}.hds-profile-details-text-container{flex-direction:column;gap:var(--hds-spacing-1);text-align:center;width:100%}.not-signed-in,.signed-in{--hds-avatar-size:2.5rem}}@media (max-width:1440px){.hds-profile-details{flex-direction:row;gap:var(--hds-spacing-4)}.hds-profile-details-text-container{flex-direction:column;gap:0;text-align:left;width:100%}.not-signed-in{--hds-avatar-size:2.5rem}.not-signed-in .hds-profile-details{flex-wrap:wrap}.signed-in{--hds-avatar-size:3.5rem}}
`;

// node_modules/@here/hds-navbar/build/hds-profile-menu.js
var ProfileMenu = class ProfileMenu2 extends LitElement {
  constructor() {
    super();
    this.profileName = "";
    this.profileEmail = "";
    this.avatarImageUrl = "";
    this.open = false;
    this.signup = false;
    this.navBarTopVariant = "default";
    this.noTrigger = false;
    this._handleDocumentClick = this._handleDocumentClick.bind(this);
  }
  connectedCallback() {
    super.connectedCallback && super.connectedCallback();
    this.ownerDocument.addEventListener("click", this._handleDocumentClick, true);
  }
  disconnectedCallback() {
    this.ownerDocument.removeEventListener("click", this._handleDocumentClick, true);
    super.disconnectedCallback && super.disconnectedCallback();
  }
  updated(changedProperties) {
    if (changedProperties.has("open") && changedProperties.get("open") !== void 0) {
      this.dispatchEvent(new CustomEvent("change", {
        detail: {
          open: this.open
        }
      }));
    }
  }
  renderAvatar(isSignUp) {
    if (isSignUp) {
      return html` <hds-avatar icon="profile" icon-style="solid"></hds-avatar>`;
    }
    return html` <hds-avatar
      name="${this.profileName}"
      image-url="${this.avatarImageUrl}"
    ></hds-avatar>`;
  }
  renderTrigger() {
    if (this.noTrigger)
      return nothing;
    return html` <div
      class="hds-profile-menu-closed-avatar"
      tabindex="0"
      @click="${this._handleClick}"
    >
      <span class="hds-avatar-wrapper" aria-label="${this.profileName} profile" role="button">
        ${this.renderAvatar(this.signup)}
      </span>
    </div>`;
  }
  renderProfile() {
    const isLoggedIn = !this.signup && (this.profileName || this.profileEmail || this.avatarImageUrl);
    const isLoggedOut = this.signup;
    let template = html``;
    if (isLoggedIn) {
      template = html` <div class="hds-profile-details">
        <span
          class="hds-profile-details-avatar-wrapper"
          aria-label="${this.profileName} profile"
          role="button"
          tabindex="0"
        >
          ${this.renderAvatar(this.signup)}
        </span>
        <span class="hds-profile-details-text-container">
          <span class="hds-profile-details-text hds-profile-details-text--name">
            ${this.profileName}
          </span>
          <span class="hds-profile-details-text hds-profile-details-text--email">
            ${this.profileEmail}
          </span>
          <div class="hds-profile-details-text hds-profile-details-text--info">
            <slot name="profile-info"></slot>
          </div>
        </span>
      </div>`;
    } else if (isLoggedOut) {
      template = html` <div class="hds-profile-details">
        <span
          class="hds-profile-details-avatar-wrapper"
          aria-label="profile"
          role="button"
          tabindex="0"
        >
          ${this.renderAvatar(this.signup)}
        </span>
        <slot name="signup-link"></slot>
        <div class="hds-profile-details-text-container">
          <div class="hds-profile-details-text hds-profile-details-text--info">
            <slot name="singup-info"></slot>
          </div>
        </div>
      </div>`;
    }
    return template;
  }
  render() {
    const profileMenuClasses = {
      "hds-profile-menu": true,
      "signed-in": !this.signup,
      "not-signed-in": this.signup,
      open: !this.noTrigger && this.open,
      "no-trigger": this.noTrigger,
      "has-trigger": !this.noTrigger,
      [`--navbar-top-variant-${this.navBarTopVariant}`]: true
    };
    return html`
      <div class="hds-profile-menu-wrapper">
        ${this.renderTrigger()}
        <div class="${classMap(profileMenuClasses)}">
          <slot name="before-tray"></slot>
          ${this.renderProfile()}
          <slot></slot>
          <slot name="after-tray"></slot>
        </div>
      </div>
    `;
  }
  _handleDocumentClick(e) {
    const closestProfileMenu = e.target.closest && e.target.closest(this.tagName.toLowerCase());
    if (closestProfileMenu !== this) {
      this.open = false;
    }
  }
  _handleClick(e) {
    e.preventDefault();
    e.stopPropagation();
    this.open = !this.open;
  }
};
ProfileMenu.styles = styles26;
__decorate([
  property({ type: String, attribute: "profile-name" })
], ProfileMenu.prototype, "profileName", void 0);
__decorate([
  property({ type: String, attribute: "profile-email" })
], ProfileMenu.prototype, "profileEmail", void 0);
__decorate([
  property({ type: String, attribute: "avatar-image-url" })
], ProfileMenu.prototype, "avatarImageUrl", void 0);
__decorate([
  property({ type: Boolean, attribute: "open", reflect: true })
], ProfileMenu.prototype, "open", void 0);
__decorate([
  property({ type: Boolean, attribute: "signup", reflect: true })
], ProfileMenu.prototype, "signup", void 0);
__decorate([
  property({ type: String, attribute: false })
], ProfileMenu.prototype, "navBarTopVariant", void 0);
__decorate([
  property({ type: Boolean, attribute: "no-trigger" })
], ProfileMenu.prototype, "noTrigger", void 0);
ProfileMenu = __decorate([
  customElement("hds-profile-menu")
], ProfileMenu);

// node_modules/@here/hds-navbar/build/hds-navbar-top.js
var NavBarTop = class NavBarTop2 extends LitElement {
  constructor() {
    super(...arguments);
    this.variant = "default";
  }
  async onPageTitleSlotChange() {
    this.requestUpdate();
  }
  async onProfileMenuSlotChange() {
    findElementsInSlot(this.slotProfileMenu, ProfileMenu).forEach((profileMenu) => {
      profileMenu.navBarTopVariant = this.variant;
    });
  }
  render() {
    const classes = {
      "hds-navbar-top-container": true,
      "page-title-slot-empty": isSlotEmpty(this.slotPageTitle)
    };
    classes[`hds-navbar-top--variant-${this.variant}`] = true;
    return html`
      <div class="${classMap(classes)}" role="navigation">
        <div class="hds-navbar-top">
          <div class="hds-navbar-top-logo-container">
            <slot name="logo"></slot>
          </div>
          <div class="hds-navbar-top-title">
            <hr />
            <slot name="page-title" @slotchange="${this.onPageTitleSlotChange}"></slot>
          </div>
          <div class="hds-navbar-top-tabs">
            <slot name="tabs-menu"></slot>
          </div>
          <div class="hds-navbar-top-right-end-container">
            <slot class="hds-navbar-top-right-tray" name="right-tray"></slot>
            <slot
              class="hds-navbar-top-profile-menu"
              name="profile-menu"
              @slotchange="${this.onProfileMenuSlotChange}"
            ></slot>
          </div>
        </div>
      </div>
    `;
  }
};
NavBarTop.styles = styles24;
__decorate([
  property({ type: String, attribute: true })
], NavBarTop.prototype, "variant", void 0);
__decorate([
  query('slot[name="page-title"]')
], NavBarTop.prototype, "slotPageTitle", void 0);
__decorate([
  query('slot[name="profile-menu"]')
], NavBarTop.prototype, "slotProfileMenu", void 0);
NavBarTop = __decorate([
  customElement("hds-navbar-top")
], NavBarTop);

// node_modules/@here/hds-panel/build/hds-panel.css.js
var styles27 = css`
:host(:focus){outline:0}.-hds-panel-wrapper{background:var(--hds-background-secondary);color:var(--hds-foreground-primary);display:grid;font:var(--hds-body-font);grid-auto-flow:dense;grid-template-columns:1fr;height:100%;letter-spacing:var(--hds-body-letter-spacing);position:relative;-webkit-text-decoration:var(--hds-body-text-decoration,inherit);text-decoration:var(--hds-body-text-decoration,inherit)}.-hds-panel-wrapper.disabled{background:var(--hds-background-object);color:var(--hds-foreground-inactive)}:host([variant=vertical][panel-interaction=toggle]) .handle:after{border-color:var(--hds-foreground-divider);border-radius:var(--hds-spacing-1) 0 calc(var(--hds-spacing-1px) + 2px) calc(var(--hds-spacing-1px) + 2px);border-style:solid;border-width:calc(var(--hds-spacing-1) + 1px) calc(var(--hds-spacing-1) + 1px) 0 0;content:"";display:inline-block;height:calc(var(--hds-spacing-3) + 2px);margin-top:-.5625rem;position:absolute;top:50%;vertical-align:top;width:calc(var(--hds-spacing-3) + 2px)}:host([variant=vertical][panel-interaction=drag]) .handle:after{background:var(--hds-foreground-divider);border-radius:var(--hds-spacing-1);content:"";display:inline-block;height:var(--hds-spacing-7);left:50%;margin-left:-.125rem;margin-top:calc(var(--hds-spacing-4)*-1);position:absolute;top:50%;width:var(--hds-spacing-1)}:host([variant=horizontal][panel-interaction=toggle]) .handle:after{border-color:var(--hds-foreground-divider);border-radius:var(--hds-spacing-1);border-style:solid;border-width:calc(var(--hds-spacing-1) + 1px) calc(var(--hds-spacing-1) + 1px) 0 0;content:"";display:inline-block;height:calc(var(--hds-spacing-3) + 2px);left:50%;margin-left:-.625rem;position:absolute;vertical-align:top;width:calc(var(--hds-spacing-3) + 2px)}:host([variant=horizontal][panel-interaction=drag]) .handle:after{background:var(--hds-foreground-divider);border-radius:var(--hds-spacing-1);content:"";display:inline-block;height:var(--hds-spacing-1);left:50%;margin-left:calc(var(--hds-spacing-4)*-1);position:absolute;top:.5625rem;width:var(--hds-spacing-7)}:host([overlay]) .handle{filter:var(--hds-overlay)}:host(.resizing){-webkit-user-select:none;user-select:none}:host(.resizing[variant=vertical]){cursor:col-resize}:host(.resizing[variant=horizontal]){cursor:row-resize}.content{overflow:auto}:host([variant=vertical][panel-position=right]) .content{grid-column:2}:host([variant=vertical][panel-position=right][panel-interaction=toggle]) .-hds-panel-wrapper.closed .handle:after{margin-left:.125rem;transform:rotate(225deg) skew(22deg,22deg)}:host([variant=vertical][panel-position=right][panel-interaction=toggle]) .-hds-panel-wrapper.open .handle:after{margin-left:-.125rem;transform:rotate(45deg) skew(22deg,22deg)}:host([panel-interaction=toggle]) .handle{cursor:pointer}:host([variant=vertical][panel-interaction=toggle]) .-hds-panel-wrapper.open{grid-template-columns:auto;width:auto}:host([variant=vertical][panel-interaction=toggle]) .-hds-panel-wrapper.open .handle:after{margin-left:calc(var(--hds-spacing-1px) + 2px);transform:rotate(225deg) skew(22deg,22deg)}:host([variant=vertical][panel-interaction=toggle]) .-hds-panel-wrapper.closed{grid-template-columns:0;width:var(--hds-spacing-6)}:host([variant=vertical][panel-interaction=toggle]) .-hds-panel-wrapper.closed .handle:after{margin-left:0;transform:rotate(45deg) skew(22deg,22deg)}:host([variant=vertical][panel-interaction=toggle]) .-hds-panel-wrapper.partial .handle:after{margin-left:0;transform:rotate(45deg) skew(22deg,22deg)}:host([variant=vertical][panel-interaction=toggle]) .-hds-panel-wrapper .handle:hover{background-color:var(--hds-background-hover)}:host([variant=vertical][panel-interaction=toggle]) .-hds-panel-wrapper .handle:active{background-color:var(--hds-background-press)}:host([variant=horizontal][panel-interaction=toggle]) .-hds-panel-wrapper.open{grid-template-rows:auto;height:auto}:host([variant=horizontal][panel-interaction=toggle]) .-hds-panel-wrapper.open .handle:after{margin-top:var(--hds-spacing-1);transform:rotate(315deg) skew(22deg,22deg)}:host([variant=horizontal][panel-interaction=toggle]) .-hds-panel-wrapper.closed{height:1.375rem}:host([variant=horizontal][panel-interaction=toggle]) .-hds-panel-wrapper.closed .handle:after{margin-top:var(--hds-spacing-1px);transform:rotate(135deg) skew(22deg,22deg)}:host([variant=horizontal][panel-interaction=toggle]) .-hds-panel-wrapper.partial .handle:after{margin-top:var(--hds-spacing-1px);transform:rotate(135deg) skew(22deg,22deg)}:host([variant=horizontal][panel-interaction=toggle]) .handle:hover{background-color:var(--hds-background-hover)}:host([variant=horizontal][panel-interaction=toggle]) .handle:active{background-color:var(--hds-background-press)}:host([variant=vertical][enable-peek]) .-hds-panel-wrapper.expanded{overflow:hidden}:host .handle{background-color:var(--hds-background-secondary);order:2;position:relative;z-index:1}:host([variant=vertical]) .handle{border-left:var(--hds-spacing-1px) solid var(--hds-foreground-divider);border-right:var(--hds-spacing-1px) solid var(--hds-foreground-divider);grid-column:2/2;height:100%;width:1.375rem}:host([variant=vertical]) .handle[data-position=right]{grid-column:1/2}:host([variant=horizontal]) .handle{border-bottom:var(--hds-spacing-1px) solid var(--hds-foreground-divider);border-top:var(--hds-spacing-1px) solid var(--hds-foreground-divider);grid-row:1/2;height:1.375rem;width:100%}:host([variant=vertical][panel-interaction=drag]) .-hds-panel-wrapper.closed{width:var(--hds-spacing-6)}:host([variant=vertical][panel-interaction=drag]) .-hds-panel-wrapper .handle{cursor:col-resize}:host([variant=vertical][panel-interaction=drag]) .-hds-panel-wrapper .handle:hover:after{background:var(--hds-foreground-tertiary)}:host([variant=vertical][panel-interaction=drag]) .-hds-panel-wrapper .handle:active:after{background:var(--hds-foreground-tertiary-press)}:host([variant=horizontal][panel-interaction=drag]) .-hds-panel-wrapper.closed{height:1.375rem}:host([variant=horizontal][panel-interaction=drag]) .-hds-panel-wrapper .handle{cursor:row-resize}:host([variant=horizontal][panel-interaction=drag]) .-hds-panel-wrapper .handle:hover:after{background:var(--hds-foreground-tertiary)}:host([variant=horizontal][panel-interaction=drag]) .-hds-panel-wrapper .handle:active:after{background:var(--hds-foreground-tertiary-press)}:host([variant=horizontal][panel-position=top]) .handle{grid-row:2/2}:host([variant=horizontal][panel-position=bottom][panel-interaction=toggle]) .-hds-panel-wrapper .handle:after{margin-top:var(--hds-spacing-1);transform:rotate(315deg) skew(22deg,22deg)}:host([variant=horizontal][panel-position=bottom][panel-interaction=toggle]) .-hds-panel-wrapper.open .handle:after{margin-top:var(--hds-spacing-1px);transform:rotate(135deg) skew(22deg,22deg)}:host([variant=horizontal]) .-hds-panel-wrapper{grid-template-rows:1fr;height:auto}::slotted(*){overflow:auto}
`;

// node_modules/@here/hds-panel/build/hds-panel.js
var Panel_1;
var Panel = Panel_1 = class Panel2 extends LitElement {
  constructor() {
    super(...arguments);
    this.variant = "vertical";
    this.panelPosition = "left";
    this.panelInteraction = "none";
    this.partialSize = 0;
    this.expanded = "open";
    this.overlay = false;
    this.resizing = false;
    this._left = 0;
    this._top = 0;
    this._right = 0;
    this._bottom = 0;
    this._showPeek = false;
    this._handleWidth = 0;
    this._handleHeight = 0;
  }
  firstUpdated() {
    var _a6, _b5;
    this._handleWidth = (_a6 = this.handleElement) == null ? void 0 : _a6.offsetWidth;
    this._handleHeight = (_b5 = this.handleElement) == null ? void 0 : _b5.offsetHeight;
    this.containerComputedStyle = getComputedStyle(this.wrapperElement);
    this.id = this.id || `hds-panel-${++Panel_1.panelCounter}`;
  }
  toggle() {
    this._handleToggle();
  }
  open() {
    this._resetWrapperStyles();
  }
  close() {
    this.partialSize && !Number.isNaN(this.partialSize) && this.partialSize > 0 && !this._showPeek ? this._handleToggle() : this.expanded = "closed";
  }
  updated(_changedProperties) {
    super.updated(_changedProperties);
    if (_changedProperties.has("expanded") && _changedProperties.get("expanded") !== void 0 || _changedProperties.has("resizing") && _changedProperties.get("resizing") !== void 0) {
      this.dispatchEvent(new CustomEvent("change", {
        detail: {
          expanded: this.expanded,
          resized: this.resizing
        },
        bubbles: true
      }));
    }
  }
  renderPanel(template = void 0) {
    return html`
      <div class="-hds-panel-wrapper ${this.expanded}">
        <div class="content" role="region" tabindex="0">
          ${template !== void 0 ? template : html` <slot></slot>`}
        </div>
        ${this.panelInteraction !== "none" ? this._renderHandle() : nothing}
      </div>
    `;
  }
  render() {
    return this.renderPanel();
  }
  _handleResize(e) {
    e.preventDefault();
    e.stopPropagation();
    this.resizing = true;
    this.classList.add("resizing");
    let newWidth = 0;
    let newHeight = 0;
    if (this.variant === "vertical") {
      let newMedianRight = this._right - e.clientX;
      if (this.panelPosition === "right") {
        if (newMedianRight <= 0)
          newMedianRight = 0;
        newWidth = Math.floor(newMedianRight - this._handleWidth / 2);
        if (this.partialSize && newWidth <= this.partialSize)
          return;
        this.wrapperElement.style.gridTemplateColumns = `${this._handleWidth}px ${newWidth}px`;
        this.wrapperElement.style.width = "auto";
      } else {
        let newMedianLeft = e.clientX - this._left;
        if (newMedianLeft <= 0)
          newMedianLeft = 0;
        newWidth = Math.floor(newMedianLeft - this._handleWidth / 2);
        if (this.partialSize && newWidth < this.partialSize)
          return;
        this.wrapperElement.style.gridTemplateColumns = `${newWidth}px ${this._handleWidth}px`;
        this.wrapperElement.style.width = "auto";
      }
    } else if (this.variant === "horizontal") {
      const newMedianTop = e.clientY - this._top;
      if (this.panelPosition === "top") {
        newHeight = Math.floor(newMedianTop - this._handleHeight / 2);
        if (this.partialSize && newHeight < this.partialSize)
          return;
        this.wrapperElement.style.gridTemplateRows = `calc(${newHeight}px) ${this._handleHeight}px`;
        this.wrapperElement.style.height = "auto";
      } else {
        const newMedianBottom = this._bottom - e.clientY;
        newHeight = Math.floor(newMedianBottom - this._handleHeight / 2);
        if (this.partialSize && newHeight < this.partialSize)
          return;
        this.wrapperElement.style.gridTemplateRows = `${this._handleHeight}px calc(${newHeight}px)`;
        this.wrapperElement.style.height = "auto";
      }
    }
  }
  _dragStart(e) {
    e.preventDefault();
    e.stopPropagation();
    this.setPointerCapture(e.pointerId);
    const clientRect = this.getBoundingClientRect();
    this._left = clientRect.x;
    this._right = clientRect.right;
    this._top = clientRect.y;
    this._bottom = clientRect.bottom;
    this.addEventListener("pointermove", this._handleResize);
    this.addEventListener("pointerup", this._dragEnd);
  }
  _dragEnd(e) {
    e.preventDefault();
    e.stopPropagation();
    this.resizing = false;
    this.classList.remove("resizing");
    if (this.className === "")
      this.removeAttribute("class");
    this.removeEventListener("pointermove", this._handleResize);
    this.removeEventListener("pointerup", this._dragEnd);
  }
  _handleToggle() {
    if (this.partialSize && !Number.isNaN(this.partialSize) && this.partialSize > 0 && !this._showPeek) {
      switch (this.panelPosition) {
        case "top":
          this.wrapperElement.style.gridTemplateRows = `calc(${this.partialSize}px) ${this._handleHeight}px`;
          this.wrapperElement.style.height = `${this.partialSize + this._handleHeight}px`;
          break;
        case "bottom":
          this.wrapperElement.style.gridTemplateRows = `${this._handleHeight}px calc(${this.partialSize}px)`;
          this.wrapperElement.style.height = `${this.partialSize + this._handleHeight}px`;
          break;
        case "right":
          this.wrapperElement.style.gridTemplateColumns = `${this._handleWidth}px calc(${this.partialSize}px)`;
          this.wrapperElement.style.width = `${this.partialSize + this._handleWidth}px`;
          break;
        case "left":
        default:
          this.wrapperElement.style.gridTemplateColumns = `calc(${this.partialSize}px)`;
          this.wrapperElement.style.width = `${this.partialSize + this._handleWidth}px`;
          break;
      }
      this.expanded = "partial";
      this._showPeek = true;
    } else if (this.partialSize && !Number.isNaN(this.partialSize) && this.partialSize > 0 && this._showPeek) {
      this._resetWrapperStyles();
    } else {
      this.expanded = this.expanded === "closed" || this.expanded === "partial" ? "open" : "closed";
    }
  }
  _resetWrapperStyles() {
    this.expanded = "open";
    this._showPeek = false;
    this.wrapperElement.removeAttribute("style");
  }
  _renderHandle() {
    return html`
      <div
        data-position="${this.panelPosition}"
        class="handle"
        @click="${this.panelInteraction === "toggle" ? this._handleToggle : void 0}"
        @pointerdown="${this.panelInteraction === "drag" ? this._dragStart : void 0}"
      ></div>
    `;
  }
};
Panel.styles = styles27;
Panel.panelCounter = 0;
__decorate([
  property({ type: String, reflect: true })
], Panel.prototype, "variant", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "panel-position" })
], Panel.prototype, "panelPosition", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "panel-interaction" })
], Panel.prototype, "panelInteraction", void 0);
__decorate([
  property({ type: Number, attribute: "partial-size" })
], Panel.prototype, "partialSize", void 0);
__decorate([
  property({ type: String, reflect: true })
], Panel.prototype, "expanded", void 0);
__decorate([
  property({ type: Boolean, attribute: "overlay" })
], Panel.prototype, "overlay", void 0);
__decorate([
  state()
], Panel.prototype, "containerComputedStyle", void 0);
__decorate([
  state()
], Panel.prototype, "resizing", void 0);
__decorate([
  query("slot")
], Panel.prototype, "slotElement", void 0);
__decorate([
  query(".content")
], Panel.prototype, "contentElement", void 0);
__decorate([
  query(".handle")
], Panel.prototype, "handleElement", void 0);
__decorate([
  query(".-hds-panel-wrapper")
], Panel.prototype, "wrapperElement", void 0);
Panel = Panel_1 = __decorate([
  customElement("hds-panel")
], Panel);

// node_modules/@here/hds-vertical-navigation/build/hds-vertical-navigation.css.js
var styles28 = css`
:host(:focus){outline:0}.-hds-vertical-navigation.nav-collapsed{width:4.5rem}
`;

// node_modules/@here/hds-vertical-navigation/build/hds-vertical-navigation-item.css.js
var styles29 = css`
:host(:focus){outline:0}.-hds-vertical-navigation-item.has-avatar .-hds-accordion-item-wrapper .-hds-accordion-button{padding:0 calc(var(--hds-spacing-5) - 2px)}.-hds-vertical-navigation-item.nav-collapsed{width:4.5rem}.-hds-vertical-navigation-item.nav-collapsed .-hds-accordion-item-wrapper .-hds-accordion-button{display:flex;justify-content:center;padding:0}.-hds-vertical-navigation-item.nav-collapsed .-hds-accordion-item-wrapper .-hds-accordion-button .headline{overflow:hidden;width:1.5rem}.-hds-vertical-navigation-item.nav-collapsed.has-avatar .-hds-accordion-item-wrapper .headline{width:2rem}.-hds-vertical-navigation-item.nav-expanded.has-avatar .-hds-accordion-item-wrapper hds-avatar{margin-right:var(--hds-spacing-3)}.-hds-vertical-navigation-item.selected{position:relative}.-hds-vertical-navigation-item.selected.has-sub-list.has-chevron .-hds-accordion-item-wrapper .arrow{--hds-icon-color:var(--hds-foreground-primary)}.-hds-vertical-navigation-item.selected .-hds-accordion-item-wrapper .-hds-accordion-button{--hds-icon-color:var(--hds-foreground-primary);background:var(--hds-background-object);color:var(--hds-foreground-primary)}.-hds-vertical-navigation-item.selected .-hds-accordion-item-wrapper .-hds-accordion-button .headline ::slotted(a){color:var(--hds-foreground-primary)!important}.-hds-vertical-navigation-item.has-sub-list .-hds-accordion-item-wrapper .content{margin:var(--hds-spacing-2) var(--hds-spacing-0) var(--hds-spacing-2) var(--hds-spacing-6)}.-hds-vertical-navigation-item.has-sub-list.has-chevron .-hds-accordion-item-wrapper .arrow{--hds-icon-color:var(--hds-foreground-secondary);display:flex;transform:rotate(-90deg)}.-hds-vertical-navigation-item.has-sub-list.has-chevron .-hds-accordion-item-wrapper .-hds-accordion-button .headline{margin-left:calc(var(--hds-spacing-2) + var(--hds-spacing-1px)*2)}.-hds-vertical-navigation-item.has-sub-list.has-chevron .-hds-accordion-item-wrapper.expanded .arrow{transform:none}.-hds-vertical-navigation-item .-hds-accordion-item-wrapper.last-child .content{border-bottom:0}.-hds-vertical-navigation-item .-hds-accordion-item-wrapper.expanded .content{display:block}.-hds-vertical-navigation-item .-hds-accordion-item-wrapper .-hds-accordion-button{--hds-icon-color:var(--hds-foreground-secondary);border:0;color:var(--hds-foreground-secondary);height:3.5rem;padding:0 var(--hds-spacing-6)}.-hds-vertical-navigation-item .-hds-accordion-item-wrapper .-hds-accordion-button:not(:focus){border-color:#0000}.-hds-vertical-navigation-item .-hds-accordion-item-wrapper .-hds-accordion-button:focus-visible{outline-offset:-.125rem}.-hds-vertical-navigation-item .-hds-accordion-item-wrapper .-hds-accordion-button .headline{align-items:center;margin-left:var(--hds-spacing-0)}.-hds-vertical-navigation-item .-hds-accordion-item-wrapper .-hds-accordion-button .headline ::slotted(a){color:var(--hds-foreground-primary)!important;font:var(--hds-button-font)!important;letter-spacing:var(--hds-button-letter-spacing)!important;outline:none;text-decoration:none;-webkit-text-decoration:var(--hds-button-text-decoration,inherit)!important;text-decoration:var(--hds-button-text-decoration,inherit)!important}.-hds-vertical-navigation-item .-hds-accordion-item-wrapper .-hds-accordion-button .headline hds-icon{margin-right:calc(var(--hds-spacing-3) + var(--hds-spacing-1px)*2)}.-hds-vertical-navigation-item .-hds-accordion-item-wrapper .arrow{display:none}.-hds-vertical-navigation-item .-hds-accordion-item-wrapper .content{padding:var(--hds-spacing-0)}.-hds-vertical-navigation-item .-hds-accordion-item-wrapper.disabled .-hds-accordion-button{--hds-icon-color:var(--hds-foreground-inactive);background:#0000;color:var(--hds-foreground-inactive)}.-hds-vertical-navigation-item .-hds-accordion-item-wrapper.disabled .-hds-accordion-button .headline ::slotted(a){color:var(--hds-foreground-inactive)!important;outline:none;pointer-events:none}
`;

// node_modules/@here/hds-vertical-navigation/build/hds-vertical-navigation-sub-list-item.css.js
var styles30 = css`
:host(:focus){outline:0}.-hds-vertical-navigation-sub-list-item.disabled .-hds-list-item-wrapper.disabled{background:#0000;border-color:#0000}.-hds-vertical-navigation-sub-list-item .main-list-wrapper .-hds-list-item-wrapper.disabled:focus{border-color:#0000}.-hds-vertical-navigation-sub-list-item .-hds-list-item-wrapper .text,.-hds-vertical-navigation-sub-list-item .-hds-list-item-wrapper ::slotted(a){color:var(--hds-foreground-secondary)!important;font-family:var(--hds-button-font-family);font-size:var(--hds-button-font-size);line-height:var(--hds-button-line-height);overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.-hds-vertical-navigation-sub-list-item .-hds-list-item-wrapper.selected{background-color:var(--hds-background-object)}.-hds-vertical-navigation-sub-list-item .-hds-list-item-wrapper.selected .text,.-hds-vertical-navigation-sub-list-item .-hds-list-item-wrapper.selected ::slotted(a){color:var(--hds-foreground-primary)!important}.-hds-vertical-navigation-sub-list-item .-hds-list-item-wrapper.disabled .text,.-hds-vertical-navigation-sub-list-item .-hds-list-item-wrapper.disabled ::slotted(a){color:var(--hds-foreground-inactive)!important}.-hds-vertical-navigation-sub-list-item .sub-list-wrapper{padding-left:var(--hds-spacing-2)}
`;

// node_modules/@here/hds-vertical-navigation/build/hds-vertical-navigation-sub-list-item.js
var VerticalNavigationSubListItem = class VerticalNavigationSubListItem2 extends ListItem {
  constructor() {
    super(...arguments);
    this.hasSubList = false;
    this._assignedElementsCache = [];
  }
  static get styles() {
    return [super.styles, styles30];
  }
  firstUpdated() {
    super.firstUpdated();
    this.hasTooltip = false;
    this._slotChange();
  }
  async updated(changedProperties) {
    this._updateAssignedElements();
    if (changedProperties.has("selected")) {
      if (this.selected && !this.disabled) {
        this.dispatchEvent(new CustomEvent("subListItemSelect", {
          detail: { verticalSubListItemId: this.id },
          bubbles: true,
          composed: true
        }));
      }
    }
  }
  _slotChange() {
    this._assignedElementsCache = findElementsInSlot(this.slotElement, VerticalNavigationSubList);
    this._assignedElementsCache.forEach((e) => {
      if (e instanceof VerticalNavigationSubList) {
        e.slot = "sub-list";
      }
    });
    this._updateAssignedElements();
  }
  _updateAssignedElements() {
    this._assignedElementsCache.forEach((e) => {
      if (e instanceof VerticalNavigationSubList) {
        e.disabled = this.disabled;
      }
    });
  }
  render() {
    const classes = {
      disabled: this.disabled || this.parentDisabled
    };
    return html`
      <div
        class="-hds-vertical-navigation-sub-list-item ${classMap(classes)}"
        @click="${this._handleClick}"
        @slotchange="${this._slotChange}"
      >
        <div class="main-list-wrapper">${super.render()}</div>
        <div class="sub-list-wrapper">
          <slot name="sub-list"></slot>
        </div>
      </div>
    `;
  }
  _handleClick(e) {
    e.stopPropagation();
  }
};
__decorate([
  property({ type: Boolean, attribute: false, reflect: true })
], VerticalNavigationSubListItem.prototype, "hasSubList", void 0);
__decorate([
  query(".sub-list-wrapper")
], VerticalNavigationSubListItem.prototype, "subListElement", void 0);
__decorate([
  query("slot:not([name])")
], VerticalNavigationSubListItem.prototype, "slotElement", void 0);
VerticalNavigationSubListItem = __decorate([
  customElement("hds-vertical-navigation-sub-list-item")
], VerticalNavigationSubListItem);

// node_modules/@here/hds-vertical-navigation/build/hds-vertical-navigation-sub-list.css.js
var styles31 = css`
:host(:focus){outline:0}.-hds-vertical-navigation-sub-list.main-sub-list{border-left:2px solid var(--hds-foreground-divider);padding-left:var(--hds-spacing-2)}
`;

// node_modules/@here/hds-vertical-navigation/build/hds-vertical-navigation-sub-list.js
var VerticalNavigationSubList_1;
var VerticalNavigationSubList = VerticalNavigationSubList_1 = class VerticalNavigationSubList2 extends List {
  constructor() {
    super(...arguments);
    this.isMainSubList = false;
  }
  static get styles() {
    return [super.styles, styles31];
  }
  updated(_changedProperties) {
    super.updated(_changedProperties);
  }
  firstUpdated() {
    this._slotChange();
  }
  _slotChange() {
    this.isMainSubList = !(this.parentNode instanceof VerticalNavigationSubList_1) && !(this.parentNode instanceof VerticalNavigationSubListItem);
  }
  render() {
    const classes = {
      "-hds-vertical-navigation-sub-list": true,
      "main-sub-list": this.isMainSubList
    };
    return html`
      <div class="${classMap(classes)}" @slotchange="${this._slotChange}">${super.render()}</div>
    `;
  }
};
__decorate([
  property({ type: Boolean, attribute: false })
], VerticalNavigationSubList.prototype, "isMainSubList", void 0);
__decorate([
  query("slot:not([name])")
], VerticalNavigationSubList.prototype, "slotElement", void 0);
VerticalNavigationSubList = VerticalNavigationSubList_1 = __decorate([
  customElement("hds-vertical-navigation-sub-list")
], VerticalNavigationSubList);

// node_modules/@here/hds-vertical-navigation/build/hds-vertical-navigation-item.js
var VerticalNavigationItem_1;
var VerticalNavigationItem = VerticalNavigationItem_1 = class VerticalNavigationItem2 extends AccordionItem {
  constructor() {
    super(...arguments);
    this.hasSubList = false;
    this.chevron = false;
    this.navMode = "expanded";
    this.avatarUrl = "";
    this.avatarName = "";
    this.iconStyle = "solid";
    this.selected = false;
  }
  static get styles() {
    return [super.styles, styles29];
  }
  firstUpdated(_changedProperties) {
    super.firstUpdated(_changedProperties);
    this.id = this.id ?? `hds-vertical-navigation-item-${++VerticalNavigationItem_1.itemIdCounter}`;
  }
  _slotChange() {
    let hasSubList = false;
    this.slotElement.assignedElements().forEach((e) => {
      if (e instanceof VerticalNavigationSubList) {
        hasSubList = true;
      } else {
        e.slot = "headline";
      }
    });
    this.hasSubList = hasSubList;
  }
  updated(_changedProperties) {
    super.updated(_changedProperties);
    if (!this.disabled && this.selected && _changedProperties.has("selected")) {
      this.dispatchEvent(new CustomEvent("select", {
        detail: { verticalNavItemId: this.id, verticalNavItemIndex: this.index },
        bubbles: true,
        composed: true
      }));
    }
  }
  renderIcon() {
    let icon = nothing;
    if (this.icon) {
      icon = html`
        <hds-icon
          class="icon"
          name="${this.icon}"
          category="${this.iconCategory}"
          icon-style="${this.iconStyle}"
          size="24px"
        ></hds-icon>
      `;
    } else if (this.avatarUrl || this.avatarName) {
      icon = html` <hds-avatar
        size="medium"
        name="${ifDefined(this.avatarName)}"
        image-url="${ifDefined(this.avatarUrl)}"
      ></hds-avatar>`;
    }
    return icon;
  }
  render() {
    const classes = {
      "has-sub-list": this.hasSubList,
      "has-chevron": this.chevron,
      "has-avatar": this.avatarUrl || this.avatarName,
      "nav-expanded": this.navMode === "expanded",
      "nav-collapsed": this.navMode === "collapsed",
      selected: this.selected
    };
    return html`
      <div
        class="-hds-vertical-navigation-item ${classMap(classes)}"
        aria-selected="${ifDefined(this.selected)}"
        tabindex="0"
        @slotchange="${this._slotChange}"
        @click="${this._handleClick}"
      >
        ${super.render()}
      </div>
    `;
  }
  async _handleClick(e) {
    e.stopPropagation();
    if (!this.disabled)
      this.selected = true;
  }
};
VerticalNavigationItem.itemIdCounter = 0;
__decorate([
  property({ type: Boolean, attribute: false })
], VerticalNavigationItem.prototype, "hasSubList", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], VerticalNavigationItem.prototype, "chevron", void 0);
__decorate([
  property({ type: String, attribute: false })
], VerticalNavigationItem.prototype, "navMode", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "avatar-url" })
], VerticalNavigationItem.prototype, "avatarUrl", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "avatar-name" })
], VerticalNavigationItem.prototype, "avatarName", void 0);
__decorate([
  property({ type: String, attribute: "icon-style" })
], VerticalNavigationItem.prototype, "iconStyle", void 0);
__decorate([
  property({ type: Boolean, attribute: true, reflect: true })
], VerticalNavigationItem.prototype, "selected", void 0);
__decorate([
  query("slot:not([name])")
], VerticalNavigationItem.prototype, "slotElement", void 0);
VerticalNavigationItem = VerticalNavigationItem_1 = __decorate([
  customElement("hds-vertical-navigation-item")
], VerticalNavigationItem);

// node_modules/@here/hds-vertical-navigation/build/hds-vertical-navigation.js
var VerticalNavigation = class VerticalNavigation2 extends Accordion {
  constructor() {
    super(...arguments);
    this.chevron = false;
    this.navMode = "expanded";
    this._verticalNavAssignedElementsCache = [];
  }
  static get styles() {
    return [super.styles, styles28];
  }
  firstUpdated(_changedProperties) {
    super.firstUpdated(_changedProperties);
    if (this.chevron) {
      this.arrowPosition = "start";
    }
    this._slotChange();
  }
  _slotChange() {
    this._verticalNavAssignedElementsCache = findElementsInSlot(this.slotElement, VerticalNavigationItem);
    this._updateVerticalNavItems();
  }
  updated() {
    super.updated();
    this._updateVerticalNavItems();
  }
  render() {
    const classes = {
      "-hds-vertical-navigation": true,
      "nav-expanded": this.navMode === "expanded",
      "nav-collapsed": this.navMode === "collapsed"
    };
    return html`
      <div
        class="${classMap(classes)}"
        @select="${this._handleSelected}"
        @subListItemSelect="${this._handleSelected}"
        @slotchange="${this._slotChange}"
      >
        ${super.render()}
      </div>
    `;
  }
  _updateVerticalNavItems() {
    this._verticalNavAssignedElementsCache.forEach((e) => {
      if (e instanceof VerticalNavigationItem) {
        e.chevron = this.chevron;
        e.navMode = this.navMode;
      }
    });
  }
  async _handleSelected(evt) {
    evt.stopPropagation();
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("select", {
      detail: evt.detail,
      bubbles: true,
      composed: true
    }));
  }
};
__decorate([
  property({ type: Boolean })
], VerticalNavigation.prototype, "chevron", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "nav-mode" })
], VerticalNavigation.prototype, "navMode", void 0);
VerticalNavigation = __decorate([
  customElement("hds-vertical-navigation")
], VerticalNavigation);

// node_modules/@here/hds-navbar/build/hds-navbar-side.css.js
var styles32 = css`
:host .content,:host(:focus){outline:0}:host(hds-navbar-side[variant=vertical][panel-interaction=toggle]) .-hds-panel-wrapper.open{grid-template-columns:1fr}.hds-navbar-side-container{background:var(--hds-background-secondary);box-shadow:inset -.0625rem 0 0 var(--hds-background-press);box-sizing:border-box;display:flex;flex-direction:column;height:100%;justify-content:space-between;padding:var(--hds-spacing-2) var(--hds-spacing-0)}.hds-navbar-side-container.collapsed{width:4.5rem}.hds-navbar-side-container.collapsed .hds-navbar-side--logo,.hds-navbar-side-container.collapsed .hds-navbar-side--toggle-icon{margin-right:var(--hds-spacing-0)}.hds-navbar-side-container.collapsed .hds-navbar-side--toggle-icon{transform:rotate(180deg)}.hds-navbar-side-container.collapsed .hds-navbar-side--title,.hds-navbar-side-container.collapsed .hds-navbar-side--toggle-text{display:none}.hds-navbar-side-container .hds-navbar-side--header,.hds-navbar-side-container .hds-navbar-side--toggle{align-items:center;display:flex}.hds-navbar-side-container .hds-navbar-side--header{height:4rem;padding:var(--hds-spacing-0) calc(var(--hds-spacing-4) + 4px)}.hds-navbar-side-container .hds-navbar-side--header.hide-header{height:0}.hds-navbar-side-container .hds-navbar-side--toggle{background:none;border:.125rem solid #0000;box-sizing:border-box;cursor:pointer;height:3.5rem;padding:var(--hds-spacing-0) var(--hds-spacing-3) var(--hds-spacing-0) var(--hds-spacing-6);width:100%}.hds-navbar-side-container .hds-navbar-side--toggle:hover{background:var(--hds-background-hover)}.hds-navbar-side-container .hds-navbar-side--toggle :focus,.hds-navbar-side-container .hds-navbar-side--toggle :focus:not(:focus-visible){outline:0}.hds-navbar-side-container .hds-navbar-side--toggle:focus-visible{outline:var(--hds-object-focused) solid .125rem;outline-offset:-.125rem}.hds-navbar-side-container .hds-navbar-side--logo{align-items:center;display:flex;margin-right:var(--hds-spacing-3)}.hds-navbar-side-container .hds-navbar-side--title,.hds-navbar-side-container .hds-navbar-side--title ::slotted(*),.hds-navbar-side-container .hds-navbar-side--toggle-text,.hds-navbar-side-container .hds-navbar-side--toggle-text ::slotted(*){color:var(--hds-foreground-primary)!important;overflow:hidden;text-decoration:none!important;text-overflow:ellipsis;white-space:nowrap}.hds-navbar-side-container .hds-navbar-side--title{color:var(--hds-foreground-primary);font:var(--hds-subheadline-font);letter-spacing:var(--hds-subheadline-letter-spacing);-webkit-text-decoration:var(--hds-subheadline-text-decoration,inherit);text-decoration:var(--hds-subheadline-text-decoration,inherit)}.hds-navbar-side-container .hds-navbar-side--title ::slotted(a){color:var(--hds-foreground-primary);text-decoration:none}.hds-navbar-side-container .hds-navbar-side--toggle-icon{--hds-icon-color:var(--hds-foreground-secondary);margin-right:calc(var(--hds-spacing-3) + var(--hds-spacing-1px)*2)}.hds-navbar-side-container .hds-navbar-side--toggle-text{color:var(--hds-foreground-secondary);font-family:var(--hds-button-font-family);font-size:var(--hds-button-font-size);line-height:var(--hds-button-line-height)}.hds-navbar-side-container .hds-navbar-side--main{flex:1;overflow:auto}
`;

// node_modules/@here/hds-navbar/build/hds-navbar-side.js
var NavBarSide = class NavBarSide2 extends Panel {
  constructor() {
    super(...arguments);
    this.hideHeader = false;
    this.navbarSideCollapsed = false;
    this.hideToggle = false;
    this.toggleText = "Hide Menu";
  }
  static get styles() {
    return [super.styles, styles32];
  }
  firstUpdated() {
    super.firstUpdated();
    const slotLogoContent = this.slotLogoEl.assignedNodes({ flatten: true }) || [];
    const slotTitleContent = this.slotTitleEl.assignedNodes({ flatten: true }) || [];
    this.hideHeader = !(slotLogoContent.length > 0 || slotTitleContent.length > 0);
  }
  toggle() {
    this._toggleNavbar();
  }
  collapse() {
    if (!this.navbarSideCollapsed) {
      this._toggleNavbar();
    }
  }
  expand() {
    if (this.navbarSideCollapsed) {
      this._toggleNavbar();
    }
  }
  async updated(changedProperties) {
    if (changedProperties.has("navbarSideCollapsed") && changedProperties.get("navbarSideCollapsed") !== void 0) {
      this.dispatchEvent(new CustomEvent("change", {
        detail: { collapsed: this.navbarSideCollapsed },
        bubbles: true
      }));
    }
  }
  render() {
    return super.renderPanel(this.renderNavbarSide());
  }
  renderToggleButton() {
    if (!this.hideToggle) {
      return html`
        <button class="hds-navbar-side--toggle" @click="${this._toggleNavbar}">
          <hds-icon
            class="hds-navbar-side--toggle-icon"
            name="hide-menu"
            size="24px"
            icon-style="outline"
          ></hds-icon>
          <div class="hds-navbar-side--toggle-text">${this.toggleText}</div>
        </button>
      `;
    }
    return nothing;
  }
  _handleNavItemClick(e) {
    const elem = e.target;
    if (elem instanceof VerticalNavigationItem) {
      const subListArr = elem.querySelectorAll("hds-vertical-navigation-sub-list") || [];
      if (this.navbarSideCollapsed && subListArr.length > 0) {
        const slotMainContent = this.slotMainEl.assignedElements({
          flatten: true
        });
        const slotFooterContent = this.slotFooterEl.assignedElements({
          flatten: true
        });
        this._setNavMode(slotMainContent, slotFooterContent, "expanded");
        this.navbarSideCollapsed = false;
      }
    }
  }
  _toggleNavbar(e) {
    var _a6;
    e && e.stopPropagation();
    this.navbarSideCollapsed = !this.navbarSideCollapsed;
    const slotMainContent = this.slotMainEl.assignedElements({ flatten: true });
    const slotFooterContent = this.slotFooterEl.assignedElements({
      flatten: true
    });
    const navMode = this.navbarSideCollapsed ? "collapsed" : "expanded";
    this._setNavMode(slotMainContent, slotFooterContent, navMode);
    if (this.navbarSideCollapsed) {
      const navListItem = [
        ...slotMainContent[0].querySelectorAll("hds-vertical-navigation-item"),
        ...slotFooterContent[0].querySelectorAll("hds-vertical-navigation-item")
      ];
      for (let i = 0; i < navListItem.length; i += 1) {
        (_a6 = navListItem[i]) == null ? void 0 : _a6.removeAttribute("expanded");
      }
    }
  }
  renderNavbarSide() {
    const classes = {
      collapsed: this.navbarSideCollapsed
    };
    const headerClasses = {
      "hide-header": this.hideHeader
    };
    return html`
      <div class="hds-navbar-side-container ${classMap(classes)}" role="navigation">
        <div class="hds-navbar-side--header ${classMap(headerClasses)}">
          <div class="hds-navbar-side--logo">
            <slot name="logo"></slot>
          </div>
          <div class="hds-navbar-side--title">
            <slot name="title"></slot>
          </div>
        </div>
        <div class="hds-navbar-side--main" @click="${this._handleNavItemClick}">
          <slot name="main"></slot>
        </div>
        <div class="hds-navbar-side--footer" @click="${this._handleNavItemClick}">
          <slot name="footer"></slot>
          ${this.renderToggleButton()}
        </div>
      </div>
    `;
  }
  _setNavMode(slotMainContent, slotFooterContent, navMode) {
    var _a6, _b5, _c4, _d3;
    if (slotMainContent && slotMainContent.length) {
      if (slotMainContent[0] instanceof VerticalNavigation) {
        (_a6 = slotMainContent[0]) == null ? void 0 : _a6.setAttribute("nav-mode", navMode);
      } else {
        (_b5 = slotMainContent[0].querySelector("hds-vertical-navigation")) == null ? void 0 : _b5.setAttribute("nav-mode", navMode);
      }
    }
    if (slotFooterContent && slotFooterContent.length) {
      if (slotFooterContent[0] instanceof VerticalNavigation) {
        (_c4 = slotFooterContent[0]) == null ? void 0 : _c4.setAttribute("nav-mode", navMode);
      } else {
        (_d3 = slotFooterContent[0].querySelector("hds-vertical-navigation")) == null ? void 0 : _d3.setAttribute("nav-mode", navMode);
      }
    }
  }
};
__decorate([
  property({ type: Boolean, attribute: false })
], NavBarSide.prototype, "hideHeader", void 0);
__decorate([
  property({ type: Boolean, reflect: true, attribute: "collapsed" })
], NavBarSide.prototype, "navbarSideCollapsed", void 0);
__decorate([
  property({ type: Boolean, attribute: "hide-toggle" })
], NavBarSide.prototype, "hideToggle", void 0);
__decorate([
  property({ type: String, attribute: "toggle-text" })
], NavBarSide.prototype, "toggleText", void 0);
__decorate([
  query("slot[name=logo]")
], NavBarSide.prototype, "slotLogoEl", void 0);
__decorate([
  query("slot[name=title]")
], NavBarSide.prototype, "slotTitleEl", void 0);
__decorate([
  query("slot[name=main]")
], NavBarSide.prototype, "slotMainEl", void 0);
__decorate([
  query("slot[name=footer]")
], NavBarSide.prototype, "slotFooterEl", void 0);
NavBarSide = __decorate([
  customElement("hds-navbar-side")
], NavBarSide);

// node_modules/@here/hds-react-components/NavBar/HDSNavBarTop.js
new NavBarTop();
var HDSNavBarTop = React21.forwardRef((props, ref) => {
  const { children, className, variant, ...rest } = props;
  return React21.createElement("hds-navbar-top", { ref, ...variant && { variant }, ...className && { class: className }, ...rest }, children);
});
HDSNavBarTop.defaultProps = {
  variant: "default"
};
var HDSNavBarTop_default = HDSNavBarTop;

// node_modules/@here/hds-react-components/NavBar/HDSNavBarSide.js
var import_react18 = __toESM(require_react(), 1);
var React22 = __toESM(require_react(), 1);
new NavBarSide();
var HDSNavBarSide = React22.forwardRef((props, ref) => {
  const { title, collapsed, logo, main: main2, footer, className, toggleText, hideToggle, onChange: onChange2, ...rest } = props;
  const innerRef = (0, import_react18.useRef)(null);
  (0, import_react18.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onChange2 && onChange2(e.detail);
  };
  (0, import_react18.useEffect)(() => {
    if (innerRef.current) {
      if (onChange2) {
        innerRef.current.addEventListener("change", _handleChange);
      }
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, innerRef]);
  return React22.createElement(
    "hds-navbar-side",
    { ref: innerRef, ...collapsed && { collapsed }, ...hideToggle && { "hide-toggle": hideToggle }, ...className && { class: className }, ...toggleText && { "toggle-text": toggleText }, ...rest },
    logo && React22.createElement("div", { slot: "logo" }, logo),
    title && React22.createElement("div", { slot: "title" }, title),
    main2 && React22.createElement("div", { slot: "main" }, main2),
    footer && React22.createElement("div", { slot: "footer" }, footer)
  );
});
HDSNavBarSide.defaultProps = {
  toggleText: "Hide Menu",
  hideToggle: false
};
var HDSNavBarSide_default = HDSNavBarSide;

// node_modules/@here/hds-react-components/NavBar/HDSProfileMenu.js
var import_react19 = __toESM(require_react(), 1);
new ProfileMenu();
var HDSProfileMenu = import_react19.default.forwardRef(({ profileName, profileEmail, avatarImageUrl, open, noTrigger, signup, onChange: onChange2, children, className, ...rest }, ref) => {
  const innerRef = import_react19.default.useRef(null);
  (0, import_react19.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onChange2 && onChange2(e.detail);
  };
  (0, import_react19.useEffect)(() => {
    if (onChange2 && innerRef.current) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, innerRef]);
  return import_react19.default.createElement("hds-profile-menu", { ...profileName && { "profile-name": profileName }, ...profileEmail && { "profile-email": profileEmail }, ...avatarImageUrl && { "avatar-image-url": avatarImageUrl }, ...open && { open }, ...signup && { signup }, ...noTrigger && { "no-trigger": noTrigger }, ...className && { class: className }, ref: innerRef, ...rest }, children);
});
HDSProfileMenu.defaultProps = {
  profileName: "",
  profileEmail: "",
  open: false,
  signup: false,
  noTrigger: false,
  avatarImageUrl: ""
};
var HDSProfileMenu_default = HDSProfileMenu;

// node_modules/@here/hds-react-components/Overlay/HDSOverlay.js
var React24 = __toESM(require_react(), 1);

// node_modules/@here/hds-overlay/build/hds-overlay.css.js
var styles33 = css`
:host(:focus){outline:0}.wrapper{-webkit-backdrop-filter:var(--hds-overlay-blur);backdrop-filter:var(--hds-overlay-blur);background-color:var(--hds-onlightcolor-secondary);bottom:0;height:100%;left:0;position:fixed;right:0;top:0;width:100%;z-index:999}
`;

// node_modules/@here/hds-overlay/build/hds-overlay.js
var Overlay = class Overlay2 extends LitElement {
  connectedCallback() {
    super.connectedCallback();
    this.shadowRoot.ownerDocument.body.classList.add("hds-noscroll");
  }
  disconnectedCallback() {
    super.disconnectedCallback();
    this.shadowRoot.ownerDocument.body.classList.remove("hds-noscroll");
  }
  render() {
    return html`
      <div class="wrapper">
        <slot></slot>
      </div>
    `;
  }
};
Overlay.styles = styles33;
Overlay.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
Overlay = __decorate([
  customElement("hds-overlay")
], Overlay);

// node_modules/@here/hds-react-components/Overlay/HDSOverlay.js
new Overlay();
var HDSOverlay = React24.forwardRef((props, ref) => {
  const { children, className, ...rest } = props;
  return React24.createElement("hds-overlay", { ref, ...className && { class: className }, ...rest }, children);
});
var HDSOverlay_default = HDSOverlay;

// node_modules/@here/hds-radio/build/hds-radio-group.css.js
var styles34 = css`
:host(hds-radio-group){outline:none!important}:host(:focus){outline:0}hds-label{display:block;margin-bottom:var(--hds-spacing-4)}.wrapper{box-sizing:border-box;display:flex;flex-wrap:wrap}.wrapper ::slotted(hds-radio){margin-right:var(--hds-spacing-7)}.wrapper ::slotted(hds-radio:last-of-type){margin-right:var(--hds-spacing-0)}.wrapper.-vertical{flex-direction:column}.wrapper.-vertical ::slotted(hds-radio){margin-bottom:var(--hds-spacing-2);margin-right:var(--hds-spacing-0)}.wrapper.-vertical ::slotted(hds-radio:last-of-type){margin-bottom:var(--hds-spacing-0)}
`;

// node_modules/@here/hds-radio/build/hds-radio.css.js
var styles35 = css`
:host(hds-radio){outline:none!important}:host(:focus){outline:0}.wrapper{align-items:center;box-sizing:border-box;display:flex;outline:none!important}.wrapper>input{clip:rect(0,0,0,0);border:0;height:.0625rem;margin:calc(var(--hds-spacing-1px)*-1);overflow:hidden;padding:var(--hds-spacing-0);position:absolute;visibility:inherit;white-space:nowrap;width:1px}.wrapper>input:focus{outline:none}.wrapper>.radio-container{align-items:center;background:var(--hds-foreground-tertiary);border-radius:1.25rem;box-sizing:border-box;display:flex;height:1.25rem;justify-content:center;min-height:1.25rem;min-width:1.25rem;transition:background var(--hds-transition-duration-short);width:1.25rem}.wrapper>.radio-container .dot{background:#0000;border:.5625rem solid var(--hds-background-secondary);border-radius:1.5rem;box-sizing:border-box;height:1rem;transition:border var(--hds-transition-duration-short);width:1rem}@media (resolution:1.25dppx){.wrapper>.radio-container .dot{border:.53125rem solid var(--hds-background-secondary);height:1.0625rem;width:1.0625rem}}.wrapper.hds-radio--size-small>.radio-container{height:1rem;min-height:1rem;min-width:1rem;width:1rem}.wrapper.hds-radio--size-small>.radio-container div.dot{border-width:.4375rem;height:.875rem;width:.875rem}.wrapper.hds-radio--size-small.-checked>.radio-container{background:var(--hds-action)}.wrapper.hds-radio--size-small.-checked>.radio-container .dot{border-width:.1875rem}.wrapper .text-container{margin-left:var(--hds-spacing-2)}.wrapper .label-text{color:var(--hds-foreground-primary)}.wrapper .description-text,.wrapper .label-text{font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit);transition:color var(--hds-transition-duration-short)}.wrapper .description-text{color:var(--hds-foreground-secondary);display:block}.wrapper .description-text:not(:empty){margin-top:var(--hds-spacing-2)}.wrapper:hover>.radio-container{background:var(--hds-foreground-tertiary-hover)}.wrapper>input:focus-visible+.radio-container{box-shadow:0 0 0 .125rem var(--hds-object-focused)}.wrapper.-checked>.radio-container{background:var(--hds-action)}.wrapper.-checked>.radio-container .dot{border-width:.3125rem;height:1.125rem;width:1.125rem}.wrapper.disabled>.radio-container{background:var(--hds-foreground-tertiary-disabled)!important}.wrapper.disabled .description-text,.wrapper.disabled .label-text{color:var(--hds-foreground-tertiary-disabled)!important}
`;

// node_modules/@here/hds-radio/build/hds-radio.js
var radioIdCounter = 0;
var Radio = class Radio2 extends BaseElement {
  constructor() {
    super(...arguments);
    this.isTabbable = true;
    this.checked = false;
    this.disabled = false;
    this.isRadioGroupDisabled = false;
    this.id = "";
    this.name = "";
    this.value = "";
    this.ariaLabel = "";
    this.tabIndex = -1;
    this.size = "medium";
    this.autocomplete = "";
    this._handleKeydown = (e) => {
      let flag = false;
      switch (e.key) {
        case "ArrowRight":
        case "ArrowDown":
          this.dispatchEvent(new CustomEvent("selectNext", { detail: this.id, bubbles: true }));
          flag = true;
          break;
        case "ArrowLeft":
        case "ArrowUp":
          this.dispatchEvent(new CustomEvent("selectPrevious", { detail: this.id, bubbles: true }));
          flag = true;
          break;
      }
      if (flag) {
        e.stopPropagation();
        e.preventDefault();
      }
    };
  }
  connectedCallback() {
    super.connectedCallback();
    this.addEventListener("keydown", this._handleKeydown);
  }
  disconnectedCallback() {
    super.disconnectedCallback();
    this.removeEventListener("keydown", this._handleKeydown);
  }
  focus() {
    this.formElement.focus();
  }
  defaultValue() {
    return this.formElement.defaultValue;
  }
  defaultChecked() {
    return this.formElement.defaultChecked;
  }
  firstUpdated() {
    this.id = this.id || `hds-radio-${++radioIdCounter}`;
    this.name = this.name || "hds-radio-group";
  }
  updated(_changedProperties) {
    if (this.checked && _changedProperties.get("checked") !== void 0) {
      this._handleClick();
    }
  }
  render() {
    const classes = {
      wrapper: true,
      disabled: this.disabled || this.isRadioGroupDisabled,
      "-checked": this.checked,
      "hds-radio--size-small": this.size === "small"
    };
    return html`
      <label class="${classMap(classes)}">
        <input
          type="radio"
          autocomplete="${ifDefined(this.autocomplete || void 0)}"
          tabindex="${this.tabIndex}"
          .checked="${this.checked}"
          id="${ifDefined(this.id === "" ? void 0 : this.id)}"
          name="${ifDefined(this.name === "" ? void 0 : this.name)}"
          .value="${this.value}"
          ?disabled="${this.disabled || this.isRadioGroupDisabled}"
          aria-label="${ifDefined(this.ariaLabel)}"
          @click="${this._handleClick}"
        />
        <div class="radio-container">
          <div class="dot"></div>
        </div>
        <div class="text-container">
          <slot class="label-text"></slot>
          <slot name="description" class="description-text"></slot>
        </div>
      </label>
    `;
  }
  _handleClick(e) {
    if (e)
      e.stopPropagation();
    this.dispatchEvent(new CustomEvent("change", {
      detail: { id: this.id, name: this.name, value: this.value },
      bubbles: true,
      composed: true
    }));
  }
};
Radio.styles = styles35;
Radio.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: Boolean, reflect: true })
], Radio.prototype, "checked", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Radio.prototype, "disabled", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], Radio.prototype, "isRadioGroupDisabled", void 0);
__decorate([
  property({ type: String })
], Radio.prototype, "id", void 0);
__decorate([
  property({ type: String })
], Radio.prototype, "name", void 0);
__decorate([
  property({ type: String })
], Radio.prototype, "value", void 0);
__decorate([
  property({ type: String, attribute: "aria-label" })
], Radio.prototype, "ariaLabel", void 0);
__decorate([
  property({ type: Number, attribute: "tabindex" })
], Radio.prototype, "tabIndex", void 0);
__decorate([
  property({ type: String, attribute: false })
], Radio.prototype, "size", void 0);
__decorate([
  property({ type: String })
], Radio.prototype, "autocomplete", void 0);
__decorate([
  query("input")
], Radio.prototype, "formElement", void 0);
Radio = __decorate([
  customElement("hds-radio")
], Radio);

// node_modules/@here/hds-radio/build/hds-radio-group.js
var id = 1;
var RadioGroup = class RadioGroup2 extends LitElement {
  constructor() {
    super(...arguments);
    this.vertical = false;
    this.disabled = false;
    this.name = "";
    this.value = "";
    this.size = "medium";
    this._setFocusableRadio = () => {
      const selectedRadio = this._getSelectedRadio();
      const currentRadio = selectedRadio || this._getRadios()[0];
      if (currentRadio && !this.disabled && !currentRadio.disabled) {
        currentRadio.tabIndex = 0;
      }
    };
    this._handleSelectNext = (e) => {
      e.stopPropagation();
      this._selectRadioByIndexPredicate(e.detail, (currentRadioIndex, radiosCount) => currentRadioIndex < radiosCount - 1 ? currentRadioIndex + 1 : 0);
    };
    this._handleSelectPrevious = (e) => {
      e.stopPropagation();
      this._selectRadioByIndexPredicate(e.detail, (currentRadioIndex, radiosCount) => currentRadioIndex > 0 ? currentRadioIndex - 1 : radiosCount - 1);
    };
  }
  connectedCallback() {
    super.connectedCallback();
    id++;
    if (this.label) {
      this.labelId = `hds-radio-group-label-${id}`;
    }
    if (this.secondaryLabel) {
      this.secondaryLabelId = `hds-radio-group-secondary-label-${id}`;
    }
  }
  firstUpdated() {
    if (this.value === "" || !this.value) {
      const selectedRadio = this._getSelectedRadio();
      if (selectedRadio)
        this.value = selectedRadio.value;
    } else {
      this._setSelectedRadioByValue(this.value);
    }
    if (this.disabled) {
      this._setRadiosDisabled();
    }
    this._setFocusableRadio();
    this._setRadioSize(this.size);
  }
  updated(_changedProperties) {
    if (_changedProperties.has("disabled")) {
      this._setRadiosDisabled();
    }
    if (_changedProperties.has("value")) {
      this._setSelectedRadioByValue(this.value);
    }
  }
  renderLabel() {
    if (this.label || this.secondaryLabel) {
      return html`
        <hds-label id="${this.labelId}">
          ${this.label} <span slot="secondary">${this.secondaryLabel}</span>
        </hds-label>
      `;
    }
    return nothing;
  }
  getAriaLabelledBy() {
    let ariaLabelledBy = "";
    ariaLabelledBy += this.label ? this.labelId : "";
    ariaLabelledBy += this.secondaryLabel ? ` ${this.secondaryLabelId}` : "";
    return ariaLabelledBy;
  }
  render() {
    const classes = {
      wrapper: true,
      "-vertical": this.vertical
    };
    const _ariaLabelledBy = this.getAriaLabelledBy();
    return html`
      ${this.label || this.secondaryLabel ? this.renderLabel() : nothing}
      <div
        role="radiogroup"
        class="${classMap(classes)}"
        @change="${this._handleSelectedRadio}"
        @selectNext="${this._handleSelectNext}"
        @selectPrevious="${this._handleSelectPrevious}"
        aria-label="${ifDefined(this.getAttribute("aria-label"))}"
        aria-labelledby="${_ariaLabelledBy}"
      >
        <slot></slot>
      </div>
    `;
  }
  /**
   * Captures the event emitted by a hds-radio component and emits a new event with the index of the selected radio instead
   * of the emitted radio id.
   *
   * @param evt
   */
  _handleSelectedRadio(evt) {
    evt.stopPropagation();
    const { detail: { id: radioId, value } } = evt;
    const currentSelectedRadio = this._getSelectedRadio();
    const newSelectedRadioIndex = this._getRadioIndex(radioId);
    if (newSelectedRadioIndex !== -1) {
      this._setSelectedRadio(radioId);
      this.value = value;
      if ((currentSelectedRadio == null ? void 0 : currentSelectedRadio.id) !== radioId) {
        this.dispatchEvent(new CustomEvent("change", {
          detail: { value: this.value, name: this.name, id: this.id, index: newSelectedRadioIndex },
          bubbles: true,
          composed: true
        }));
      }
    }
  }
  _getRadioIndex(radioId) {
    return this._getRadios().findIndex((radio) => radio.id === radioId);
  }
  _getSelectedRadio() {
    return this._getRadios().find((radio) => radio.checked);
  }
  _setSelectedRadio(radioId) {
    const radios = this._getRadios();
    radios.forEach((radio) => {
      if (radio.id === radioId) {
        radio.checked = true;
        radio.tabIndex = 0;
      } else {
        radio.checked = false;
        radio.tabIndex = -1;
      }
    });
  }
  _setSelectedRadioByValue(value) {
    const radios = this._getRadios();
    radios.forEach((radio) => {
      if (radio.value === value) {
        radio.checked = true;
        radio.tabIndex = 0;
      } else {
        radio.checked = false;
        radio.tabIndex = -1;
      }
    });
  }
  _setRadioSize(size2) {
    const radioItems = this._getRadios();
    for (let i = 0; i < radioItems.length; i++) {
      radioItems[i].size = size2;
    }
  }
  _setRadiosDisabled() {
    const radioItems = this._getRadios();
    for (let i = 0; i < radioItems.length; i++) {
      radioItems[i].isRadioGroupDisabled = this.disabled;
    }
  }
  _getRadios() {
    return this.radiosSlot.assignedNodes({ flatten: true }).filter((e) => e instanceof Radio);
  }
  _selectRadioByIndexPredicate(currentRadioId, nextIndexPredicate) {
    const radios = this._getRadios();
    const currentRadioIndex = this._getRadioIndex(currentRadioId);
    if (currentRadioIndex !== -1) {
      const newSelectedRadioIndex = nextIndexPredicate(currentRadioIndex, radios.length);
      const newSelectedRadio = radios[newSelectedRadioIndex];
      if (!this.disabled && !newSelectedRadio.disabled) {
        newSelectedRadio.focus();
        this.value = newSelectedRadio.value;
        this.dispatchEvent(new CustomEvent("change", {
          detail: {
            value: newSelectedRadio.value,
            index: newSelectedRadioIndex,
            name: this.name,
            id: this.id
          },
          bubbles: true,
          composed: true
        }));
      }
    }
  }
};
RadioGroup.styles = styles34;
RadioGroup.formAssociated = true;
RadioGroup.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: Boolean, reflect: true })
], RadioGroup.prototype, "vertical", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], RadioGroup.prototype, "disabled", void 0);
__decorate([
  property({ type: String })
], RadioGroup.prototype, "name", void 0);
__decorate([
  property({ type: String, reflect: true })
], RadioGroup.prototype, "value", void 0);
__decorate([
  property({ type: String })
], RadioGroup.prototype, "label", void 0);
__decorate([
  property({ type: String, attribute: "secondary-label" })
], RadioGroup.prototype, "secondaryLabel", void 0);
__decorate([
  property({ type: String })
], RadioGroup.prototype, "size", void 0);
__decorate([
  query("slot")
], RadioGroup.prototype, "radiosSlot", void 0);
RadioGroup = __decorate([
  customElement("hds-radio-group")
], RadioGroup);

// node_modules/@here/hds-react-components/Radio/HDSRadioGroup.js
var import_react20 = __toESM(require_react(), 1);
new RadioGroup();
var HDSRadioGroup = import_react20.default.forwardRef(({ children, className, onChange: onChange2, disabled, vertical, name, value, label, size: size2, secondaryLabel, ...rest }, ref) => {
  const [groupValue, setGroupValue] = (0, import_react20.useState)(value);
  const innerRef = (0, import_react20.useRef)(null);
  (0, import_react20.useImperativeHandle)(ref, () => innerRef.current);
  const _handleSelected = (e) => {
    if (e.target !== innerRef.current)
      return;
    setGroupValue(e.detail.value);
    onChange2 && onChange2(e);
  };
  (0, import_react20.useEffect)(() => {
    if (innerRef.current) {
      innerRef.current.addEventListener("change", _handleSelected);
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleSelected);
    };
  }, [onChange2, innerRef]);
  return import_react20.default.createElement("hds-radio-group", { ...disabled && { disabled: true }, ...vertical && { vertical: true }, ...label && { label }, ...size2 && { size: size2 }, ...secondaryLabel && { "secondary-label": secondaryLabel }, name, ...className && { class: className }, value: groupValue, ref: innerRef, ...rest }, children);
});
HDSRadioGroup.defaultProps = {
  vertical: false,
  disabled: false,
  value: "",
  label: void 0,
  secondaryLabel: void 0,
  size: "medium"
};
var HDSRadioGroup_default = HDSRadioGroup;

// node_modules/@here/hds-react-components/Radio/HDSRadio.js
var import_react21 = __toESM(require_react(), 1);
new Radio();
var HDSRadio = import_react21.default.forwardRef((props, ref) => {
  const { checked, defaultChecked, disabled, id: id2, name, value, size: size2, description, className, children, onChange: onChange2, autocomplete, ...rest } = props;
  const innerRef = (0, import_react21.useRef)(null);
  (0, import_react21.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onChange2 && onChange2(e);
  };
  (0, import_react21.useEffect)(() => {
    if (innerRef.current && onChange2) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, innerRef]);
  return import_react21.default.createElement(
    "hds-radio",
    { ...checked && { checked }, ...defaultChecked && { defaultChecked }, ...disabled && { disabled }, ...className && { class: className }, ...autocomplete && { autocomplete }, ...size2 && { size: size2 }, id: id2, name, value, ref: innerRef, ...rest },
    children,
    description && import_react21.default.createElement("span", { slot: "description" }, description)
  );
});
HDSRadio.defaultProps = {
  checked: false,
  disabled: false,
  size: "medium",
  value: "",
  name: "",
  description: "",
  autocomplete: ""
};
var HDSRadio_default = HDSRadio;

// node_modules/@here/hds-react-components/Confirm/HDSConfirm.js
var import_react22 = __toESM(require_react(), 1);

// node_modules/@here/hds-modal/build/hds-tabbable.js
function getHDSTabblableComponents(node2) {
  const tabbableNodes = [];
  if (!node2)
    return [];
  node2.childNodes.forEach((childNode) => {
    if (childNode.isTabbable) {
      tabbableNodes.push(childNode);
    }
    if (childNode.hasChildNodes()) {
      childNode.childNodes.forEach((grandchildNode) => {
        tabbableNodes.push(...getHDSTabblableComponents(grandchildNode));
      });
    }
  });
  return tabbableNodes;
}

// node_modules/@here/hds-grid/build/hds-grid.js
var DefaultBreakpoints = [
  {
    name: "mobile",
    maxWidth: 600,
    rowGap: 10,
    columnGap: 10,
    columns: 4
  },
  {
    name: "tablet",
    minWidth: 601,
    maxWidth: 1024,
    rowGap: 10,
    columnGap: 10,
    columns: 6
  },
  {
    name: "desktop-small",
    minWidth: 1025,
    maxWidth: 1440,
    rowGap: 10,
    columnGap: 10,
    columns: 12
  },
  {
    name: "desktop-medium",
    minWidth: 1441,
    maxWidth: 1680,
    rowGap: 10,
    columnGap: 10,
    columns: 12
  },
  {
    name: "desktop-large",
    minWidth: 1681,
    rowGap: 10,
    columnGap: 10,
    columns: 12
  }
];
var HDSGrid = class _HDSGrid {
  static getWidthForBreakpoint(name, el) {
    if (!this.breakpointNames.includes(name)) {
      console.error("Invalid breakpoint name");
    }
    const { minWidth } = _HDSGrid.breakpoint(name, el);
    if (minWidth && typeof minWidth === "number") {
      const baseFontSize = parseInt(getCSSVariable("--hds-font-baseline", el), 10);
      return minWidth * baseFontSize;
    }
    return minWidth;
  }
  static breakpoints(el) {
    const brs = {};
    for (const name of this.breakpointNames) {
      brs[name] = _HDSGrid.breakpoint(name, el);
    }
    return brs;
  }
  static breakpoint(name, el) {
    return {
      name,
      columns: parseInt(getCSSVariable(`--hds-grid-columns-${name}`, el), 10),
      minWidth: parseInt(getCSSVariable(`--hds-grid-min-width-${name}`, el), 10),
      maxWidth: parseInt(getCSSVariable(`--hds-grid-max-width-${name}`, el), 10),
      columnGap: parseInt(getCSSVariable(`--hds-grid-column-gap-${name}`, el), 10),
      rowGap: parseInt(getCSSVariable(`--hds-grid-row-gap-${name}`, el), 10)
    };
  }
};
HDSGrid.breakpointNames = DefaultBreakpoints.map((e) => e.name);

// node_modules/@here/hds-modal/node_modules/tabbable/dist/index.esm.js
var candidateSelectors = ["input:not([inert])", "select:not([inert])", "textarea:not([inert])", "a[href]:not([inert])", "button:not([inert])", "[tabindex]:not(slot):not([inert])", "audio[controls]:not([inert])", "video[controls]:not([inert])", '[contenteditable]:not([contenteditable="false"]):not([inert])', "details>summary:first-of-type:not([inert])", "details:not([inert])"];
var candidateSelector = candidateSelectors.join(",");
var NoElement = typeof Element === "undefined";
var matches = NoElement ? function() {
} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
var getRootNode = !NoElement && Element.prototype.getRootNode ? function(element) {
  var _element$getRootNode;
  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);
} : function(element) {
  return element === null || element === void 0 ? void 0 : element.ownerDocument;
};
var isInert = function isInert2(node2, lookUp) {
  var _node$getAttribute;
  if (lookUp === void 0) {
    lookUp = true;
  }
  var inertAtt = node2 === null || node2 === void 0 ? void 0 : (_node$getAttribute = node2.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node2, "inert");
  var inert = inertAtt === "" || inertAtt === "true";
  var result = inert || lookUp && node2 && isInert2(node2.parentNode);
  return result;
};
var isContentEditable = function isContentEditable2(node2) {
  var _node$getAttribute2;
  var attValue = node2 === null || node2 === void 0 ? void 0 : (_node$getAttribute2 = node2.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node2, "contenteditable");
  return attValue === "" || attValue === "true";
};
var getCandidates = function getCandidates2(el, includeContainer, filter) {
  if (isInert(el)) {
    return [];
  }
  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));
  if (includeContainer && matches.call(el, candidateSelector)) {
    candidates.unshift(el);
  }
  candidates = candidates.filter(filter);
  return candidates;
};
var getCandidatesIteratively = function getCandidatesIteratively2(elements, includeContainer, options2) {
  var candidates = [];
  var elementsToCheck = Array.from(elements);
  while (elementsToCheck.length) {
    var element = elementsToCheck.shift();
    if (isInert(element, false)) {
      continue;
    }
    if (element.tagName === "SLOT") {
      var assigned = element.assignedElements();
      var content = assigned.length ? assigned : element.children;
      var nestedCandidates = getCandidatesIteratively2(content, true, options2);
      if (options2.flatten) {
        candidates.push.apply(candidates, nestedCandidates);
      } else {
        candidates.push({
          scopeParent: element,
          candidates: nestedCandidates
        });
      }
    } else {
      var validCandidate = matches.call(element, candidateSelector);
      if (validCandidate && options2.filter(element) && (includeContainer || !elements.includes(element))) {
        candidates.push(element);
      }
      var shadowRoot = element.shadowRoot || // check for an undisclosed shadow
      typeof options2.getShadowRoot === "function" && options2.getShadowRoot(element);
      var validShadowRoot = !isInert(shadowRoot, false) && (!options2.shadowRootFilter || options2.shadowRootFilter(element));
      if (shadowRoot && validShadowRoot) {
        var _nestedCandidates = getCandidatesIteratively2(shadowRoot === true ? element.children : shadowRoot.children, true, options2);
        if (options2.flatten) {
          candidates.push.apply(candidates, _nestedCandidates);
        } else {
          candidates.push({
            scopeParent: element,
            candidates: _nestedCandidates
          });
        }
      } else {
        elementsToCheck.unshift.apply(elementsToCheck, element.children);
      }
    }
  }
  return candidates;
};
var hasTabIndex = function hasTabIndex2(node2) {
  return !isNaN(parseInt(node2.getAttribute("tabindex"), 10));
};
var getTabIndex = function getTabIndex2(node2) {
  if (!node2) {
    throw new Error("No node provided");
  }
  if (node2.tabIndex < 0) {
    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node2.tagName) || isContentEditable(node2)) && !hasTabIndex(node2)) {
      return 0;
    }
  }
  return node2.tabIndex;
};
var getSortOrderTabIndex = function getSortOrderTabIndex2(node2, isScope) {
  var tabIndex = getTabIndex(node2);
  if (tabIndex < 0 && isScope && !hasTabIndex(node2)) {
    return 0;
  }
  return tabIndex;
};
var sortOrderedTabbables = function sortOrderedTabbables2(a, b) {
  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
};
var isInput = function isInput2(node2) {
  return node2.tagName === "INPUT";
};
var isHiddenInput = function isHiddenInput2(node2) {
  return isInput(node2) && node2.type === "hidden";
};
var isDetailsWithSummary = function isDetailsWithSummary2(node2) {
  var r = node2.tagName === "DETAILS" && Array.prototype.slice.apply(node2.children).some(function(child) {
    return child.tagName === "SUMMARY";
  });
  return r;
};
var getCheckedRadio = function getCheckedRadio2(nodes, form) {
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i].checked && nodes[i].form === form) {
      return nodes[i];
    }
  }
};
var isTabbableRadio = function isTabbableRadio2(node2) {
  if (!node2.name) {
    return true;
  }
  var radioScope = node2.form || getRootNode(node2);
  var queryRadios = function queryRadios2(name) {
    return radioScope.querySelectorAll('input[type="radio"][name="' + name + '"]');
  };
  var radioSet;
  if (typeof window !== "undefined" && typeof window.CSS !== "undefined" && typeof window.CSS.escape === "function") {
    radioSet = queryRadios(window.CSS.escape(node2.name));
  } else {
    try {
      radioSet = queryRadios(node2.name);
    } catch (err) {
      console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s", err.message);
      return false;
    }
  }
  var checked = getCheckedRadio(radioSet, node2.form);
  return !checked || checked === node2;
};
var isRadio = function isRadio2(node2) {
  return isInput(node2) && node2.type === "radio";
};
var isNonTabbableRadio = function isNonTabbableRadio2(node2) {
  return isRadio(node2) && !isTabbableRadio(node2);
};
var isNodeAttached = function isNodeAttached2(node2) {
  var _nodeRoot;
  var nodeRoot = node2 && getRootNode(node2);
  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;
  var attached = false;
  if (nodeRoot && nodeRoot !== node2) {
    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;
    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node2 !== null && node2 !== void 0 && (_node$ownerDocument = node2.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node2));
    while (!attached && nodeRootHost) {
      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;
      nodeRoot = getRootNode(nodeRootHost);
      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;
      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));
    }
  }
  return attached;
};
var isZeroArea = function isZeroArea2(node2) {
  var _node$getBoundingClie = node2.getBoundingClientRect(), width = _node$getBoundingClie.width, height = _node$getBoundingClie.height;
  return width === 0 && height === 0;
};
var isHidden = function isHidden2(node2, _ref3) {
  var displayCheck = _ref3.displayCheck, getShadowRoot = _ref3.getShadowRoot;
  if (getComputedStyle(node2).visibility === "hidden") {
    return true;
  }
  var isDirectSummary = matches.call(node2, "details>summary:first-of-type");
  var nodeUnderDetails = isDirectSummary ? node2.parentElement : node2;
  if (matches.call(nodeUnderDetails, "details:not([open]) *")) {
    return true;
  }
  if (!displayCheck || displayCheck === "full" || displayCheck === "legacy-full") {
    if (typeof getShadowRoot === "function") {
      var originalNode = node2;
      while (node2) {
        var parentElement = node2.parentElement;
        var rootNode = getRootNode(node2);
        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true) {
          return isZeroArea(node2);
        } else if (node2.assignedSlot) {
          node2 = node2.assignedSlot;
        } else if (!parentElement && rootNode !== node2.ownerDocument) {
          node2 = rootNode.host;
        } else {
          node2 = parentElement;
        }
      }
      node2 = originalNode;
    }
    if (isNodeAttached(node2)) {
      return !node2.getClientRects().length;
    }
    if (displayCheck !== "legacy-full") {
      return true;
    }
  } else if (displayCheck === "non-zero-area") {
    return isZeroArea(node2);
  }
  return false;
};
var isDisabledFromFieldset = function isDisabledFromFieldset2(node2) {
  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node2.tagName)) {
    var parentNode = node2.parentElement;
    while (parentNode) {
      if (parentNode.tagName === "FIELDSET" && parentNode.disabled) {
        for (var i = 0; i < parentNode.children.length; i++) {
          var child = parentNode.children.item(i);
          if (child.tagName === "LEGEND") {
            return matches.call(parentNode, "fieldset[disabled] *") ? true : !child.contains(node2);
          }
        }
        return true;
      }
      parentNode = parentNode.parentElement;
    }
  }
  return false;
};
var isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable2(options2, node2) {
  if (node2.disabled || // we must do an inert look up to filter out any elements inside an inert ancestor
  //  because we're limited in the type of selectors we can use in JSDom (see related
  //  note related to `candidateSelectors`)
  isInert(node2) || isHiddenInput(node2) || isHidden(node2, options2) || // For a details element with a summary, the summary element gets the focus
  isDetailsWithSummary(node2) || isDisabledFromFieldset(node2)) {
    return false;
  }
  return true;
};
var isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable2(options2, node2) {
  if (isNonTabbableRadio(node2) || getTabIndex(node2) < 0 || !isNodeMatchingSelectorFocusable(options2, node2)) {
    return false;
  }
  return true;
};
var isValidShadowRootTabbable = function isValidShadowRootTabbable2(shadowHostNode) {
  var tabIndex = parseInt(shadowHostNode.getAttribute("tabindex"), 10);
  if (isNaN(tabIndex) || tabIndex >= 0) {
    return true;
  }
  return false;
};
var sortByOrder = function sortByOrder2(candidates) {
  var regularTabbables = [];
  var orderedTabbables = [];
  candidates.forEach(function(item, i) {
    var isScope = !!item.scopeParent;
    var element = isScope ? item.scopeParent : item;
    var candidateTabindex = getSortOrderTabIndex(element, isScope);
    var elements = isScope ? sortByOrder2(item.candidates) : element;
    if (candidateTabindex === 0) {
      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);
    } else {
      orderedTabbables.push({
        documentOrder: i,
        tabIndex: candidateTabindex,
        item,
        isScope,
        content: elements
      });
    }
  });
  return orderedTabbables.sort(sortOrderedTabbables).reduce(function(acc, sortable) {
    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);
    return acc;
  }, []).concat(regularTabbables);
};
var tabbable = function tabbable2(container, options2) {
  options2 = options2 || {};
  var candidates;
  if (options2.getShadowRoot) {
    candidates = getCandidatesIteratively([container], options2.includeContainer, {
      filter: isNodeMatchingSelectorTabbable.bind(null, options2),
      flatten: false,
      getShadowRoot: options2.getShadowRoot,
      shadowRootFilter: isValidShadowRootTabbable
    });
  } else {
    candidates = getCandidates(container, options2.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options2));
  }
  return sortByOrder(candidates);
};
var focusableCandidateSelector = candidateSelectors.concat("iframe").join(",");

// node_modules/@here/hds-modal/build/hds-modal.css.js
var styles36 = css`
:host(:focus){outline:var(--hds-spacing-0)}@media (max-width:600px){.hds-grid-container{display:grid;gap:var(--hds-grid-row-gap-mobile) var(--hds-grid-column-gap-mobile);grid-template-columns:repeat(var(--hds-grid-columns-mobile),minmax(10px,1fr))}}@media (min-width:601px) and (max-width:1024px){.hds-grid-container{display:grid;gap:var(--hds-grid-row-gap-tablet) var(--hds-grid-column-gap-tablet);grid-template-columns:repeat(var(--hds-grid-columns-tablet),minmax(10px,1fr))}}@media (min-width:1025px) and (max-width:1440px){.hds-grid-container{display:grid;gap:var(--hds-grid-row-gap-desktop-small) var(--hds-grid-column-gap-desktop-small);grid-template-columns:repeat(var(--hds-grid-columns-desktop-small),minmax(10px,1fr))}}@media (min-width:1441px) and (max-width:1680px){.hds-grid-container{display:grid;gap:var(--hds-grid-row-gap-desktop-medium) var(--hds-grid-column-gap-desktop-medium);grid-template-columns:repeat(var(--hds-grid-columns-desktop-medium),minmax(10px,1fr))}}@media (min-width:1681px){.hds-grid-container{display:grid;gap:var(--hds-grid-row-gap-desktop-large) var(--hds-grid-column-gap-desktop-large);grid-template-columns:repeat(var(--hds-grid-columns-desktop-large),minmax(10px,1fr))}}.-hds-modal-wrapper{align-content:center;background:var(--hds-background-object);color:var(--hds-foreground-primary);font:var(--hds-body-font);height:100%;left:0;letter-spacing:var(--hds-body-letter-spacing);position:fixed;-webkit-text-decoration:var(--hds-body-text-decoration,inherit);text-decoration:var(--hds-body-text-decoration,inherit);top:0;width:100%;z-index:9999}.-hds-modal-wrapper .wrapper{align-self:center;animation-duration:.8s;animation-name:fadeIn;animation-timing-function:ease;background:var(--hds-background-secondary);border-radius:var(--hds-border-radius);filter:var(--hds-overlay);margin:var(--hds-spacing-8) 0;position:relative;z-index:9999}.hds-modal-header{align-items:center;border-bottom:.0625rem solid var(--hds-foreground-divider);display:flex;flex-shrink:0;min-height:2rem;padding:var(--hds-spacing-4)}.hds-modal-header .title{color:var(--hds-foreground-primary);margin:var(--hds-spacing-0);padding:var(--hds-spacing-0);width:100%}.hds-modal-header .title--size-large{font:var(--hds-headline-04-font);letter-spacing:var(--hds-headline-04-letter-spacing);-webkit-text-decoration:var(--hds-headline-04-text-decoration,inherit);text-decoration:var(--hds-headline-04-text-decoration,inherit)}.hds-modal-header .title--size-small{font:var(--hds-body-small-strong-font);letter-spacing:var(--hds-body-small-strong-letter-spacing);-webkit-text-decoration:var(--hds-body-small-strong-text-decoration,inherit);text-decoration:var(--hds-body-small-strong-text-decoration,inherit)}.hds-modal-header.with-close .title{width:calc(100% - 64px)}.hds-modal-header .title-icon{margin:var(--hds-spacing-0) var(--hds-spacing-2)}.hds-modal-body{height:var(--hds-modal-body-height);max-height:var(--hds-modal-max-height);overflow:auto;padding:var(--hds-spacing-5) var(--hds-spacing-6)}.hds-modal-footer{border-top:.0625rem solid var(--hds-foreground-divider);min-height:1.5rem;padding:var(--hds-spacing-4) var(--hds-spacing-6) var(--hds-spacing-6)}.hds-modal-footer--default{display:flex;flex-wrap:wrap;gap:var(--hds-spacing-2);justify-content:flex-end}.close{position:absolute;right:var(--hds-spacing-4);top:var(--hds-spacing-4)}@media (max-width:600px){.-hds-modal-wrapper{padding:var(--hds-spacing-4);width:calc(100% - var(--hds-spacing-4)*2)}.default-button{width:100%}.wrapper{grid-column:1/-1}.wrapper .hds-modal-footer{display:block}.wrapper .hds-modal-footer--default{flex-direction:column;justify-content:center}}@media (min-width:601px) and (max-width:1024px){.wrapper{grid-column:var(--hds-modal-tablet-grid-column)}}@media (min-width:601px){:host .default-button{width:auto}.wrapper{justify-self:unset;width:unset}.wrapper .hds-modal-footer{padding-bottom:var(--hds-spacing-4)}.wrapper .hds-modal-footer--default{flex-direction:row;gap:var(--hds-spacing-2);justify-content:end}}@media (min-width:1025px) and (max-width:1440px){.wrapper{grid-column:var(--hds-modal-desktop-small-grid-column)}}@media (min-width:1441px) and (max-width:1680px){.wrapper{grid-column:var(--hds-modal-desktop-medium-grid-column)}}@media (min-width:1681px){.wrapper{grid-column:var(--hds-modal-desktop-large-grid-column)}}@media (min-width:601px) and (max-width:1680px){:host .default-button{flex:1 1 0}}
`;

// node_modules/@here/hds-modal/build/hds-modal.js
var Modal = class Modal2 extends BaseElement {
  constructor() {
    super();
    this.hideCloseBtn = false;
    this.closeAriaLabel = "Close";
    this.icon = "";
    this.iconColor = "";
    this.iconCategory = "core-ui";
    this.headingMessage = "";
    this.message = "";
    this.titleSize = "large";
    this.disableCloseOnOverlayClick = false;
    this.disableCloseOnEscape = false;
    this.hideHeader = false;
    this.hideFooter = false;
    this.confirmVariant = "primary";
    this.buttonsWidth = 128;
    this.hideConfirm = false;
    this.hideCancel = false;
    this.hideThirdButton = false;
    this.confirmText = "Done";
    this.cancelText = "Cancel";
    this.thirdButtonText = "Settings";
    this.tabbableElements = [];
    this.debouncedResize = debounce(() => this.changeBodyMaxHeight(), 150);
    this.HDS_SPACING_10 = 64;
    this.debouncedButtonResize = debounce(() => this.changeDefaultButtonSize(), 150);
    this.activeElement = null;
    this.wrapCssVariable = (variableName) => (variableName == null ? void 0 : variableName.startsWith("--")) ? `var(${variableName})` : variableName;
    this.handleKeydown = this.handleKeydown.bind(this);
    this.handleFocus = this.handleFocus.bind(this);
  }
  get headerSlotted() {
    return !!this.slotNodes(this.headerSlot).length;
  }
  get firstTabbableElement() {
    return this.tabbableElements[0];
  }
  get lastTabbableElement() {
    return this.tabbableElements[this.tabbableElements.length ? this.tabbableElements.length - 1 : 0];
  }
  connectedCallback() {
    super.connectedCallback();
    this.addEventListeners();
  }
  disconnectedCallback() {
    super.disconnectedCallback();
    this.removeEventListeners();
    this.removeHandleFocusEvents();
    this.activeElement = null;
  }
  firstUpdated(changedProperties) {
    super.firstUpdated(changedProperties);
    const spacing2 = parseInt(getCSSVariable("--hds-spacing-10", this), 10);
    const baseline = parseInt(getCSSVariable("--hds-font-baseline", this), 10);
    if (spacing2 && baseline) {
      this.HDS_SPACING_10 = spacing2 * baseline;
    }
    const parentEl = closestElement("[data-theme^='hds-']", this);
    const container = document.querySelector("hds-modal-container");
    if (container) {
      container.appendChild(this);
    } else if (parentEl) {
      parentEl.appendChild(this);
    } else {
      console.error("No parent element with data attribute [data-theme^='hds-'] found. Data attribute with name of existing hds theme should be added to the root container.");
    }
  }
  async updated() {
    this.setTabbableElements();
    await this.changeBodyMaxHeight();
    await this.changeDefaultButtonSize();
  }
  /**
   * Adds focus trap on modal window to prevent keyboard navigation outside of modal
   */
  setTabbableElements() {
    const bodyElements = this.slotNodes(this.bodySlot);
    const bodyNode = bodyElements[0];
    const footerElements = this.slotNodes(this.footerSlot);
    const footerNode = footerElements[0];
    const tabbableFooterComponents = getHDSTabblableComponents(footerNode);
    const tabbableBodyComponents = getHDSTabblableComponents(bodyNode);
    this.tabbableElements = [
      ...bodyElements.length ? tabbable(bodyElements[0]) : [],
      ...tabbableBodyComponents,
      ...footerElements.length ? tabbable(footerElements[0]) : [],
      ...tabbableFooterComponents
    ];
    if (!this.hideCloseBtn && this.headerSlotted) {
      this.tabbableElements.push(this.closeBtn);
    }
    this.setTabKeydownListeners();
  }
  setTabKeydownListeners() {
    var _a6;
    if (this.tabbableElements.length && ((_a6 = this.tabbableElements[0]) == null ? void 0 : _a6.focus)) {
      this.focusFirstTabbableElement();
      this.tabbableElements.forEach((element) => element == null ? void 0 : element.addEventListener("keydown", this.handleFocus));
    }
  }
  render() {
    return html`
      <div class="-hds-modal-wrapper hds-grid-container">
        <div class="wrapper" role="dialog" aria-modal="true" aria-label="${ifDefined(this.title)}">
          ${this.renderHeader()}
          <div
            class="hds-modal-body"
            id="content"
            @scroll="${() => this.dispatchEvent(new CustomEvent("scroll", { composed: true, bubbles: true }))}"
          >
            <slot name="body"></slot>
            <slot>
              <div>${this.message}</div>
            </slot>
          </div>
          ${this.renderFooter()} ${this.renderCloseButton()}
        </div>
        <hds-overlay @click="${this.handleClickOverlay}"></hds-overlay>
      </div>
    `;
  }
  renderHeader() {
    if (this.hideHeader) {
      return nothing;
    }
    const classes = {
      "hds-modal-header": true,
      "-icon": this.icon
    };
    const titleClasses = {
      title: true,
      [`title--size-${this.titleSize}`]: true
    };
    let iconElement = html``;
    let localStyles = {};
    if (this.iconColor || this.iconColor !== "") {
      localStyles = {
        "--hds-icon-color": this.wrapCssVariable(this.iconColor)
      };
    }
    if (this.icon) {
      iconElement = html` <hds-icon
        class="title-icon"
        name="${this.icon}"
        category="${this.iconCategory}"
      ></hds-icon>`;
    }
    if (!this.icon && !this.headerSlotted && !this.headingMessage) {
      return html` <div class="${classMap(classes)}">
        <slot name="header"></slot>
      </div>`;
    }
    return html`
      <div id="modal-header" class="${classMap(classes)}" style="${styleMap(localStyles)}">
        ${iconElement}
        <div id="title" class="${classMap(titleClasses)}">
          <slot name="header">${this.headingMessage}</slot>
        </div>
      </div>
    `;
  }
  removeHandleFocusEvents() {
    this.tabbableElements.forEach((element) => element == null ? void 0 : element.removeEventListener("keydown", this.handleFocus));
  }
  /**
   * Close action on Overlay click key down
   */
  handleClickOverlay() {
    if (!this.disableCloseOnOverlayClick) {
      this.close("overlay");
    }
  }
  renderFooter() {
    if (this.hideFooter) {
      return nothing;
    }
    return html`
      <div id="modal-footer" class="hds-modal-footer">
        <slot name="footer">${this.renderButtons()}</slot>
      </div>
    `;
  }
  renderCloseButton() {
    var _a6;
    if (this.hideHeader) {
      return nothing;
    }
    const heading = (_a6 = this.shadowRoot) == null ? void 0 : _a6.querySelector("#modal-header");
    if (!this.hideCloseBtn) {
      heading == null ? void 0 : heading.classList.add("with-close");
      return html`
        <hds-button
          class="close"
          icon="cross"
          variant="subtle-quiet"
          @click="${() => this.close("button")}"
          aria-label="${this.closeAriaLabel}"
          size="small"
        ></hds-button>
      `;
    }
    heading == null ? void 0 : heading.classList.remove("with-close");
    return nothing;
  }
  /**
   * Set large size to default buttons in footer on small screens
   */
  async changeDefaultButtonSize(breakpointName = "desktop-small") {
    const documentWidth = this.shadowRoot.ownerDocument.body.offsetWidth;
    this.defaultButtons.forEach((button) => {
      const breakpointWidth = HDSGrid.getWidthForBreakpoint(breakpointName, this) && typeof HDSGrid.getWidthForBreakpoint(breakpointName, this) === "number" ? HDSGrid.getWidthForBreakpoint(breakpointName, this) : 0;
      documentWidth <= breakpointWidth ? button.setAttribute("size", "large") : button.setAttribute("size", "small");
    });
  }
  /**
   * Set calculated footer and header height as custom css variable
   * for body max height calculation in css for calc function
   */
  async changeBodyMaxHeight() {
    await this.updateComplete;
    const body = this.shadowRoot.querySelector("#content");
    const header = this.shadowRoot.querySelector("#modal-header");
    const footer = this.shadowRoot.querySelector("#modal-footer");
    const viewPortHeight = window.innerHeight;
    const headerHeight = (header == null ? void 0 : header.offsetHeight) || 0;
    const footerHeight = (footer == null ? void 0 : footer.offsetHeight) || 0;
    const elementsHeight = `${viewPortHeight - (headerHeight + footerHeight + this.HDS_SPACING_10)}px`;
    body.style.setProperty("--hds-modal-max-height", elementsHeight);
  }
  /**
   * Return array of nodes in particular slot or empty array
   * @param slot
   * @returns All the Elements in the slots
   */
  slotNodes(slot) {
    return (slot == null ? void 0 : slot.assignedElements({ flatten: true })) || [];
  }
  /**
   * Focus first element
   */
  focusFirstTabbableElement() {
    setTimeout(() => this.firstTabbableElement.focus());
  }
  /**
   * Focus previously stored active element after close modal
   */
  focusActiveElement() {
    var _a6;
    if (this.activeElement && ((_a6 = this.activeElement) == null ? void 0 : _a6.focus)) {
      this.activeElement.focus();
    }
  }
  handleFocus(e) {
    var _a6, _b5, _c4, _d3;
    if (e.code !== "Tab") {
      return;
    }
    if (e.shiftKey && e.target === this.firstTabbableElement && ((_a6 = this.lastTabbableElement) == null ? void 0 : _a6.focus)) {
      e.preventDefault();
      (_b5 = this.lastTabbableElement) == null ? void 0 : _b5.focus();
    } else if (!e.shiftKey && e.target === this.lastTabbableElement && ((_c4 = this.firstTabbableElement) == null ? void 0 : _c4.focus)) {
      e.preventDefault();
      (_d3 = this.firstTabbableElement) == null ? void 0 : _d3.focus();
    }
  }
  renderButtons() {
    const confirm = this.hideConfirm ? nothing : this.renderDefaultButton(this.confirmVariant, this.confirmText, "confirm");
    const cancel = this.hideCancel ? nothing : this.renderDefaultButton("secondary", this.cancelText, "cancel");
    const thirdButton = this.hideThirdButton ? nothing : this.renderDefaultButton("subtle", this.thirdButtonText, "thirdButton");
    return html` <div class="hds-modal-footer--default">${thirdButton}${cancel}${confirm}</div>`;
  }
  buttonClick(name) {
    this.dispatchEvent(new CustomEvent("action", {
      detail: {
        from: name
      }
    }));
  }
  close(value) {
    this.dispatchEvent(new CustomEvent("change", {
      detail: {
        from: value
      }
    }));
    this.focusActiveElement();
  }
  renderDefaultButton(variant, text, name) {
    return html` <hds-button
      variant="${variant}"
      class="default-button ${name}"
      width="100%"
      @click="${() => this.buttonClick(name)}"
      aria-label="${text}"
      size="small"
      >${text}
    </hds-button>`;
  }
  addEventListeners() {
    this.removeEventListeners();
    this.ownerDocument.addEventListener("keydown", this.handleKeydown);
    window.addEventListener("resize", this.debouncedResize);
    window.addEventListener("resize", this.debouncedButtonResize);
  }
  removeEventListeners() {
    this.ownerDocument.removeEventListener("keydown", this.handleKeydown);
    window.removeEventListener("resize", this.debouncedResize);
    window.removeEventListener("resize", this.debouncedButtonResize);
    this.removeHandleFocusEvents();
  }
  /**
   * Close action on Escape key down
   */
  handleKeydown(e) {
    if (e.key === "Escape" && !this.disableCloseOnEscape) {
      this.close("escape");
    }
  }
};
Modal.styles = styles36;
Modal.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: false };
__decorate([
  property({ type: Boolean, reflect: true, attribute: "hide-close-btn" })
], Modal.prototype, "hideCloseBtn", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "close-aria-label" })
], Modal.prototype, "closeAriaLabel", void 0);
__decorate([
  property({ type: String })
], Modal.prototype, "icon", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "icon-color" })
], Modal.prototype, "iconColor", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "icon-category" })
], Modal.prototype, "iconCategory", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "heading-message" })
], Modal.prototype, "headingMessage", void 0);
__decorate([
  property({ type: String })
], Modal.prototype, "message", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "title-size" })
], Modal.prototype, "titleSize", void 0);
__decorate([
  property({ type: Boolean, attribute: "disable-close-on-overlay-click" })
], Modal.prototype, "disableCloseOnOverlayClick", void 0);
__decorate([
  property({ type: Boolean, attribute: "disable-close-on-escape" })
], Modal.prototype, "disableCloseOnEscape", void 0);
__decorate([
  property({ type: Boolean, attribute: "hide-header" })
], Modal.prototype, "hideHeader", void 0);
__decorate([
  property({ type: Boolean, attribute: "hide-footer" })
], Modal.prototype, "hideFooter", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "confirm-variant" })
], Modal.prototype, "confirmVariant", void 0);
__decorate([
  property({ type: Number, reflect: true, attribute: "buttons-width" })
], Modal.prototype, "buttonsWidth", void 0);
__decorate([
  property({ type: Boolean, attribute: "hide-confirm" })
], Modal.prototype, "hideConfirm", void 0);
__decorate([
  property({ type: Boolean, attribute: "hide-cancel" })
], Modal.prototype, "hideCancel", void 0);
__decorate([
  property({ type: Boolean, attribute: "hide-third-button" })
], Modal.prototype, "hideThirdButton", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "confirm-text" })
], Modal.prototype, "confirmText", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "cancel-text" })
], Modal.prototype, "cancelText", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "third-button-text" })
], Modal.prototype, "thirdButtonText", void 0);
__decorate([
  query('slot[name="header"]')
], Modal.prototype, "headerSlot", void 0);
__decorate([
  query('slot[name="body"]')
], Modal.prototype, "bodySlot", void 0);
__decorate([
  query('slot[name="footer"]')
], Modal.prototype, "footerSlot", void 0);
__decorate([
  query(".close")
], Modal.prototype, "closeBtn", void 0);
__decorate([
  queryAll(".hds-modal-footer--default .default-button")
], Modal.prototype, "defaultButtons", void 0);
Modal = __decorate([
  customElement("hds-modal")
], Modal);

// node_modules/@here/hds-modal/build/hds-modal-container.js
var ModalContainer = class ModalContainer2 extends LitElement {
  render() {
    return html` <div id="hds-modal__container">
      <slot></slot>
    </div>`;
  }
};
ModalContainer.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
ModalContainer = __decorate([
  customElement("hds-modal-container")
], ModalContainer);

// node_modules/@here/hds-confirm/build/hds-confirm.css.js
var styles37 = css`
:host(:focus){outline:0}.hds-modal-footer--default{gap:var(--hds-spacing-4)}@media (max-width:600px){:host .wrapper .content-wrapper{margin:var(--hds-spacing-4)}}@media (min-width:601px){:host .wrapper .content-wrapper{margin:0}:host .default-button{flex:0 1 auto}}@media (max-width:600px){.hds-grid-container{display:grid;gap:var(--hds-grid-row-gap-mobile) var(--hds-grid-column-gap-mobile);grid-template-columns:repeat(var(--hds-grid-columns-mobile),minmax(10px,1fr))}}@media (min-width:601px) and (max-width:1024px){.hds-grid-container{display:grid;gap:var(--hds-grid-row-gap-tablet) var(--hds-grid-column-gap-tablet);grid-template-columns:repeat(var(--hds-grid-columns-tablet),minmax(10px,1fr))}}@media (min-width:1025px) and (max-width:1440px){.hds-grid-container{display:grid;gap:var(--hds-grid-row-gap-desktop-small) var(--hds-grid-column-gap-desktop-small);grid-template-columns:repeat(var(--hds-grid-columns-desktop-small),minmax(10px,1fr))}}@media (min-width:1441px) and (max-width:1680px){.hds-grid-container{display:grid;gap:var(--hds-grid-row-gap-desktop-medium) var(--hds-grid-column-gap-desktop-medium);grid-template-columns:repeat(var(--hds-grid-columns-desktop-medium),minmax(10px,1fr))}}@media (min-width:1681px){.hds-grid-container{display:grid;gap:var(--hds-grid-row-gap-desktop-large) var(--hds-grid-column-gap-desktop-large);grid-template-columns:repeat(var(--hds-grid-columns-desktop-large),minmax(10px,1fr))}}.wrapper{animation-duration:.8s;animation-name:fadeIn;animation-timing-function:ease;border-radius:var(--hds-border-radius);filter:var(--hds-overlay);z-index:9999}.header{background:var(--hds-background-secondary);border-radius:var(--hds-border-radius) var(--hds-border-radius) 0 0;box-shadow:inset 0 -.0625rem 0 var(--hds-background-object-press);flex-shrink:0;height:1rem;justify-content:space-between;padding:var(--hds-spacing-5) var(--hds-spacing-6)}.header,.header .title{align-items:center;display:flex}.header h3{--hds-icon-size:0.75rem;color:var(--hds-foreground-primary);font:var(--hds-button-font);letter-spacing:var(--hds-button-letter-spacing);margin:var(--hds-spacing-0);padding:var(--hds-spacing-0);-webkit-text-decoration:var(--hds-button-text-decoration,inherit);text-decoration:var(--hds-button-text-decoration,inherit)}.header hds-icon{margin-bottom:var(--hds-spacing-1px);margin-right:var(--hds-spacing-2)}.body{background:var(--hds-background-secondary);border-bottom:var(--hds-spacing-1px) solid var(--hds-foreground-divider);border-top:var(--hds-spacing-1px) solid var(--hds-foreground-divider);max-height:var(--hds-modal-max-height);overflow:auto;padding:var(--hds-spacing-5) var(--hds-spacing-6)}.body ::slotted(*){color:var(--hds-foreground-primary);font:var(--hds-body-small-font)!important;letter-spacing:var(--hds-body-small-letter-spacing)!important}.body .message{font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.footer{background:var(--hds-background-secondary);border-radius:0 0 var(--hds-border-radius) var(--hds-border-radius);box-shadow:0 -.0625rem 0 var(--hds-background-object-press);padding:var(--hds-spacing-4) var(--hds-spacing-6)}.footer ::slotted(div){align-items:center;display:flex;flex-wrap:wrap;justify-content:flex-end}.content-wrapper{position:relative}
`;

// node_modules/@here/hds-confirm/build/hds-confirm.js
var Confirm = class Confirm2 extends Modal {
  static get styles() {
    return [super.styles, styles37];
  }
  async updated() {
    super.setTabbableElements();
    await super.changeDefaultButtonSize("tablet");
  }
  render() {
    return html`
      <div class="-hds-modal-wrapper hds-grid-container">
        <div class="wrapper" role="dialog" aria-modal="true" aria-describedby="content">
          <div class="content-wrapper">
            ${this.renderHeader()}
            <div
              class="body"
              id="content"
              @scroll="${() => this.dispatchEvent(new CustomEvent("scroll", { composed: true, bubbles: true }))}"
            >
              <slot name="body"></slot>
              <slot>
                <div class="message">${this.message}</div>
              </slot>
            </div>
            ${this.renderFooter()} ${this.renderCloseButton()}
          </div>
        </div>
        <hds-overlay @click="${this.handleClickOverlay}"></hds-overlay>
      </div>
    `;
  }
};
Confirm = __decorate([
  customElement("hds-confirm")
], Confirm);

// node_modules/@here/hds-react-components/Confirm/HDSConfirm.js
new Confirm();
var HDSConfirm = import_react22.default.forwardRef(({ className, children, onClose, onChange: onChange2, onConfirm, onThirdButton, onCancel, icon, iconCategory, iconColor, hideCloseBtn, header, footer, disableCloseOnOverlayClick, disableCloseOnEscape, confirmText, cancelText, thirdButtonText, ...props }, ref) => {
  const innerRef = (0, import_react22.useRef)(null);
  (0, import_react22.useImperativeHandle)(ref, () => innerRef.current);
  const _handleClose = (e) => {
    if (e.target !== innerRef.current)
      return;
    onClose && onClose(e.detail);
    onChange2 && onChange2(e.detail);
  };
  const _handleAction = (e) => {
    if (e.target !== innerRef.current)
      return;
    switch (e.detail.from) {
      case "thirdButton":
        onThirdButton && onThirdButton();
        break;
      case "confirm":
        onConfirm && onConfirm();
        break;
      case "cancel":
        onCancel && onCancel();
        break;
    }
  };
  (0, import_react22.useEffect)(() => {
    if (innerRef.current) {
      (onChange2 || onClose) && innerRef.current.addEventListener("change", _handleClose);
      (onConfirm || onCancel || onThirdButton) && innerRef.current.addEventListener("action", _handleAction);
    }
    return () => {
      var _a6, _b5;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("close", _handleClose);
      (_b5 = innerRef.current) == null ? void 0 : _b5.removeEventListener("action", _handleAction);
    };
  }, [onClose, onChange2, onConfirm, onThirdButton, onCancel, innerRef]);
  const attributes = {};
  icon && (attributes.icon = icon);
  iconCategory && (attributes["icon-category"] = iconCategory);
  iconColor && (attributes["icon-color"] = iconColor);
  hideCloseBtn && (attributes["hide-close-btn"] = hideCloseBtn);
  disableCloseOnOverlayClick && (attributes["disable-close-on-overlay-click"] = disableCloseOnOverlayClick);
  disableCloseOnEscape && (attributes["disable-close-on-escape"] = disableCloseOnEscape);
  confirmText && (attributes["confirm-text"] = confirmText);
  cancelText && (attributes["cancel-text"] = cancelText);
  thirdButtonText && (attributes["third-button-text"] = thirdButtonText);
  return import_react22.default.createElement(
    "hds-confirm",
    { ...props, ...attributes, ...className && { class: className }, ref: innerRef },
    import_react22.default.createElement("span", { slot: "header" }, header),
    import_react22.default.createElement("div", { slot: "body" }, children),
    footer && import_react22.default.createElement("div", { slot: "footer" }, footer)
  );
});
HDSConfirm.defaultProps = {
  hideCloseBtn: false,
  closeAriaLabel: "Close",
  icon: "",
  iconColor: "",
  iconCategory: "core-ui",
  disableCloseOnOverlayClick: false,
  disableCloseOnEscape: false,
  confirmText: "Done",
  cancelText: "Cancel",
  thirdButtonText: "Settings"
};
var HDSConfirm_default = HDSConfirm;

// node_modules/@here/hds-react-components/Slider/HDSSlider.js
var React28 = __toESM(require_react(), 1);

// node_modules/@here/hds-slider/build/hds-slider.css.js
var styles38 = css`
:host(:focus){outline:0}.-hds-slider-wrapper{align-items:center;display:flex;padding-top:calc(var(--hds-caption-font-size)*var(--hds-slider--label-max-n-words, 0));position:relative}.-hds-slider-wrapper .text-end,.-hds-slider-wrapper .text-start{font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.-hds-slider-wrapper .icon-end,.-hds-slider-wrapper .icon-start{--hds-icon-color:var(--hds-foreground-secondary)}.-hds-slider-wrapper .icon-start,.-hds-slider-wrapper .text-start{margin-right:var(--hds-spacing-4)}.-hds-slider-wrapper .icon-end,.-hds-slider-wrapper .text-end{margin-left:var(--hds-spacing-4)}.-hds-slider-wrapper.not-disabled .thumb{background:var(--hds-ondarkcolor-primary);border:.0625rem solid var(--hds-foreground-tertiary);cursor:pointer;filter:var(--hds-object--subtle);will-change:filter}.-hds-slider-wrapper.not-disabled .thumb:hover{background:linear-gradient(var(--hds-background-hover),var(--hds-background-hover)),linear-gradient(var(--hds-ondarkcolor-primary),var(--hds-ondarkcolor-primary));border-color:var(--hds-foreground-tertiary-hover)}.-hds-slider-wrapper.not-disabled .thumb:focus,.-hds-slider-wrapper.not-disabled .thumb:focus-within{border:.125rem solid var(--hds-accent);outline:0}.-hds-slider-wrapper.not-disabled .thumb:active{background:linear-gradient(var(--hds-background-press),var(--hds-background-press)),linear-gradient(var(--hds-ondarkcolor-primary),var(--hds-ondarkcolor-primary));border:.0625rem solid var(--hds-foreground-tertiary-press)}.-hds-slider-wrapper.not-disabled.track-fill-color-on .track-fill{background-color:var(--hds-action)}.-hds-slider-wrapper.disabled .thumb{background:linear-gradient(var(--hds-foreground-primary-disabled),var(--hds-foreground-primary-disabled)),linear-gradient(var(--hds-ondarkcolor-primary),var(--hds-ondarkcolor-primary));border-color:var(--hds-foreground-tertiary-disabled);cursor:not-allowed;outline:0}.-hds-slider-wrapper.disabled.track-fill-color-on .track-fill{background-color:var(--hds-action-disabled)}.-hds-slider-wrapper.track-fill-color-off .track-fill{background-color:initial}.-hds-slider-wrapper .thumb{position:absolute;top:50%;transform:translate(-50%,-50%)}.-hds-slider-wrapper .slider{height:100%;position:relative;width:100%}.-hds-slider-wrapper .track{background:var(--hds-slider--track-background,var(--hds-foreground-tertiary));border-radius:.125rem;height:.25rem;overflow:hidden;position:absolute;top:50%;transform:translateY(-50%);width:100%}.-hds-slider-wrapper .track-fill{height:100%;left:var(--hds-slider--track-fill-start);position:absolute;right:var(--hds-slider--track-fill-end)}.-hds-slider-wrapper.last-active-thumb1 .thumb1,.-hds-slider-wrapper.last-active-thumb2 .thumb2{z-index:1}.hds-slider--step-type-dots .hds-slider--steps{position:absolute;top:50%;width:100%}.hds-slider--step-type-dots .hds-slider--steps .hds-slider--step{background-color:var(--hds-foreground-tertiary);border-radius:.25rem;height:.25rem;left:0;position:absolute;top:0;transform:translate(-50%,-50%);width:.25rem}.hds-slider--step-type-dots .hds-slider--steps .hds-slider--step.hds-slider--step-min{transform:translateY(-50%)}.hds-slider--step-type-dots .hds-slider--steps .hds-slider--step.hds-slider--step-max{transform:translate(-100%,-50%)}.hds-slider--step-type-dots .hds-slider--steps .hds-slider--label{bottom:0;font:var(--hds-caption-font);left:50%;letter-spacing:var(--hds-caption-letter-spacing);margin-bottom:var(--hds-spacing-3);opacity:.5;pointer-events:none;position:absolute;text-align:center;-webkit-text-decoration:var(--hds-caption-text-decoration,inherit);text-decoration:var(--hds-caption-text-decoration,inherit);transform:translate(-50%)}.hds-slider--step-type-dots .hds-slider--steps .hds-slider--label.hds-slider--label-min{margin-left:-.125rem;text-align:left;transform:translate(0)}.hds-slider--step-type-dots .hds-slider--steps .hds-slider--label.hds-slider--label-max{margin-left:.125rem;text-align:right;transform:translate(-100%)}.hds-slider--step-type-ticks .track{border-radius:0;height:.25rem;overflow:hidden;transform:translateY(-50%)}.hds-slider--step-type-ticks .hds-slider--steps,.hds-slider--step-type-ticks .track{position:absolute;top:50%;width:100%}.hds-slider--step-type-ticks .hds-slider--steps .hds-slider--step{background-color:var(--hds-foreground-tertiary);height:.25rem;left:0;position:absolute;top:0;transform:translate(-50%,-150%);width:.125rem}.hds-slider--step-type-ticks .hds-slider--steps .hds-slider--step.hds-slider--step-min{transform:translateY(-150%)}.hds-slider--step-type-ticks .hds-slider--steps .hds-slider--step.hds-slider--step-max{transform:translate(-100%,-150%)}.hds-slider--step-type-ticks .hds-slider--steps .hds-slider--label{bottom:0;font:var(--hds-caption-font);left:50%;letter-spacing:var(--hds-caption-letter-spacing);margin-bottom:var(--hds-spacing-3);opacity:.5;pointer-events:none;position:absolute;text-align:center;-webkit-text-decoration:var(--hds-caption-text-decoration,inherit);text-decoration:var(--hds-caption-text-decoration,inherit);transform:translate(-50%)}.hds-slider--step-type-ticks .hds-slider--steps .hds-slider--label.hds-slider--label-min{margin-left:-.125rem;text-align:left;transform:translate(0)}.hds-slider--step-type-ticks .hds-slider--steps .hds-slider--label.hds-slider--label-max{margin-left:.125rem;text-align:right;transform:translate(-100%)}.hds-slider--size-medium .slider{height:1.75rem}.hds-slider--size-medium .thumb{border-radius:1rem;height:1rem;width:1rem}.hds-slider--size-large .slider{height:1.75rem}.hds-slider--size-large .thumb{border-radius:1.75rem;height:1.75rem;width:1.75rem}
`;

// node_modules/lit-html/development/directive-helpers.js
var _a5;
var _b4;
var { _ChildPart: ChildPart2 } = _$LH;
var ENABLE_SHADYDOM_NOPATCH2 = true;
var wrap2 = ENABLE_SHADYDOM_NOPATCH2 && ((_a5 = window.ShadyDOM) === null || _a5 === void 0 ? void 0 : _a5.inUse) && ((_b4 = window.ShadyDOM) === null || _b4 === void 0 ? void 0 : _b4.noPatch) === true ? window.ShadyDOM.wrap : (node2) => node2;
var createMarker2 = () => document.createComment("");
var insertPart = (containerPart, refPart, part) => {
  var _a6;
  const container = wrap2(containerPart._$startNode).parentNode;
  const refNode = refPart === void 0 ? containerPart._$endNode : refPart._$startNode;
  if (part === void 0) {
    const startNode = wrap2(container).insertBefore(createMarker2(), refNode);
    const endNode = wrap2(container).insertBefore(createMarker2(), refNode);
    part = new ChildPart2(startNode, endNode, containerPart, containerPart.options);
  } else {
    const endNode = wrap2(part._$endNode).nextSibling;
    const oldParent = part._$parent;
    const parentChanged = oldParent !== containerPart;
    if (parentChanged) {
      (_a6 = part._$reparentDisconnectables) === null || _a6 === void 0 ? void 0 : _a6.call(part, containerPart);
      part._$parent = containerPart;
      let newConnectionState;
      if (part._$notifyConnectionChanged !== void 0 && (newConnectionState = containerPart._$isConnected) !== oldParent._$isConnected) {
        part._$notifyConnectionChanged(newConnectionState);
      }
    }
    if (endNode !== refNode || parentChanged) {
      let start2 = part._$startNode;
      while (start2 !== endNode) {
        const n = wrap2(start2).nextSibling;
        wrap2(container).insertBefore(start2, refNode);
        start2 = n;
      }
    }
  }
  return part;
};
var setChildPartValue = (part, value, directiveParent = part) => {
  part._$setValue(value, directiveParent);
  return part;
};
var RESET_VALUE = {};
var setCommittedValue = (part, value = RESET_VALUE) => part._$committedValue = value;
var getCommittedValue = (part) => part._$committedValue;
var removePart = (part) => {
  var _a6;
  (_a6 = part._$notifyConnectionChanged) === null || _a6 === void 0 ? void 0 : _a6.call(part, false, true);
  let start2 = part._$startNode;
  const end2 = wrap2(part._$endNode).nextSibling;
  while (start2 !== end2) {
    const n = wrap2(start2).nextSibling;
    wrap2(start2).remove();
    start2 = n;
  }
};

// node_modules/lit-html/development/directives/repeat.js
var generateMap = (list, start2, end2) => {
  const map = /* @__PURE__ */ new Map();
  for (let i = start2; i <= end2; i++) {
    map.set(list[i], i);
  }
  return map;
};
var RepeatDirective = class extends Directive {
  constructor(partInfo) {
    super(partInfo);
    if (partInfo.type !== PartType.CHILD) {
      throw new Error("repeat() can only be used in text expressions");
    }
  }
  _getValuesAndKeys(items, keyFnOrTemplate, template) {
    let keyFn;
    if (template === void 0) {
      template = keyFnOrTemplate;
    } else if (keyFnOrTemplate !== void 0) {
      keyFn = keyFnOrTemplate;
    }
    const keys = [];
    const values = [];
    let index2 = 0;
    for (const item of items) {
      keys[index2] = keyFn ? keyFn(item, index2) : index2;
      values[index2] = template(item, index2);
      index2++;
    }
    return {
      values,
      keys
    };
  }
  render(items, keyFnOrTemplate, template) {
    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;
  }
  update(containerPart, [items, keyFnOrTemplate, template]) {
    var _a6;
    const oldParts = getCommittedValue(containerPart);
    const { values: newValues, keys: newKeys } = this._getValuesAndKeys(items, keyFnOrTemplate, template);
    if (!Array.isArray(oldParts)) {
      this._itemKeys = newKeys;
      return newValues;
    }
    const oldKeys = (_a6 = this._itemKeys) !== null && _a6 !== void 0 ? _a6 : this._itemKeys = [];
    const newParts = [];
    let newKeyToIndexMap;
    let oldKeyToIndexMap;
    let oldHead = 0;
    let oldTail = oldParts.length - 1;
    let newHead = 0;
    let newTail = newValues.length - 1;
    while (oldHead <= oldTail && newHead <= newTail) {
      if (oldParts[oldHead] === null) {
        oldHead++;
      } else if (oldParts[oldTail] === null) {
        oldTail--;
      } else if (oldKeys[oldHead] === newKeys[newHead]) {
        newParts[newHead] = setChildPartValue(oldParts[oldHead], newValues[newHead]);
        oldHead++;
        newHead++;
      } else if (oldKeys[oldTail] === newKeys[newTail]) {
        newParts[newTail] = setChildPartValue(oldParts[oldTail], newValues[newTail]);
        oldTail--;
        newTail--;
      } else if (oldKeys[oldHead] === newKeys[newTail]) {
        newParts[newTail] = setChildPartValue(oldParts[oldHead], newValues[newTail]);
        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]);
        oldHead++;
        newTail--;
      } else if (oldKeys[oldTail] === newKeys[newHead]) {
        newParts[newHead] = setChildPartValue(oldParts[oldTail], newValues[newHead]);
        insertPart(containerPart, oldParts[oldHead], oldParts[oldTail]);
        oldTail--;
        newHead++;
      } else {
        if (newKeyToIndexMap === void 0) {
          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);
          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);
        }
        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {
          removePart(oldParts[oldHead]);
          oldHead++;
        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {
          removePart(oldParts[oldTail]);
          oldTail--;
        } else {
          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);
          const oldPart = oldIndex !== void 0 ? oldParts[oldIndex] : null;
          if (oldPart === null) {
            const newPart = insertPart(containerPart, oldParts[oldHead]);
            setChildPartValue(newPart, newValues[newHead]);
            newParts[newHead] = newPart;
          } else {
            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);
            insertPart(containerPart, oldParts[oldHead], oldPart);
            oldParts[oldIndex] = null;
          }
          newHead++;
        }
      }
    }
    while (newHead <= newTail) {
      const newPart = insertPart(containerPart, newParts[newTail + 1]);
      setChildPartValue(newPart, newValues[newHead]);
      newParts[newHead++] = newPart;
    }
    while (oldHead <= oldTail) {
      const oldPart = oldParts[oldHead++];
      if (oldPart !== null) {
        removePart(oldPart);
      }
    }
    this._itemKeys = newKeys;
    setCommittedValue(containerPart, newParts);
    return noChange;
  }
};
var repeat = directive(RepeatDirective);

// node_modules/@here/hds-slider/build/hds-slider.js
var PROP_CONVERTER = { fromAttribute: (value) => value == null ? void 0 : value.split(",") };
var Slider = class Slider2 extends LitElement {
  constructor() {
    super();
    this.disabled = false;
    this.min = 0;
    this.max = 100;
    this.step = 0;
    this.type = "default";
    this.size = "medium";
    this.textStart = "";
    this.textEnd = "";
    this.noTrackFill = false;
    this.trackColors = [];
    this.trackColorsLengths = [];
    this.stepType = "none";
    this.stepValues = [];
    this.stepLabels = [];
    this.iconStart = "";
    this.iconStartStyle = "solid";
    this.iconStartCategory = "core-ui";
    this.iconEnd = "";
    this.iconEndStyle = "solid";
    this.iconEndCategory = "core-ui";
    this.value = 0;
    this.value2 = 0;
    this._lastActiveThumb = 1;
    this._thumbDraggingStartX = 0;
    this._onDocumentMouseUp = this._onDocumentMouseUp.bind(this);
    this._onDocumentMouseMove = this._onDocumentMouseMove.bind(this);
  }
  connectedCallback() {
    super.connectedCallback && super.connectedCallback();
    this.ownerDocument.addEventListener("mousemove", this._onDocumentMouseMove);
    this.ownerDocument.addEventListener("mouseup", this._onDocumentMouseUp);
  }
  disconnectedCallback() {
    this.ownerDocument.removeEventListener("mousemove", this._onDocumentMouseMove);
    this.ownerDocument.removeEventListener("mouseup", this._onDocumentMouseUp);
    super.disconnectedCallback && super.disconnectedCallback();
  }
  updated(_changedProperties) {
    if (this.type === "default") {
      if (_changedProperties.has("value")) {
        this.value = clamp(roundToNearest(this.value, this.step), this.min, this.max);
        this._updateDom(_changedProperties);
      }
    } else if (this.type === "range") {
      this.value = clamp(roundToNearest(this.value, this.step), this.min, Math.min(this.value2, this.max));
      this.value2 = clamp(roundToNearest(this.value2, this.step), Math.max(this.min, this.value), this.max);
      this._updateDom(_changedProperties);
    }
    const isValueChanged = _changedProperties.has("value") && _changedProperties.get("value") !== this.value && _changedProperties.get("value") !== void 0;
    const isValue2Changed = _changedProperties.has("value2") && _changedProperties.get("value2") !== this.value2 && _changedProperties.get("value2") !== void 0;
    if (isValueChanged || isValue2Changed) {
      const detail = { value: this.value };
      if (this.type === "range") {
        detail.value2 = this.value2;
      }
      this.dispatchEvent(new CustomEvent("change", {
        detail,
        bubbles: true,
        composed: true
      }));
    }
  }
  _updateDom(_changedProperties) {
    if (this.type === "default") {
      this.thumb1Element.style.left = `${scale(this.value, this.min, this.max, 0, 100)}%`;
      this._lastActiveThumb = 1;
    } else if (this.type === "range") {
      this.thumb1Element.style.left = `${scale(this.value, this.min, this.max, 0, 100)}%`;
      this.thumb2Element.style.left = `${scale(this.value2, this.min, this.max, 0, 100)}%`;
      if (_changedProperties.has("value") && !_changedProperties.has("value2") || this.value === this.value2 && this.value === this.max) {
        this._lastActiveThumb = 1;
      } else if (_changedProperties.has("value2") && !_changedProperties.has("value") || this.value === this.value2 && this.value === this.min) {
        this._lastActiveThumb = 2;
      }
    }
  }
  _onSliderMouseDown(e) {
    if (this.disabled)
      return;
    e.preventDefault();
    if (e.target === this.thumb1Element || e.target === this.thumb2Element) {
      this._thumbInDragging = e.target;
      this._thumbDraggingStartX = e.clientX - e.target.offsetLeft;
    } else {
      const sliderWidth = this.sliderElement.offsetWidth;
      const rect = this.sliderElement.getBoundingClientRect();
      const newLeft = e.clientX - rect.left;
      if (this.type === "default") {
        this.value = scale(newLeft, 0, sliderWidth, this.min, this.max);
      } else if (this.type === "range") {
        const newValue = scale(newLeft, 0, sliderWidth, this.min, this.max);
        if (Math.abs(newValue - this.value) <= Math.abs(newValue - this.value2)) {
          this.value = newValue;
        } else if (Math.abs(newValue - this.value) >= Math.abs(newValue - this.value2)) {
          this.value2 = newValue;
        }
      }
    }
  }
  _onDocumentMouseMove(e) {
    if (this.disabled)
      return;
    if (!this._thumbInDragging)
      return;
    const isThumb1InDragging = this._thumbInDragging === this.thumb1Element;
    const isThumb2InDragging = this._thumbInDragging === this.thumb2Element;
    const sliderWidth = this.sliderElement.offsetWidth;
    const thumbWidth = this._thumbInDragging.offsetWidth;
    const rightEdge = this.sliderElement.offsetWidth - this._thumbInDragging.offsetWidth + thumbWidth;
    const leftEdge = 0;
    let newLeft = clamp(e.clientX - this._thumbDraggingStartX, leftEdge, rightEdge);
    if (this.type === "default") {
      this.value = scale(newLeft, 0, sliderWidth, this.min, this.max);
    } else if (this.type === "range") {
      if (isThumb1InDragging) {
        if (newLeft > this.thumb2Element.offsetLeft) {
          newLeft = this.thumb2Element.offsetLeft;
        }
        this.value = scale(newLeft, 0, sliderWidth, this.min, this.max);
      } else if (isThumb2InDragging) {
        if (newLeft < this.thumb1Element.offsetLeft) {
          newLeft = this.thumb1Element.offsetLeft;
        }
        this.value2 = scale(newLeft, 0, sliderWidth, this.min, this.max);
      }
    }
  }
  _onDocumentMouseUp() {
    if (this._thumbInDragging) {
      this._thumbInDragging = void 0;
    }
  }
  renderThumb1() {
    return html`<button
      @focus="${() => {
      this._lastActiveThumb = 1;
    }}"
      class="thumb thumb1"
    ></button>`;
  }
  renderThumb2() {
    if (this.type === "default")
      return nothing;
    return html`<button
      @focus="${() => {
      this._lastActiveThumb = 2;
    }}"
      class="thumb thumb2"
    ></button>`;
  }
  onKeyDown(e) {
    if (this.disabled)
      return;
    const step = this.step === 0 ? 1 : this.step;
    if (e.key === "ArrowLeft") {
      if (this._lastActiveThumb === 1) {
        this.value -= step;
      } else if (this._lastActiveThumb === 2) {
        this.value2 -= step;
      }
    } else if (e.key === "ArrowRight") {
      if (this._lastActiveThumb === 1) {
        this.value += step;
      } else if (this._lastActiveThumb === 2) {
        this.value2 += step;
      }
    }
  }
  renderStep(value, label) {
    const valueNorm = clamp(value, this.min, this.max);
    const stepMarkClasses = {
      "hds-slider--step": true,
      "hds-slider--step-min": valueNorm === this.min,
      "hds-slider--step-max": valueNorm === this.max
    };
    const stepMarkStyles = {
      left: `${scale(valueNorm, this.min, this.max, 0, 100)}%`
    };
    const labelClasses = {
      "hds-slider--label": true,
      "hds-slider--label-min": valueNorm === this.min,
      "hds-slider--label-max": valueNorm === this.max
    };
    return html` <div class="${classMap(stepMarkClasses)}" style="${styleMap(stepMarkStyles)}">
      <div class="${classMap(labelClasses)}">${label}</div>
    </div>`;
  }
  renderAllSteps() {
    if (this.step === 0)
      return nothing;
    if (this.stepType === "none")
      return nothing;
    let valuesArray = [];
    const valuesToLabels = Object.fromEntries(this.stepValues.map((value, index2) => [value, this.stepLabels[index2]]));
    if (this.stepValues.length === 0) {
      const numOfSteps = Math.abs(this.max - this.min) / this.step;
      const numOfStepsArray = Array.from({ length: numOfSteps + 1 });
      valuesArray = numOfStepsArray.map((_, index2) => {
        const valueAtStep = index2 * this.step;
        return valueAtStep;
      });
    } else {
      valuesArray = this.stepValues;
    }
    return html`<div class="hds-slider--steps">
      ${repeat(valuesArray, (value) => this.renderStep(value, valuesToLabels[value]))}
    </div>`;
  }
  formatTemplateString(str) {
    return stringFormat(str, {
      value: this.value,
      value2: this.value2,
      min: this.min,
      max: this.max,
      step: this.step
    });
  }
  renderTextStart() {
    if (this.textStart.length === 0)
      return nothing;
    return html` <div class="text-start">${this.formatTemplateString(this.textStart)}</div> `;
  }
  renderTextEnd() {
    if (!this.textEnd)
      return nothing;
    return html` <div class="text-end">${this.formatTemplateString(this.textEnd)}</div> `;
  }
  renderIconStart() {
    if (!this.iconStart)
      return nothing;
    return html`<hds-icon
      class="icon-start"
      name="${this.iconStart}"
      size="24px"
      category="${this.iconStartCategory}"
      icon-style="${this.iconStartStyle}"
    ></hds-icon> `;
  }
  renderIconEnd() {
    if (!this.iconEnd)
      return nothing;
    return html`<hds-icon
      class="icon-end"
      name="${this.iconEnd}"
      size="24px"
      category="${this.iconEndCategory}"
      icon-style="${this.iconEndStyle}"
    ></hds-icon> `;
  }
  render() {
    const sliderClasses = {
      "-hds-slider-wrapper": true,
      [`${this.disabled ? "disabled" : "not-disabled"}`]: true,
      [`last-active-thumb${this._lastActiveThumb}`]: true,
      [`hds-slider--size-${this.size}`]: true,
      [`track-fill-color-${this.noTrackFill ? "off" : "on"}`]: true,
      [`hds-slider--step-type-${this.stepType}`]: true
    };
    const labelsWordsMax = this.stepLabels.length === 0 ? 0 : this.stepLabels.map((w2) => w2.split(" ").length).reduce((a, b) => a > b ? a : b);
    const sliderStyles = {
      "--hds-slider--label-max-n-words": `${labelsWordsMax}`
    };
    if (this.trackColors.length > 0) {
      const trackColorsLengths = this.trackColorsLengths.length === this.trackColors.length ? this.trackColorsLengths : this.trackColors.map((_, idx) => `${100 / this.trackColors.length * (idx + 1)}%`);
      const gradientColorSteps = this.trackColors.map((c, idx) => `${c} 0 ${trackColorsLengths[idx]}`).join(",");
      sliderStyles["--hds-slider--track-background"] = `linear-gradient(to right, ${gradientColorSteps})`;
    }
    if (this.type === "default") {
      if (this.trackFillStart !== void 0) {
        sliderStyles["--hds-slider--track-fill-start"] = `${scale(Math.min(this.value, this.trackFillStart), this.min, this.max, 0, 100)}%`;
        sliderStyles["--hds-slider--track-fill-end"] = `${100 - scale(Math.max(this.value, this.trackFillStart), this.min, this.max, 0, 100)}%`;
      } else {
        sliderStyles["--hds-slider--track-fill-start"] = "0%";
        sliderStyles["--hds-slider--track-fill-end"] = `${100 - scale(this.value, this.min, this.max, 0, 100)}%`;
      }
    } else if (this.type === "range") {
      sliderStyles["--hds-slider--track-fill-start"] = `${scale(this.value, this.min, this.max, 0, 100)}%`;
      sliderStyles["--hds-slider--track-fill-end"] = `${100 - scale(this.value2, this.min, this.max, 0, 100)}%`;
    }
    return html`
      <div
        class="${classMap(sliderClasses)}"
        style="${styleMap(sliderStyles)}"
        @keydown="${this.onKeyDown}"
      >
        ${this.renderIconStart()} ${this.renderTextStart()}
        <div class="slider" @mousedown="${this._onSliderMouseDown}">
          <div class="track">
            <div class="track-fill"></div>
          </div>
          ${this.renderAllSteps()} ${this.renderThumb1()} ${this.renderThumb2()}
        </div>
        ${this.renderTextEnd()} ${this.renderIconEnd()}
      </div>
    `;
  }
};
Slider.styles = styles38;
Slider.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: Boolean })
], Slider.prototype, "disabled", void 0);
__decorate([
  property({ type: Number })
], Slider.prototype, "min", void 0);
__decorate([
  property({ type: Number })
], Slider.prototype, "max", void 0);
__decorate([
  property({ type: Number })
], Slider.prototype, "step", void 0);
__decorate([
  property({ type: String })
], Slider.prototype, "type", void 0);
__decorate([
  property({ type: String })
], Slider.prototype, "size", void 0);
__decorate([
  property({ type: String, attribute: "text-start" })
], Slider.prototype, "textStart", void 0);
__decorate([
  property({ type: String, attribute: "text-end" })
], Slider.prototype, "textEnd", void 0);
__decorate([
  property({ type: Number, attribute: "track-fill-start" })
], Slider.prototype, "trackFillStart", void 0);
__decorate([
  property({ type: Boolean, attribute: "no-track-fill" })
], Slider.prototype, "noTrackFill", void 0);
__decorate([
  property({ type: Array, attribute: "track-colors", converter: PROP_CONVERTER })
], Slider.prototype, "trackColors", void 0);
__decorate([
  property({ type: Array, attribute: "track-colors-lengths", converter: PROP_CONVERTER })
], Slider.prototype, "trackColorsLengths", void 0);
__decorate([
  property({ type: String, attribute: "step-type" })
], Slider.prototype, "stepType", void 0);
__decorate([
  property({ type: Array, attribute: "step-values", converter: PROP_CONVERTER })
], Slider.prototype, "stepValues", void 0);
__decorate([
  property({ type: Array, attribute: "step-labels", converter: PROP_CONVERTER })
], Slider.prototype, "stepLabels", void 0);
__decorate([
  property({ type: String, attribute: "icon-start" })
], Slider.prototype, "iconStart", void 0);
__decorate([
  property({ type: String, attribute: "icon-start-style" })
], Slider.prototype, "iconStartStyle", void 0);
__decorate([
  property({ type: String, attribute: "icon-start-category" })
], Slider.prototype, "iconStartCategory", void 0);
__decorate([
  property({ type: String, attribute: "icon-end" })
], Slider.prototype, "iconEnd", void 0);
__decorate([
  property({ type: String, attribute: "icon-end-style" })
], Slider.prototype, "iconEndStyle", void 0);
__decorate([
  property({ type: String, attribute: "icon-end-category" })
], Slider.prototype, "iconEndCategory", void 0);
__decorate([
  query(".thumb1")
], Slider.prototype, "thumb1Element", void 0);
__decorate([
  query(".thumb2")
], Slider.prototype, "thumb2Element", void 0);
__decorate([
  query(".slider")
], Slider.prototype, "sliderElement", void 0);
__decorate([
  property({ type: Number, attribute: "value" })
], Slider.prototype, "value", void 0);
__decorate([
  property({ type: Number, attribute: "value2" })
], Slider.prototype, "value2", void 0);
__decorate([
  state()
], Slider.prototype, "_lastActiveThumb", void 0);
Slider = __decorate([
  customElement("hds-slider")
], Slider);

// node_modules/@here/hds-react-components/Slider/HDSSlider.js
var import_react23 = __toESM(require_react(), 1);
new Slider();
var HDSSlider = React28.forwardRef((props, ref) => {
  const { disabled, min: min3, max: max3, step, type, size: size2, textStart, textEnd, trackFillStart, noTrackFill, trackColors, trackColorsLengths, stepValues, stepLabels, iconStart, iconStartStyle, iconStartCategory, iconEnd, iconEndStyle, iconEndCategory, value, value2, className, onChange: onChange2, ...rest } = props;
  const innerRef = (0, import_react23.useRef)(null);
  (0, import_react23.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onChange2 && onChange2(e);
  };
  (0, import_react23.useEffect)(() => {
    if (innerRef.current) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, innerRef]);
  return React28.createElement("hds-slider", { ref: innerRef, ...className && { class: className }, min: min3, max: max3, step, type, size: size2, "text-start": textStart, "text-end": textEnd, "track-fill-start": trackFillStart, ...noTrackFill && { "no-track-fill": true }, "track-colors": trackColors, "track-colors-lengths": trackColorsLengths, "step-values": stepValues, "step-labels": stepLabels, "icon-start": iconStart, "icon-start-style": iconStartStyle, "icon-start-category": iconStartCategory, "icon-end": iconEnd, "icon-end-style": iconEndStyle, "icon-end-category": iconEndCategory, value, value2, ...disabled && { disabled: true }, ...rest });
});
HDSSlider.displayName = "HDSSlider";
HDSSlider.defaultProps = {
  disabled: false,
  min: 0,
  max: 100,
  step: 0,
  type: "default",
  size: "medium"
};
var HDSSlider_default = HDSSlider;

// node_modules/@here/hds-react-components/ToggleList/HDSToggleList.js
var import_react24 = __toESM(require_react(), 1);

// node_modules/@here/hds-togglelist/build/hds-togglelist-item.css.js
var styles39 = css`
:host(:focus){outline:0}.-hds-togglelist-item{--hds-icon-color:var(--hds-foreground-secondary)}.-hds-togglelist-item.expanded .-hds-list-item-wrapper .icon{transform:rotate(90deg)}.-hds-togglelist-item.expanded.hds-toggle-list-item-solid .sub-list-wrapper{margin-top:var(--hds-spacing-2)}.-hds-togglelist-item.expanded .sub-list-wrapper{height:auto;overflow:visible}.-hds-togglelist-item.disabled{color:var(--hds-foreground-inactive)}.-hds-togglelist-item.disabled .icon{--hds-icon-color:var(--hds-foreground-inactive)}.-hds-togglelist-item.hds-toggle-list-item-subtle-divider .main-list-wrapper{border-bottom:var(--hds-border-width) solid var(--hds-foreground-divider)}.-hds-togglelist-item .-hds-list-item-wrapper .text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.-hds-togglelist-item .sub-list-wrapper{height:0;overflow:hidden;padding-left:var(--hds-spacing-4)}
`;

// node_modules/@here/hds-togglelist/build/hds-togglelist-item.js
var ToggleListItem = class ToggleListItem2 extends ListItem {
  constructor() {
    super(...arguments);
    this.hasSubList = false;
    this.expanded = false;
    this.index = -1;
  }
  static get styles() {
    return [super.styles, styles39];
  }
  firstUpdated() {
    super.firstUpdated();
    const parentElem = this.parentNode;
    const slotContent = this.slotElement.assignedNodes({ flatten: true }).filter((e) => e instanceof ToggleList);
    if (parentElem instanceof ToggleList && parentElem.classList.contains("disabled")) {
      this.disabled = true;
    }
    if (slotContent.length !== 0) {
      this.hasSubList = true;
      this.icon = "chevron-right";
      this._appendSubList(slotContent);
    } else {
      this.hasSubList = false;
    }
    if (this.hasTooltip) {
      this.hasTooltip = false;
    }
  }
  render() {
    const classes = {
      disabled: this.disabled,
      expanded: this.expanded && this.hasSubList
    };
    classes[`hds-toggle-list-item-${this.groupVariant}`] = true;
    return html`
      <div class="-hds-togglelist-item ${classMap(classes)}" aria-expanded="${this.expanded}">
        <div class="main-list-wrapper" @click="${this._toggle}" @keydown="${this._onKeyDown}">
          ${super.render()}
        </div>
        <div class="sub-list-wrapper"></div>
      </div>
    `;
  }
  _toggle(e) {
    e.stopPropagation();
    if (!this.disabled) {
      this.expanded = this.hasSubList ? !this.expanded : false;
      this.dispatchEvent(new CustomEvent("change", {
        detail: {
          index: this.index,
          expanded: this.expanded
        },
        bubbles: true
      }));
    }
  }
  _appendSubList(slotContent) {
    for (let i = 0; i < slotContent.length; i++) {
      if (this.disabled) {
        slotContent[i].classList.add("disabled");
      }
      this.subListElement.append(slotContent[i]);
    }
  }
  _onKeyDown(e) {
    e.preventDefault();
    if (["Enter", "Space"].includes(e.code)) {
      this._toggle(e);
    }
  }
};
ToggleListItem.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: Boolean, attribute: false, reflect: true })
], ToggleListItem.prototype, "hasSubList", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], ToggleListItem.prototype, "expanded", void 0);
__decorate([
  property({ type: Number, attribute: false })
], ToggleListItem.prototype, "index", void 0);
__decorate([
  query(".sub-list-wrapper")
], ToggleListItem.prototype, "subListElement", void 0);
__decorate([
  query("slot")
], ToggleListItem.prototype, "slotElement", void 0);
ToggleListItem = __decorate([
  customElement("hds-togglelist-item")
], ToggleListItem);

// node_modules/@here/hds-togglelist/build/hds-togglelist.css.js
var styles40 = css`
:host(:focus){outline:0}:host([variant=subtle-divider]) ::slotted(hds-togglelist-item[id^=hds-list-item-]){box-shadow:none}.-hds-togglelist .-hds-list-wrapper{background:none;border:0;filter:none;max-width:none;padding:var(--hds-spacing-0)}
`;

// node_modules/@here/hds-togglelist/build/hds-togglelist.js
var ToggleList = class ToggleList2 extends List {
  constructor() {
    super(...arguments);
    this.expandMode = "many";
    this.defaultExpanded = false;
  }
  static get styles() {
    return [super.styles, styles40];
  }
  connectedCallback() {
    super.connectedCallback();
    this.addEventListener("change", this._onChange);
  }
  disconnectedCallback() {
    super.disconnectedCallback();
    this.removeEventListener("change", this._onChange);
  }
  render() {
    return html`
      <div class="-hds-togglelist" @slotchange="${this._onListSlotChange}">${super.render()}</div>
    `;
  }
  _getListItems() {
    return this.slotElement.assignedNodes({ flatten: true }).filter((e) => e instanceof ToggleListItem);
  }
  _updateItems() {
    const items = this._getListItems();
    for (let i = 0; i < items.length; i++) {
      items[i].index = i;
    }
  }
  _onChange(e) {
    if (this.expandMode === "one") {
      const event = e;
      if (event.detail.index > -1 && event.detail.expanded) {
        this._getListItems().forEach((item) => {
          item.expanded = event.detail.expanded ? e.target === item : false;
        });
      }
    }
  }
  _onListSlotChange() {
    if (this.defaultExpanded) {
      const items = this._getListItems();
      for (let i = 0; i < items.length; i++) {
        if (items[i].hasSubList && !items[i].disabled) {
          items[i].expanded = true;
          if (this.expandMode === "one") {
            break;
          }
        }
      }
    }
    this._updateItems();
  }
};
ToggleList.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: String, reflect: true, attribute: "expand-mode" })
], ToggleList.prototype, "expandMode", void 0);
__decorate([
  property({ type: Boolean, reflect: true, attribute: "default-expanded" })
], ToggleList.prototype, "defaultExpanded", void 0);
__decorate([
  query("slot")
], ToggleList.prototype, "slotElement", void 0);
ToggleList = __decorate([
  customElement("hds-togglelist")
], ToggleList);

// node_modules/@here/hds-react-components/ToggleList/HDSToggleList.js
new ToggleList();
var HDSToggleList = import_react24.default.forwardRef((props, ref) => {
  const { children, expandMode, defaultExpanded, className, onChange: onChange2, onSelect, ...rest } = props;
  const innerRef = import_react24.default.useRef(null);
  (0, import_react24.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    onChange2 && onChange2(e.detail);
  };
  const _handleSelect = (e) => {
    onSelect && onSelect(e.detail);
  };
  (0, import_react24.useEffect)(() => {
    if (onChange2 && innerRef.current) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, innerRef]);
  (0, import_react24.useEffect)(() => {
    if (onSelect && innerRef.current) {
      innerRef.current.addEventListener("select", _handleSelect);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("select", _handleSelect);
    };
  }, [onSelect, innerRef]);
  return import_react24.default.createElement("hds-togglelist", { ...expandMode && { "expand-mode": expandMode }, ...defaultExpanded && { "default-expanded": defaultExpanded }, ...className && { class: className }, ref: innerRef, ...rest }, children);
});
HDSToggleList.defaultProps = {
  expandMode: "many",
  defaultExpanded: false
};
var HDSToggleList_default = HDSToggleList;

// node_modules/@here/hds-react-components/ToggleList/HDSToggleListItem.js
var React30 = __toESM(require_react(), 1);
new ToggleListItem();
var HDSToggleListItem = React30.forwardRef((props, ref) => {
  const { children, expanded, className, ...rest } = props;
  return React30.createElement("hds-togglelist-item", { ...expanded && { expanded }, ...className && { class: className }, ref, ...rest }, children);
});
HDSToggleListItem.defaultProps = {
  expanded: false
};
var HDSToggleListItem_default = HDSToggleListItem;

// node_modules/@here/hds-react-components/HeroSearch/HDSHeroSearch.js
var import_react25 = __toESM(require_react(), 1);

// node_modules/@here/hds-hero-search/build/hds-hero-search.css.js
var styles41 = css`
.wrapper,.wrapper .input-wrapper{--hds-icon-color:var(--hds-foreground-primary)}.wrapper .input-wrapper{border-radius:3.125rem;height:2.875rem}.wrapper .input-wrapper.disabled{color:var(--hds-foreground-inactive);cursor:not-allowed}.wrapper .input-wrapper.disabled hds-icon{--hds-icon-color:var(--hds-foreground-inactive)}.wrapper .input-wrapper.disabled:active,.wrapper .input-wrapper.disabled:focus,.wrapper .input-wrapper.disabled:focus-within{outline:none}.wrapper .input-wrapper.disabled input{cursor:not-allowed}.wrapper .input-wrapper input,.wrapper .input-wrapper input::placeholder{color:var(--hds-foreground-primary)}.wrapper .input-wrapper input,.wrapper .input-wrapper input::placeholder,.wrapper .input-wrapper input:focus::placeholder{font:var(--hds-body-strong-font);letter-spacing:var(--hds-body-strong-letter-spacing);-webkit-text-decoration:var(--hds-body-strong-text-decoration,inherit);text-decoration:var(--hds-body-strong-text-decoration,inherit)}.wrapper .input-wrapper input:focus::placeholder{color:var(--hds-foreground-tertiary)}.wrapper .input-wrapper input:disabled::placeholder,.wrapper .input-wrapper input:read-only::placeholder{color:var(--hds-foreground-inactive)}.wrapper .input-wrapper input:disabled{color:var(--hds-foreground-primary)}.wrapper .input-wrapper hds-icon{--hds-icon-color:var(--hds-foreground-primary)}.wrapper .input-wrapper ::slotted(hds-icon:not(:first-of-type)){margin-left:var(--hds-spacing-4)}.wrapper .input-wrapper .search-icon{margin-left:var(--hds-spacing-4);margin-right:var(--hds-spacing-0)}.wrapper .input-wrapper .slot-right-wrapper{display:flex;margin-right:var(--hds-spacing-4)}.wrapper .input-wrapper .clear-action-icon,.wrapper .input-wrapper ::slotted(hds-icon){cursor:pointer;margin-left:var(--hds-spacing-3);padding:var(--hds-spacing-0)}.wrapper .input-wrapper .clear-action-icon{margin-right:var(--hds-spacing-4)}
`;

// node_modules/@here/hds-hero-search/build/hds-hero-search.js
var HeroSearch = class HeroSearch2 extends Input {
  firstUpdated() {
    this.type = "text";
  }
  renderSearchIcon() {
    if (this === this.ownerDocument.activeElement || this.value) {
      return nothing;
    }
    return html` <hds-icon
      class="search-icon"
      name="search"
      icon-style="solid"
      size="16px"
    ></hds-icon>`;
  }
  renderClearIcon() {
    if (this.value === "" || this.value == null || !this.value || this.disabled) {
      return nothing;
    }
    return html` <hds-icon
      name="clear"
      class="clear-action-icon"
      @click="${super.clear}"
    ></hds-icon>`;
  }
  renderRightActionTray() {
    if (this.value || this.disabled) {
      return nothing;
    }
    return super.renderSlotRight();
  }
  render() {
    const classes = {
      disabled: this.disabled
    };
    return html`
      <div class="wrapper">
        <div class="input-wrapper ${classMap(classes)}">
          ${this.renderSearchIcon()} ${super.renderInput()} ${this.renderClearIcon()}
          ${this.renderRightActionTray()}
        </div>
      </div>
    `;
  }
};
HeroSearch.styles = [Input.styles, styles41];
HeroSearch = __decorate([
  customElement("hds-hero-search")
], HeroSearch);

// node_modules/@here/hds-react-components/HeroSearch/HDSHeroSearch.js
new HeroSearch();
var HDSHeroSearch = import_react25.default.forwardRef((props, ref) => {
  const { children, value, id: id2, name, placeholder, disabled, className, required, onAction, onChange: onChange2, onKeyDown, onKeyUp, onBlur, onFocus: onFocus2, actions, onInput, ...rest } = props;
  const innerRef = import_react25.default.useRef(null);
  (0, import_react25.useImperativeHandle)(ref, () => innerRef.current);
  const _handleAction = (e) => {
    if (e.target !== innerRef.current)
      return;
    onAction && onAction(e);
  };
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onChange2 && onChange2(e);
  };
  const _handleInput = (e) => {
    if (e.target !== innerRef.current)
      return;
    onInput && onInput(e);
  };
  const _handleBlur = (e) => {
    if (e.target !== innerRef.current)
      return;
    onBlur && onBlur(e);
  };
  const _handleFocus = (e) => {
    if (e.target !== innerRef.current)
      return;
    onFocus2 && onFocus2(e);
  };
  const _handleKeyDown = (e) => {
    if (e.target !== innerRef.current)
      return;
    onKeyDown && onKeyDown(e);
  };
  const _handleKeyUp = (e) => {
    if (e.target !== innerRef.current)
      return;
    onKeyUp && onKeyUp(e);
  };
  (0, import_react25.useEffect)(() => {
    if (onAction && innerRef.current) {
      innerRef.current.addEventListener("action", _handleAction);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("action", _handleAction);
    };
  }, [onAction, innerRef]);
  (0, import_react25.useEffect)(() => {
    if (onChange2 && innerRef.current) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, innerRef]);
  (0, import_react25.useEffect)(() => {
    if (onInput && innerRef.current) {
      innerRef.current.addEventListener("input", _handleInput);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("input", _handleInput);
    };
  }, [onInput, innerRef]);
  (0, import_react25.useEffect)(() => {
    if (onBlur && innerRef.current) {
      innerRef.current.addEventListener("blur", _handleBlur);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("blur", _handleBlur);
    };
  }, [onBlur, innerRef]);
  (0, import_react25.useEffect)(() => {
    if (onFocus2 && innerRef.current) {
      innerRef.current.addEventListener("focus", _handleFocus);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("focus", _handleFocus);
    };
  }, [onFocus2, innerRef]);
  (0, import_react25.useEffect)(() => {
    if (onKeyDown && innerRef.current) {
      innerRef.current.addEventListener("keydown", _handleKeyDown);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("keydown", _handleKeyDown);
    };
  }, [onKeyDown, innerRef]);
  (0, import_react25.useEffect)(() => {
    if (onKeyUp && innerRef.current) {
      innerRef.current.addEventListener("keyup", _handleKeyUp);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("keyup", _handleKeyUp);
    };
  }, [onKeyUp, innerRef]);
  return import_react25.default.createElement(
    "hds-hero-search",
    { value, id: id2, name, placeholder, ...disabled && { disabled: true }, ...className && { class: className }, ...required && { required: true }, ref: innerRef, ...rest },
    children,
    actions
  );
});
HDSHeroSearch.defaultProps = {
  id: "",
  name: void 0,
  placeholder: void 0,
  pattern: void 0,
  iconCategory: "core-ui",
  disabled: false,
  required: false,
  ariaLabelledby: void 0,
  ariaLabel: "",
  passwordVisibility: "masked",
  autocomplete: ""
};
var HDSHeroSearch_default = HDSHeroSearch;

// node_modules/@here/hds-react-components/ProgressIndicator/HDSProgressIndicator.js
var React32 = __toESM(require_react(), 1);
new ProgressIndicator();
var HDSProgressIndicator = React32.forwardRef((props, ref) => {
  const { className, indicatorType, ...rest } = props;
  return React32.createElement("hds-progress-indicator", { ref, ...indicatorType && { "indicator-type": indicatorType }, ...className && { class: className }, ...rest });
});
HDSProgressIndicator.defaultProps = {
  color: "accent",
  variant: "indeterminate",
  size: "large",
  progress: 0,
  indicatorType: "linear"
};
var HDSProgressIndicator_default = HDSProgressIndicator;

// node_modules/@here/hds-react-components/Panel/HDSPanel.js
var import_react26 = __toESM(require_react(), 1);
new Panel();
var HDSPanel = import_react26.default.forwardRef((props, ref) => {
  const { variant, panelPosition, panelInteraction, partialSize, expanded, children, className, onChange: onChange2, ...rest } = props;
  const innerRef = import_react26.default.useRef(null);
  (0, import_react26.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onChange2 && onChange2(e.detail);
  };
  (0, import_react26.useEffect)(() => {
    if (onChange2 && innerRef.current) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, innerRef]);
  const attributes = {};
  variant && (attributes.variant = variant);
  panelInteraction && (attributes["panel-interaction"] = panelInteraction);
  panelPosition && (attributes["panel-position"] = panelPosition);
  partialSize && (attributes["partial-size"] = partialSize);
  expanded && (attributes.expanded = expanded);
  return import_react26.default.createElement("hds-panel", { ...attributes, ...className && { class: className }, ...rest, ref: innerRef }, children);
});
HDSPanel.defaultProps = {
  variant: "vertical",
  panelPosition: "left",
  panelInteraction: "none",
  partialSize: 0,
  expanded: "open"
};
var HDSPanel_default = HDSPanel;

// node_modules/@here/hds-tabs/build/hds-tab-bar.css.js
var styles42 = css`
:host{outline:none!important}:host(:focus){outline:0}.wrapper{align-items:center;box-sizing:border-box;display:flex;width:fit-content}.wrapper ::slotted(hds-tab){height:100%!important}.hds-tab-bar--variant-default{height:3rem}.hds-tab-bar--variant-wide{height:4rem}
`;

// node_modules/@here/hds-tabs/build/hds-tab.css.js
var styles43 = css`
:host{height:100%!important;outline:none!important}:host(:focus){outline:0}.tab{--hds-icon-color:var(--hds-foreground-secondary);align-items:center;background-color:initial;border-color:#0000;border-style:solid none;border-width:2px 0;box-sizing:border-box;color:var(--hds-foreground-secondary);cursor:pointer;display:flex;font:var(--hds-button-font);height:inherit;letter-spacing:var(--hds-button-letter-spacing);padding:var(--hds-spacing-0) var(--hds-spacing-6);-webkit-text-decoration:var(--hds-button-text-decoration,inherit);text-decoration:var(--hds-button-text-decoration,inherit)}.tab ::slotted(a){align-items:center!important;color:var(--hds-foreground-secondary)!important;display:flex!important;font:inherit!important;height:100%!important;letter-spacing:inherit!important;text-decoration:none!important}.tab ::slotted(a:focus-visible),.tab:hover{--hds-icon-color:var(--hds-foreground-secondary)!important;background:var(--hds-background-hover)!important;outline:none!important}.tab ::slotted(a:active),.tab:active{background:var(--hds-background-press)!important}.tab:focus-within:focus-visible{--hds-icon-color:var(--hds-foreground-secondary)!important;color:var(--hds-foreground-primary)!important;outline:var(--hds-object-focused) solid .125rem!important}.tab[aria-selected=true]:focus-visible:focus-within{outline:var(--hds-object-focused) solid .125rem}.tab[aria-selected=true],.tab[aria-selected=true] ::slotted(a){--hds-icon-color:var(--hds-foreground-secondary)!important;color:var(--hds-foreground-primary)!important;cursor:pointer!important;outline:none!important}.tab[aria-selected=true]{border-bottom:2px solid var(--hds-action)}.tab[aria-selected=true],.tab[aria-selected=true]:hover{--hds-icon-color:var(--hds-foreground-primary)!important}.tab.disabled{--hds-icon-color:var(--hds-onlightcolor-inactive)!important;color:var(--hds-foreground-inactive)!important;cursor:default!important}.tab.disabled:hover{background:#0000!important}.tab.hds-tab--icon-label hds-icon:first-of-type{margin-right:var(--hds-spacing-2)}.tab.hds-tab--icon-actionable hds-icon:last-of-type{--hds-icon-color:var(--hds-foreground-secondary);margin-left:var(--hds-spacing-2)}.tab.external-link hds-icon:last-of-type{margin-top:-3px}.hds-tab-wrapper{display:inline;height:inherit;position:relative}.hds-tab-wrapper .hds-tab-menu-wrapper{display:none;left:0;margin-top:.0625rem;padding-bottom:var(--hds-spacing-2);padding-top:var(--hds-spacing-2);position:absolute}.hds-tab-wrapper .hds-tab-menu-wrapper.hds-tab-menu-wrapper--show-menu{background:var(--hds-background-secondary);border-color:var(--hds-foreground-divider);border-radius:0 0 var(--hds-border-radius) var(--hds-border-radius);border-style:solid;border-width:0 .0625rem .0625rem;display:block}
`;

// node_modules/@here/hds-tabs/build/hds-tab.js
var Tab_1;
var Tab = Tab_1 = class Tab2 extends BaseElement {
  constructor() {
    super(...arguments);
    this.isTabbable = true;
    this.icon = "";
    this.iconCategory = "core-ui";
    this.link = false;
    this.clickAction = false;
    this.externalLink = false;
    this.disabled = false;
    this.ariaRole = "tab";
    this.tabPanelId = "";
    this.selected = false;
    this.variant = "default";
    this.chevron = false;
    this.rightSideIcon = "";
    this.showMenu = false;
    this._handleKeydown = (e) => {
      switch (e.key) {
        case "Enter":
        case " ":
          this.showMenu = true;
          break;
        case "Tab":
          this.showMenu = false;
          break;
      }
    };
  }
  get clickActionValue() {
    return this.clickAction;
  }
  showSelectedTabMenu(showMenu) {
    this.showMenu = showMenu;
    if (this.hasMenuContent()) {
      this.rightSideIcon = showMenu ? "chevron-up" : "chevron-down";
    } else {
      this.rightSideIcon = "";
    }
  }
  updated(_changedProperties) {
    if (this.selected && _changedProperties.has("selected")) {
      const tabBar = closestElement("hds-tab-bar", this);
      const tabPanelContainer = this.ownerDocument.querySelector(`[tab-bar-id="${tabBar.id}"]`);
      if (tabPanelContainer) {
        tabPanelContainer.selectedPanel = this.tabPanelId;
      }
    }
  }
  renderIcon(_icon, _category) {
    if (!_icon) {
      return nothing;
    }
    return html` <hds-icon name="${_icon}" size="16px" category="${_category}"></hds-icon>`;
  }
  renderIconRight(_icon, _category) {
    if (!_icon || !this.chevron && _icon.startsWith("chevron-")) {
      return nothing;
    }
    return html` <hds-icon name="${_icon}" size="16px" category="${_category}"></hds-icon>`;
  }
  firstUpdated() {
    this.id = this.id || `hds-tab-${++Tab_1.tabIdCounter}`;
    if (this.hasMenuContent()) {
      this.rightSideIcon = "chevron-down";
    } else if (this.link && this.externalLink) {
      this.rightSideIcon = "external-link";
    } else {
      this.rightSideIcon = "";
    }
  }
  render() {
    const classes = {
      tab: true,
      disabled: this.disabled,
      "hds-tab--icon-label": this.icon,
      "hds-tab--icon-actionable": this.rightSideIcon,
      "external-link": this.externalLink
    };
    classes[`hds-tab--variant-${this.variant}`] = true;
    const slotClasses = {
      "hds-tab-menu-wrapper--show-menu": this.showMenu
    };
    return html`
      <div
        class="hds-tab-wrapper"
        @click="${this._handleClick}"
        @keydown="${this._handleKeydown}"
        @mouseover="${this._handleMouseMove}"
        @mouseout="${this._handleMouseMove}"
      >
        ${this.link ? this._renderAsLink(classes) : this._renderAsButton(classes)}
        <slot id="menu" class="hds-tab-menu-wrapper ${classMap(slotClasses)}" name="menu"></slot>
      </div>
    `;
  }
  hasMenuContent() {
    return this.menuItemsSlot.assignedNodes({ flatten: true }).length !== 0;
  }
  _renderAsLink(classes) {
    return html`
      <div
        class="${classMap(classes)}"
        role="${ifDefined(this.ariaRole)}"
        aria-selected="${ifDefined(this.selected)}"
        aria-disabled="${ifDefined(this.disabled)}"
        aria-controls="${ifDefined(this.ariaControls)}"
        ?disabled="${this.disabled}"
      >
        ${this.renderIcon(this.icon, this.iconCategory)}
        <slot></slot>
        ${this.renderIconRight(this.rightSideIcon, "core-ui")}
      </div>
    `;
  }
  _renderAsButton(classes) {
    return html`
      <button
        class="${classMap(classes)}"
        role="${ifDefined(this.ariaRole)}"
        aria-selected="${ifDefined(this.selected)}"
        aria-disabled="${ifDefined(this.disabled)}"
        aria-controls="${ifDefined(this.ariaControls)}"
        ?disabled="${this.disabled}"
      >
        ${this.renderIcon(this.icon, this.iconCategory)}
        <slot></slot>
        ${this.renderIconRight(this.rightSideIcon, "core-ui")}
      </button>
    `;
  }
  async _handleClick(e) {
    if (this.disabled)
      return;
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("tabselect", { detail: this.id, bubbles: true }));
    if (this.link && this.externalLink && e && e.target && e.target.nodeName !== "A") {
      e.preventDefault();
      e.stopPropagation();
      const anchor = findElementsInSlot(this.defaultSlot, HTMLAnchorElement)[0];
      if (anchor) {
        anchor.click();
      }
    }
  }
  _handleMouseMove(e) {
    if (this.clickAction) {
      return;
    }
    if (this.rightSideIcon && !this.link) {
      e.preventDefault();
      switch (e.type) {
        case "mouseout":
          if (this.showMenu) {
            this.showMenu = false;
            this.rightSideIcon = "chevron-down";
          }
          break;
        case "mouseover":
          if (!this.showMenu) {
            this.showMenu = true;
            this.rightSideIcon = "chevron-up";
          }
          break;
      }
    }
  }
};
Tab.tabIdCounter = 0;
Tab.styles = styles43;
Tab.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: String })
], Tab.prototype, "icon", void 0);
__decorate([
  property({ type: String, attribute: "icon-category" })
], Tab.prototype, "iconCategory", void 0);
__decorate([
  property({ type: Boolean })
], Tab.prototype, "link", void 0);
__decorate([
  property({ type: Boolean, attribute: "click-action" })
], Tab.prototype, "clickAction", void 0);
__decorate([
  property({ type: Boolean, attribute: "external-link" })
], Tab.prototype, "externalLink", void 0);
__decorate([
  property({ type: Boolean })
], Tab.prototype, "disabled", void 0);
__decorate([
  property({ type: String, attribute: "aria-controls" })
], Tab.prototype, "ariaControls", void 0);
__decorate([
  property({ type: String, attribute: "aria-role" })
], Tab.prototype, "ariaRole", void 0);
__decorate([
  property({ type: String, attribute: "tab-panel-id" })
], Tab.prototype, "tabPanelId", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Tab.prototype, "selected", void 0);
__decorate([
  property({ type: String, attribute: false })
], Tab.prototype, "variant", void 0);
__decorate([
  property({ type: Boolean })
], Tab.prototype, "chevron", void 0);
__decorate([
  state()
], Tab.prototype, "rightSideIcon", void 0);
__decorate([
  state()
], Tab.prototype, "showMenu", void 0);
__decorate([
  query("#menu")
], Tab.prototype, "menuItemsSlot", void 0);
__decorate([
  query("slot:not([name])", false)
], Tab.prototype, "defaultSlot", void 0);
Tab = Tab_1 = __decorate([
  customElement("hds-tab")
], Tab);

// node_modules/@here/hds-tabs/build/hds-tab-bar.js
var TabBar_1;
var TabBar = TabBar_1 = class TabBar2 extends LitElement {
  constructor() {
    super(...arguments);
    this.variant = "default";
    this.selectFirstTab = false;
    this.ariaRole = "tablist";
    this.previousTabIndex = "";
    this.tabElements = [];
  }
  firstUpdated() {
    this.id = this.id || `hds-tab-bar-${++TabBar_1.tabBarCounter}`;
    this._onSlotChange();
    this._setDefaultSelectedTab();
  }
  updated() {
    this._updateTabs();
  }
  render() {
    const classes = {
      wrapper: true
    };
    classes[`hds-tab-bar--variant-${this.variant}`] = true;
    return html`
      <div
        id="tabs"
        class="${classMap(classes)}"
        role="${ifDefined(this.ariaRole)}"
        aria-label="${ifDefined(this.ariaLabel)}"
        @tabselect="${this._handleSelectedTab}"
      >
        <slot @slotchange="${this._onSlotChange}"></slot>
      </div>
    `;
  }
  _onSlotChange() {
    this.tabElements = findElementsInSlot(this.tabsSlot, Tab);
    this._setDefaultSelectedTab();
    this._updateTabs();
  }
  _updateTabs() {
    for (let i = 0; i < this.tabElements.length; i += 1) {
      this.tabElements[i].variant = this.variant;
    }
  }
  _setDefaultSelectedTab() {
    if (this.tabElements.length === 0) {
      return;
    }
    if (this._activateFirstSelectedTab()) {
      return;
    }
    if (this.selectFirstTab) {
      this.tabElements[0].selected = true;
    }
  }
  _activateFirstSelectedTab() {
    const selectedTabs = this.tabElements.filter((tab) => tab.selected);
    if (selectedTabs.length === 0) {
      return false;
    }
    this._clearActiveTab();
    selectedTabs[0].selected = true;
    return true;
  }
  async _handleSelectedTab(evt) {
    evt.stopPropagation();
    const { detail: tabId } = evt;
    const currentSelectedTab = this._getSelectedTab();
    const newSelectedTabIndex = this._getTabIndex(tabId);
    const newSelectedTab = this.tabElements.find((tab) => tab.id === tabId);
    if ((currentSelectedTab == null ? void 0 : currentSelectedTab.clickActionValue) || (newSelectedTab == null ? void 0 : newSelectedTab.clickActionValue)) {
      this._handleClickShowMenu(newSelectedTab);
    }
    if (newSelectedTabIndex !== -1) {
      this._clearActiveTab();
      this._setSelectedTab(tabId);
      if ((currentSelectedTab == null ? void 0 : currentSelectedTab.id) !== tabId) {
        await this.updateComplete;
        this.dispatchEvent(new CustomEvent("select", { detail: newSelectedTabIndex }));
      }
    }
  }
  _handleClickShowMenu(newSelectedTab) {
    if ((newSelectedTab == null ? void 0 : newSelectedTab.id) === this.previousTabIndex) {
      newSelectedTab.showSelectedTabMenu(false);
      this.previousTabIndex = "";
    } else {
      this.tabElements.forEach((tab) => tab.showSelectedTabMenu(tab === newSelectedTab && tab.clickActionValue));
      this.previousTabIndex = newSelectedTab == null ? void 0 : newSelectedTab.id;
    }
  }
  _getTabIndex(tabId) {
    return this.tabElements.findIndex((tab) => tab.id === tabId);
  }
  _getSelectedTab() {
    return this.tabElements.find((tab) => tab.selected);
  }
  _clearActiveTab() {
    for (const tab of this.tabElements) {
      tab.selected = false;
    }
  }
  _setSelectedTab(tabId) {
    for (const tab of this.tabElements) {
      if (tab.id === tabId) {
        tab.selected = true;
        return;
      }
    }
  }
};
TabBar.styles = styles42;
TabBar.tabBarCounter = 0;
__decorate([
  property({ type: String, attribute: true })
], TabBar.prototype, "variant", void 0);
__decorate([
  property({ type: Boolean, attribute: "select-first-tab" })
], TabBar.prototype, "selectFirstTab", void 0);
__decorate([
  property({ type: String, attribute: "aria-label" })
], TabBar.prototype, "ariaLabel", void 0);
__decorate([
  property({ type: String, attribute: "aria-role" })
], TabBar.prototype, "ariaRole", void 0);
__decorate([
  query("slot")
], TabBar.prototype, "tabsSlot", void 0);
TabBar = TabBar_1 = __decorate([
  customElement("hds-tab-bar")
], TabBar);

// node_modules/@here/hds-tabs/build/hds-tab-panel.css.js
var styles44 = css`
.hds-tab-panel-wrapper{display:block;text-align:left;width:100%}
`;

// node_modules/@here/hds-tabs/build/hds-tab-panel.js
var TabPanel = class TabPanel2 extends LitElement {
  constructor() {
    super(...arguments);
    this.show = false;
    this.ariaLabelledby = "";
  }
  render() {
    const panelStyles = {
      display: ""
    };
    if (!this.show) {
      panelStyles.display = "none";
    }
    return html`
      <div
        class="hds-tab-panel-wrapper"
        role="tabpanel"
        aria-labelledby="${ifDefined(this.ariaLabelledby)}"
        style=${styleMap(panelStyles)}
      >
        <slot></slot>
      </div>
    `;
  }
};
TabPanel.styles = styles44;
__decorate([
  property({ type: Boolean, reflect: true, attribute: false })
], TabPanel.prototype, "show", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "aria-labelledby" })
], TabPanel.prototype, "ariaLabelledby", void 0);
TabPanel = __decorate([
  customElement("hds-tab-panel")
], TabPanel);

// node_modules/@here/hds-tabs/build/hds-tab-panel-container.js
var TabPanelContainer = class TabPanelContainer2 extends LitElement {
  constructor() {
    super(...arguments);
    this.tabBarId = "";
    this.selectedPanel = "";
    this.panelElements = [];
  }
  updated(_changedProperties) {
    if (_changedProperties.has("selectedPanel")) {
      this._setSelectedPanel(this.selectedPanel);
    }
  }
  firstUpdated() {
    this._onSlotChange();
  }
  render() {
    return html` <slot @slotchange="${this._onSlotChange}"></slot>`;
  }
  _onSlotChange() {
    this.panelElements = findElementsInSlot(this.panelSlot, TabPanel);
    this._setSelectedPanel(this.selectedPanel);
  }
  _setSelectedPanel(panelId) {
    this.panelElements.forEach((panel) => {
      panel.show = panel.id === panelId;
    });
  }
};
__decorate([
  property({ type: String, reflect: true, attribute: "tab-bar-id" })
], TabPanelContainer.prototype, "tabBarId", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "selected-panel" })
], TabPanelContainer.prototype, "selectedPanel", void 0);
__decorate([
  query("slot")
], TabPanelContainer.prototype, "panelSlot", void 0);
TabPanelContainer = __decorate([
  customElement("hds-tab-panel-container")
], TabPanelContainer);

// node_modules/@here/hds-react-components/Tabs/HDSTabBar.js
var import_react27 = __toESM(require_react(), 1);
new TabBar();
var HDSTabBar = import_react27.default.forwardRef((props, ref) => {
  const { children, variant, className, onSelect, selectFirstTab, ariaLabel, ariaRole, ...rest } = props;
  const innerRef = (0, import_react27.useRef)(null);
  (0, import_react27.useImperativeHandle)(ref, () => innerRef.current);
  const _handleSelected = (e) => {
    if (e.target !== innerRef.current)
      return;
    onSelect && onSelect(e.detail);
  };
  (0, import_react27.useEffect)(() => {
    if (innerRef.current) {
      if (onSelect) {
        innerRef.current.addEventListener("select", _handleSelected);
      }
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("select", _handleSelected);
    };
  }, [onSelect, innerRef]);
  return import_react27.default.createElement("hds-tab-bar", { variant, ...selectFirstTab && { "select-first-tab": selectFirstTab }, ...ariaRole && { "aria-role": ariaRole }, ...className && { class: className }, "aria-label": ariaLabel, ref: innerRef, ...rest }, children);
});
HDSTabBar.defaultProps = {
  variant: "default",
  selectFirstTab: false,
  ariaLabel: void 0,
  ariaRole: "tablist"
};
var HDSTabBar_default = HDSTabBar;

// node_modules/@here/hds-react-components/Tabs/HDSTab.js
var import_react28 = __toESM(require_react(), 1);
new Tab();
var HDSTab = import_react28.default.forwardRef(({ icon, iconCategory, selected, disabled, ariaControls, ariaRole, link, chevron, children, tabPanelId, className, clickAction, externalLink, menu, ...rest }, ref) => import_react28.default.createElement(
  "hds-tab",
  { icon, "aria-controls": ariaControls, ...ariaRole && { "aria-role": ariaRole }, ...tabPanelId && { "tab-panel-id": tabPanelId }, ...selected && { selected }, ...disabled && { disabled }, ...className && { class: className }, ...link && { link }, ...chevron && { chevron }, ...clickAction && { "click-action": clickAction }, ...externalLink && { "external-link": externalLink }, ...iconCategory && { "icon-category": iconCategory }, ref, ...rest },
  children,
  menu && import_react28.default.createElement("div", { slot: "menu" }, menu)
));
HDSTab.defaultProps = {
  icon: "",
  iconCategory: "core-ui",
  link: false,
  clickAction: false,
  externalLink: false,
  disabled: false,
  ariaControls: void 0,
  ariaRole: "tab",
  tabPanelId: "",
  selected: false
};
var HDSTab_default = HDSTab;

// node_modules/@here/hds-react-components/Tabs/HDSTabPanelContainer.js
var import_react29 = __toESM(require_react(), 1);
new TabPanelContainer();
var HDSTabPanelContainer = import_react29.default.forwardRef((props, ref) => {
  const { children, selectedPanel, tabBarId, className, ...rest } = props;
  return import_react29.default.createElement("hds-tab-panel-container", { ...className && { class: className }, ...tabBarId && { "tab-bar-id": tabBarId }, ...selectedPanel && { "selected-panel": selectedPanel }, ref, ...rest }, children);
});
HDSTabPanelContainer.defaultProps = {
  tabBarId: "",
  selectedPanel: ""
};
var HDSTabPanelContainer_default = HDSTabPanelContainer;

// node_modules/@here/hds-react-components/Tabs/HDSTabPanel.js
var import_react30 = __toESM(require_react(), 1);
new TabPanel();
var HDSTabPanel = import_react30.default.forwardRef(({ show, ariaLabelledby, children, className, ...rest }, ref) => import_react30.default.createElement("hds-tab-panel", { ...className && { class: className }, ...ariaLabelledby && { "aria-labelledby": ariaLabelledby }, icon: show, ref, ...rest }, children));
HDSTabPanel.defaultProps = {
  show: false,
  ariaLabelledby: ""
};
var HDSTabPanel_default = HDSTabPanel;

// node_modules/@here/hds-react-components/Tooltip/HDSTooltip.js
var import_react31 = __toESM(require_react(), 1);
new Tooltip();
var idCounter2 = 1;
var HDSTooltip = import_react31.default.forwardRef((props, ref) => {
  const { position: position2, children, interactive, trigger, id: id2, content, disabled, className, ...rest } = props;
  const [isReady, setIsReady] = (0, import_react31.useState)(false);
  const targetRef = (0, import_react31.useRef)(null);
  const idRef = (0, import_react31.useRef)(`hds-tooltip-${id2 || idCounter2++}`);
  const targetClone = import_react31.default.isValidElement(children) ? (
    // @ts-ignore
    import_react31.default.cloneElement(children, { ref: targetRef })
  ) : content;
  (0, import_react31.useImperativeHandle)(ref, () => targetRef.current);
  (0, import_react31.useEffect)(() => {
    if (targetRef.current && targetRef.current.setAttribute) {
      targetRef.current.setAttribute("data-hds-tooltip", idRef.current);
      setIsReady(true);
    }
  }, [targetRef]);
  return import_react31.default.createElement(
    import_react31.default.Fragment,
    null,
    targetClone,
    isReady && import_react31.default.createElement(
      "hds-tooltip",
      { id: idRef.current, ...position2 && { position: position2 }, ...className && { class: className }, ...interactive && { interactive }, ...trigger && { trigger }, ref, ...disabled && { disabled }, ...rest },
      import_react31.default.createElement("div", null, content)
    )
  );
});
HDSTooltip.defaultProps = {
  id: "",
  disabled: false,
  position: "bottom",
  interactive: false,
  trigger: "mouseenter focus"
};
var HDSTooltip_default = HDSTooltip;

// node_modules/@here/hds-react-components/Chip/HDSChip.js
var import_react32 = __toESM(require_react(), 1);

// node_modules/@here/hds-chip/build/hds-chip.css.js
var styles45 = css`
:host{display:block}:host(:focus){outline:0}.-hds-chip-wrapper{align-items:center;border:0;display:flex;font:var(--hds-caption-font);letter-spacing:var(--hds-caption-letter-spacing);overflow:hidden;position:relative;-webkit-text-decoration:var(--hds-caption-text-decoration,inherit);text-decoration:var(--hds-caption-text-decoration,inherit);-webkit-user-select:none;user-select:none;width:fit-content}.-hds-chip-wrapper.with-avatar,.-hds-chip-wrapper.with-image{padding-left:var(--hds-spacing-0)}.-hds-chip-wrapper.with-avatar .image,.-hds-chip-wrapper.with-image .image{display:block;order:1}.-hds-chip-wrapper.with-avatar .label,.-hds-chip-wrapper.with-image .label{margin-left:var(--hds-spacing-2)}.-hds-chip-wrapper.with-icon .image{--hds-icon-color:var(--hds-foreground-secondary);display:block;order:1}.-hds-chip-wrapper .label{color:var(--hds-foreground-primary);font:var(--hds-caption-font);letter-spacing:var(--hds-caption-letter-spacing);max-width:var(--hds-chip-max-width);order:2;overflow:hidden;-webkit-text-decoration:var(--hds-caption-text-decoration,inherit);text-decoration:var(--hds-caption-text-decoration,inherit);text-overflow:ellipsis;white-space:nowrap}.-hds-chip-wrapper .remove{--hds-icon-color:var(--hds-foreground-secondary);background:0;border:0;cursor:pointer;display:inherit;margin:var(--hds-spacing-0) var(--hds-spacing-0) var(--hds-spacing-0) var(--hds-spacing-2);order:3;outline:0;padding:var(--hds-spacing-0)}.-hds-chip-wrapper.clickable:active,.-hds-chip-wrapper.clickable:focus{box-shadow:0 0 0 .125rem var(--hds-object-focused);outline:0}.-hds-chip-wrapper.small{border-radius:.75rem;height:1.5rem}.-hds-chip-wrapper.small .label{line-height:1.5rem}.-hds-chip-wrapper.small.with-avatar .image,.-hds-chip-wrapper.small.with-image .image{border-radius:.75rem;-webkit-clip-path:circle(.75rem at center);clip-path:circle(.75rem at center);height:1.5rem;width:1.5rem}.-hds-chip-wrapper.small.with-avatar:before,.-hds-chip-wrapper.small.with-image:before{background:var(--hds-chip-image-border-color);border-radius:.875rem;content:"";height:1.75rem;left:-.125rem;position:absolute;top:-.125rem;width:1.75rem}.-hds-chip-wrapper.small.with-icon{padding-left:.375rem}.-hds-chip-wrapper.small.with-icon.small .image{padding-right:var(--hds-spacing-1)}.-hds-chip-wrapper.small.with-icon .image{border-radius:.75rem;-webkit-clip-path:circle(.75rem at center);clip-path:circle(.75rem at center);height:1.5rem;width:1.5rem}.-hds-chip-wrapper.small ::slotted(hds-icon){align-items:center;display:flex;height:100%;justify-content:center;width:100%}.-hds-chip-wrapper.small ::slotted(img){height:1.5rem;object-fit:cover;width:1.5rem}.-hds-chip-wrapper.small ::slotted(a){font:inherit!important;letter-spacing:inherit!important}.-hds-chip-wrapper.small ::slotted(a:focus){margin-right:calc(var(--hds-spacing-1)*.5);outline-color:var(--hds-object-focused)!important}.-hds-chip-wrapper.small{padding:var(--hds-spacing-0) var(--hds-spacing-3)}.-hds-chip-wrapper.small.with-avatar,.-hds-chip-wrapper.small.with-icon,.-hds-chip-wrapper.small.with-image{padding:var(--hds-spacing-0) var(--hds-spacing-3) var(--hds-spacing-0) var(--hds-spacing-0)}.-hds-chip-wrapper.medium{border-radius:1rem;height:2rem}.-hds-chip-wrapper.medium .label{line-height:2rem}.-hds-chip-wrapper.medium.with-avatar .image,.-hds-chip-wrapper.medium.with-image .image{border-radius:1rem;-webkit-clip-path:circle(1rem at center);clip-path:circle(1rem at center);height:2rem;width:2rem}.-hds-chip-wrapper.medium.with-avatar:before,.-hds-chip-wrapper.medium.with-image:before{background:var(--hds-chip-image-border-color);border-radius:1.125rem;content:"";height:2.25rem;left:-.125rem;position:absolute;top:-.125rem;width:2.25rem}.-hds-chip-wrapper.medium.with-icon{padding-left:.5rem}.-hds-chip-wrapper.medium.with-icon.small .image{padding-right:var(--hds-spacing-1)}.-hds-chip-wrapper.medium.with-icon .image{border-radius:1rem;-webkit-clip-path:circle(1rem at center);clip-path:circle(1rem at center);height:2rem;width:2rem}.-hds-chip-wrapper.medium ::slotted(hds-icon){align-items:center;display:flex;height:100%;justify-content:center;width:100%}.-hds-chip-wrapper.medium ::slotted(img){height:2rem;object-fit:cover;width:2rem}.-hds-chip-wrapper.medium ::slotted(a){font:inherit!important;letter-spacing:inherit!important}.-hds-chip-wrapper.medium ::slotted(a:focus){margin-right:calc(var(--hds-spacing-1)*.5);outline-color:var(--hds-object-focused)!important}.-hds-chip-wrapper.medium{padding:var(--hds-spacing-0) var(--hds-spacing-4)}.-hds-chip-wrapper.medium.with-avatar,.-hds-chip-wrapper.medium.with-icon,.-hds-chip-wrapper.medium.with-image{padding:var(--hds-spacing-0) var(--hds-spacing-4) var(--hds-spacing-0) var(--hds-spacing-0)}.-hds-chip-wrapper.neutral{background-color:var(--hds-background-object)}.-hds-chip-wrapper.neutral.removable,.-hds-chip-wrapper.neutral.selectable{cursor:pointer}.-hds-chip-wrapper.neutral.with-icon .image{background-color:var(--hds-background-object)}.-hds-chip-wrapper.neutral.selectable.unselected:hover{background-color:var(--hds-background-object-hover)}.-hds-chip-wrapper.neutral.selectable.unselected:active,.-hds-chip-wrapper.neutral.selectable.unselected:active.with-icon .image,.-hds-chip-wrapper.neutral.selectable.unselected:focus,.-hds-chip-wrapper.neutral.selectable.unselected:focus.with-icon .image{background-color:var(--hds-background-object-press)}.-hds-chip-wrapper.neutral .label{color:var(--hds-foreground-primary)}.-hds-chip-wrapper.selected{background-color:var(--hds-action)}.-hds-chip-wrapper.selected.with-icon .image{--hds-icon-color:var(--hds-ondarkcolor-primary);background-color:var(--hds-action)}.-hds-chip-wrapper.selected:hover,.-hds-chip-wrapper.selected:hover.with-icon .image{background-color:var(--hds-action-hover)}.-hds-chip-wrapper.selected:active,.-hds-chip-wrapper.selected:focus{background-color:var(--hds-action-press);outline:0}.-hds-chip-wrapper.selected:active.with-icon .image,.-hds-chip-wrapper.selected:focus.with-icon .image{background-color:var(--hds-action-press)}.-hds-chip-wrapper.selected .label{color:var(--hds-ondarkcolor-primary)}.-hds-chip-wrapper.selected .remove{--hds-icon-color:var(--hds-ondarkcolor-primary)}.-hds-chip-wrapper.selected.disabled{background-color:var(--hds-action-disabled)}.-hds-chip-wrapper.selected.disabled:active,.-hds-chip-wrapper.selected.disabled:focus{box-shadow:none;outline:0}.-hds-chip-wrapper.selected.disabled.with-icon .image{--hds-icon-color:var(--hds-ondarkcolor-inactive)}.-hds-chip-wrapper.selected.disabled .label{color:var(--hds-ondarkcolor-inactive)}.-hds-chip-wrapper.selected.disabled .remove{--hds-icon-color:var(--hds-ondarkcolor-inactive)}.-hds-chip-wrapper.selected.dragging{background-color:var(--hds-action-press);border:unset;filter:var(--hds-object--dragged)}.-hds-chip-wrapper.dragging{background:var(--hds-background-object-press);border:unset;filter:var(--hds-object--dragged)}.-hds-chip-wrapper.disabled{background:var(--hds-background-object);cursor:not-allowed}.-hds-chip-wrapper.disabled .label{color:var(--hds-foreground-primary-disabled)}.-hds-chip-wrapper.disabled.with-icon .image{--hds-icon-color:var(--hds-foreground-primary-disabled)}.-hds-chip-wrapper.disabled .remove{--hds-icon-color:var(--hds-foreground-secondary-disabled);cursor:not-allowed}
`;

// node_modules/@here/hds-chip/build/hds-chip.js
var Chip_1;
var Chip = Chip_1 = class Chip2 extends BaseElement {
  constructor() {
    super(...arguments);
    this.size = "medium";
    this.disabled = false;
    this.selected = false;
    this.dragging = false;
    this.order = 0;
    this.status = "neutral";
    this.removable = false;
    this.image = false;
    this.icon = false;
    this.avatar = false;
    this.tooltip = false;
    this.selectable = false;
    this.removeButtonFocused = false;
    this.isTabbable = true;
  }
  connectedCallback() {
    super.connectedCallback();
    this.id = this.id || `hds-chip-item-${++Chip_1.chipIdCounter}`;
    this.setAttribute("data-hds-tooltip", this.id);
  }
  addEventListener(type, listener, options2) {
    if (type === "remove") {
      this.removable = true;
    }
    super.addEventListener(type, listener, options2);
  }
  firstUpdated(_changedProperties) {
    const slot = this.shadowRoot.querySelectorAll("slot")[0];
    const nodes = slot.assignedNodes();
    this.image = nodes.length >= 1;
    this.icon = this.image && nodes[0].nodeName.toLowerCase() === "hds-icon";
    if (this.image && nodes[0].nodeName.toLowerCase() === "hds-avatar") {
      const item = nodes[0];
      this.avatar = true;
      if (!item.borderless) {
        item.borderless = true;
      }
    }
    if (this.isTextOverflowing()) {
      this.tooltip = true;
    }
  }
  updated(_changedProperties) {
    super.updated(_changedProperties);
    if (_changedProperties.has("selected") && _changedProperties.get("selected") !== void 0) {
      this.dispatchEvent(new CustomEvent("select", { detail: this.selected }));
    }
  }
  render() {
    const classes = {
      dragging: this.dragging,
      disabled: this.disabled,
      selected: this.selected,
      unselected: !this.selected,
      removable: this.removable,
      selectable: this.selectable,
      clickable: this.selectable || this.removable,
      unclickable: !this.selectable && !this.removable,
      "with-image": this.image,
      "with-avatar": this.avatar,
      "with-icon": this.icon
    };
    classes[this.size] = true;
    classes[this.status] = true;
    return html`
      <div style="order: ${this.order}">
        <button
          tabindex="-1"
          class="-hds-chip-wrapper ${classMap(classes)}"
          @click="${this._toggleSelect}"
          @focus="${this._focus}"
          @blur="${this._blur}"
          ?disabled="${this.disabled}"
          aria-disabled="${this.disabled}"
        >
          ${this.renderImageOrIcon()} ${this.renderLabel()} ${this.renderCloseIcon()}
        </button>
        ${this.renderTooltip()}
      </div>
    `;
  }
  isTextOverflowing() {
    const maxWidthToken = getCSSVariable("--hds-chip-max-width", this);
    const baseline = parseFloat(getCSSVariable("--hds-font-baseline", this));
    let maxWidth = 100;
    if (maxWidthToken.includes("px")) {
      maxWidth = parseFloat(maxWidthToken);
    } else if (maxWidthToken.includes("rem")) {
      maxWidth = parseFloat(maxWidthToken) * baseline;
    }
    return maxWidth < this.labelEl.scrollWidth;
  }
  removeButtonClick(evt) {
    evt.preventDefault();
    evt.stopPropagation();
    const event = new CustomEvent("remove", {
      composed: true,
      bubbles: true
    });
    this.dispatchEvent(event);
  }
  renderImageOrIcon() {
    return html` <slot name="image" class="image" role="img" aria-labelledby="chip-label"></slot> `;
  }
  renderLabel() {
    return html`
      <div class="label" id="chip-label">
        <slot></slot>
      </div>
    `;
  }
  renderCloseIcon() {
    if (this.removable) {
      return html`
        <button
          class="remove"
          aria-label="Remove"
          ?disabled="${this.disabled}"
          @click="${this.removeButtonClick}"
        >
          <hds-icon name="cross" size="16px"></hds-icon>
        </button>
      `;
    }
    return nothing;
  }
  renderTooltip() {
    var _a6;
    if (this.tooltip && this.chipLabelSlot) {
      return html`
        <hds-tooltip id="${this.id}">
          <div>${(_a6 = this.chipLabelSlot.assignedNodes()[0]) == null ? void 0 : _a6.textContent}</div>
        </hds-tooltip>
      `;
    }
    return nothing;
  }
  _toggleSelect() {
    if (!this.selectable || this.disabled || this.dragging || this.status !== "neutral") {
      return;
    }
    this.selected = !this.selected;
  }
  _focus() {
    this.chipWrapper.setAttribute("tabindex", "0");
  }
  _blur() {
    this.chipWrapper.setAttribute("tabindex", "-1");
  }
};
Chip.styles = styles45;
Chip.chipIdCounter = 0;
Chip.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: String })
], Chip.prototype, "size", void 0);
__decorate([
  property({ type: Boolean })
], Chip.prototype, "disabled", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Chip.prototype, "selected", void 0);
__decorate([
  property({ type: Boolean })
], Chip.prototype, "dragging", void 0);
__decorate([
  property({ type: Number, attribute: "order" })
], Chip.prototype, "order", void 0);
__decorate([
  property({ type: String })
], Chip.prototype, "status", void 0);
__decorate([
  property({ type: Boolean })
], Chip.prototype, "removable", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], Chip.prototype, "image", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], Chip.prototype, "icon", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], Chip.prototype, "avatar", void 0);
__decorate([
  property({ type: Boolean, attribute: false })
], Chip.prototype, "tooltip", void 0);
__decorate([
  property({ type: Boolean })
], Chip.prototype, "selectable", void 0);
__decorate([
  state()
], Chip.prototype, "removeButtonFocused", void 0);
__decorate([
  query("#chip-label slot")
], Chip.prototype, "chipLabelSlot", void 0);
__decorate([
  query("#chip-label")
], Chip.prototype, "labelEl", void 0);
__decorate([
  query(".-hds-chip-wrapper")
], Chip.prototype, "chipWrapper", void 0);
Chip = Chip_1 = __decorate([
  customElement("hds-chip")
], Chip);

// node_modules/@here/hds-chip/build/hds-chip-group.css.js
var styles46 = css`
:host(:focus){outline:0}.-hds-chip-group-wrapper{display:flex}.-hds-chip-group-wrapper ::slotted(hds-chip){margin-right:var(--hds-spacing-2)}
`;

// node_modules/@here/hds-chip/build/hds-chip-group.js
var ChipGroup = class ChipGroup2 extends LitElement {
  constructor() {
    super(...arguments);
    this.valign = "center";
    this.justify = "flex-start";
    this.dragging = false;
    this._draggingStartX = 0;
    this._draggingStartY = 0;
  }
  _onSlotChange() {
    this.updateItemsOrder();
  }
  _onMouseEvent(e) {
    if (!this.dragging) {
      return;
    }
    if (e.type === "mousedown" && e.target instanceof Chip) {
      this._draggingSource = e.target;
      this._draggingStartX = e.clientX;
      this._draggingStartY = e.clientY;
      this._draggingSource.style.zIndex = "1";
    } else if (e.type === "mousemove" && this._draggingSource !== void 0) {
      this._draggingSource.dragging = true;
      const bbox = this._draggingSource.getBoundingClientRect();
      const window2 = this.ownerDocument.defaultView;
      const containerX = bbox.right + (window2.scrollX || 0);
      const containerY = bbox.top + (window2.scrollY || 0);
      const itemMouseOffsetX = this._draggingStartX - bbox.right;
      const itemMouseOffsetY = this._draggingStartY - bbox.top;
      const translateX = e.pageX - containerX - itemMouseOffsetX;
      const translateY = e.pageY - containerY - itemMouseOffsetY;
      this._draggingSource.style.transform = `translate(${translateX}px, ${translateY}px)`;
    } else if (e.type === "mouseup" && this._draggingSource !== void 0) {
      if (this._draggingSource.selectable) {
        this._draggingSource.selected = this._draggingSource.style.transform === "" ? this._draggingSource.selected : !this._draggingSource.selected;
      }
      const elementsFromPoint = this.ownerDocument.elementsFromPoint(e.clientX, e.clientY);
      for (let i = 0; i < elementsFromPoint.length; i += 1) {
        if (elementsFromPoint[i] !== this._draggingSource && elementsFromPoint[i] instanceof Chip) {
          const draggingTarget = elementsFromPoint[i];
          const sourceOrder = this._draggingSource.order;
          const targetOrder = draggingTarget.order;
          this._draggingSource.order = targetOrder;
          draggingTarget.order = sourceOrder;
          break;
        }
      }
    }
    if ((e.type === "mouseup" || e.type === "mouseleave") && this._draggingSource !== void 0) {
      this._draggingSource.dragging = false;
      this._draggingSource.style.transform = "";
      this._draggingSource.style.zIndex = "0";
      this._draggingSource = void 0;
    }
  }
  render() {
    const stylesEl = {
      "align-items": this.valign,
      "justify-content": this.justify
    };
    return html`
      <div
        @mouseleave="${this._onMouseEvent}"
        @mousedown="${this._onMouseEvent}"
        @mouseup="${this._onMouseEvent}"
        @mousemove="${this._onMouseEvent}"
        @keydown="${this.onKeyDown}"
        class="-hds-chip-group-wrapper"
        style="${styleMap(stylesEl)}"
      >
        <slot @slotchange="${this._onSlotChange}"></slot>
      </div>
    `;
  }
  getItems() {
    return this.slotElement.assignedNodes({ flatten: true }).filter((e) => e instanceof Chip);
  }
  updateItemsOrder() {
    const items = this.getItems();
    for (let i = 0; i < items.length; i += 1) {
      items[i].order = i;
    }
  }
  onKeyDown(e) {
    if (!(e.key === "ArrowRight" || e.key === "ArrowLeft")) {
      return;
    }
    const currActiveElement = this.ownerDocument.activeElement;
    const items = this.getItems();
    if (currActiveElement instanceof Chip && items.length > 0) {
      let { order: order2 } = currActiveElement;
      const dir = e.key === "ArrowRight" ? 1 : -1;
      order2 = (order2 + dir) % items.length;
      order2 = order2 < 0 ? items.length - 1 : order2;
      for (let i = 0; i < items.length; i += 1) {
        if (items[i].order === order2) {
          items[i].focus();
          break;
        }
      }
    }
  }
};
ChipGroup.styles = styles46;
ChipGroup.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: String })
], ChipGroup.prototype, "valign", void 0);
__decorate([
  property({ type: String })
], ChipGroup.prototype, "justify", void 0);
__decorate([
  property({ type: Boolean })
], ChipGroup.prototype, "dragging", void 0);
__decorate([
  query("slot")
], ChipGroup.prototype, "slotElement", void 0);
ChipGroup = __decorate([
  customElement("hds-chip-group")
], ChipGroup);

// node_modules/@here/hds-react-components/Chip/HDSChip.js
new Chip();
var HDSChip = import_react32.default.forwardRef((props, ref) => {
  const { className, size: size2, disabled, selected, dragging, image, avatar, icon, iconCategory, maxWidth, order: order2, removable, selectable, tooltip, removeButtonFocused, onRemove, onSelect, children, ...rest } = props;
  const innerRef = (0, import_react32.useRef)(null);
  (0, import_react32.useImperativeHandle)(ref, () => innerRef.current);
  const handleRemove = (e) => {
    if (e.target !== innerRef.current)
      return;
    onRemove && onRemove();
  };
  const handleSelect = (e) => {
    if (e.target !== innerRef.current)
      return;
    onSelect && onSelect(e.detail);
  };
  (0, import_react32.useEffect)(() => {
    if (innerRef.current) {
      if (onRemove)
        innerRef.current.addEventListener("remove", handleRemove);
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("remove", handleRemove);
    };
  }, [onRemove, innerRef]);
  (0, import_react32.useEffect)(() => {
    if (innerRef.current) {
      if (onSelect) {
        innerRef.current.addEventListener("select", handleSelect);
      }
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("select", handleSelect);
    };
  }, [onSelect, innerRef]);
  return import_react32.default.createElement("hds-chip", { ...className && { class: className }, size: size2, ...disabled && { disabled: true }, ...selected && { selected: true }, ...dragging && { dragging: true }, image, avatar, icon, ...iconCategory && { "icon-category": iconCategory }, ...maxWidth && { "max-width": maxWidth }, order: order2, ...removable && { removable: true }, ...selectable && { selectable: true }, ...tooltip && { tooltip: true }, ...removeButtonFocused && { removeButtonFocused: true }, ...rest, ref: innerRef }, children);
});
HDSChip.defaultProps = {
  size: "medium",
  disabled: false,
  selected: false,
  dragging: false,
  selectable: false,
  order: 0,
  removable: false
};
var HDSChip_default = HDSChip;

// node_modules/@here/hds-react-components/Chip/HDSChipGroup.js
var React40 = __toESM(require_react(), 1);
new ChipGroup();
var HDSChipGroup = React40.forwardRef((props, ref) => {
  const { children, className, valign, justify, dragging, ...rest } = props;
  return React40.createElement("hds-chip-group", { ...className && { class: className }, valign, ...justify && { justify }, ...dragging && { dragging: true }, ...rest, ref }, children);
});
HDSChipGroup.defaultProps = {
  valign: "center",
  justify: "flex-start",
  dragging: false
};
var HDSChipGroup_default = HDSChipGroup;

// node_modules/@here/hds-react-components/Select/HDSOption.js
var import_react33 = __toESM(require_react(), 1);

// node_modules/@here/hds-select/build/hds-option.css.js
var styles47 = css`
:host(:focus){outline:var(--hds-spacing-0)}.-hds-option-wrapper{align-items:center;box-sizing:border-box;color:var(--hds-foreground-primary);cursor:pointer;display:flex;font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);min-height:2.5rem;outline:var(--hds-spacing-0);padding:var(--hds-spacing-2) var(--hds-spacing-4);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.-hds-option-wrapper:hover{background-color:var(--hds-background-hover)}.-hds-option-wrapper .single-variant{--hds-icon-color:var(--hds-foreground-secondary)}.-hds-option-wrapper .multiple-variant,.-hds-option-wrapper .single-variant{align-items:center;display:flex;width:100%}.-hds-option-wrapper .multiple-variant .option-text,.-hds-option-wrapper .single-variant .option-text{overflow:hidden;text-overflow:ellipsis;white-space:normal;width:calc(100% - 20px)}.-hds-option-wrapper.selected .single-variant{justify-content:space-between}.-hds-option-wrapper.disabled{cursor:default}.-hds-option-wrapper.disabled:hover{background-color:inherit}.-hds-option-wrapper.disabled .multiple-variant,.-hds-option-wrapper.disabled .single-variant{color:var(--hds-foreground-inactive)}
`;

// node_modules/@here/hds-select/build/hds-option.js
var Option = class Option2 extends BaseElement {
  constructor() {
    super(...arguments);
    this.isTabbable = true;
    this.disabled = false;
    this.selected = false;
    this.variant = "single";
  }
  render() {
    const classes = {
      selected: this.selected,
      disabled: this.disabled
    };
    const optionTemplate = this.variant === "single" ? this.renderSingleOption(this.selected) : this.renderMultipleOption(this.selected, this.disabled);
    return html`
      <div class="-hds-option-wrapper ${classMap(classes)}" tabindex="-1">${optionTemplate}</div>
    `;
  }
  renderIcon() {
    return html` <hds-icon name="checkmark" size="16px"></hds-icon>`;
  }
  renderSingleOption(isSelected) {
    return html`
      <div class="single-variant">
        <div class="option-text">
          <slot></slot>
        </div>
        ${isSelected ? this.renderIcon() : nothing}
      </div>
    `;
  }
  renderMultipleOption(isSelected, isDisabled) {
    return html`
      <div class="multiple-variant">
        <hds-checkbox
          ?checked="${isSelected}"
          ?disabled="${isDisabled}"
          @click="${(e) => e.preventDefault()}"
        >
        </hds-checkbox>
        <div class="option-text">
          <slot></slot>
        </div>
      </div>
    `;
  }
};
Option.styles = styles47;
Option.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
__decorate([
  property({ type: Boolean })
], Option.prototype, "disabled", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Option.prototype, "selected", void 0);
__decorate([
  property({ type: String, attribute: "variant" })
], Option.prototype, "variant", void 0);
__decorate([
  query("slot")
], Option.prototype, "optionContentSlot", void 0);
Option = __decorate([
  customElement("hds-option")
], Option);

// node_modules/@here/hds-react-components/Select/HDSOption.js
new Option();
var HDSOption = import_react33.default.forwardRef(({ selected, disabled, variant, children, className, ...rest }, ref) => import_react33.default.createElement("hds-option", { ...selected && { selected }, ...disabled && { disabled }, variant, ...className && { class: className }, ref, ...rest }, children));
var HDSOption_default = HDSOption;

// node_modules/@here/hds-react-components/Notification/HDSToastContainer.js
var React42 = __toESM(require_react(), 1);

// node_modules/@here/hds-notification/build/hds-toast-container.css.js
var styles48 = css`
:host{--hds-notification-margin-bottom:var(--hds-spacing-4);--hds-toast-container-margin:var(--hds-spacing-4)}:host(:focus){outline:0}.wrapper{box-sizing:border-box;position:fixed;width:25rem;z-index:9999}.wrapper.position-top-left{left:var(--hds-toast-container-margin);top:var(--hds-toast-container-margin)}.wrapper.position-top-center{left:50%;top:var(--hds-toast-container-margin);transform:translate(-50%)}.wrapper.position-top-right{right:var(--hds-toast-container-margin);top:var(--hds-toast-container-margin)}.wrapper.position-bottom-left{bottom:var(--hds-toast-container-margin);left:var(--hds-toast-container-margin)}.wrapper.position-bottom-center{bottom:var(--hds-toast-container-margin);left:50%;transform:translate(-50%)}.wrapper.position-bottom-right{bottom:var(--hds-toast-container-margin);right:var(--hds-toast-container-margin)}.wrapper ::slotted(hds-notification:last-of-type){--hds-notification-margin-bottom:var(--hds-spacing-0)}
`;

// node_modules/@here/hds-notification/build/hds-toast-container.js
var ToastContainer = class ToastContainer2 extends LitElement {
  constructor() {
    super(...arguments);
    this.position = "bottom-right";
  }
  render() {
    const classes = {
      [`position-${this.position}`]: true
    };
    return html` <div id="hds-notification__container" class="wrapper ${classMap(classes)}">
      <slot></slot>
    </div>`;
  }
};
ToastContainer.styles = styles48;
__decorate([
  property({ type: String, reflect: true })
], ToastContainer.prototype, "position", void 0);
ToastContainer = __decorate([
  customElement("hds-toast-container")
], ToastContainer);

// node_modules/@here/hds-notification/build/hds-notification.css.js
var styles49 = css`
:host(:focus){outline:0}:host{display:block;will-change:filter}:host(:not([inline])){filter:var(--hds-overlay)}.-hds-notification-wrapper{border-radius:var(--hds-border-radius);-webkit-clip-path:view-box;clip-path:view-box;display:none;margin-bottom:var(--hds-notification-margin-bottom);overflow:hidden}.-hds-notification-wrapper.open{display:block}.-hds-notification-wrapper .actions.no-actions,.-hds-notification-wrapper.hds-notification-type-inline .content,.-hds-notification-wrapper.no-content .content{display:none}.-hds-notification-wrapper .headline{align-items:center;display:flex}.-hds-notification-wrapper .headline .close{margin-left:auto}.-hds-notification-wrapper .headline .headline-text{overflow-wrap:anywhere}.-hds-notification-wrapper .content{font:var(--hds-body-font);letter-spacing:var(--hds-body-letter-spacing);padding:var(--hds-spacing-4);-webkit-text-decoration:var(--hds-body-text-decoration,inherit);text-decoration:var(--hds-body-text-decoration,inherit)}.-hds-notification-wrapper .content slot:not([name]){overflow-wrap:anywhere}.hds-notification-type-toast.has-actions .actions{margin-top:var(--hds-spacing-6)}.hds-notification-type-toast.has-actions .actions slot{box-sizing:border-box;display:flex;flex-wrap:wrap;gap:var(--hds-spacing-4)}.hds-notification-type-toast.has-actions .actions slot::slotted(hds-button){box-sizing:border-box;display:inline-block;flex:1 1 auto;white-space:nowrap;width:auto!important}.hds-notification-type-toast.has-actions .actions slot::slotted(hds-button[data-hds-variant-original=primary]){order:2}.hds-notification-type-toast.has-actions .actions slot::slotted(hds-button[data-hds-variant-original=secondary]){order:1}.hds-notification-type-inline .headline-text{flex-grow:1}.hds-notification-type-inline.has-actions .actions{display:flex;flex-wrap:wrap;gap:var(--hds-spacing-2)}.hds-notification-type-toast.hds-notification-variant-solid{background-color:var(--hds-background-secondary);color:var(--hds-foreground-secondary)}.hds-notification-type-toast.hds-notification-variant-solid.hds-notification-status-default .icon{--hds-icon-color:var(--hds-onlightcolor-primary)}.hds-notification-type-toast.hds-notification-variant-solid.hds-notification-status-default .headline{background:var(--hds-gradient);color:var(--hds-onlightcolor-primary)}.hds-notification-type-toast.hds-notification-variant-solid.hds-notification-status-positive .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-notification-type-toast.hds-notification-variant-solid.hds-notification-status-positive .headline{background:var(--hds-positive);color:var(--hds-ondarkcolor-primary)}.hds-notification-type-toast.hds-notification-variant-solid.hds-notification-status-warning .icon{--hds-icon-color:var(--hds-foreground-primary)}.hds-notification-type-toast.hds-notification-variant-solid.hds-notification-status-warning .headline{background:var(--hds-warning);color:var(--hds-foreground-primary)}.hds-notification-type-toast.hds-notification-variant-solid.hds-notification-status-error .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-notification-type-toast.hds-notification-variant-solid.hds-notification-status-error .headline{background:var(--hds-negative);color:var(--hds-ondarkcolor-primary)}.hds-notification-type-toast.hds-notification-variant-solid.hds-notification-status-inverse .icon{--hds-icon-color:var(--hds-inverse-primary)}.hds-notification-type-toast.hds-notification-variant-solid.hds-notification-status-inverse .headline{background:var(--hds-background-inverse);color:var(--hds-inverse-primary)}.hds-notification-type-toast.hds-notification-variant-subtle{background-color:var(--hds-background-secondary);color:var(--hds-foreground-secondary)}.hds-notification-type-toast.hds-notification-variant-subtle.hds-notification-status-default .icon{--hds-icon-color:var(--hds-foreground-primary)}.hds-notification-type-toast.hds-notification-variant-subtle.hds-notification-status-default .headline{background:var(--hds-gradient-disabled);color:var(--hds-foreground-primary)}.hds-notification-type-toast.hds-notification-variant-subtle.hds-notification-status-positive .icon{--hds-icon-color:var(--hds-foreground-positive)}.hds-notification-type-toast.hds-notification-variant-subtle.hds-notification-status-positive .headline{background:var(--hds-positive-secondary);color:var(--hds-foreground-primary)}.hds-notification-type-toast.hds-notification-variant-subtle.hds-notification-status-warning .icon{--hds-icon-color:var(--hds-foreground-warning)}.hds-notification-type-toast.hds-notification-variant-subtle.hds-notification-status-warning .headline{background:var(--hds-warning-secondary);color:var(--hds-foreground-primary)}.hds-notification-type-toast.hds-notification-variant-subtle.hds-notification-status-error .icon{--hds-icon-color:var(--hds-foreground-negative)}.hds-notification-type-toast.hds-notification-variant-subtle.hds-notification-status-error .headline{background:var(--hds-negative-secondary);color:var(--hds-foreground-primary)}.hds-notification-type-toast.hds-notification-variant-subtle.hds-notification-status-inverse .icon{--hds-icon-color:var(--hds-foreground-primary)}.hds-notification-type-toast.hds-notification-variant-subtle.hds-notification-status-inverse .headline{background:var(--hds-background-oncolor-press);color:var(--hds-foreground-primary)}.hds-notification-type-inline.hds-notification-variant-solid{background-color:var(--hds-background-secondary);color:var(--hds-foreground-secondary)}.hds-notification-type-inline.hds-notification-variant-solid.hds-notification-status-default .icon{--hds-icon-color:var(--hds-onlightcolor-primary)}.hds-notification-type-inline.hds-notification-variant-solid.hds-notification-status-default .headline{background:var(--hds-gradient);color:var(--hds-onlightcolor-primary)}.hds-notification-type-inline.hds-notification-variant-solid.hds-notification-status-positive .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-notification-type-inline.hds-notification-variant-solid.hds-notification-status-positive .headline{background:var(--hds-positive);color:var(--hds-ondarkcolor-primary)}.hds-notification-type-inline.hds-notification-variant-solid.hds-notification-status-warning .icon{--hds-icon-color:var(--hds-foreground-primary)}.hds-notification-type-inline.hds-notification-variant-solid.hds-notification-status-warning .headline{background:var(--hds-warning);color:var(--hds-foreground-primary)}.hds-notification-type-inline.hds-notification-variant-solid.hds-notification-status-error .icon{--hds-icon-color:var(--hds-ondarkcolor-primary)}.hds-notification-type-inline.hds-notification-variant-solid.hds-notification-status-error .headline{background:var(--hds-negative);color:var(--hds-ondarkcolor-primary)}.hds-notification-type-inline.hds-notification-variant-solid.hds-notification-status-inverse .icon{--hds-icon-color:var(--hds-inverse-primary)}.hds-notification-type-inline.hds-notification-variant-solid.hds-notification-status-inverse .headline{background:var(--hds-background-inverse);color:var(--hds-inverse-primary)}.hds-notification-type-inline.hds-notification-variant-subtle{background-color:var(--hds-background-secondary);color:var(--hds-foreground-secondary)}.hds-notification-type-inline.hds-notification-variant-subtle.hds-notification-status-default .icon{--hds-icon-color:var(--hds-foreground-primary)}.hds-notification-type-inline.hds-notification-variant-subtle.hds-notification-status-default .headline{background:var(--hds-gradient-disabled);color:var(--hds-foreground-primary)}.hds-notification-type-inline.hds-notification-variant-subtle.hds-notification-status-positive .icon{--hds-icon-color:var(--hds-foreground-positive)}.hds-notification-type-inline.hds-notification-variant-subtle.hds-notification-status-positive .headline{background:var(--hds-positive-secondary);color:var(--hds-foreground-primary)}.hds-notification-type-inline.hds-notification-variant-subtle.hds-notification-status-warning .icon{--hds-icon-color:var(--hds-foreground-warning)}.hds-notification-type-inline.hds-notification-variant-subtle.hds-notification-status-warning .headline{background:var(--hds-warning-secondary);color:var(--hds-foreground-primary)}.hds-notification-type-inline.hds-notification-variant-subtle.hds-notification-status-error .icon{--hds-icon-color:var(--hds-foreground-negative)}.hds-notification-type-inline.hds-notification-variant-subtle.hds-notification-status-error .headline{background:var(--hds-negative-secondary);color:var(--hds-foreground-primary)}.hds-notification-type-inline.hds-notification-variant-subtle.hds-notification-status-inverse .icon{--hds-icon-color:var(--hds-foreground-primary)}.hds-notification-type-inline.hds-notification-variant-subtle.hds-notification-status-inverse .headline{background:var(--hds-background-oncolor-press);color:var(--hds-foreground-primary)}.hds-notification-size-medium .headline{font:var(--hds-body-strong-font);letter-spacing:var(--hds-body-strong-letter-spacing);line-height:var(--hds-body-strong-line-height);min-height:3rem;padding-left:var(--hds-spacing-4);padding-right:var(--hds-spacing-4);-webkit-text-decoration:var(--hds-body-strong-text-decoration,inherit);text-decoration:var(--hds-body-strong-text-decoration,inherit)}.hds-notification-size-medium .content{font:var(--hds-body-font);letter-spacing:var(--hds-body-letter-spacing);-webkit-text-decoration:var(--hds-body-text-decoration,inherit);text-decoration:var(--hds-body-text-decoration,inherit)}.hds-notification-size-medium .headline-text{padding-bottom:var(--hds-spacing-3);padding-top:var(--hds-spacing-3)}.hds-notification-size-medium .icon{margin-right:var(--hds-spacing-4)}.hds-notification-size-medium.has-actions .headline-text,.hds-notification-size-medium.has-close .headline-text{padding-right:var(--hds-spacing-4)}.hds-notification-size-medium.hds-notification-type-inline.has-actions .actions,.hds-notification-size-medium.hds-notification-type-inline.has-close .close{padding-left:var(--hds-spacing-2)}.hds-notification-size-medium.hds-notification-type-inline.hds-notification-variant-subtle .headline{min-height:3.5rem}.hds-notification-size-small .headline{font:var(--hds-body-small-strong-font);letter-spacing:var(--hds-body-small-strong-letter-spacing);line-height:var(--hds-body-small-line-height);min-height:2.5rem;padding-left:var(--hds-spacing-4);padding-right:var(--hds-spacing-4);-webkit-text-decoration:var(--hds-body-small-strong-text-decoration,inherit);text-decoration:var(--hds-body-small-strong-text-decoration,inherit)}.hds-notification-size-small .content{font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.hds-notification-size-small .headline-text{padding-bottom:var(--hds-spacing-2);padding-top:var(--hds-spacing-2)}.hds-notification-size-small.has-actions .headline-text,.hds-notification-size-small.has-close .headline-text{padding-right:var(--hds-spacing-3)}.hds-notification-size-small .icon{margin-right:var(--hds-spacing-2)}.hds-notification-size-small.hds-notification-type-inline.has-actions .actions,.hds-notification-size-small.hds-notification-type-inline.has-close .close{padding-left:var(--hds-spacing-1)}.hds-notification-size-small.hds-notification-type-inline .headline{padding-left:var(--hds-spacing-3);padding-right:var(--hds-spacing-3)}.hds-notification-size-extra-small .headline{font:var(--hds-body-extrasmall-strong-font);letter-spacing:var(--hds-body-extrasmall-strong-letter-spacing);line-height:var(--hds-body-extrasmall-line-height);min-height:2rem;padding-left:var(--hds-spacing-4);padding-right:var(--hds-spacing-4);-webkit-text-decoration:var(--hds-body-extrasmall-strong-text-decoration,inherit);text-decoration:var(--hds-body-extrasmall-strong-text-decoration,inherit)}.hds-notification-size-extra-small .content{font:var(--hds-body-extrasmall-font);letter-spacing:var(--hds-body-extrasmall-letter-spacing);-webkit-text-decoration:var(--hds-body-extrasmall-text-decoration,inherit);text-decoration:var(--hds-body-extrasmall-text-decoration,inherit)}.hds-notification-size-extra-small .headline-text{padding-bottom:var(--hds-spacing-1);padding-top:var(--hds-spacing-1)}.hds-notification-size-extra-small.has-actions .headline-text,.hds-notification-size-extra-small.has-close .headline-text{padding-right:var(--hds-spacing-2)}.hds-notification-size-extra-small .icon{margin-right:var(--hds-spacing-2)}.hds-notification-size-extra-small.hds-notification-type-inline.has-actions .actions,.hds-notification-size-extra-small.hds-notification-type-inline.has-close .close{padding-left:var(--hds-spacing-1)}.hds-notification-size-extra-small.hds-notification-type-inline .headline{padding-left:var(--hds-spacing-3);padding-right:var(--hds-spacing-3)}
`;

// node_modules/@here/hds-notification/build/hds-notification.js
var Notification_1;
var Notification = Notification_1 = class Notification2 extends LitElement {
  constructor() {
    super(...arguments);
    this.open = false;
    this.variant = "solid";
    this.status = "default";
    this.headline = "";
    this.size = "medium";
    this.timeout = 0;
    this.hideIcon = false;
    this.keepNode = false;
    this.inline = false;
    this.hideClose = false;
    this.closeAriaLabel = "Close";
    this.isDefaultSlotNotEmpty = false;
    this.isActionSlotNotEmpty = false;
    this._timeoutId = null;
  }
  get type() {
    return this.inline ? "inline" : "toast";
  }
  disconnectedCallback() {
    super.disconnectedCallback && super.disconnectedCallback();
    this.clearTimeout();
  }
  close() {
    this.open = false;
    this.clearTimeout();
    if (!this.keepNode) {
      this.remove();
    }
  }
  updated(changedProperties) {
    if (changedProperties.has("open") && changedProperties.get("open") !== void 0) {
      this.dispatchEvent(new CustomEvent("change", {
        detail: {
          open: this.open
        }
      }));
    }
    if (this.open && this._timeoutId === null && this.timeout > 0) {
      this._timeoutId = setTimeout(() => {
        this.close();
      }, this.timeout * 1e3);
    }
  }
  renderClose() {
    if (this.hideClose)
      return nothing;
    return html`<hds-button
      role="button"
      class="close"
      icon="cross"
      variant="${this.variant === "solid" ? "on-color-secondary" : "subtle"}"
      @click="${this.close}"
      size="extra-small"
      aria-label="${this.closeAriaLabel}"
    ></hds-button>`;
  }
  async onActionSlotChange(e) {
    this.isActionSlotNotEmpty = !isSlotEmpty(e.target);
    this.querySelectorAll("hds-button[slot=action]").forEach((button) => {
      if (this.type === "toast") {
        if (!button.hasAttribute("data-hds-variant-original")) {
          button.setAttribute("data-hds-variant-original", button.variant);
        }
        const isPrimary = button.getAttribute("data-hds-variant-original") === "primary";
        if (isPrimary && this.status === "default" && this.variant === "solid") {
          button.variant = "primary";
        } else if (isPrimary && this.status === "positive" && this.variant === "solid") {
          button.variant = "success";
        } else if (isPrimary && this.status === "warning" && this.variant === "solid") {
          button.variant = "warning";
        } else if (isPrimary && this.status === "error" && this.variant === "solid") {
          button.variant = "danger";
        } else if (isPrimary && this.status === "inverse" && this.variant === "solid") {
          button.variant = "primary";
        } else if (isPrimary && this.status === "default" && this.variant === "subtle") {
          button.variant = "primary";
        } else if (isPrimary && this.status === "positive" && this.variant === "subtle") {
          button.variant = "success-quiet";
        } else if (isPrimary && this.status === "warning" && this.variant === "subtle") {
          button.variant = "warning-quiet";
        } else if (isPrimary && this.status === "error" && this.variant === "subtle") {
          button.variant = "danger-quiet";
        } else if (isPrimary && this.status === "inverse" && this.variant === "subtle") {
          button.variant = "primary";
        } else {
          button.variant = "secondary";
        }
        button.size = this.size;
        button.setAttribute("width", "100%");
      } else if (this.type === "inline" && this.variant === "solid") {
        button.variant = "on-color-secondary";
        button.size = "extra-small";
      } else if (this.type === "inline" && this.variant === "subtle") {
        button.variant = "link";
        button.size = "large";
      }
    });
  }
  async onDefaultSlotChange(e) {
    this.isDefaultSlotNotEmpty = !isSlotEmpty(e.target);
  }
  async onActionClick(e) {
    e.stopPropagation();
    const action = e.target.getAttribute("data-action") || "custom";
    const detail = { action };
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("action", {
      detail,
      bubbles: true
    }));
  }
  renderActions() {
    const classes = {
      actions: true,
      [`actions-${this.type}`]: true,
      [`${this.isActionSlotNotEmpty ? "has" : "no"}-actions`]: true
    };
    return html`<div class="${classMap(classes)}">
      <slot
        name="action"
        @slotchange="${this.onActionSlotChange}"
        @click="${this.onActionClick}"
      ></slot>
    </div>`;
  }
  renderIcon() {
    if (this.hideIcon)
      return nothing;
    return html`<hds-icon
      class="icon"
      name="${Notification_1.ICON_NAME_BY_STATUS[this.status]}"
      size="${this.size === "medium" ? "24px" : "16px"}"
      category="core-ui"
      icon-style="solid"
    ></hds-icon>`;
  }
  render() {
    const classes = {
      open: this.open,
      "-hds-notification-wrapper": true,
      [`hds-notification-variant-${this.variant}`]: true,
      [`hds-notification-status-${this.status}`]: true,
      [`hds-notification-type-${this.type}`]: true,
      [`hds-notification-size-${this.size}`]: true,
      [`${this.isDefaultSlotNotEmpty ? "has" : "no"}-content`]: true,
      [`${this.hideClose ? "no" : "has"}-close`]: true,
      [`${this.isActionSlotNotEmpty ? "has" : "no"}-actions`]: true
    };
    return html`
      <div
        class="${classMap(classes)}"
        role="alert"
        aria-live="polite"
        aria-atomic="true">
        <div class="headline">
          ${this.renderIcon()}
          <div class="headline-text">
            ${this.headline}
          </div>
          ${this.type === "inline" ? this.renderActions() : nothing}
          ${this.renderClose()}
        </div>
        <div class="content">
          <slot @slotchange="${this.onDefaultSlotChange}"></slot>
          ${this.type === "toast" ? this.renderActions() : nothing}
        </div>
      </div>
      </div>`;
  }
  clearTimeout() {
    if (this._timeoutId !== null) {
      clearTimeout(this._timeoutId);
    }
  }
};
Notification.styles = styles49;
Notification.ICON_NAME_BY_STATUS = {
  default: "information",
  positive: "confirm",
  warning: "attention",
  error: "alert",
  inverse: "information"
};
__decorate([
  property({ type: Boolean, reflect: true })
], Notification.prototype, "open", void 0);
__decorate([
  property({ type: String })
], Notification.prototype, "variant", void 0);
__decorate([
  property({ type: String })
], Notification.prototype, "status", void 0);
__decorate([
  property({ type: String, reflect: true })
], Notification.prototype, "headline", void 0);
__decorate([
  property({ type: String })
], Notification.prototype, "size", void 0);
__decorate([
  property({ type: Number })
], Notification.prototype, "timeout", void 0);
__decorate([
  property({ type: Boolean, attribute: "hide-icon" })
], Notification.prototype, "hideIcon", void 0);
__decorate([
  property({ type: Boolean, attribute: "keep-node" })
], Notification.prototype, "keepNode", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], Notification.prototype, "inline", void 0);
__decorate([
  property({ type: Boolean, reflect: true, attribute: "hide-close" })
], Notification.prototype, "hideClose", void 0);
__decorate([
  property({ type: String, attribute: "close-aria-label" })
], Notification.prototype, "closeAriaLabel", void 0);
__decorate([
  state()
], Notification.prototype, "isDefaultSlotNotEmpty", void 0);
__decorate([
  state()
], Notification.prototype, "isActionSlotNotEmpty", void 0);
Notification = Notification_1 = __decorate([
  customElement("hds-notification")
], Notification);

// node_modules/@here/hds-react-components/Notification/HDSToastContainer.js
new ToastContainer();
var HDSToastContainer = React42.forwardRef((props, ref) => {
  const { children, position: position2 = "bottom-right", className, ...rest } = props;
  return React42.createElement("hds-toast-container", { ...position2 && { position: position2 }, ...className && { class: className }, ref, ...rest }, children);
});
HDSToastContainer.defaultProps = {
  position: "bottom-right"
};
var HDSToastContainer_default = HDSToastContainer;

// node_modules/@here/hds-react-components/Notification/HDSNotification.js
var import_react34 = __toESM(require_react(), 1);
new Notification();
var HDSNotification = import_react34.default.forwardRef((props, ref) => {
  const { children, variant, status, size: size2, hideIcon, timeout, open, keepNode, inline: inline2, hideClose, closeAriaLabel, onClose, onChange: onChange2, onAction, className, ...rest } = props;
  const innerRef = (0, import_react34.useRef)(null);
  (0, import_react34.useImperativeHandle)(ref, () => innerRef.current);
  const _handleClose = (e) => {
    if (e.target !== innerRef.current)
      return;
    onClose && onClose(e.detail);
    onChange2 && onChange2(e);
  };
  const _handleActionClick = (e) => {
    onAction && onAction(e.detail);
  };
  (0, import_react34.useEffect)(() => {
    if (innerRef.current && (onClose || onChange2)) {
      innerRef.current.addEventListener("change", _handleClose);
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleClose);
    };
  }, [onClose, onChange2, innerRef]);
  (0, import_react34.useEffect)(() => {
    if (innerRef.current && onAction) {
      innerRef.current.addEventListener("action", _handleActionClick);
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("action", _handleActionClick);
    };
  }, [onAction, innerRef]);
  return import_react34.default.createElement("hds-notification", { open, "keep-node": keepNode, variant, status, size: size2, timeout, ...className && { class: className }, ...hideClose && { "hide-close": hideClose }, ...hideIcon && { "hide-icon": hideIcon }, ...closeAriaLabel && { "close-aria-label": closeAriaLabel }, ...inline2 && { inline: inline2 }, ref: innerRef, ...rest }, children);
});
HDSNotification.defaultProps = {
  open: true,
  variant: "solid",
  status: "default",
  size: "medium",
  timeout: 0,
  keepNode: true,
  hideIcon: false,
  hideClose: false
};
var HDSNotification_default = HDSNotification;

// node_modules/@here/hds-react-components/Notification/HDSToastContextProvider.js
var import_react35 = __toESM(require_react(), 1);
var toastsCounter = 1;
var ToastContext = (0, import_react35.createContext)({});
var HDSToastContextProvider_default = ToastContext;
var HDSNotificationWrapper = (props) => {
  const { onClose, toastId, removeToast, children } = props;
  const handleClose = (e) => {
    if (onClose) {
      onClose(e);
    }
    removeToast(toastId);
  };
  return import_react35.default.createElement(HDSNotification_default, { ...props, onClose: handleClose }, children);
};
var HDSToastContextProvider = ({ position: position2, children }) => {
  const [toasts, setToasts] = (0, import_react35.useState)([]);
  const addToast = (0, import_react35.useCallback)((toastElement) => {
    const id2 = `hds-toast-${toastsCounter++}`;
    toastElement.id = id2;
    toastElement.toastId = id2;
    setToasts((currValue) => [...currValue, toastElement]);
  }, [setToasts]);
  const removeToast = (toastId) => {
    setToasts((currValue) => currValue.filter((toast) => toast.toastId !== toastId));
  };
  const contextValue = (0, import_react35.useMemo)(() => ({ addToast }), [addToast]);
  return import_react35.default.createElement(
    ToastContext.Provider,
    { value: contextValue },
    children,
    import_react35.default.createElement(HDSToastContainer_default, { position: position2 }, toasts.map((toast) => import_react35.default.createElement(HDSNotificationWrapper, { ...toast, toastId: toast.toastId, id: toast.id, key: toast.toastId, removeToast }, toast.body)))
  );
};
HDSToastContextProvider.defaultProps = {
  position: "bottom-right"
};

// node_modules/@here/hds-react-components/Notification/useToast.js
var import_react36 = __toESM(require_react(), 1);
function useToast() {
  const ctx = (0, import_react36.useContext)(HDSToastContextProvider_default);
  if (!ctx) {
    throw new Error("The `useToast` hook must be called from a descendent of `HDSToastContextProvider`");
  }
  return {
    addToast: ctx.addToast
  };
}

// node_modules/@here/hds-switcher/build/hds-switcher-tab.css.js
var styles50 = css`
:host,:host(:focus){outline:none}.-hds-switcher-tab-wrapper{align-items:center;border-radius:2.5rem;cursor:pointer;display:flex;font:var(--hds-button-font);letter-spacing:var(--hds-button-letter-spacing);outline:none;-webkit-text-decoration:var(--hds-button-text-decoration,inherit);text-decoration:var(--hds-button-text-decoration,inherit)}.-hds-switcher-tab-wrapper:not(.first-child,.first-child.last-child){margin-left:.125rem}.-hds-switcher-tab-wrapper.disabled,.-hds-switcher-tab-wrapper.selected{cursor:default}.-hds-switcher-tab-wrapper.slot-has-content.icon .content{margin-left:var(--hds-spacing-1)}.-hds-switcher-tab-wrapper.slot-has-content.icon-right .content{margin-right:var(--hds-spacing-1)}.hds-switcher-tab-variant-subtle{--hds-icon-color:var(--hds-foreground-secondary);background-color:initial;border:none;color:var(--hds-foreground-secondary)}.hds-switcher-tab-variant-subtle.not-disabled.selected{--hds-icon-color:var(--hds-foreground-primary);background-color:var(--hds-background-secondary);color:var(--hds-foreground-primary)}.hds-switcher-tab-variant-subtle.not-disabled.selected:hover{--hds-icon-color:var(--hds-foreground-primary-hover);color:var(--hds-foreground-primary-hover)}.hds-switcher-tab-variant-subtle.not-disabled.not-selected:hover{--hds-icon-color:var(--hds-foreground-secondary-hover);background-color:var(--hds-background-object-hover);color:var(--hds-foreground-secondary-hover)}.hds-switcher-tab-variant-subtle.not-disabled.not-selected:active,.hds-switcher-tab-variant-subtle.not-disabled.not-selected:active:hover{--hds-icon-color:var(--hds-foreground-secondary-press);background-color:var(--hds-background-object-press);color:var(--hds-foreground-secondary-press)}.hds-switcher-tab-variant-subtle.not-disabled:focus:not(:focus-visible){outline:none}.hds-switcher-tab-variant-subtle.not-disabled:focus-visible{outline:var(--hds-object-focused) solid .125rem}.hds-switcher-tab-variant-subtle.disabled{--hds-icon-color:var(--hds-foreground-secondary-disabled);color:var(--hds-foreground-secondary-disabled)}.hds-switcher-tab-variant-subtle.disabled.selected{background-color:var(--hds-background-secondary)}.hds-switcher-tab-variant-solid{--hds-icon-color:var(--hds-foreground-secondary);background-color:initial;border:none;color:var(--hds-foreground-secondary)}.hds-switcher-tab-variant-solid.not-disabled.selected{--hds-icon-color:var(--hds-ondarkcolor-primary);background-color:var(--hds-action);color:var(--hds-ondarkcolor-primary)}.hds-switcher-tab-variant-solid.not-disabled.not-selected:hover{--hds-icon-color:var(--hds-foreground-secondary-hover);background-color:var(--hds-background-object-hover);color:var(--hds-foreground-secondary-hover)}.hds-switcher-tab-variant-solid.not-disabled.not-selected:active,.hds-switcher-tab-variant-solid.not-disabled.not-selected:active:hover{--hds-icon-color:var(--hds-foreground-secondary-press);background-color:var(--hds-background-object-press);color:var(--hds-foreground-secondary-press)}.hds-switcher-tab-variant-solid.not-disabled:focus:not(:focus-visible){outline:none}.hds-switcher-tab-variant-solid.not-disabled:focus-visible{outline:var(--hds-object-focused) solid .125rem}.hds-switcher-tab-variant-solid.disabled{--hds-icon-color:var(--hds-foreground-secondary-disabled);color:var(--hds-foreground-secondary-disabled)}.hds-switcher-tab-variant-solid.disabled.selected{--hds-icon-color:var(--hds-ondarkcolor-inactive);background-color:var(--hds-action-disabled);color:var(--hds-ondarkcolor-inactive)}.hds-switcher-tab-variant-floating{--hds-icon-color:var(--hds-foreground-secondary);background-color:initial;border:none;color:var(--hds-foreground-secondary)}.hds-switcher-tab-variant-floating.not-disabled.selected{--hds-icon-color:var(--hds-foreground-primary);background-color:var(--hds-background-secondary);color:var(--hds-foreground-primary);filter:var(--hds-object)}.hds-switcher-tab-variant-floating.not-disabled.selected:hover{--hds-icon-color:var(--hds-foreground-primary-hover);color:var(--hds-foreground-primary-hover)}.hds-switcher-tab-variant-floating.not-disabled.not-selected:hover{--hds-icon-color:var(--hds-foreground-secondary-hover);background-color:var(--hds-background-object-hover);color:var(--hds-foreground-secondary-hover)}.hds-switcher-tab-variant-floating.not-disabled.not-selected:active,.hds-switcher-tab-variant-floating.not-disabled.not-selected:active:hover{--hds-icon-color:var(--hds-foreground-secondary-press);background-color:var(--hds-background-object-press);color:var(--hds-foreground-secondary-press)}.hds-switcher-tab-variant-floating.not-disabled:focus:not(:focus-visible){outline:none}.hds-switcher-tab-variant-floating.not-disabled:focus-visible{outline:var(--hds-object-focused) solid .125rem}.hds-switcher-tab-variant-floating.disabled{--hds-icon-color:var(--hds-foreground-secondary-disabled);color:var(--hds-foreground-secondary-disabled)}.hds-switcher-tab-variant-floating.disabled.selected{background-color:var(--hds-background-secondary);filter:var(--hds-object-inactive)}.hds-switcher-tab-variant-on-color{--hds-icon-color:var(--hds-inverse-primary);background-color:initial;border:none;color:var(--hds-inverse-primary)}.hds-switcher-tab-variant-on-color.not-disabled.selected{--hds-icon-color:var(--hds-foreground-primary);background-color:var(--hds-background-secondary);color:var(--hds-foreground-primary)}.hds-switcher-tab-variant-on-color.not-disabled.selected:hover{--hds-icon-color:var(--hds-foreground-primary-hover);color:var(--hds-foreground-primary-hover)}.hds-switcher-tab-variant-on-color.not-disabled.not-selected:hover{background-color:var(--hds-foreground-tertiary-hover)}.hds-switcher-tab-variant-on-color.not-disabled.not-selected:active,.hds-switcher-tab-variant-on-color.not-disabled.not-selected:active:hover{background-color:var(--hds-foreground-tertiary-press)}.hds-switcher-tab-variant-on-color.not-disabled:focus:not(:focus-visible){outline:none}.hds-switcher-tab-variant-on-color.not-disabled:focus-visible{outline:var(--hds-object-focused) solid .125rem}.hds-switcher-tab-variant-on-color.disabled{--hds-icon-color:var(--hds-inverse-inactive);color:var(--hds-inverse-inactive)}.hds-switcher-tab-variant-on-color.disabled.selected{--hds-icon-color:var(--hds-foreground-primary-disabled);background-color:var(--hds-inverse-inactive);color:var(--hds-foreground-primary-disabled)}.hds-switcher-tab-size-large{height:2.5rem;padding-left:var(--hds-spacing-3);padding-right:var(--hds-spacing-3)}.hds-switcher-tab-size-large.slot-has-content{padding-left:var(--hds-spacing-6);padding-right:var(--hds-spacing-6)}.hds-switcher-tab-size-medium{height:2rem;padding-left:var(--hds-spacing-2);padding-right:var(--hds-spacing-2)}.hds-switcher-tab-size-medium.slot-has-content{padding-left:var(--hds-spacing-4);padding-right:var(--hds-spacing-4)}.hds-switcher-tab-size-small{height:1.5rem;padding-left:var(--hds-spacing-1);padding-right:var(--hds-spacing-1)}.hds-switcher-tab-size-small.slot-has-content{padding-left:var(--hds-spacing-2);padding-right:var(--hds-spacing-2)}
`;

// node_modules/@here/hds-switcher/build/hds-switcher-tab.js
var SwitcherTab_1;
var SwitcherTab = SwitcherTab_1 = class SwitcherTab2 extends BaseElement {
  constructor() {
    super(...arguments);
    this._disabled = false;
    this.selected = false;
    this.iconCategory = "core-ui";
    this.iconRightCategory = "core-ui";
    this.switcherVariant = "subtle";
    this.switcherSize = "medium";
    this.switcherDisabled = false;
    this.isLastChild = false;
    this.isFirstChild = false;
    this.slotHasContent = false;
  }
  get disabled() {
    return this._disabled || this.switcherDisabled;
  }
  set disabled(value) {
    const oldValue = this._disabled;
    this._disabled = value;
    this.requestUpdate("disabled", oldValue);
  }
  focus() {
    return this.buttonElement && this.buttonElement.focus();
  }
  blur() {
    return this.buttonElement && this.buttonElement.blur();
  }
  click() {
    if (!this.disabled) {
      this.buttonElement.click();
    }
  }
  _onClick() {
    this.selected = true;
  }
  firstUpdated() {
    this.id = this.id || `hds-switcher-tab-${++SwitcherTab_1.switcherTabIdCounter}`;
    this.onSlotChange();
  }
  updated(_changedProperties) {
    const isSelectedChanged = this.selected && _changedProperties.get("selected") !== void 0;
    const isDisabledChanged = this.disabled && _changedProperties.get("disabled") !== void 0;
    if (isSelectedChanged) {
      this.dispatchEvent(new CustomEvent("select", {
        detail: this.id,
        bubbles: true,
        composed: true
      }));
    }
    if (isDisabledChanged && this.parentNode instanceof Switcher) {
      this.parentNode.selectFirstNotDisabled();
    }
  }
  renderIcon() {
    if (this.icon) {
      return html`<hds-icon
        name="${this.icon}"
        size="16px"
        category="${this.iconCategory}"
      ></hds-icon>`;
    }
    return nothing;
  }
  renderIconRight() {
    if (this.iconRight) {
      return html`<hds-icon
        name="${this.iconRight}"
        size="16px"
        category="${this.iconRightCategory}"
      ></hds-icon>`;
    }
    return nothing;
  }
  async onSlotChange() {
    this.slotHasContent = !isSlotEmpty(this.defaultSlot);
  }
  render() {
    const classes = {
      "-hds-switcher-tab-wrapper": true,
      "slot-has-content": this.slotHasContent,
      icon: !!this.icon,
      "icon-right": !!this.iconRight,
      "last-child": this.isLastChild,
      "first-child": this.isFirstChild
    };
    classes[`hds-switcher-tab-variant-${this.switcherVariant}`] = true;
    classes[`hds-switcher-tab-size-${this.switcherSize}`] = true;
    classes[`${this.selected ? "selected" : "not-selected"}`] = true;
    classes[`${this.disabled ? "disabled" : "not-disabled"}`] = true;
    const isAreaChecked = !this.disabled && !this.switcherDisabled && this.selected;
    return html`
      <button
        .ariaLabel="${this.ariaLabel ?? this.icon}"
        .ariaChecked="${isAreaChecked.toString()}"
        .role="${"radio"}"
        class="${classMap(classes)}"
        ?disabled="${this.disabled}"
        @click="${this._onClick}"
      >
        ${this.renderIcon()}
        <span class="content">
          <slot @slotchange="${this.onSlotChange}"></slot>
        </span>
        ${this.renderIconRight()}
      </button>
    `;
  }
};
SwitcherTab.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
SwitcherTab.styles = styles50;
SwitcherTab.switcherTabIdCounter = 0;
__decorate([
  property({ type: Boolean, reflect: true })
], SwitcherTab.prototype, "selected", void 0);
__decorate([
  property({ type: String })
], SwitcherTab.prototype, "icon", void 0);
__decorate([
  property({ type: String, attribute: "icon-right" })
], SwitcherTab.prototype, "iconRight", void 0);
__decorate([
  property({ type: String, attribute: "icon-category" })
], SwitcherTab.prototype, "iconCategory", void 0);
__decorate([
  property({ type: String, attribute: "icon-right-category" })
], SwitcherTab.prototype, "iconRightCategory", void 0);
__decorate([
  state()
], SwitcherTab.prototype, "switcherVariant", void 0);
__decorate([
  state()
], SwitcherTab.prototype, "switcherSize", void 0);
__decorate([
  state()
], SwitcherTab.prototype, "switcherDisabled", void 0);
__decorate([
  state()
], SwitcherTab.prototype, "isLastChild", void 0);
__decorate([
  state()
], SwitcherTab.prototype, "isFirstChild", void 0);
__decorate([
  state()
], SwitcherTab.prototype, "slotHasContent", void 0);
__decorate([
  query("slot:not([name])")
], SwitcherTab.prototype, "defaultSlot", void 0);
__decorate([
  query("button")
], SwitcherTab.prototype, "buttonElement", void 0);
__decorate([
  property({ type: Boolean })
], SwitcherTab.prototype, "disabled", null);
SwitcherTab = SwitcherTab_1 = __decorate([
  customElement("hds-switcher-tab")
], SwitcherTab);

// node_modules/@here/hds-switcher/build/hds-switcher.css.js
var styles51 = css`
:host,:host(:focus){outline:none}.-hds-switcher-wrapper{align-items:center;display:inline-flex;flex-flow:row nowrap;gap:.125rem}.hds-switcher-variant-solid,.hds-switcher-variant-subtle{background-color:var(--hds-background-object);padding:.125rem}.hds-switcher-variant-floating{background-color:var(--hds-background-primary);filter:var(--hds-object);overflow:hidden;padding:--hds-spacing-0}.hds-switcher-variant-on-color{background-color:var(--hds-foreground-tertiary);filter:var(--hds-object);overflow:hidden;padding:.125rem}.hds-switcher-size-large{border-radius:2.75rem}.hds-switcher-size-medium{border-radius:2.25rem}.hds-switcher-size-small{border-radius:1.75rem}
`;

// node_modules/@here/hds-switcher/build/hds-switcher.js
var Switcher = class Switcher2 extends LitElement {
  constructor() {
    super(...arguments);
    this._tabs = [];
    this.disabled = false;
    this.variant = "subtle";
    this.size = "medium";
  }
  firstUpdated() {
    this.onSlotChange();
  }
  updated(_changedProperties) {
    if (_changedProperties.has("size") || _changedProperties.has("variant") || _changedProperties.has("disabled")) {
      this.updateTabs();
    }
  }
  async _onSelect(e) {
    e.stopPropagation();
    let selectedIndex = -1;
    for (let t = 0; t < this._tabs.length; t += 1) {
      if (this._tabs[t] === e.target) {
        selectedIndex = t;
      } else {
        this._tabs[t].selected = false;
      }
    }
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("select", {
      detail: { id: e.detail, index: selectedIndex },
      bubbles: true,
      composed: true
    }));
  }
  selectFirstNotDisabled() {
    if (this.disabled)
      return;
    let firstNonDisabledNonSelected = -1;
    let firstNonDisabledSelected = -1;
    for (let t = 0; t < this._tabs.length; t += 1) {
      const { selected, disabled } = this._tabs[t];
      if (!selected && !disabled && firstNonDisabledNonSelected === -1) {
        firstNonDisabledNonSelected = t;
      }
      if (selected && !disabled && firstNonDisabledSelected === -1) {
        firstNonDisabledSelected = t;
      }
      if (selected && (disabled || firstNonDisabledSelected > -1 && firstNonDisabledSelected !== t)) {
        this._tabs[t].selected = false;
      }
    }
    if (firstNonDisabledNonSelected > -1 && firstNonDisabledSelected === -1) {
      this._tabs[firstNonDisabledNonSelected].selected = true;
    }
  }
  updateTabs() {
    for (let t = 0; t < this._tabs.length; t += 1) {
      this._tabs[t].switcherSize = this.size;
      this._tabs[t].switcherVariant = this.variant;
      this._tabs[t].switcherDisabled = this.disabled;
      this._tabs[t].isFirstChild = t === 0;
      this._tabs[t].isLastChild = t === this._tabs.length - 1;
    }
  }
  async onSlotChange() {
    this._tabs = Array.from(this.querySelectorAll("*")).filter((e) => e instanceof SwitcherTab);
    this.updateTabs();
    this.selectFirstNotDisabled();
  }
  _onKeyDown(e) {
    const { activeElement: focused } = this.ownerDocument;
    if (!(e.key === "ArrowRight" || e.key === "ArrowLeft") || !(focused instanceof SwitcherTab)) {
      return;
    }
    let before;
    let after;
    let current;
    for (let t = 0; t < this._tabs.length; t += 1) {
      if (e.key === "ArrowRight" && current && after)
        break;
      if (e.key === "ArrowLeft" && current && before)
        break;
      const { disabled } = this._tabs[t];
      if (!current && this._tabs[t] === focused) {
        current = this._tabs[t];
      }
      if (!disabled && !current && this._tabs[t] !== focused) {
        before = this._tabs[t];
      }
      if (!disabled && current && !after && this._tabs[t] !== focused) {
        after = this._tabs[t];
      }
    }
    if (e.key === "ArrowRight" && after)
      after.focus();
    else if (e.key === "ArrowLeft" && before)
      before.focus();
  }
  render() {
    const classes = {
      "-hds-switcher-wrapper": true,
      disabled: this.disabled
    };
    classes[`hds-switcher-variant-${this.variant}`] = true;
    classes[`hds-switcher-size-${this.size}`] = true;
    return html`
      <div
        .ariaLabel="${this.ariaLabel}"
        .role="${"radiogroup"}"
        class="${classMap(classes)}"
        @select="${this._onSelect}"
        @keydown="${this._onKeyDown}"
        ?disabled="${this.disabled}"
      >
        <slot @slotchange="${this.onSlotChange}"></slot>
      </div>
    `;
  }
};
Switcher.styles = styles51;
__decorate([
  property({ type: Boolean, reflect: true })
], Switcher.prototype, "disabled", void 0);
__decorate([
  property({ type: String, reflect: true })
], Switcher.prototype, "variant", void 0);
__decorate([
  property({ type: String, reflect: true })
], Switcher.prototype, "size", void 0);
Switcher = __decorate([
  customElement2("hds-switcher")
], Switcher);

// node_modules/@here/hds-react-components/Switcher/HDSSwitcher.js
var import_react37 = __toESM(require_react(), 1);
new Switcher();
var HDSSwitcher = import_react37.default.forwardRef((props, ref) => {
  const { children, className, disabled, variant, size: size2, ariaLabel, onSelect, ...rest } = props;
  const innerRef = (0, import_react37.useRef)(null);
  (0, import_react37.useImperativeHandle)(ref, () => innerRef.current);
  const _handleSelected = (e) => {
    if (e.target !== innerRef.current)
      return;
    onSelect && onSelect(e.detail);
  };
  (0, import_react37.useEffect)(() => {
    if (innerRef.current) {
      if (onSelect) {
        innerRef.current.addEventListener("select", _handleSelected);
      }
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("select", _handleSelected);
    };
  }, [onSelect, innerRef]);
  return import_react37.default.createElement("hds-switcher", { ...className && { class: className }, ...variant && { variant }, ...size2 && { size: size2 }, ...disabled && { disabled }, ...ariaLabel && { "aria-label": ariaLabel }, class: className, ref: innerRef, ...rest }, children);
});
HDSSwitcher.defaultProps = {
  disabled: false,
  variant: "subtle",
  size: "medium",
  ariaLabel: void 0
};
var HDSSwitcher_default = HDSSwitcher;

// node_modules/@here/hds-react-components/Switcher/HDSSwitcherTab.js
var import_react38 = __toESM(require_react(), 1);
new SwitcherTab();
var HDSSwitcherTab = import_react38.default.forwardRef((props, ref) => {
  const { icon, iconCategory, iconRight, iconRightCategory, selected, disabled, children, ariaLabel, className, onSelect, ...rest } = props;
  const innerRef = (0, import_react38.useRef)(null);
  (0, import_react38.useImperativeHandle)(ref, () => innerRef.current);
  const _handleSelected = (e) => {
    if (e.target !== innerRef.current)
      return;
    onSelect && onSelect(e.detail);
  };
  (0, import_react38.useEffect)(() => {
    if (innerRef.current) {
      if (onSelect) {
        innerRef.current.addEventListener("select", _handleSelected);
      }
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("select", _handleSelected);
    };
  }, [onSelect, innerRef]);
  return import_react38.default.createElement("hds-switcher-tab", { "aria-label": ariaLabel, icon, ...iconCategory && { "icon-category": iconCategory }, iconRight, ...iconRightCategory && { "icon-right-category": iconRightCategory }, ...selected && { selected }, ...disabled && { disabled }, ...className && { class: className }, ref: innerRef, ...rest }, children);
});
HDSSwitcherTab.defaultProps = {
  disabled: false,
  selected: false,
  icon: void 0,
  iconCategory: "core-ui",
  iconRight: void 0,
  iconRightCategory: "core-ui",
  ariaLabel: void 0
};
var HDSSwitcherTab_default = HDSSwitcherTab;

// node_modules/@here/hds-react-components/Textarea/HDSTextarea.js
var import_react39 = __toESM(require_react(), 1);

// node_modules/@here/hds-textarea/build/hds-textarea.css.js
var styles52 = css`
:host{outline:none!important}:host(:focus){outline:0}.wrapper{box-sizing:border-box}.wrapper textarea{background:var(--hds-background-secondary);border:var(--hds-border-width) solid var(--hds-foreground-tertiary);border-radius:var(--hds-border-radius);box-sizing:inherit;color:var(--hds-foreground-primary);cursor:text;display:block;height:100%;min-height:2.5rem;outline:none;overflow-y:auto;padding:var(--hds-spacing-2) var(--hds-spacing-4);resize:both;transition:color var(--hds-transition-duration-short);white-space:pre-wrap;width:100%}.wrapper textarea,.wrapper textarea::placeholder{font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.wrapper textarea::placeholder{color:var(--hds-foreground-tertiary)}.wrapper textarea:hover{border-color:var(--hds-foreground-tertiary-hover)}.wrapper textarea:active,.wrapper textarea:focus,.wrapper textarea:focus-within{border:var(--hds-border-width) solid #0000;box-shadow:0 0 0 .125rem var(--hds-object-focused)}.wrapper textarea:disabled::placeholder,.wrapper textarea:read-only::placeholder{color:var(--hds-foreground-tertiary-disabled)}.wrapper textarea:read-only{background-color:var(--hds-background-object);border-color:var(--hds-foreground-tertiary)!important;color:var(--hds-foreground-primary)}.wrapper textarea:disabled{background-color:var(--hds-background-object);border-color:var(--hds-foreground-tertiary-disabled)!important;color:var(--hds-foreground-tertiary-disabled);cursor:not-allowed}.wrapper .error{border-color:var(--hds-negative)!important}
`;

// node_modules/@here/hds-textarea/build/hds-textarea.js
var Textarea_1;
var Textarea = Textarea_1 = class Textarea2 extends BaseElement {
  constructor() {
    super(...arguments);
    this.isTabbable = true;
    this.name = "";
    this.rows = -1;
    this.cols = -1;
    this.disabled = false;
    this.readonly = false;
    this.required = false;
    this.autofocus = false;
    this.minlength = -1;
    this.maxlength = -1;
    this.charCounter = false;
    this.error = false;
    this.resize = "none";
    this.autocomplete = "";
    this._value = "";
  }
  get charCounterVisible() {
    return this.charCounter && this.maxlength !== -1;
  }
  get errorTextVisible() {
    return this.error && !!this.errorText;
  }
  connectedCallback() {
    super.connectedCallback && super.connectedCallback();
    Textarea_1.idCounter += 1;
    if (this.label) {
      this._labelId = `hds-textarea-label-${Textarea_1.idCounter}`;
    }
  }
  firstUpdated() {
    this.autofocus && this.focus();
  }
  updated(_changedProps) {
    if (_changedProps.has("value") && _changedProps.get("value") !== void 0) {
      this.textareaElement.value = this.value;
      this.dispatchEvent(new CustomEvent("input", {
        detail: { value: this.value },
        bubbles: true,
        composed: true
      }));
    }
  }
  get value() {
    return this._value;
  }
  set value(val) {
    const oldValue = this._value;
    this._value = val;
    this.requestUpdate("value", oldValue);
  }
  setSelectionRange(start2, end2, direction) {
    this.textareaElement.setSelectionRange(start2, end2, direction);
  }
  setRangeText(replacement, start2, end2, selectionMode) {
    if (start2 && end2) {
      this.textareaElement.setRangeText(replacement, start2, end2, selectionMode);
    } else {
      this.textareaElement.setRangeText(replacement);
    }
    this.value = this.textareaElement.value;
  }
  checkValidity() {
    return this.textareaElement.checkValidity();
  }
  reportValidity() {
    return this.textareaElement.reportValidity();
  }
  select() {
    this.textareaElement.select();
  }
  setCustomValidity(error) {
    this.textareaElement.setCustomValidity(error);
  }
  focus() {
    this.textareaElement.focus();
  }
  blur() {
    this.textareaElement.blur();
  }
  async clear() {
    this.value = "";
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("change", {
      detail: { value: this.value },
      bubbles: true,
      composed: true
    }));
  }
  async _nativeFocus(e) {
    e.stopPropagation();
    e.preventDefault();
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("focus", {
      detail: this,
      bubbles: true,
      composed: true
    }));
  }
  async _nativeBlur(e) {
    e.stopPropagation();
    e.preventDefault();
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("blur", {
      detail: this,
      bubbles: true,
      composed: true
    }));
  }
  renderCharCounter() {
    const length2 = Math.min(this.value.length, this.maxlength);
    return this.charCounterVisible ? html` <span slot="secondary">${length2}/${this.maxlength}</span>` : nothing;
  }
  renderSecondaryLabel() {
    return this.secondaryLabel ? html` <span slot="secondary">${this.secondaryLabel}</span>` : nothing;
  }
  renderLabels() {
    if (this.label || this.secondaryLabel) {
      return html` <hds-label>${this.label || nothing} ${this.renderSecondaryLabel()}</hds-label>`;
    }
    return nothing;
  }
  renderHelperText() {
    if (!this.charCounterVisible && !this.errorTextVisible) {
      return void 0;
    }
    return html`
      <hds-label type="assistive" variant="error"
        >${this.errorTextVisible ? this.errorText : nothing} ${this.renderCharCounter()}
      </hds-label>
    `;
  }
  render() {
    const classes = {
      disabled: this.disabled,
      readonly: this.readonly,
      required: this.required,
      error: this.error
    };
    const localStyles = {
      resize: this.resize
    };
    return html`
      <div class="wrapper">
        ${this.renderLabels()}
        <textarea
          .value="${this.value}"
          autocomplete="${ifDefined(this.autocomplete || void 0)}"
          id="${ifDefined(this.id === "" ? void 0 : this.id)}"
          name="${ifDefined(this.name === "" ? void 0 : this.name)}"
          placeholder="${ifDefined(this.placeholder === "" ? void 0 : this.placeholder)}"
          ?required="${this.required}"
          ?disabled="${this.disabled}"
          ?readonly="${this.readonly}"
          rows="${ifDefined(this.rows === -1 ? void 0 : this.rows)}"
          cols="${ifDefined(this.cols === -1 ? void 0 : this.cols)}"
          minlength="${ifDefined(this.minlength === -1 ? void 0 : this.minlength)}"
          maxlength="${ifDefined(this.maxlength === -1 ? void 0 : this.maxlength)}"
          style=${styleMap(localStyles)}
          class="${classMap(classes)}"
          @change="${this._nativeChange}"
          @input="${this._nativeInput}"
          @focus="${this._nativeFocus}"
          @blur="${this._nativeBlur}"
          @keydown="${this._nativeKeyPress}"
          @keyup="${this._nativeKeyPress}"
          aria-labelledby="${ifDefined(this.getAriaLabelledBy())}"
        >
        </textarea>
        ${this.renderHelperText()}
      </div>
    `;
  }
  getAriaLabelledBy() {
    if (this.label)
      return this._labelId;
    if (this.ariaLabelledBy)
      return this.ariaLabelledBy;
    return void 0;
  }
  async _nativeInput(e) {
    e.stopPropagation();
    e.preventDefault();
    this.value = this.textareaElement.value;
    await this.updateComplete;
  }
  async _nativeChange(e) {
    e.stopPropagation();
    e.preventDefault();
    this.value = this.textareaElement.value;
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("change", {
      detail: { value: this.value },
      bubbles: true,
      composed: true
    }));
  }
  async _nativeKeyPress(e) {
    e.stopPropagation();
    await this.updateComplete;
    this.dispatchEvent(new KeyboardEvent(e.type, e));
  }
};
Textarea.styles = styles52;
Textarea.idCounter = 0;
Textarea.shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };
Textarea.formAssociated = true;
__decorate([
  property({ type: String })
], Textarea.prototype, "name", void 0);
__decorate([
  property({ type: String })
], Textarea.prototype, "placeholder", void 0);
__decorate([
  property({ type: String })
], Textarea.prototype, "label", void 0);
__decorate([
  property({ type: String, attribute: "secondary-label" })
], Textarea.prototype, "secondaryLabel", void 0);
__decorate([
  property({ type: Number })
], Textarea.prototype, "rows", void 0);
__decorate([
  property({ type: Number })
], Textarea.prototype, "cols", void 0);
__decorate([
  property({ type: Boolean })
], Textarea.prototype, "disabled", void 0);
__decorate([
  property({ type: Boolean })
], Textarea.prototype, "readonly", void 0);
__decorate([
  property({ type: Boolean })
], Textarea.prototype, "required", void 0);
__decorate([
  property({ type: Boolean })
], Textarea.prototype, "autofocus", void 0);
__decorate([
  property({ type: Number })
], Textarea.prototype, "minlength", void 0);
__decorate([
  property({ type: Number })
], Textarea.prototype, "maxlength", void 0);
__decorate([
  property({ type: Boolean, attribute: "char-counter" })
], Textarea.prototype, "charCounter", void 0);
__decorate([
  property({ type: Boolean })
], Textarea.prototype, "error", void 0);
__decorate([
  property({ type: String, attribute: "error-text" })
], Textarea.prototype, "errorText", void 0);
__decorate([
  property({ type: String, attribute: "aria-labelledby" })
], Textarea.prototype, "ariaLabelledBy", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: true })
], Textarea.prototype, "resize", void 0);
__decorate([
  property({ type: String })
], Textarea.prototype, "autocomplete", void 0);
__decorate([
  query("textarea")
], Textarea.prototype, "textareaElement", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "value" })
], Textarea.prototype, "value", null);
Textarea = Textarea_1 = __decorate([
  customElement("hds-textarea")
], Textarea);

// node_modules/@here/hds-react-components/Textarea/HDSTextarea.js
new Textarea();
var HDSTextarea = import_react39.default.forwardRef((props, ref) => {
  const { value, id: id2, name, placeholder, label, secondaryLabel, disabled, readonly, required, autofocus, rows, cols, minlength, maxlength, charCounter, error, errorText, onChange: onChange2, onKeyDown, onKeyUp, resize, onBlur, onFocus: onFocus2, onInput, className, autocomplete, ...rest } = props;
  const innerRef = import_react39.default.useRef(null);
  (0, import_react39.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onChange2 && onChange2(e);
  };
  const _handleInput = (e) => {
    if (e.target !== innerRef.current)
      return;
    onInput && onInput(e);
  };
  const _handleBlur = (e) => {
    if (e.target !== innerRef.current)
      return;
    onBlur && onBlur(e);
  };
  const _handleFocus = (e) => {
    if (e.target !== innerRef.current)
      return;
    onFocus2 && onFocus2(e);
  };
  const _handleKeyDown = (e) => {
    if (e.target !== innerRef.current)
      return;
    onKeyDown && onKeyDown(e);
  };
  const _handleKeyUp = (e) => {
    if (e.target !== innerRef.current)
      return;
    onKeyUp && onKeyUp(e);
  };
  (0, import_react39.useEffect)(() => {
    if (onChange2 && innerRef.current) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, innerRef]);
  (0, import_react39.useEffect)(() => {
    if (onKeyDown && innerRef.current) {
      innerRef.current.addEventListener("keydown", _handleKeyDown);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("keydown", _handleKeyDown);
    };
  }, [onKeyDown, innerRef]);
  (0, import_react39.useEffect)(() => {
    if (onKeyUp && innerRef.current) {
      innerRef.current.addEventListener("keyup", _handleKeyUp);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("keyup", _handleKeyUp);
    };
  }, [onKeyUp, innerRef]);
  (0, import_react39.useEffect)(() => {
    if (onInput && innerRef.current) {
      innerRef.current.addEventListener("input", _handleInput);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("input", _handleInput);
    };
  }, [onInput, innerRef]);
  (0, import_react39.useEffect)(() => {
    if (onBlur && innerRef.current) {
      innerRef.current.addEventListener("blur", _handleBlur);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("blur", _handleBlur);
    };
  }, [onBlur, innerRef]);
  (0, import_react39.useEffect)(() => {
    if (onFocus2 && innerRef.current) {
      innerRef.current.addEventListener("focus", _handleFocus);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("focus", _handleFocus);
    };
  }, [onFocus2, innerRef]);
  return import_react39.default.createElement("hds-textarea", { value, id: id2, name, placeholder, label, ...className && { class: className }, ...secondaryLabel && { "secondary-label": secondaryLabel }, ...disabled && { disabled: true }, ...readonly && { readonly: true }, ...autofocus && { autofocus: true }, ...autocomplete && { autocomplete }, required, rows, cols, minlength, maxlength, resize, ...charCounter && { "char-counter": charCounter }, ...error && { error: true }, ...errorText && { "error-text": errorText }, ref: innerRef, ...rest });
});
HDSTextarea.defaultProps = {
  resize: "none"
};
var HDSTextarea_default = HDSTextarea;

// node_modules/@here/hds-react-components/Avatar/HDSAvatar.js
var React48 = __toESM(require_react(), 1);
new Avatar();
var HDSAvatar = React48.forwardRef((props, ref) => {
  const { disabled, borderless, size: size2 = "medium", name, imageUrl, icon, iconStyle, iconCategory, className, ...rest } = props;
  return React48.createElement("hds-avatar", { ref, ...disabled && { disabled }, ...borderless && { borderless }, size: size2, name, ...className && { class: className }, ...imageUrl && { "image-url": imageUrl }, ...icon && { icon }, ...iconStyle && { "icon-style": iconStyle }, ...iconCategory && { "icon-category": iconCategory }, ...rest });
});
HDSAvatar.defaultProps = {
  disabled: false,
  borderless: false,
  size: "medium",
  name: "",
  imageUrl: void 0,
  icon: void 0,
  iconCategory: "core-ui",
  iconStyle: "solid"
};
var HDSAvatar_default = HDSAvatar;

// node_modules/@here/hds-react-components/Avatar/HDSAvatarButton.js
var import_react40 = __toESM(require_react(), 1);
new Avatar();
var HDSAvatarButton = import_react40.default.forwardRef((props, ref) => {
  const { children, ...rest } = props;
  const elementProps = {
    ...rest,
    role: "button",
    tabIndex: 0
  };
  return import_react40.default.createElement("span", { className: "hds-avatar-wrapper", ...elementProps, ref }, children);
});
var HDSAvatarButton_default = HDSAvatarButton;

// node_modules/@here/hds-react-components/Select/HDSSelect.js
var import_react50 = __toESM(require_react(), 1);

// node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}

// node_modules/@babel/runtime/helpers/esm/toPrimitive.js
function toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}

// node_modules/@babel/runtime/helpers/esm/toPropertyKey.js
function toPropertyKey(t) {
  var i = toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}

// node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(e, r, t) {
  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[r] = t, e;
}

// node_modules/@babel/runtime/helpers/esm/objectSpread2.js
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}

// node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}

// node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = false;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}

// node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}

// node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}

// node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// node_modules/@babel/runtime/helpers/esm/slicedToArray.js
function _slicedToArray(r, e) {
  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o, r, i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}

// node_modules/react-select/dist/useStateManager-7e1e8489.esm.js
var import_react41 = __toESM(require_react());
var _excluded = ["defaultInputValue", "defaultMenuIsOpen", "defaultValue", "inputValue", "menuIsOpen", "onChange", "onInputChange", "onMenuClose", "onMenuOpen", "value"];
function useStateManager(_ref3) {
  var _ref$defaultInputValu = _ref3.defaultInputValue, defaultInputValue = _ref$defaultInputValu === void 0 ? "" : _ref$defaultInputValu, _ref$defaultMenuIsOpe = _ref3.defaultMenuIsOpen, defaultMenuIsOpen = _ref$defaultMenuIsOpe === void 0 ? false : _ref$defaultMenuIsOpe, _ref$defaultValue = _ref3.defaultValue, defaultValue = _ref$defaultValue === void 0 ? null : _ref$defaultValue, propsInputValue = _ref3.inputValue, propsMenuIsOpen = _ref3.menuIsOpen, propsOnChange = _ref3.onChange, propsOnInputChange = _ref3.onInputChange, propsOnMenuClose = _ref3.onMenuClose, propsOnMenuOpen = _ref3.onMenuOpen, propsValue = _ref3.value, restSelectProps = _objectWithoutProperties(_ref3, _excluded);
  var _useState = (0, import_react41.useState)(propsInputValue !== void 0 ? propsInputValue : defaultInputValue), _useState2 = _slicedToArray(_useState, 2), stateInputValue = _useState2[0], setStateInputValue = _useState2[1];
  var _useState3 = (0, import_react41.useState)(propsMenuIsOpen !== void 0 ? propsMenuIsOpen : defaultMenuIsOpen), _useState4 = _slicedToArray(_useState3, 2), stateMenuIsOpen = _useState4[0], setStateMenuIsOpen = _useState4[1];
  var _useState5 = (0, import_react41.useState)(propsValue !== void 0 ? propsValue : defaultValue), _useState6 = _slicedToArray(_useState5, 2), stateValue = _useState6[0], setStateValue = _useState6[1];
  var onChange2 = (0, import_react41.useCallback)(function(value2, actionMeta) {
    if (typeof propsOnChange === "function") {
      propsOnChange(value2, actionMeta);
    }
    setStateValue(value2);
  }, [propsOnChange]);
  var onInputChange = (0, import_react41.useCallback)(function(value2, actionMeta) {
    var newValue;
    if (typeof propsOnInputChange === "function") {
      newValue = propsOnInputChange(value2, actionMeta);
    }
    setStateInputValue(newValue !== void 0 ? newValue : value2);
  }, [propsOnInputChange]);
  var onMenuOpen = (0, import_react41.useCallback)(function() {
    if (typeof propsOnMenuOpen === "function") {
      propsOnMenuOpen();
    }
    setStateMenuIsOpen(true);
  }, [propsOnMenuOpen]);
  var onMenuClose = (0, import_react41.useCallback)(function() {
    if (typeof propsOnMenuClose === "function") {
      propsOnMenuClose();
    }
    setStateMenuIsOpen(false);
  }, [propsOnMenuClose]);
  var inputValue = propsInputValue !== void 0 ? propsInputValue : stateInputValue;
  var menuIsOpen = propsMenuIsOpen !== void 0 ? propsMenuIsOpen : stateMenuIsOpen;
  var value = propsValue !== void 0 ? propsValue : stateValue;
  return _objectSpread2(_objectSpread2({}, restSelectProps), {}, {
    inputValue,
    menuIsOpen,
    onChange: onChange2,
    onInputChange,
    onMenuClose,
    onMenuOpen,
    value
  });
}

// node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}

// node_modules/react-select/dist/react-select.esm.js
var React54 = __toESM(require_react());
var import_react48 = __toESM(require_react());

// node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}

// node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, toPropertyKey(o.key), o);
  }
}
function _createClass(e, r, t) {
  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
    writable: false
  }), e;
}

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf(t, e);
}

// node_modules/@babel/runtime/helpers/esm/inherits.js
function _inherits(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, {
    constructor: {
      value: t,
      writable: true,
      configurable: true
    }
  }), Object.defineProperty(t, "prototype", {
    writable: false
  }), e && _setPrototypeOf(t, e);
}

// node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(t) {
  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
    return t2.__proto__ || Object.getPrototypeOf(t2);
  }, _getPrototypeOf(t);
}

// node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
    return !!t;
  })();
}

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}

// node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js
function _possibleConstructorReturn(t, e) {
  if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized(t);
}

// node_modules/@babel/runtime/helpers/esm/createSuper.js
function _createSuper(t) {
  var r = _isNativeReflectConstruct();
  return function() {
    var e, o = _getPrototypeOf(t);
    if (r) {
      var s = _getPrototypeOf(this).constructor;
      e = Reflect.construct(o, arguments, s);
    } else e = o.apply(this, arguments);
    return _possibleConstructorReturn(this, e);
  };
}

// node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js
function _arrayWithoutHoles(r) {
  if (Array.isArray(r)) return _arrayLikeToArray(r);
}

// node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}

// node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// node_modules/@babel/runtime/helpers/esm/toConsumableArray.js
function _toConsumableArray(r) {
  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
}

// node_modules/react-select/dist/Select-49a62830.esm.js
var React53 = __toESM(require_react());
var import_react46 = __toESM(require_react());

// node_modules/@emotion/react/dist/emotion-element-7a1343fa.browser.development.esm.js
var React51 = __toESM(require_react());
var import_react42 = __toESM(require_react());

// node_modules/@emotion/sheet/dist/emotion-sheet.development.esm.js
var isDevelopment = true;
function sheetForTag(tag2) {
  if (tag2.sheet) {
    return tag2.sheet;
  }
  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag2) {
      return document.styleSheets[i];
    }
  }
  return void 0;
}
function createStyleElement(options2) {
  var tag2 = document.createElement("style");
  tag2.setAttribute("data-emotion", options2.key);
  if (options2.nonce !== void 0) {
    tag2.setAttribute("nonce", options2.nonce);
  }
  tag2.appendChild(document.createTextNode(""));
  tag2.setAttribute("data-s", "");
  return tag2;
}
var StyleSheet = function() {
  function StyleSheet2(options2) {
    var _this = this;
    this._insertTag = function(tag2) {
      var before;
      if (_this.tags.length === 0) {
        if (_this.insertionPoint) {
          before = _this.insertionPoint.nextSibling;
        } else if (_this.prepend) {
          before = _this.container.firstChild;
        } else {
          before = _this.before;
        }
      } else {
        before = _this.tags[_this.tags.length - 1].nextSibling;
      }
      _this.container.insertBefore(tag2, before);
      _this.tags.push(tag2);
    };
    this.isSpeedy = options2.speedy === void 0 ? !isDevelopment : options2.speedy;
    this.tags = [];
    this.ctr = 0;
    this.nonce = options2.nonce;
    this.key = options2.key;
    this.container = options2.container;
    this.prepend = options2.prepend;
    this.insertionPoint = options2.insertionPoint;
    this.before = null;
  }
  var _proto = StyleSheet2.prototype;
  _proto.hydrate = function hydrate(nodes) {
    nodes.forEach(this._insertTag);
  };
  _proto.insert = function insert(rule) {
    if (this.ctr % (this.isSpeedy ? 65e3 : 1) === 0) {
      this._insertTag(createStyleElement(this));
    }
    var tag2 = this.tags[this.tags.length - 1];
    {
      var isImportRule3 = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;
      if (isImportRule3 && this._alreadyInsertedOrderInsensitiveRule) {
        console.error("You're attempting to insert the following rule:\n" + rule + "\n\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.");
      }
      this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule3;
    }
    if (this.isSpeedy) {
      var sheet = sheetForTag(tag2);
      try {
        sheet.insertRule(rule, sheet.cssRules.length);
      } catch (e) {
        if (!/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(rule)) {
          console.error('There was a problem inserting the following rule: "' + rule + '"', e);
        }
      }
    } else {
      tag2.appendChild(document.createTextNode(rule));
    }
    this.ctr++;
  };
  _proto.flush = function flush() {
    this.tags.forEach(function(tag2) {
      var _tag$parentNode;
      return (_tag$parentNode = tag2.parentNode) == null ? void 0 : _tag$parentNode.removeChild(tag2);
    });
    this.tags = [];
    this.ctr = 0;
    {
      this._alreadyInsertedOrderInsensitiveRule = false;
    }
  };
  return StyleSheet2;
}();

// node_modules/stylis/src/Enum.js
var MS = "-ms-";
var MOZ = "-moz-";
var WEBKIT = "-webkit-";
var COMMENT = "comm";
var RULESET = "rule";
var DECLARATION = "decl";
var IMPORT = "@import";
var KEYFRAMES = "@keyframes";
var LAYER = "@layer";

// node_modules/stylis/src/Utility.js
var abs = Math.abs;
var from = String.fromCharCode;
var assign = Object.assign;
function hash3(value, length2) {
  return charat(value, 0) ^ 45 ? (((length2 << 2 ^ charat(value, 0)) << 2 ^ charat(value, 1)) << 2 ^ charat(value, 2)) << 2 ^ charat(value, 3) : 0;
}
function trim(value) {
  return value.trim();
}
function match(value, pattern) {
  return (value = pattern.exec(value)) ? value[0] : value;
}
function replace(value, pattern, replacement) {
  return value.replace(pattern, replacement);
}
function indexof(value, search) {
  return value.indexOf(search);
}
function charat(value, index2) {
  return value.charCodeAt(index2) | 0;
}
function substr(value, begin, end2) {
  return value.slice(begin, end2);
}
function strlen(value) {
  return value.length;
}
function sizeof(value) {
  return value.length;
}
function append(value, array) {
  return array.push(value), value;
}
function combine(array, callback) {
  return array.map(callback).join("");
}

// node_modules/stylis/src/Tokenizer.js
var line = 1;
var column = 1;
var length = 0;
var position = 0;
var character = 0;
var characters = "";
function node(value, root, parent, type, props, children, length2) {
  return { value, root, parent, type, props, children, line, column, length: length2, return: "" };
}
function copy(root, props) {
  return assign(node("", null, null, "", null, null, 0), root, { length: -root.length }, props);
}
function char() {
  return character;
}
function prev() {
  character = position > 0 ? charat(characters, --position) : 0;
  if (column--, character === 10)
    column = 1, line--;
  return character;
}
function next() {
  character = position < length ? charat(characters, position++) : 0;
  if (column++, character === 10)
    column = 1, line++;
  return character;
}
function peek() {
  return charat(characters, position);
}
function caret() {
  return position;
}
function slice(begin, end2) {
  return substr(characters, begin, end2);
}
function token(type) {
  switch (type) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(value) {
  return line = column = 1, length = strlen(characters = value), position = 0, [];
}
function dealloc(value) {
  return characters = "", value;
}
function delimit(type) {
  return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));
}
function whitespace(type) {
  while (character = peek())
    if (character < 33)
      next();
    else
      break;
  return token(type) > 2 || token(character) > 3 ? "" : " ";
}
function escaping(index2, count) {
  while (--count && next())
    if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97)
      break;
  return slice(index2, caret() + (count < 6 && peek() == 32 && next() == 32));
}
function delimiter(type) {
  while (next())
    switch (character) {
      case type:
        return position;
      case 34:
      case 39:
        if (type !== 34 && type !== 39)
          delimiter(character);
        break;
      case 40:
        if (type === 41)
          delimiter(type);
        break;
      case 92:
        next();
        break;
    }
  return position;
}
function commenter(type, index2) {
  while (next())
    if (type + character === 47 + 10)
      break;
    else if (type + character === 42 + 42 && peek() === 47)
      break;
  return "/*" + slice(index2, position - 1) + "*" + from(type === 47 ? type : next());
}
function identifier(index2) {
  while (!token(peek()))
    next();
  return slice(index2, position);
}

// node_modules/stylis/src/Parser.js
function compile(value) {
  return dealloc(parse("", null, null, null, [""], value = alloc(value), 0, [0], value));
}
function parse(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
  var index2 = 0;
  var offset4 = 0;
  var length2 = pseudo;
  var atrule = 0;
  var property2 = 0;
  var previous = 0;
  var variable = 1;
  var scanning = 1;
  var ampersand = 1;
  var character2 = 0;
  var type = "";
  var props = rules;
  var children = rulesets;
  var reference2 = rule;
  var characters2 = type;
  while (scanning)
    switch (previous = character2, character2 = next()) {
      case 40:
        if (previous != 108 && charat(characters2, length2 - 1) == 58) {
          if (indexof(characters2 += replace(delimit(character2), "&", "&\f"), "&\f") != -1)
            ampersand = -1;
          break;
        }
      case 34:
      case 39:
      case 91:
        characters2 += delimit(character2);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        characters2 += whitespace(previous);
        break;
      case 92:
        characters2 += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), root, parent), declarations);
            break;
          default:
            characters2 += "/";
        }
        break;
      case 123 * variable:
        points[index2++] = strlen(characters2) * ampersand;
      case 125 * variable:
      case 59:
      case 0:
        switch (character2) {
          case 0:
          case 125:
            scanning = 0;
          case 59 + offset4:
            if (ampersand == -1) characters2 = replace(characters2, /\f/g, "");
            if (property2 > 0 && strlen(characters2) - length2)
              append(property2 > 32 ? declaration(characters2 + ";", rule, parent, length2 - 1) : declaration(replace(characters2, " ", "") + ";", rule, parent, length2 - 2), declarations);
            break;
          case 59:
            characters2 += ";";
          default:
            append(reference2 = ruleset(characters2, root, parent, index2, offset4, rules, points, type, props = [], children = [], length2), rulesets);
            if (character2 === 123)
              if (offset4 === 0)
                parse(characters2, root, reference2, reference2, props, rulesets, length2, points, children);
              else
                switch (atrule === 99 && charat(characters2, 3) === 110 ? 100 : atrule) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    parse(value, reference2, reference2, rule && append(ruleset(value, reference2, reference2, 0, 0, rules, points, type, rules, props = [], length2), children), rules, children, length2, points, rule ? props : children);
                    break;
                  default:
                    parse(characters2, reference2, reference2, reference2, [""], children, 0, points, children);
                }
        }
        index2 = offset4 = property2 = 0, variable = ampersand = 1, type = characters2 = "", length2 = pseudo;
        break;
      case 58:
        length2 = 1 + strlen(characters2), property2 = previous;
      default:
        if (variable < 1) {
          if (character2 == 123)
            --variable;
          else if (character2 == 125 && variable++ == 0 && prev() == 125)
            continue;
        }
        switch (characters2 += from(character2), character2 * variable) {
          case 38:
            ampersand = offset4 > 0 ? 1 : (characters2 += "\f", -1);
            break;
          case 44:
            points[index2++] = (strlen(characters2) - 1) * ampersand, ampersand = 1;
            break;
          case 64:
            if (peek() === 45)
              characters2 += delimit(next());
            atrule = peek(), offset4 = length2 = strlen(type = characters2 += identifier(caret())), character2++;
            break;
          case 45:
            if (previous === 45 && strlen(characters2) == 2)
              variable = 0;
        }
    }
  return rulesets;
}
function ruleset(value, root, parent, index2, offset4, rules, points, type, props, children, length2) {
  var post = offset4 - 1;
  var rule = offset4 === 0 ? rules : [""];
  var size2 = sizeof(rule);
  for (var i = 0, j = 0, k = 0; i < index2; ++i)
    for (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size2; ++x)
      if (z = trim(j > 0 ? rule[x] + " " + y : replace(y, /&\f/g, rule[x])))
        props[k++] = z;
  return node(value, root, parent, offset4 === 0 ? RULESET : type, props, children, length2);
}
function comment(value, root, parent) {
  return node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0);
}
function declaration(value, root, parent, length2) {
  return node(value, root, parent, DECLARATION, substr(value, 0, length2), substr(value, length2 + 1, -1), length2);
}

// node_modules/stylis/src/Serializer.js
function serialize(children, callback) {
  var output = "";
  var length2 = sizeof(children);
  for (var i = 0; i < length2; i++)
    output += callback(children[i], i, children, callback) || "";
  return output;
}
function stringify(element, index2, children, callback) {
  switch (element.type) {
    case LAYER:
      if (element.children.length) break;
    case IMPORT:
    case DECLARATION:
      return element.return = element.return || element.value;
    case COMMENT:
      return "";
    case KEYFRAMES:
      return element.return = element.value + "{" + serialize(element.children, callback) + "}";
    case RULESET:
      element.value = element.props.join(",");
  }
  return strlen(children = serialize(element.children, callback)) ? element.return = element.value + "{" + children + "}" : "";
}

// node_modules/stylis/src/Middleware.js
function middleware(collection) {
  var length2 = sizeof(collection);
  return function(element, index2, children, callback) {
    var output = "";
    for (var i = 0; i < length2; i++)
      output += collection[i](element, index2, children, callback) || "";
    return output;
  };
}

// node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js
var weakMemoize = function weakMemoize2(func) {
  var cache = /* @__PURE__ */ new WeakMap();
  return function(arg) {
    if (cache.has(arg)) {
      return cache.get(arg);
    }
    var ret = func(arg);
    cache.set(arg, ret);
    return ret;
  };
};

// node_modules/@emotion/memoize/dist/emotion-memoize.esm.js
function memoize(fn2) {
  var cache = /* @__PURE__ */ Object.create(null);
  return function(arg) {
    if (cache[arg] === void 0) cache[arg] = fn2(arg);
    return cache[arg];
  };
}

// node_modules/@emotion/cache/dist/emotion-cache.browser.development.esm.js
var identifierWithPointTracking = function identifierWithPointTracking2(begin, points, index2) {
  var previous = 0;
  var character2 = 0;
  while (true) {
    previous = character2;
    character2 = peek();
    if (previous === 38 && character2 === 12) {
      points[index2] = 1;
    }
    if (token(character2)) {
      break;
    }
    next();
  }
  return slice(begin, position);
};
var toRules = function toRules2(parsed, points) {
  var index2 = -1;
  var character2 = 44;
  do {
    switch (token(character2)) {
      case 0:
        if (character2 === 38 && peek() === 12) {
          points[index2] = 1;
        }
        parsed[index2] += identifierWithPointTracking(position - 1, points, index2);
        break;
      case 2:
        parsed[index2] += delimit(character2);
        break;
      case 4:
        if (character2 === 44) {
          parsed[++index2] = peek() === 58 ? "&\f" : "";
          points[index2] = parsed[index2].length;
          break;
        }
      default:
        parsed[index2] += from(character2);
    }
  } while (character2 = next());
  return parsed;
};
var getRules = function getRules2(value, points) {
  return dealloc(toRules(alloc(value), points));
};
var fixedElements = /* @__PURE__ */ new WeakMap();
var compat = function compat2(element) {
  if (element.type !== "rule" || !element.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  element.length < 1) {
    return;
  }
  var value = element.value, parent = element.parent;
  var isImplicitRule = element.column === parent.column && element.line === parent.line;
  while (parent.type !== "rule") {
    parent = parent.parent;
    if (!parent) return;
  }
  if (element.props.length === 1 && value.charCodeAt(0) !== 58 && !fixedElements.get(parent)) {
    return;
  }
  if (isImplicitRule) {
    return;
  }
  fixedElements.set(element, true);
  var points = [];
  var rules = getRules(value, points);
  var parentRules = parent.props;
  for (var i = 0, k = 0; i < rules.length; i++) {
    for (var j = 0; j < parentRules.length; j++, k++) {
      element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];
    }
  }
};
var removeLabel = function removeLabel2(element) {
  if (element.type === "decl") {
    var value = element.value;
    if (
      // charcode for l
      value.charCodeAt(0) === 108 && // charcode for b
      value.charCodeAt(2) === 98
    ) {
      element["return"] = "";
      element.value = "";
    }
  }
};
var ignoreFlag = "emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason";
var isIgnoringComment = function isIgnoringComment2(element) {
  return element.type === "comm" && element.children.indexOf(ignoreFlag) > -1;
};
var createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm2(cache) {
  return function(element, index2, children) {
    if (element.type !== "rule" || cache.compat) return;
    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);
    if (unsafePseudoClasses) {
      var isNested = !!element.parent;
      var commentContainer = isNested ? element.parent.children : (
        // global rule at the root level
        children
      );
      for (var i = commentContainer.length - 1; i >= 0; i--) {
        var node2 = commentContainer[i];
        if (node2.line < element.line) {
          break;
        }
        if (node2.column < element.column) {
          if (isIgnoringComment(node2)) {
            return;
          }
          break;
        }
      }
      unsafePseudoClasses.forEach(function(unsafePseudoClass) {
        console.error('The pseudo class "' + unsafePseudoClass + '" is potentially unsafe when doing server-side rendering. Try changing it to "' + unsafePseudoClass.split("-child")[0] + '-of-type".');
      });
    }
  };
};
var isImportRule = function isImportRule2(element) {
  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;
};
var isPrependedWithRegularRules = function isPrependedWithRegularRules2(index2, children) {
  for (var i = index2 - 1; i >= 0; i--) {
    if (!isImportRule(children[i])) {
      return true;
    }
  }
  return false;
};
var nullifyElement = function nullifyElement2(element) {
  element.type = "";
  element.value = "";
  element["return"] = "";
  element.children = "";
  element.props = "";
};
var incorrectImportAlarm = function incorrectImportAlarm2(element, index2, children) {
  if (!isImportRule(element)) {
    return;
  }
  if (element.parent) {
    console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.");
    nullifyElement(element);
  } else if (isPrependedWithRegularRules(index2, children)) {
    console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.");
    nullifyElement(element);
  }
};
function prefix2(value, length2) {
  switch (hash3(value, length2)) {
    case 5103:
      return WEBKIT + "print-" + value + value;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + value + value;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + value + MOZ + value + MS + value + value;
    case 6828:
    case 4268:
      return WEBKIT + value + MS + value + value;
    case 6165:
      return WEBKIT + value + MS + "flex-" + value + value;
    case 5187:
      return WEBKIT + value + replace(value, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") + value;
    case 5443:
      return WEBKIT + value + MS + "flex-item-" + replace(value, /flex-|-self/, "") + value;
    case 4675:
      return WEBKIT + value + MS + "flex-line-pack" + replace(value, /align-content|flex-|-self/, "") + value;
    case 5548:
      return WEBKIT + value + MS + replace(value, "shrink", "negative") + value;
    case 5292:
      return WEBKIT + value + MS + replace(value, "basis", "preferred-size") + value;
    case 6060:
      return WEBKIT + "box-" + replace(value, "-grow", "") + WEBKIT + value + MS + replace(value, "grow", "positive") + value;
    case 4554:
      return WEBKIT + replace(value, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + value;
    case 6187:
      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + "$1"), /(image-set)/, WEBKIT + "$1"), value, "") + value;
    case 5495:
    case 3959:
      return replace(value, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + WEBKIT + value + value;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(value, /(.+)-inline(.+)/, WEBKIT + "$1$2") + value;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(value) - 1 - length2 > 6) switch (charat(value, length2 + 1)) {
        case 109:
          if (charat(value, length2 + 4) !== 45) break;
        case 102:
          return replace(value, /(.+:)(.+)-([^]+)/, "$1" + WEBKIT + "$2-$3$1" + MOZ + (charat(value, length2 + 3) == 108 ? "$3" : "$2-$3")) + value;
        case 115:
          return ~indexof(value, "stretch") ? prefix2(replace(value, "stretch", "fill-available"), length2) + value : value;
      }
      break;
    case 4949:
      if (charat(value, length2 + 1) !== 115) break;
    case 6444:
      switch (charat(value, strlen(value) - 3 - (~indexof(value, "!important") && 10))) {
        case 107:
          return replace(value, ":", ":" + WEBKIT) + value;
        case 101:
          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, "$1" + WEBKIT + (charat(value, 14) === 45 ? "inline-" : "") + "box$3$1" + WEBKIT + "$2$3$1" + MS + "$2box$3") + value;
      }
      break;
    case 5936:
      switch (charat(value, length2 + 11)) {
        case 114:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb") + value;
        case 108:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb-rl") + value;
        case 45:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "lr") + value;
      }
      return WEBKIT + value + MS + value + value;
  }
  return value;
}
var prefixer = function prefixer2(element, index2, children, callback) {
  if (element.length > -1) {
    if (!element["return"]) switch (element.type) {
      case DECLARATION:
        element["return"] = prefix2(element.value, element.length);
        break;
      case KEYFRAMES:
        return serialize([copy(element, {
          value: replace(element.value, "@", "@" + WEBKIT)
        })], callback);
      case RULESET:
        if (element.length) return combine(element.props, function(value) {
          switch (match(value, /(::plac\w+|:read-\w+)/)) {
            case ":read-only":
            case ":read-write":
              return serialize([copy(element, {
                props: [replace(value, /:(read-\w+)/, ":" + MOZ + "$1")]
              })], callback);
            case "::placeholder":
              return serialize([copy(element, {
                props: [replace(value, /:(plac\w+)/, ":" + WEBKIT + "input-$1")]
              }), copy(element, {
                props: [replace(value, /:(plac\w+)/, ":" + MOZ + "$1")]
              }), copy(element, {
                props: [replace(value, /:(plac\w+)/, MS + "input-$1")]
              })], callback);
          }
          return "";
        });
    }
  }
};
var defaultStylisPlugins = [prefixer];
var createCache = function createCache2(options2) {
  var key = options2.key;
  if (!key) {
    throw new Error("You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\nIf multiple caches share the same key they might \"fight\" for each other's style elements.");
  }
  if (key === "css") {
    var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(ssrStyles, function(node2) {
      var dataEmotionAttribute = node2.getAttribute("data-emotion");
      if (dataEmotionAttribute.indexOf(" ") === -1) {
        return;
      }
      document.head.appendChild(node2);
      node2.setAttribute("data-s", "");
    });
  }
  var stylisPlugins = options2.stylisPlugins || defaultStylisPlugins;
  {
    if (/[^a-z-]/.test(key)) {
      throw new Error('Emotion key must only contain lower case alphabetical characters and - but "' + key + '" was passed');
    }
  }
  var inserted = {};
  var container;
  var nodesToHydrate = [];
  {
    container = options2.container || document.head;
    Array.prototype.forEach.call(
      // this means we will ignore elements which don't have a space in them which
      // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
      document.querySelectorAll('style[data-emotion^="' + key + ' "]'),
      function(node2) {
        var attrib = node2.getAttribute("data-emotion").split(" ");
        for (var i = 1; i < attrib.length; i++) {
          inserted[attrib[i]] = true;
        }
        nodesToHydrate.push(node2);
      }
    );
  }
  var _insert;
  var omnipresentPlugins = [compat, removeLabel];
  {
    omnipresentPlugins.push(createUnsafeSelectorsAlarm({
      get compat() {
        return cache.compat;
      }
    }), incorrectImportAlarm);
  }
  {
    var currentSheet;
    var finalizingPlugins = [stringify, function(element) {
      if (!element.root) {
        if (element["return"]) {
          currentSheet.insert(element["return"]);
        } else if (element.value && element.type !== COMMENT) {
          currentSheet.insert(element.value + "{}");
        }
      }
    }];
    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));
    var stylis = function stylis2(styles58) {
      return serialize(compile(styles58), serializer);
    };
    _insert = function insert(selector, serialized, sheet, shouldCache) {
      currentSheet = sheet;
      if (serialized.map !== void 0) {
        currentSheet = {
          insert: function insert2(rule) {
            sheet.insert(rule + serialized.map);
          }
        };
      }
      stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
      if (shouldCache) {
        cache.inserted[serialized.name] = true;
      }
    };
  }
  var cache = {
    key,
    sheet: new StyleSheet({
      key,
      container,
      nonce: options2.nonce,
      speedy: options2.speedy,
      prepend: options2.prepend,
      insertionPoint: options2.insertionPoint
    }),
    nonce: options2.nonce,
    inserted,
    registered: {},
    insert: _insert
  };
  cache.sheet.hydrate(nodesToHydrate);
  return cache;
};

// node_modules/@emotion/react/_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.development.esm.js
var import_hoist_non_react_statics = __toESM(require_hoist_non_react_statics_cjs());

// node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js
var isBrowser2 = true;
function getRegisteredStyles(registered, registeredStyles, classNames2) {
  var rawClassName = "";
  classNames2.split(" ").forEach(function(className) {
    if (registered[className] !== void 0) {
      registeredStyles.push(registered[className] + ";");
    } else {
      rawClassName += className + " ";
    }
  });
  return rawClassName;
}
var registerStyles = function registerStyles2(cache, serialized, isStringTag) {
  var className = cache.key + "-" + serialized.name;
  if (
    // we only need to add the styles to the registered cache if the
    // class name could be used further down
    // the tree but if it's a string tag, we know it won't
    // so we don't have to add it to registered cache.
    // this improves memory usage since we can avoid storing the whole style string
    (isStringTag === false || // we need to always store it if we're in compat mode and
    // in node since emotion-server relies on whether a style is in
    // the registered cache to know whether a style is global or not
    // also, note that this check will be dead code eliminated in the browser
    isBrowser2 === false) && cache.registered[className] === void 0
  ) {
    cache.registered[className] = serialized.styles;
  }
};
var insertStyles = function insertStyles2(cache, serialized, isStringTag) {
  registerStyles(cache, serialized, isStringTag);
  var className = cache.key + "-" + serialized.name;
  if (cache.inserted[serialized.name] === void 0) {
    var current = serialized;
    do {
      cache.insert(serialized === current ? "." + className : "", current, cache.sheet, true);
      current = current.next;
    } while (current !== void 0);
  }
};

// node_modules/@emotion/hash/dist/emotion-hash.esm.js
function murmur2(str) {
  var h = 0;
  var k, i = 0, len = str.length;
  for (; len >= 4; ++i, len -= 4) {
    k = str.charCodeAt(i) & 255 | (str.charCodeAt(++i) & 255) << 8 | (str.charCodeAt(++i) & 255) << 16 | (str.charCodeAt(++i) & 255) << 24;
    k = /* Math.imul(k, m): */
    (k & 65535) * 1540483477 + ((k >>> 16) * 59797 << 16);
    k ^= /* k >>> r: */
    k >>> 24;
    h = /* Math.imul(k, m): */
    (k & 65535) * 1540483477 + ((k >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (h & 65535) * 1540483477 + ((h >>> 16) * 59797 << 16);
  }
  switch (len) {
    case 3:
      h ^= (str.charCodeAt(i + 2) & 255) << 16;
    case 2:
      h ^= (str.charCodeAt(i + 1) & 255) << 8;
    case 1:
      h ^= str.charCodeAt(i) & 255;
      h = /* Math.imul(h, m): */
      (h & 65535) * 1540483477 + ((h >>> 16) * 59797 << 16);
  }
  h ^= h >>> 13;
  h = /* Math.imul(h, m): */
  (h & 65535) * 1540483477 + ((h >>> 16) * 59797 << 16);
  return ((h ^ h >>> 15) >>> 0).toString(36);
}

// node_modules/@emotion/unitless/dist/emotion-unitless.esm.js
var unitlessKeys = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};

// node_modules/@emotion/serialize/dist/emotion-serialize.development.esm.js
var isDevelopment2 = true;
var ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`;
var UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
var isCustomProperty = function isCustomProperty2(property2) {
  return property2.charCodeAt(1) === 45;
};
var isProcessableValue = function isProcessableValue2(value) {
  return value != null && typeof value !== "boolean";
};
var processStyleName = memoize(function(styleName) {
  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, "-$&").toLowerCase();
});
var processStyleValue = function processStyleValue2(key, value) {
  switch (key) {
    case "animation":
    case "animationName": {
      if (typeof value === "string") {
        return value.replace(animationRegex, function(match2, p1, p2) {
          cursor = {
            name: p1,
            styles: p2,
            next: cursor
          };
          return p1;
        });
      }
    }
  }
  if (unitlessKeys[key] !== 1 && !isCustomProperty(key) && typeof value === "number" && value !== 0) {
    return value + "px";
  }
  return value;
};
{
  contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/;
  contentValues = ["normal", "none", "initial", "inherit", "unset"];
  oldProcessStyleValue = processStyleValue;
  msPattern = /^-ms-/;
  hyphenPattern = /-(.)/g;
  hyphenatedCache = {};
  processStyleValue = function processStyleValue3(key, value) {
    if (key === "content") {
      if (typeof value !== "string" || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '"' && value.charAt(0) !== "'")) {
        throw new Error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + value + "\"'`");
      }
    }
    var processed = oldProcessStyleValue(key, value);
    if (processed !== "" && !isCustomProperty(key) && key.indexOf("-") !== -1 && hyphenatedCache[key] === void 0) {
      hyphenatedCache[key] = true;
      console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + key.replace(msPattern, "ms-").replace(hyphenPattern, function(str, _char) {
        return _char.toUpperCase();
      }) + "?");
    }
    return processed;
  };
}
var contentValuePattern;
var contentValues;
var oldProcessStyleValue;
var msPattern;
var hyphenPattern;
var hyphenatedCache;
var noComponentSelectorMessage = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function handleInterpolation(mergedProps, registered, interpolation) {
  if (interpolation == null) {
    return "";
  }
  var componentSelector = interpolation;
  if (componentSelector.__emotion_styles !== void 0) {
    if (String(componentSelector) === "NO_COMPONENT_SELECTOR") {
      throw new Error(noComponentSelectorMessage);
    }
    return componentSelector;
  }
  switch (typeof interpolation) {
    case "boolean": {
      return "";
    }
    case "object": {
      var keyframes3 = interpolation;
      if (keyframes3.anim === 1) {
        cursor = {
          name: keyframes3.name,
          styles: keyframes3.styles,
          next: cursor
        };
        return keyframes3.name;
      }
      var serializedStyles = interpolation;
      if (serializedStyles.styles !== void 0) {
        var next2 = serializedStyles.next;
        if (next2 !== void 0) {
          while (next2 !== void 0) {
            cursor = {
              name: next2.name,
              styles: next2.styles,
              next: cursor
            };
            next2 = next2.next;
          }
        }
        var styles58 = serializedStyles.styles + ";";
        if (serializedStyles.map !== void 0) {
          styles58 += serializedStyles.map;
        }
        return styles58;
      }
      return createStringFromObject(mergedProps, registered, interpolation);
    }
    case "function": {
      if (mergedProps !== void 0) {
        var previousCursor = cursor;
        var result = interpolation(mergedProps);
        cursor = previousCursor;
        return handleInterpolation(mergedProps, registered, result);
      } else {
        console.error("Functions that are interpolated in css calls will be stringified.\nIf you want to have a css call based on props, create a function that returns a css call like this\nlet dynamicStyle = (props) => css`color: ${props.color}`\nIt can be called directly with props or interpolated in a styled call like this\nlet SomeComponent = styled('div')`${dynamicStyle}`");
      }
      break;
    }
    case "string":
      {
        var matched = [];
        var replaced = interpolation.replace(animationRegex, function(_match, _p1, p2) {
          var fakeVarName = "animation" + matched.length;
          matched.push("const " + fakeVarName + " = keyframes`" + p2.replace(/^@keyframes animation-\w+/, "") + "`");
          return "${" + fakeVarName + "}";
        });
        if (matched.length) {
          console.error("`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\nInstead of doing this:\n\n" + [].concat(matched, ["`" + replaced + "`"]).join("\n") + "\n\nYou should wrap it with `css` like this:\n\ncss`" + replaced + "`");
        }
      }
      break;
  }
  var asString = interpolation;
  if (registered == null) {
    return asString;
  }
  var cached = registered[asString];
  return cached !== void 0 ? cached : asString;
}
function createStringFromObject(mergedProps, registered, obj) {
  var string = "";
  if (Array.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      string += handleInterpolation(mergedProps, registered, obj[i]) + ";";
    }
  } else {
    for (var key in obj) {
      var value = obj[key];
      if (typeof value !== "object") {
        var asString = value;
        if (registered != null && registered[asString] !== void 0) {
          string += key + "{" + registered[asString] + "}";
        } else if (isProcessableValue(asString)) {
          string += processStyleName(key) + ":" + processStyleValue(key, asString) + ";";
        }
      } else {
        if (key === "NO_COMPONENT_SELECTOR" && isDevelopment2) {
          throw new Error(noComponentSelectorMessage);
        }
        if (Array.isArray(value) && typeof value[0] === "string" && (registered == null || registered[value[0]] === void 0)) {
          for (var _i = 0; _i < value.length; _i++) {
            if (isProcessableValue(value[_i])) {
              string += processStyleName(key) + ":" + processStyleValue(key, value[_i]) + ";";
            }
          }
        } else {
          var interpolated = handleInterpolation(mergedProps, registered, value);
          switch (key) {
            case "animation":
            case "animationName": {
              string += processStyleName(key) + ":" + interpolated + ";";
              break;
            }
            default: {
              if (key === "undefined") {
                console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);
              }
              string += key + "{" + interpolated + "}";
            }
          }
        }
      }
    }
  }
  return string;
}
var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
var sourceMapPattern;
{
  sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g;
}
var cursor;
function serializeStyles(args, registered, mergedProps) {
  if (args.length === 1 && typeof args[0] === "object" && args[0] !== null && args[0].styles !== void 0) {
    return args[0];
  }
  var stringMode = true;
  var styles58 = "";
  cursor = void 0;
  var strings = args[0];
  if (strings == null || strings.raw === void 0) {
    stringMode = false;
    styles58 += handleInterpolation(mergedProps, registered, strings);
  } else {
    var asTemplateStringsArr = strings;
    if (asTemplateStringsArr[0] === void 0) {
      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
    }
    styles58 += asTemplateStringsArr[0];
  }
  for (var i = 1; i < args.length; i++) {
    styles58 += handleInterpolation(mergedProps, registered, args[i]);
    if (stringMode) {
      var templateStringsArr = strings;
      if (templateStringsArr[i] === void 0) {
        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
      }
      styles58 += templateStringsArr[i];
    }
  }
  var sourceMap;
  {
    styles58 = styles58.replace(sourceMapPattern, function(match3) {
      sourceMap = match3;
      return "";
    });
  }
  labelPattern.lastIndex = 0;
  var identifierName = "";
  var match2;
  while ((match2 = labelPattern.exec(styles58)) !== null) {
    identifierName += "-" + match2[1];
  }
  var name = murmur2(styles58) + identifierName;
  {
    var devStyles = {
      name,
      styles: styles58,
      map: sourceMap,
      next: cursor,
      toString: function toString() {
        return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
      }
    };
    return devStyles;
  }
}

// node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js
var React50 = __toESM(require_react());
var syncFallback = function syncFallback2(create) {
  return create();
};
var useInsertionEffect2 = React50["useInsertionEffect"] ? React50["useInsertionEffect"] : false;
var useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect2 || syncFallback;
var useInsertionEffectWithLayoutFallback = useInsertionEffect2 || React50.useLayoutEffect;

// node_modules/@emotion/react/dist/emotion-element-7a1343fa.browser.development.esm.js
var EmotionCacheContext = React51.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement !== "undefined" ? createCache({
    key: "css"
  }) : null
);
{
  EmotionCacheContext.displayName = "EmotionCacheContext";
}
var CacheProvider = EmotionCacheContext.Provider;
var withEmotionCache = function withEmotionCache2(func) {
  return (0, import_react42.forwardRef)(function(props, ref) {
    var cache = (0, import_react42.useContext)(EmotionCacheContext);
    return func(props, cache, ref);
  });
};
var ThemeContext = React51.createContext({});
{
  ThemeContext.displayName = "EmotionThemeContext";
}
var getTheme = function getTheme2(outerTheme, theme) {
  if (typeof theme === "function") {
    var mergedTheme = theme(outerTheme);
    if (mergedTheme == null || typeof mergedTheme !== "object" || Array.isArray(mergedTheme)) {
      throw new Error("[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!");
    }
    return mergedTheme;
  }
  if (theme == null || typeof theme !== "object" || Array.isArray(theme)) {
    throw new Error("[ThemeProvider] Please make your theme prop a plain object");
  }
  return _extends({}, outerTheme, theme);
};
var createCacheWithTheme = weakMemoize(function(outerTheme) {
  return weakMemoize(function(theme) {
    return getTheme(outerTheme, theme);
  });
});
var hasOwn = {}.hasOwnProperty;
var getLastPart = function getLastPart2(functionName) {
  var parts = functionName.split(".");
  return parts[parts.length - 1];
};
var getFunctionNameFromStackTraceLine = function getFunctionNameFromStackTraceLine2(line2) {
  var match2 = /^\s+at\s+([A-Za-z0-9$.]+)\s/.exec(line2);
  if (match2) return getLastPart(match2[1]);
  match2 = /^([A-Za-z0-9$.]+)@/.exec(line2);
  if (match2) return getLastPart(match2[1]);
  return void 0;
};
var internalReactFunctionNames = /* @__PURE__ */ new Set(["renderWithHooks", "processChild", "finishClassComponent", "renderToString"]);
var sanitizeIdentifier = function sanitizeIdentifier2(identifier2) {
  return identifier2.replace(/\$/g, "-");
};
var getLabelFromStackTrace = function getLabelFromStackTrace2(stackTrace) {
  if (!stackTrace) return void 0;
  var lines = stackTrace.split("\n");
  for (var i = 0; i < lines.length; i++) {
    var functionName = getFunctionNameFromStackTraceLine(lines[i]);
    if (!functionName) continue;
    if (internalReactFunctionNames.has(functionName)) break;
    if (/^[A-Z]/.test(functionName)) return sanitizeIdentifier(functionName);
  }
  return void 0;
};
var typePropName = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__";
var labelPropName = "__EMOTION_LABEL_PLEASE_DO_NOT_USE__";
var createEmotionProps = function createEmotionProps2(type, props) {
  if (typeof props.css === "string" && // check if there is a css declaration
  props.css.indexOf(":") !== -1) {
    throw new Error("Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/react' like this: css`" + props.css + "`");
  }
  var newProps = {};
  for (var key in props) {
    if (hasOwn.call(props, key)) {
      newProps[key] = props[key];
    }
  }
  newProps[typePropName] = type;
  if (typeof globalThis !== "undefined" && !!globalThis.EMOTION_RUNTIME_AUTO_LABEL && !!props.css && (typeof props.css !== "object" || typeof props.css.name !== "string" || props.css.name.indexOf("-") === -1)) {
    var label = getLabelFromStackTrace(new Error().stack);
    if (label) newProps[labelPropName] = label;
  }
  return newProps;
};
var Insertion = function Insertion2(_ref3) {
  var cache = _ref3.cache, serialized = _ref3.serialized, isStringTag = _ref3.isStringTag;
  registerStyles(cache, serialized, isStringTag);
  useInsertionEffectAlwaysWithSyncFallback(function() {
    return insertStyles(cache, serialized, isStringTag);
  });
  return null;
};
var Emotion = withEmotionCache(
  /* <any, any> */
  function(props, cache, ref) {
    var cssProp = props.css;
    if (typeof cssProp === "string" && cache.registered[cssProp] !== void 0) {
      cssProp = cache.registered[cssProp];
    }
    var WrappedComponent = props[typePropName];
    var registeredStyles = [cssProp];
    var className = "";
    if (typeof props.className === "string") {
      className = getRegisteredStyles(cache.registered, registeredStyles, props.className);
    } else if (props.className != null) {
      className = props.className + " ";
    }
    var serialized = serializeStyles(registeredStyles, void 0, React51.useContext(ThemeContext));
    if (serialized.name.indexOf("-") === -1) {
      var labelFromStack = props[labelPropName];
      if (labelFromStack) {
        serialized = serializeStyles([serialized, "label:" + labelFromStack + ";"]);
      }
    }
    className += cache.key + "-" + serialized.name;
    var newProps = {};
    for (var key in props) {
      if (hasOwn.call(props, key) && key !== "css" && key !== typePropName && key !== labelPropName) {
        newProps[key] = props[key];
      }
    }
    newProps.className = className;
    if (ref) {
      newProps.ref = ref;
    }
    return React51.createElement(React51.Fragment, null, React51.createElement(Insertion, {
      cache,
      serialized,
      isStringTag: typeof WrappedComponent === "string"
    }), React51.createElement(WrappedComponent, newProps));
  }
);
{
  Emotion.displayName = "EmotionCssPropInternal";
}
var Emotion$1 = Emotion;

// node_modules/@emotion/react/dist/emotion-react.browser.development.esm.js
var React52 = __toESM(require_react());
var import_hoist_non_react_statics2 = __toESM(require_hoist_non_react_statics_cjs());
var isDevelopment3 = true;
var pkg = {
  name: "@emotion/react",
  version: "11.13.3",
  main: "dist/emotion-react.cjs.js",
  module: "dist/emotion-react.esm.js",
  exports: {
    ".": {
      types: {
        "import": "./dist/emotion-react.cjs.mjs",
        "default": "./dist/emotion-react.cjs.js"
      },
      development: {
        "edge-light": {
          module: "./dist/emotion-react.development.edge-light.esm.js",
          "import": "./dist/emotion-react.development.edge-light.cjs.mjs",
          "default": "./dist/emotion-react.development.edge-light.cjs.js"
        },
        worker: {
          module: "./dist/emotion-react.development.edge-light.esm.js",
          "import": "./dist/emotion-react.development.edge-light.cjs.mjs",
          "default": "./dist/emotion-react.development.edge-light.cjs.js"
        },
        workerd: {
          module: "./dist/emotion-react.development.edge-light.esm.js",
          "import": "./dist/emotion-react.development.edge-light.cjs.mjs",
          "default": "./dist/emotion-react.development.edge-light.cjs.js"
        },
        browser: {
          module: "./dist/emotion-react.browser.development.esm.js",
          "import": "./dist/emotion-react.browser.development.cjs.mjs",
          "default": "./dist/emotion-react.browser.development.cjs.js"
        },
        module: "./dist/emotion-react.development.esm.js",
        "import": "./dist/emotion-react.development.cjs.mjs",
        "default": "./dist/emotion-react.development.cjs.js"
      },
      "edge-light": {
        module: "./dist/emotion-react.edge-light.esm.js",
        "import": "./dist/emotion-react.edge-light.cjs.mjs",
        "default": "./dist/emotion-react.edge-light.cjs.js"
      },
      worker: {
        module: "./dist/emotion-react.edge-light.esm.js",
        "import": "./dist/emotion-react.edge-light.cjs.mjs",
        "default": "./dist/emotion-react.edge-light.cjs.js"
      },
      workerd: {
        module: "./dist/emotion-react.edge-light.esm.js",
        "import": "./dist/emotion-react.edge-light.cjs.mjs",
        "default": "./dist/emotion-react.edge-light.cjs.js"
      },
      browser: {
        module: "./dist/emotion-react.browser.esm.js",
        "import": "./dist/emotion-react.browser.cjs.mjs",
        "default": "./dist/emotion-react.browser.cjs.js"
      },
      module: "./dist/emotion-react.esm.js",
      "import": "./dist/emotion-react.cjs.mjs",
      "default": "./dist/emotion-react.cjs.js"
    },
    "./jsx-runtime": {
      types: {
        "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs",
        "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js"
      },
      development: {
        "edge-light": {
          module: "./jsx-runtime/dist/emotion-react-jsx-runtime.development.edge-light.esm.js",
          "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.development.edge-light.cjs.mjs",
          "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.development.edge-light.cjs.js"
        },
        worker: {
          module: "./jsx-runtime/dist/emotion-react-jsx-runtime.development.edge-light.esm.js",
          "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.development.edge-light.cjs.mjs",
          "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.development.edge-light.cjs.js"
        },
        workerd: {
          module: "./jsx-runtime/dist/emotion-react-jsx-runtime.development.edge-light.esm.js",
          "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.development.edge-light.cjs.mjs",
          "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.development.edge-light.cjs.js"
        },
        browser: {
          module: "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.development.esm.js",
          "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.development.cjs.mjs",
          "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.development.cjs.js"
        },
        module: "./jsx-runtime/dist/emotion-react-jsx-runtime.development.esm.js",
        "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.development.cjs.mjs",
        "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.development.cjs.js"
      },
      "edge-light": {
        module: "./jsx-runtime/dist/emotion-react-jsx-runtime.edge-light.esm.js",
        "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.edge-light.cjs.mjs",
        "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.edge-light.cjs.js"
      },
      worker: {
        module: "./jsx-runtime/dist/emotion-react-jsx-runtime.edge-light.esm.js",
        "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.edge-light.cjs.mjs",
        "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.edge-light.cjs.js"
      },
      workerd: {
        module: "./jsx-runtime/dist/emotion-react-jsx-runtime.edge-light.esm.js",
        "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.edge-light.cjs.mjs",
        "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.edge-light.cjs.js"
      },
      browser: {
        module: "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js",
        "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.cjs.mjs",
        "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.cjs.js"
      },
      module: "./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js",
      "import": "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs",
      "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js"
    },
    "./_isolated-hnrs": {
      types: {
        "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs",
        "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js"
      },
      development: {
        "edge-light": {
          module: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.development.edge-light.esm.js",
          "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.development.edge-light.cjs.mjs",
          "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.development.edge-light.cjs.js"
        },
        worker: {
          module: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.development.edge-light.esm.js",
          "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.development.edge-light.cjs.mjs",
          "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.development.edge-light.cjs.js"
        },
        workerd: {
          module: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.development.edge-light.esm.js",
          "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.development.edge-light.cjs.mjs",
          "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.development.edge-light.cjs.js"
        },
        browser: {
          module: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.development.esm.js",
          "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.development.cjs.mjs",
          "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.development.cjs.js"
        },
        module: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.development.esm.js",
        "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.development.cjs.mjs",
        "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.development.cjs.js"
      },
      "edge-light": {
        module: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.edge-light.esm.js",
        "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.edge-light.cjs.mjs",
        "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.edge-light.cjs.js"
      },
      worker: {
        module: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.edge-light.esm.js",
        "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.edge-light.cjs.mjs",
        "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.edge-light.cjs.js"
      },
      workerd: {
        module: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.edge-light.esm.js",
        "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.edge-light.cjs.mjs",
        "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.edge-light.cjs.js"
      },
      browser: {
        module: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js",
        "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.cjs.mjs",
        "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.cjs.js"
      },
      module: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js",
      "import": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs",
      "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js"
    },
    "./jsx-dev-runtime": {
      types: {
        "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs",
        "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js"
      },
      development: {
        "edge-light": {
          module: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.development.edge-light.esm.js",
          "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.development.edge-light.cjs.mjs",
          "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.development.edge-light.cjs.js"
        },
        worker: {
          module: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.development.edge-light.esm.js",
          "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.development.edge-light.cjs.mjs",
          "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.development.edge-light.cjs.js"
        },
        workerd: {
          module: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.development.edge-light.esm.js",
          "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.development.edge-light.cjs.mjs",
          "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.development.edge-light.cjs.js"
        },
        browser: {
          module: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.development.esm.js",
          "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.development.cjs.mjs",
          "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.development.cjs.js"
        },
        module: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.development.esm.js",
        "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.development.cjs.mjs",
        "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.development.cjs.js"
      },
      "edge-light": {
        module: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.edge-light.esm.js",
        "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.edge-light.cjs.mjs",
        "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.edge-light.cjs.js"
      },
      worker: {
        module: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.edge-light.esm.js",
        "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.edge-light.cjs.mjs",
        "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.edge-light.cjs.js"
      },
      workerd: {
        module: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.edge-light.esm.js",
        "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.edge-light.cjs.mjs",
        "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.edge-light.cjs.js"
      },
      browser: {
        module: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js",
        "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.cjs.mjs",
        "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.cjs.js"
      },
      module: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js",
      "import": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs",
      "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js"
    },
    "./package.json": "./package.json",
    "./types/css-prop": "./types/css-prop.d.ts",
    "./macro": {
      types: {
        "import": "./macro.d.mts",
        "default": "./macro.d.ts"
      },
      "default": "./macro.js"
    }
  },
  imports: {
    "#is-development": {
      development: "./src/conditions/true.js",
      "default": "./src/conditions/false.js"
    },
    "#is-browser": {
      "edge-light": "./src/conditions/false.js",
      workerd: "./src/conditions/false.js",
      worker: "./src/conditions/false.js",
      browser: "./src/conditions/true.js",
      "default": "./src/conditions/is-browser.js"
    }
  },
  types: "types/index.d.ts",
  files: [
    "src",
    "dist",
    "jsx-runtime",
    "jsx-dev-runtime",
    "_isolated-hnrs",
    "types/*.d.ts",
    "macro.*"
  ],
  sideEffects: false,
  author: "Emotion Contributors",
  license: "MIT",
  scripts: {
    "test:typescript": "dtslint types"
  },
  dependencies: {
    "@babel/runtime": "^7.18.3",
    "@emotion/babel-plugin": "^11.12.0",
    "@emotion/cache": "^11.13.0",
    "@emotion/serialize": "^1.3.1",
    "@emotion/use-insertion-effect-with-fallbacks": "^1.1.0",
    "@emotion/utils": "^1.4.0",
    "@emotion/weak-memoize": "^0.4.0",
    "hoist-non-react-statics": "^3.3.1"
  },
  peerDependencies: {
    react: ">=16.8.0"
  },
  peerDependenciesMeta: {
    "@types/react": {
      optional: true
    }
  },
  devDependencies: {
    "@definitelytyped/dtslint": "0.0.112",
    "@emotion/css": "11.13.0",
    "@emotion/css-prettifier": "1.1.4",
    "@emotion/server": "11.11.0",
    "@emotion/styled": "11.13.0",
    "html-tag-names": "^1.1.2",
    react: "16.14.0",
    "svg-tag-names": "^1.1.1",
    typescript: "^5.4.5"
  },
  repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
  publishConfig: {
    access: "public"
  },
  "umd:main": "dist/emotion-react.umd.min.js",
  preconstruct: {
    entrypoints: [
      "./index.js",
      "./jsx-runtime.js",
      "./jsx-dev-runtime.js",
      "./_isolated-hnrs.js"
    ],
    umdName: "emotionReact",
    exports: {
      extra: {
        "./types/css-prop": "./types/css-prop.d.ts",
        "./macro": {
          types: {
            "import": "./macro.d.mts",
            "default": "./macro.d.ts"
          },
          "default": "./macro.js"
        }
      }
    }
  }
};
var jsx = function jsx2(type, props) {
  var args = arguments;
  if (props == null || !hasOwn.call(props, "css")) {
    return React52.createElement.apply(void 0, args);
  }
  var argsLength = args.length;
  var createElementArgArray = new Array(argsLength);
  createElementArgArray[0] = Emotion$1;
  createElementArgArray[1] = createEmotionProps(type, props);
  for (var i = 2; i < argsLength; i++) {
    createElementArgArray[i] = args[i];
  }
  return React52.createElement.apply(null, createElementArgArray);
};
var warnedAboutCssPropForGlobal = false;
var Global = withEmotionCache(function(props, cache) {
  if (!warnedAboutCssPropForGlobal && // check for className as well since the user is
  // probably using the custom createElement which
  // means it will be turned into a className prop
  // I don't really want to add it to the type since it shouldn't be used
  (props.className || props.css)) {
    console.error("It looks like you're using the css prop on Global, did you mean to use the styles prop instead?");
    warnedAboutCssPropForGlobal = true;
  }
  var styles58 = props.styles;
  var serialized = serializeStyles([styles58], void 0, React52.useContext(ThemeContext));
  var sheetRef = React52.useRef();
  useInsertionEffectWithLayoutFallback(function() {
    var key = cache.key + "-global";
    var sheet = new cache.sheet.constructor({
      key,
      nonce: cache.sheet.nonce,
      container: cache.sheet.container,
      speedy: cache.sheet.isSpeedy
    });
    var rehydrating = false;
    var node2 = document.querySelector('style[data-emotion="' + key + " " + serialized.name + '"]');
    if (cache.sheet.tags.length) {
      sheet.before = cache.sheet.tags[0];
    }
    if (node2 !== null) {
      rehydrating = true;
      node2.setAttribute("data-emotion", key);
      sheet.hydrate([node2]);
    }
    sheetRef.current = [sheet, rehydrating];
    return function() {
      sheet.flush();
    };
  }, [cache]);
  useInsertionEffectWithLayoutFallback(function() {
    var sheetRefCurrent = sheetRef.current;
    var sheet = sheetRefCurrent[0], rehydrating = sheetRefCurrent[1];
    if (rehydrating) {
      sheetRefCurrent[1] = false;
      return;
    }
    if (serialized.next !== void 0) {
      insertStyles(cache, serialized.next, true);
    }
    if (sheet.tags.length) {
      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;
      sheet.before = element;
      sheet.flush();
    }
    cache.insert("", serialized, sheet, false);
  }, [cache, serialized.name]);
  return null;
});
{
  Global.displayName = "EmotionGlobal";
}
function css2() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return serializeStyles(args);
}
var keyframes = function keyframes2() {
  var insertable = css2.apply(void 0, arguments);
  var name = "animation-" + insertable.name;
  return {
    name,
    styles: "@keyframes " + name + "{" + insertable.styles + "}",
    anim: 1,
    toString: function toString() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
};
var classnames = function classnames2(args) {
  var len = args.length;
  var i = 0;
  var cls = "";
  for (; i < len; i++) {
    var arg = args[i];
    if (arg == null) continue;
    var toAdd = void 0;
    switch (typeof arg) {
      case "boolean":
        break;
      case "object": {
        if (Array.isArray(arg)) {
          toAdd = classnames2(arg);
        } else {
          if (arg.styles !== void 0 && arg.name !== void 0) {
            console.error("You have passed styles created with `css` from `@emotion/react` package to the `cx`.\n`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.");
          }
          toAdd = "";
          for (var k in arg) {
            if (arg[k] && k) {
              toAdd && (toAdd += " ");
              toAdd += k;
            }
          }
        }
        break;
      }
      default: {
        toAdd = arg;
      }
    }
    if (toAdd) {
      cls && (cls += " ");
      cls += toAdd;
    }
  }
  return cls;
};
function merge(registered, css6, className) {
  var registeredStyles = [];
  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);
  if (registeredStyles.length < 2) {
    return className;
  }
  return rawClassName + css6(registeredStyles);
}
var Insertion3 = function Insertion4(_ref3) {
  var cache = _ref3.cache, serializedArr = _ref3.serializedArr;
  useInsertionEffectAlwaysWithSyncFallback(function() {
    for (var i = 0; i < serializedArr.length; i++) {
      insertStyles(cache, serializedArr[i], false);
    }
  });
  return null;
};
var ClassNames = withEmotionCache(function(props, cache) {
  var hasRendered = false;
  var serializedArr = [];
  var css6 = function css7() {
    if (hasRendered && isDevelopment3) {
      throw new Error("css can only be used during render");
    }
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var serialized = serializeStyles(args, cache.registered);
    serializedArr.push(serialized);
    registerStyles(cache, serialized, false);
    return cache.key + "-" + serialized.name;
  };
  var cx = function cx2() {
    if (hasRendered && isDevelopment3) {
      throw new Error("cx can only be used during render");
    }
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return merge(cache.registered, css6, classnames(args));
  };
  var content = {
    css: css6,
    cx,
    theme: React52.useContext(ThemeContext)
  };
  var ele = props.children(content);
  hasRendered = true;
  return React52.createElement(React52.Fragment, null, React52.createElement(Insertion3, {
    cache,
    serializedArr
  }), ele);
});
{
  ClassNames.displayName = "EmotionClassNames";
}
{
  isBrowser3 = typeof document !== "undefined";
  isTestEnv = typeof jest !== "undefined" || typeof vi !== "undefined";
  if (isBrowser3 && !isTestEnv) {
    globalContext = // $FlowIgnore
    typeof globalThis !== "undefined" ? globalThis : isBrowser3 ? window : global;
    globalKey = "__EMOTION_REACT_" + pkg.version.split(".")[0] + "__";
    if (globalContext[globalKey]) {
      console.warn("You are loading @emotion/react when it is already loaded. Running multiple instances may cause problems. This can happen if multiple versions are used, or if multiple builds of the same version are used.");
    }
    globalContext[globalKey] = true;
  }
}
var isBrowser3;
var isTestEnv;
var globalContext;
var globalKey;

// node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js
function _taggedTemplateLiteral(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, {
    raw: {
      value: Object.freeze(t)
    }
  }));
}

// node_modules/react-select/dist/index-a301f526.esm.js
var import_react45 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js
var import_react43 = __toESM(require_react());
var index = import_react43.useLayoutEffect;
var use_isomorphic_layout_effect_browser_esm_default = index;

// node_modules/react-select/dist/index-a301f526.esm.js
var _excluded$4 = ["className", "clearValue", "cx", "getStyles", "getClassNames", "getValue", "hasValue", "isMulti", "isRtl", "options", "selectOption", "selectProps", "setValue", "theme"];
var noop = function noop2() {
};
function applyPrefixToName(prefix3, name) {
  if (!name) {
    return prefix3;
  } else if (name[0] === "-") {
    return prefix3 + name;
  } else {
    return prefix3 + "__" + name;
  }
}
function classNames(prefix3, state2) {
  for (var _len = arguments.length, classNameList = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    classNameList[_key - 2] = arguments[_key];
  }
  var arr = [].concat(classNameList);
  if (state2 && prefix3) {
    for (var key in state2) {
      if (state2.hasOwnProperty(key) && state2[key]) {
        arr.push("".concat(applyPrefixToName(prefix3, key)));
      }
    }
  }
  return arr.filter(function(i) {
    return i;
  }).map(function(i) {
    return String(i).trim();
  }).join(" ");
}
var cleanValue = function cleanValue2(value) {
  if (isArray2(value)) return value.filter(Boolean);
  if (_typeof(value) === "object" && value !== null) return [value];
  return [];
};
var cleanCommonProps = function cleanCommonProps2(props) {
  props.className;
  props.clearValue;
  props.cx;
  props.getStyles;
  props.getClassNames;
  props.getValue;
  props.hasValue;
  props.isMulti;
  props.isRtl;
  props.options;
  props.selectOption;
  props.selectProps;
  props.setValue;
  props.theme;
  var innerProps = _objectWithoutProperties(props, _excluded$4);
  return _objectSpread2({}, innerProps);
};
var getStyleProps = function getStyleProps2(props, name, classNamesState) {
  var cx = props.cx, getStyles = props.getStyles, getClassNames = props.getClassNames, className = props.className;
  return {
    css: getStyles(name, props),
    className: cx(classNamesState !== null && classNamesState !== void 0 ? classNamesState : {}, getClassNames(name, props), className)
  };
};
function isDocumentElement(el) {
  return [document.documentElement, document.body, window].indexOf(el) > -1;
}
function normalizedHeight(el) {
  if (isDocumentElement(el)) {
    return window.innerHeight;
  }
  return el.clientHeight;
}
function getScrollTop(el) {
  if (isDocumentElement(el)) {
    return window.pageYOffset;
  }
  return el.scrollTop;
}
function scrollTo(el, top2) {
  if (isDocumentElement(el)) {
    window.scrollTo(0, top2);
    return;
  }
  el.scrollTop = top2;
}
function getScrollParent2(element) {
  var style = getComputedStyle(element);
  var excludeStaticParent = style.position === "absolute";
  var overflowRx = /(auto|scroll)/;
  if (style.position === "fixed") return document.documentElement;
  for (var parent = element; parent = parent.parentElement; ) {
    style = getComputedStyle(parent);
    if (excludeStaticParent && style.position === "static") {
      continue;
    }
    if (overflowRx.test(style.overflow + style.overflowY + style.overflowX)) {
      return parent;
    }
  }
  return document.documentElement;
}
function easeOutCubic(t, b, c, d2) {
  return c * ((t = t / d2 - 1) * t * t + 1) + b;
}
function animatedScrollTo(element, to) {
  var duration = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 200;
  var callback = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : noop;
  var start2 = getScrollTop(element);
  var change = to - start2;
  var increment = 10;
  var currentTime = 0;
  function animateScroll() {
    currentTime += increment;
    var val = easeOutCubic(currentTime, start2, change, duration);
    scrollTo(element, val);
    if (currentTime < duration) {
      window.requestAnimationFrame(animateScroll);
    } else {
      callback(element);
    }
  }
  animateScroll();
}
function scrollIntoView(menuEl, focusedEl) {
  var menuRect = menuEl.getBoundingClientRect();
  var focusedRect = focusedEl.getBoundingClientRect();
  var overScroll = focusedEl.offsetHeight / 3;
  if (focusedRect.bottom + overScroll > menuRect.bottom) {
    scrollTo(menuEl, Math.min(focusedEl.offsetTop + focusedEl.clientHeight - menuEl.offsetHeight + overScroll, menuEl.scrollHeight));
  } else if (focusedRect.top - overScroll < menuRect.top) {
    scrollTo(menuEl, Math.max(focusedEl.offsetTop - overScroll, 0));
  }
}
function getBoundingClientObj(element) {
  var rect = element.getBoundingClientRect();
  return {
    bottom: rect.bottom,
    height: rect.height,
    left: rect.left,
    right: rect.right,
    top: rect.top,
    width: rect.width
  };
}
function isTouchCapable() {
  try {
    document.createEvent("TouchEvent");
    return true;
  } catch (e) {
    return false;
  }
}
function isMobileDevice() {
  try {
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
  } catch (e) {
    return false;
  }
}
var passiveOptionAccessed = false;
var options = {
  get passive() {
    return passiveOptionAccessed = true;
  }
};
var w = typeof window !== "undefined" ? window : {};
if (w.addEventListener && w.removeEventListener) {
  w.addEventListener("p", noop, options);
  w.removeEventListener("p", noop, false);
}
var supportsPassiveEvents = passiveOptionAccessed;
function notNullish(item) {
  return item != null;
}
function isArray2(arg) {
  return Array.isArray(arg);
}
function valueTernary(isMulti, multiValue, singleValue) {
  return isMulti ? multiValue : singleValue;
}
function singleValueAsValue(singleValue) {
  return singleValue;
}
function multiValueAsValue(multiValue) {
  return multiValue;
}
var removeProps = function removeProps2(propsObj) {
  for (var _len2 = arguments.length, properties = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    properties[_key2 - 1] = arguments[_key2];
  }
  var propsMap = Object.entries(propsObj).filter(function(_ref3) {
    var _ref23 = _slicedToArray(_ref3, 1), key = _ref23[0];
    return !properties.includes(key);
  });
  return propsMap.reduce(function(newProps, _ref3) {
    var _ref4 = _slicedToArray(_ref3, 2), key = _ref4[0], val = _ref4[1];
    newProps[key] = val;
    return newProps;
  }, {});
};
var _excluded$3 = ["children", "innerProps"];
var _excluded2$1 = ["children", "innerProps"];
function getMenuPlacement(_ref3) {
  var preferredMaxHeight = _ref3.maxHeight, menuEl = _ref3.menuEl, minHeight = _ref3.minHeight, preferredPlacement = _ref3.placement, shouldScroll = _ref3.shouldScroll, isFixedPosition = _ref3.isFixedPosition, controlHeight2 = _ref3.controlHeight;
  var scrollParent = getScrollParent2(menuEl);
  var defaultState = {
    placement: "bottom",
    maxHeight: preferredMaxHeight
  };
  if (!menuEl || !menuEl.offsetParent) return defaultState;
  var _scrollParent$getBoun = scrollParent.getBoundingClientRect(), scrollHeight = _scrollParent$getBoun.height;
  var _menuEl$getBoundingCl = menuEl.getBoundingClientRect(), menuBottom = _menuEl$getBoundingCl.bottom, menuHeight = _menuEl$getBoundingCl.height, menuTop = _menuEl$getBoundingCl.top;
  var _menuEl$offsetParent$ = menuEl.offsetParent.getBoundingClientRect(), containerTop = _menuEl$offsetParent$.top;
  var viewHeight = isFixedPosition ? window.innerHeight : normalizedHeight(scrollParent);
  var scrollTop = getScrollTop(scrollParent);
  var marginBottom = parseInt(getComputedStyle(menuEl).marginBottom, 10);
  var marginTop = parseInt(getComputedStyle(menuEl).marginTop, 10);
  var viewSpaceAbove = containerTop - marginTop;
  var viewSpaceBelow = viewHeight - menuTop;
  var scrollSpaceAbove = viewSpaceAbove + scrollTop;
  var scrollSpaceBelow = scrollHeight - scrollTop - menuTop;
  var scrollDown = menuBottom - viewHeight + scrollTop + marginBottom;
  var scrollUp = scrollTop + menuTop - marginTop;
  var scrollDuration = 160;
  switch (preferredPlacement) {
    case "auto":
    case "bottom":
      if (viewSpaceBelow >= menuHeight) {
        return {
          placement: "bottom",
          maxHeight: preferredMaxHeight
        };
      }
      if (scrollSpaceBelow >= menuHeight && !isFixedPosition) {
        if (shouldScroll) {
          animatedScrollTo(scrollParent, scrollDown, scrollDuration);
        }
        return {
          placement: "bottom",
          maxHeight: preferredMaxHeight
        };
      }
      if (!isFixedPosition && scrollSpaceBelow >= minHeight || isFixedPosition && viewSpaceBelow >= minHeight) {
        if (shouldScroll) {
          animatedScrollTo(scrollParent, scrollDown, scrollDuration);
        }
        var constrainedHeight = isFixedPosition ? viewSpaceBelow - marginBottom : scrollSpaceBelow - marginBottom;
        return {
          placement: "bottom",
          maxHeight: constrainedHeight
        };
      }
      if (preferredPlacement === "auto" || isFixedPosition) {
        var _constrainedHeight = preferredMaxHeight;
        var spaceAbove = isFixedPosition ? viewSpaceAbove : scrollSpaceAbove;
        if (spaceAbove >= minHeight) {
          _constrainedHeight = Math.min(spaceAbove - marginBottom - controlHeight2, preferredMaxHeight);
        }
        return {
          placement: "top",
          maxHeight: _constrainedHeight
        };
      }
      if (preferredPlacement === "bottom") {
        if (shouldScroll) {
          scrollTo(scrollParent, scrollDown);
        }
        return {
          placement: "bottom",
          maxHeight: preferredMaxHeight
        };
      }
      break;
    case "top":
      if (viewSpaceAbove >= menuHeight) {
        return {
          placement: "top",
          maxHeight: preferredMaxHeight
        };
      }
      if (scrollSpaceAbove >= menuHeight && !isFixedPosition) {
        if (shouldScroll) {
          animatedScrollTo(scrollParent, scrollUp, scrollDuration);
        }
        return {
          placement: "top",
          maxHeight: preferredMaxHeight
        };
      }
      if (!isFixedPosition && scrollSpaceAbove >= minHeight || isFixedPosition && viewSpaceAbove >= minHeight) {
        var _constrainedHeight2 = preferredMaxHeight;
        if (!isFixedPosition && scrollSpaceAbove >= minHeight || isFixedPosition && viewSpaceAbove >= minHeight) {
          _constrainedHeight2 = isFixedPosition ? viewSpaceAbove - marginTop : scrollSpaceAbove - marginTop;
        }
        if (shouldScroll) {
          animatedScrollTo(scrollParent, scrollUp, scrollDuration);
        }
        return {
          placement: "top",
          maxHeight: _constrainedHeight2
        };
      }
      return {
        placement: "bottom",
        maxHeight: preferredMaxHeight
      };
    default:
      throw new Error('Invalid placement provided "'.concat(preferredPlacement, '".'));
  }
  return defaultState;
}
function alignToControl(placement) {
  var placementToCSSProp = {
    bottom: "top",
    top: "bottom"
  };
  return placement ? placementToCSSProp[placement] : "bottom";
}
var coercePlacement = function coercePlacement2(p) {
  return p === "auto" ? "bottom" : p;
};
var menuCSS = function menuCSS2(_ref23, unstyled) {
  var _objectSpread22;
  var placement = _ref23.placement, _ref2$theme = _ref23.theme, borderRadius2 = _ref2$theme.borderRadius, spacing2 = _ref2$theme.spacing, colors2 = _ref2$theme.colors;
  return _objectSpread2((_objectSpread22 = {
    label: "menu"
  }, _defineProperty(_objectSpread22, alignToControl(placement), "100%"), _defineProperty(_objectSpread22, "position", "absolute"), _defineProperty(_objectSpread22, "width", "100%"), _defineProperty(_objectSpread22, "zIndex", 1), _objectSpread22), unstyled ? {} : {
    backgroundColor: colors2.neutral0,
    borderRadius: borderRadius2,
    boxShadow: "0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)",
    marginBottom: spacing2.menuGutter,
    marginTop: spacing2.menuGutter
  });
};
var PortalPlacementContext = (0, import_react45.createContext)(null);
var MenuPlacer = function MenuPlacer2(props) {
  var children = props.children, minMenuHeight = props.minMenuHeight, maxMenuHeight = props.maxMenuHeight, menuPlacement = props.menuPlacement, menuPosition = props.menuPosition, menuShouldScrollIntoView = props.menuShouldScrollIntoView, theme = props.theme;
  var _ref3 = (0, import_react45.useContext)(PortalPlacementContext) || {}, setPortalPlacement = _ref3.setPortalPlacement;
  var ref = (0, import_react45.useRef)(null);
  var _useState = (0, import_react45.useState)(maxMenuHeight), _useState2 = _slicedToArray(_useState, 2), maxHeight = _useState2[0], setMaxHeight = _useState2[1];
  var _useState3 = (0, import_react45.useState)(null), _useState4 = _slicedToArray(_useState3, 2), placement = _useState4[0], setPlacement = _useState4[1];
  var controlHeight2 = theme.spacing.controlHeight;
  use_isomorphic_layout_effect_browser_esm_default(function() {
    var menuEl = ref.current;
    if (!menuEl) return;
    var isFixedPosition = menuPosition === "fixed";
    var shouldScroll = menuShouldScrollIntoView && !isFixedPosition;
    var state2 = getMenuPlacement({
      maxHeight: maxMenuHeight,
      menuEl,
      minHeight: minMenuHeight,
      placement: menuPlacement,
      shouldScroll,
      isFixedPosition,
      controlHeight: controlHeight2
    });
    setMaxHeight(state2.maxHeight);
    setPlacement(state2.placement);
    setPortalPlacement === null || setPortalPlacement === void 0 ? void 0 : setPortalPlacement(state2.placement);
  }, [maxMenuHeight, menuPlacement, menuPosition, menuShouldScrollIntoView, minMenuHeight, setPortalPlacement, controlHeight2]);
  return children({
    ref,
    placerProps: _objectSpread2(_objectSpread2({}, props), {}, {
      placement: placement || coercePlacement(menuPlacement),
      maxHeight
    })
  });
};
var Menu = function Menu2(props) {
  var children = props.children, innerRef = props.innerRef, innerProps = props.innerProps;
  return jsx("div", _extends({}, getStyleProps(props, "menu", {
    menu: true
  }), {
    ref: innerRef
  }, innerProps), children);
};
var Menu$1 = Menu;
var menuListCSS = function menuListCSS2(_ref4, unstyled) {
  var maxHeight = _ref4.maxHeight, baseUnit2 = _ref4.theme.spacing.baseUnit;
  return _objectSpread2({
    maxHeight,
    overflowY: "auto",
    position: "relative",
    // required for offset[Height, Top] > keyboard scroll
    WebkitOverflowScrolling: "touch"
  }, unstyled ? {} : {
    paddingBottom: baseUnit2,
    paddingTop: baseUnit2
  });
};
var MenuList = function MenuList2(props) {
  var children = props.children, innerProps = props.innerProps, innerRef = props.innerRef, isMulti = props.isMulti;
  return jsx("div", _extends({}, getStyleProps(props, "menuList", {
    "menu-list": true,
    "menu-list--is-multi": isMulti
  }), {
    ref: innerRef
  }, innerProps), children);
};
var noticeCSS = function noticeCSS2(_ref5, unstyled) {
  var _ref5$theme = _ref5.theme, baseUnit2 = _ref5$theme.spacing.baseUnit, colors2 = _ref5$theme.colors;
  return _objectSpread2({
    textAlign: "center"
  }, unstyled ? {} : {
    color: colors2.neutral40,
    padding: "".concat(baseUnit2 * 2, "px ").concat(baseUnit2 * 3, "px")
  });
};
var noOptionsMessageCSS = noticeCSS;
var loadingMessageCSS = noticeCSS;
var NoOptionsMessage = function NoOptionsMessage2(_ref6) {
  var _ref6$children = _ref6.children, children = _ref6$children === void 0 ? "No options" : _ref6$children, innerProps = _ref6.innerProps, restProps = _objectWithoutProperties(_ref6, _excluded$3);
  return jsx("div", _extends({}, getStyleProps(_objectSpread2(_objectSpread2({}, restProps), {}, {
    children,
    innerProps
  }), "noOptionsMessage", {
    "menu-notice": true,
    "menu-notice--no-options": true
  }), innerProps), children);
};
var LoadingMessage = function LoadingMessage2(_ref7) {
  var _ref7$children = _ref7.children, children = _ref7$children === void 0 ? "Loading..." : _ref7$children, innerProps = _ref7.innerProps, restProps = _objectWithoutProperties(_ref7, _excluded2$1);
  return jsx("div", _extends({}, getStyleProps(_objectSpread2(_objectSpread2({}, restProps), {}, {
    children,
    innerProps
  }), "loadingMessage", {
    "menu-notice": true,
    "menu-notice--loading": true
  }), innerProps), children);
};
var menuPortalCSS = function menuPortalCSS2(_ref8) {
  var rect = _ref8.rect, offset4 = _ref8.offset, position2 = _ref8.position;
  return {
    left: rect.left,
    position: position2,
    top: offset4,
    width: rect.width,
    zIndex: 1
  };
};
var MenuPortal = function MenuPortal2(props) {
  var appendTo = props.appendTo, children = props.children, controlElement = props.controlElement, innerProps = props.innerProps, menuPlacement = props.menuPlacement, menuPosition = props.menuPosition;
  var menuPortalRef = (0, import_react45.useRef)(null);
  var cleanupRef = (0, import_react45.useRef)(null);
  var _useState5 = (0, import_react45.useState)(coercePlacement(menuPlacement)), _useState6 = _slicedToArray(_useState5, 2), placement = _useState6[0], setPortalPlacement = _useState6[1];
  var portalPlacementContext = (0, import_react45.useMemo)(function() {
    return {
      setPortalPlacement
    };
  }, []);
  var _useState7 = (0, import_react45.useState)(null), _useState8 = _slicedToArray(_useState7, 2), computedPosition = _useState8[0], setComputedPosition = _useState8[1];
  var updateComputedPosition = (0, import_react45.useCallback)(function() {
    if (!controlElement) return;
    var rect = getBoundingClientObj(controlElement);
    var scrollDistance = menuPosition === "fixed" ? 0 : window.pageYOffset;
    var offset4 = rect[placement] + scrollDistance;
    if (offset4 !== (computedPosition === null || computedPosition === void 0 ? void 0 : computedPosition.offset) || rect.left !== (computedPosition === null || computedPosition === void 0 ? void 0 : computedPosition.rect.left) || rect.width !== (computedPosition === null || computedPosition === void 0 ? void 0 : computedPosition.rect.width)) {
      setComputedPosition({
        offset: offset4,
        rect
      });
    }
  }, [controlElement, menuPosition, placement, computedPosition === null || computedPosition === void 0 ? void 0 : computedPosition.offset, computedPosition === null || computedPosition === void 0 ? void 0 : computedPosition.rect.left, computedPosition === null || computedPosition === void 0 ? void 0 : computedPosition.rect.width]);
  use_isomorphic_layout_effect_browser_esm_default(function() {
    updateComputedPosition();
  }, [updateComputedPosition]);
  var runAutoUpdate = (0, import_react45.useCallback)(function() {
    if (typeof cleanupRef.current === "function") {
      cleanupRef.current();
      cleanupRef.current = null;
    }
    if (controlElement && menuPortalRef.current) {
      cleanupRef.current = autoUpdate(controlElement, menuPortalRef.current, updateComputedPosition, {
        elementResize: "ResizeObserver" in window
      });
    }
  }, [controlElement, updateComputedPosition]);
  use_isomorphic_layout_effect_browser_esm_default(function() {
    runAutoUpdate();
  }, [runAutoUpdate]);
  var setMenuPortalElement = (0, import_react45.useCallback)(function(menuPortalElement) {
    menuPortalRef.current = menuPortalElement;
    runAutoUpdate();
  }, [runAutoUpdate]);
  if (!appendTo && menuPosition !== "fixed" || !computedPosition) return null;
  var menuWrapper = jsx("div", _extends({
    ref: setMenuPortalElement
  }, getStyleProps(_objectSpread2(_objectSpread2({}, props), {}, {
    offset: computedPosition.offset,
    position: menuPosition,
    rect: computedPosition.rect
  }), "menuPortal", {
    "menu-portal": true
  }), innerProps), children);
  return jsx(PortalPlacementContext.Provider, {
    value: portalPlacementContext
  }, appendTo ? (0, import_react_dom.createPortal)(menuWrapper, appendTo) : menuWrapper);
};
var containerCSS = function containerCSS2(_ref3) {
  var isDisabled = _ref3.isDisabled, isRtl = _ref3.isRtl;
  return {
    label: "container",
    direction: isRtl ? "rtl" : void 0,
    pointerEvents: isDisabled ? "none" : void 0,
    // cancel mouse events when disabled
    position: "relative"
  };
};
var SelectContainer = function SelectContainer2(props) {
  var children = props.children, innerProps = props.innerProps, isDisabled = props.isDisabled, isRtl = props.isRtl;
  return jsx("div", _extends({}, getStyleProps(props, "container", {
    "--is-disabled": isDisabled,
    "--is-rtl": isRtl
  }), innerProps), children);
};
var valueContainerCSS = function valueContainerCSS2(_ref23, unstyled) {
  var spacing2 = _ref23.theme.spacing, isMulti = _ref23.isMulti, hasValue = _ref23.hasValue, controlShouldRenderValue = _ref23.selectProps.controlShouldRenderValue;
  return _objectSpread2({
    alignItems: "center",
    display: isMulti && hasValue && controlShouldRenderValue ? "flex" : "grid",
    flex: 1,
    flexWrap: "wrap",
    WebkitOverflowScrolling: "touch",
    position: "relative",
    overflow: "hidden"
  }, unstyled ? {} : {
    padding: "".concat(spacing2.baseUnit / 2, "px ").concat(spacing2.baseUnit * 2, "px")
  });
};
var ValueContainer = function ValueContainer2(props) {
  var children = props.children, innerProps = props.innerProps, isMulti = props.isMulti, hasValue = props.hasValue;
  return jsx("div", _extends({}, getStyleProps(props, "valueContainer", {
    "value-container": true,
    "value-container--is-multi": isMulti,
    "value-container--has-value": hasValue
  }), innerProps), children);
};
var indicatorsContainerCSS = function indicatorsContainerCSS2() {
  return {
    alignItems: "center",
    alignSelf: "stretch",
    display: "flex",
    flexShrink: 0
  };
};
var IndicatorsContainer = function IndicatorsContainer2(props) {
  var children = props.children, innerProps = props.innerProps;
  return jsx("div", _extends({}, getStyleProps(props, "indicatorsContainer", {
    indicators: true
  }), innerProps), children);
};
var _templateObject;
var _excluded$2 = ["size"];
var _excluded2 = ["innerProps", "isRtl", "size"];
function _EMOTION_STRINGIFIED_CSS_ERROR__() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
var _ref2 = false ? {
  name: "8mmkcg",
  styles: "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0"
} : {
  name: "tj5bde-Svg",
  styles: "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;label:Svg;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
var Svg = function Svg2(_ref3) {
  var size2 = _ref3.size, props = _objectWithoutProperties(_ref3, _excluded$2);
  return jsx("svg", _extends({
    height: size2,
    width: size2,
    viewBox: "0 0 20 20",
    "aria-hidden": "true",
    focusable: "false",
    css: _ref2
  }, props));
};
var CrossIcon = function CrossIcon2(props) {
  return jsx(Svg, _extends({
    size: 20
  }, props), jsx("path", {
    d: "M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
  }));
};
var DownChevron = function DownChevron2(props) {
  return jsx(Svg, _extends({
    size: 20
  }, props), jsx("path", {
    d: "M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
  }));
};
var baseCSS = function baseCSS2(_ref3, unstyled) {
  var isFocused = _ref3.isFocused, _ref3$theme = _ref3.theme, baseUnit2 = _ref3$theme.spacing.baseUnit, colors2 = _ref3$theme.colors;
  return _objectSpread2({
    label: "indicatorContainer",
    display: "flex",
    transition: "color 150ms"
  }, unstyled ? {} : {
    color: isFocused ? colors2.neutral60 : colors2.neutral20,
    padding: baseUnit2 * 2,
    ":hover": {
      color: isFocused ? colors2.neutral80 : colors2.neutral40
    }
  });
};
var dropdownIndicatorCSS = baseCSS;
var DropdownIndicator = function DropdownIndicator2(props) {
  var children = props.children, innerProps = props.innerProps;
  return jsx("div", _extends({}, getStyleProps(props, "dropdownIndicator", {
    indicator: true,
    "dropdown-indicator": true
  }), innerProps), children || jsx(DownChevron, null));
};
var clearIndicatorCSS = baseCSS;
var ClearIndicator = function ClearIndicator2(props) {
  var children = props.children, innerProps = props.innerProps;
  return jsx("div", _extends({}, getStyleProps(props, "clearIndicator", {
    indicator: true,
    "clear-indicator": true
  }), innerProps), children || jsx(CrossIcon, null));
};
var indicatorSeparatorCSS = function indicatorSeparatorCSS2(_ref4, unstyled) {
  var isDisabled = _ref4.isDisabled, _ref4$theme = _ref4.theme, baseUnit2 = _ref4$theme.spacing.baseUnit, colors2 = _ref4$theme.colors;
  return _objectSpread2({
    label: "indicatorSeparator",
    alignSelf: "stretch",
    width: 1
  }, unstyled ? {} : {
    backgroundColor: isDisabled ? colors2.neutral10 : colors2.neutral20,
    marginBottom: baseUnit2 * 2,
    marginTop: baseUnit2 * 2
  });
};
var IndicatorSeparator = function IndicatorSeparator2(props) {
  var innerProps = props.innerProps;
  return jsx("span", _extends({}, innerProps, getStyleProps(props, "indicatorSeparator", {
    "indicator-separator": true
  })));
};
var loadingDotAnimations = keyframes(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  0%, 80%, 100% { opacity: 0; }\n  40% { opacity: 1; }\n"])));
var loadingIndicatorCSS = function loadingIndicatorCSS2(_ref5, unstyled) {
  var isFocused = _ref5.isFocused, size2 = _ref5.size, _ref5$theme = _ref5.theme, colors2 = _ref5$theme.colors, baseUnit2 = _ref5$theme.spacing.baseUnit;
  return _objectSpread2({
    label: "loadingIndicator",
    display: "flex",
    transition: "color 150ms",
    alignSelf: "center",
    fontSize: size2,
    lineHeight: 1,
    marginRight: size2,
    textAlign: "center",
    verticalAlign: "middle"
  }, unstyled ? {} : {
    color: isFocused ? colors2.neutral60 : colors2.neutral20,
    padding: baseUnit2 * 2
  });
};
var LoadingDot = function LoadingDot2(_ref6) {
  var delay = _ref6.delay, offset4 = _ref6.offset;
  return jsx("span", {
    css: css2({
      animation: "".concat(loadingDotAnimations, " 1s ease-in-out ").concat(delay, "ms infinite;"),
      backgroundColor: "currentColor",
      borderRadius: "1em",
      display: "inline-block",
      marginLeft: offset4 ? "1em" : void 0,
      height: "1em",
      verticalAlign: "top",
      width: "1em"
    }, false ? "" : ";label:LoadingDot;", false ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")
  });
};
var LoadingIndicator = function LoadingIndicator2(_ref7) {
  var innerProps = _ref7.innerProps, isRtl = _ref7.isRtl, _ref7$size = _ref7.size, size2 = _ref7$size === void 0 ? 4 : _ref7$size, restProps = _objectWithoutProperties(_ref7, _excluded2);
  return jsx("div", _extends({}, getStyleProps(_objectSpread2(_objectSpread2({}, restProps), {}, {
    innerProps,
    isRtl,
    size: size2
  }), "loadingIndicator", {
    indicator: true,
    "loading-indicator": true
  }), innerProps), jsx(LoadingDot, {
    delay: 0,
    offset: isRtl
  }), jsx(LoadingDot, {
    delay: 160,
    offset: true
  }), jsx(LoadingDot, {
    delay: 320,
    offset: !isRtl
  }));
};
var css$1 = function css3(_ref3, unstyled) {
  var isDisabled = _ref3.isDisabled, isFocused = _ref3.isFocused, _ref$theme = _ref3.theme, colors2 = _ref$theme.colors, borderRadius2 = _ref$theme.borderRadius, spacing2 = _ref$theme.spacing;
  return _objectSpread2({
    label: "control",
    alignItems: "center",
    cursor: "default",
    display: "flex",
    flexWrap: "wrap",
    justifyContent: "space-between",
    minHeight: spacing2.controlHeight,
    outline: "0 !important",
    position: "relative",
    transition: "all 100ms"
  }, unstyled ? {} : {
    backgroundColor: isDisabled ? colors2.neutral5 : colors2.neutral0,
    borderColor: isDisabled ? colors2.neutral10 : isFocused ? colors2.primary : colors2.neutral20,
    borderRadius: borderRadius2,
    borderStyle: "solid",
    borderWidth: 1,
    boxShadow: isFocused ? "0 0 0 1px ".concat(colors2.primary) : void 0,
    "&:hover": {
      borderColor: isFocused ? colors2.primary : colors2.neutral30
    }
  });
};
var Control = function Control2(props) {
  var children = props.children, isDisabled = props.isDisabled, isFocused = props.isFocused, innerRef = props.innerRef, innerProps = props.innerProps, menuIsOpen = props.menuIsOpen;
  return jsx("div", _extends({
    ref: innerRef
  }, getStyleProps(props, "control", {
    control: true,
    "control--is-disabled": isDisabled,
    "control--is-focused": isFocused,
    "control--menu-is-open": menuIsOpen
  }), innerProps, {
    "aria-disabled": isDisabled || void 0
  }), children);
};
var Control$1 = Control;
var _excluded$1 = ["data"];
var groupCSS = function groupCSS2(_ref3, unstyled) {
  var spacing2 = _ref3.theme.spacing;
  return unstyled ? {} : {
    paddingBottom: spacing2.baseUnit * 2,
    paddingTop: spacing2.baseUnit * 2
  };
};
var Group = function Group2(props) {
  var children = props.children, cx = props.cx, getStyles = props.getStyles, getClassNames = props.getClassNames, Heading = props.Heading, headingProps = props.headingProps, innerProps = props.innerProps, label = props.label, theme = props.theme, selectProps = props.selectProps;
  return jsx("div", _extends({}, getStyleProps(props, "group", {
    group: true
  }), innerProps), jsx(Heading, _extends({}, headingProps, {
    selectProps,
    theme,
    getStyles,
    getClassNames,
    cx
  }), label), jsx("div", null, children));
};
var groupHeadingCSS = function groupHeadingCSS2(_ref23, unstyled) {
  var _ref2$theme = _ref23.theme, colors2 = _ref2$theme.colors, spacing2 = _ref2$theme.spacing;
  return _objectSpread2({
    label: "group",
    cursor: "default",
    display: "block"
  }, unstyled ? {} : {
    color: colors2.neutral40,
    fontSize: "75%",
    fontWeight: 500,
    marginBottom: "0.25em",
    paddingLeft: spacing2.baseUnit * 3,
    paddingRight: spacing2.baseUnit * 3,
    textTransform: "uppercase"
  });
};
var GroupHeading = function GroupHeading2(props) {
  var _cleanCommonProps = cleanCommonProps(props);
  _cleanCommonProps.data;
  var innerProps = _objectWithoutProperties(_cleanCommonProps, _excluded$1);
  return jsx("div", _extends({}, getStyleProps(props, "groupHeading", {
    "group-heading": true
  }), innerProps));
};
var Group$1 = Group;
var _excluded3 = ["innerRef", "isDisabled", "isHidden", "inputClassName"];
var inputCSS = function inputCSS2(_ref3, unstyled) {
  var isDisabled = _ref3.isDisabled, value = _ref3.value, _ref$theme = _ref3.theme, spacing2 = _ref$theme.spacing, colors2 = _ref$theme.colors;
  return _objectSpread2(_objectSpread2({
    visibility: isDisabled ? "hidden" : "visible",
    // force css to recompute when value change due to @emotion bug.
    // We can remove it whenever the bug is fixed.
    transform: value ? "translateZ(0)" : ""
  }, containerStyle), unstyled ? {} : {
    margin: spacing2.baseUnit / 2,
    paddingBottom: spacing2.baseUnit / 2,
    paddingTop: spacing2.baseUnit / 2,
    color: colors2.neutral80
  });
};
var spacingStyle = {
  gridArea: "1 / 2",
  font: "inherit",
  minWidth: "2px",
  border: 0,
  margin: 0,
  outline: 0,
  padding: 0
};
var containerStyle = {
  flex: "1 1 auto",
  display: "inline-grid",
  gridArea: "1 / 1 / 2 / 3",
  gridTemplateColumns: "0 min-content",
  "&:after": _objectSpread2({
    content: 'attr(data-value) " "',
    visibility: "hidden",
    whiteSpace: "pre"
  }, spacingStyle)
};
var inputStyle = function inputStyle2(isHidden3) {
  return _objectSpread2({
    label: "input",
    color: "inherit",
    background: 0,
    opacity: isHidden3 ? 0 : 1,
    width: "100%"
  }, spacingStyle);
};
var Input3 = function Input4(props) {
  var cx = props.cx, value = props.value;
  var _cleanCommonProps = cleanCommonProps(props), innerRef = _cleanCommonProps.innerRef, isDisabled = _cleanCommonProps.isDisabled, isHidden3 = _cleanCommonProps.isHidden, inputClassName = _cleanCommonProps.inputClassName, innerProps = _objectWithoutProperties(_cleanCommonProps, _excluded3);
  return jsx("div", _extends({}, getStyleProps(props, "input", {
    "input-container": true
  }), {
    "data-value": value || ""
  }), jsx("input", _extends({
    className: cx({
      input: true
    }, inputClassName),
    ref: innerRef,
    style: inputStyle(isHidden3),
    disabled: isDisabled
  }, innerProps)));
};
var Input$1 = Input3;
var multiValueCSS = function multiValueCSS2(_ref3, unstyled) {
  var _ref$theme = _ref3.theme, spacing2 = _ref$theme.spacing, borderRadius2 = _ref$theme.borderRadius, colors2 = _ref$theme.colors;
  return _objectSpread2({
    label: "multiValue",
    display: "flex",
    minWidth: 0
  }, unstyled ? {} : {
    backgroundColor: colors2.neutral10,
    borderRadius: borderRadius2 / 2,
    margin: spacing2.baseUnit / 2
  });
};
var multiValueLabelCSS = function multiValueLabelCSS2(_ref23, unstyled) {
  var _ref2$theme = _ref23.theme, borderRadius2 = _ref2$theme.borderRadius, colors2 = _ref2$theme.colors, cropWithEllipsis = _ref23.cropWithEllipsis;
  return _objectSpread2({
    overflow: "hidden",
    textOverflow: cropWithEllipsis || cropWithEllipsis === void 0 ? "ellipsis" : void 0,
    whiteSpace: "nowrap"
  }, unstyled ? {} : {
    borderRadius: borderRadius2 / 2,
    color: colors2.neutral80,
    fontSize: "85%",
    padding: 3,
    paddingLeft: 6
  });
};
var multiValueRemoveCSS = function multiValueRemoveCSS2(_ref3, unstyled) {
  var _ref3$theme = _ref3.theme, spacing2 = _ref3$theme.spacing, borderRadius2 = _ref3$theme.borderRadius, colors2 = _ref3$theme.colors, isFocused = _ref3.isFocused;
  return _objectSpread2({
    alignItems: "center",
    display: "flex"
  }, unstyled ? {} : {
    borderRadius: borderRadius2 / 2,
    backgroundColor: isFocused ? colors2.dangerLight : void 0,
    paddingLeft: spacing2.baseUnit,
    paddingRight: spacing2.baseUnit,
    ":hover": {
      backgroundColor: colors2.dangerLight,
      color: colors2.danger
    }
  });
};
var MultiValueGeneric = function MultiValueGeneric2(_ref4) {
  var children = _ref4.children, innerProps = _ref4.innerProps;
  return jsx("div", innerProps, children);
};
var MultiValueContainer = MultiValueGeneric;
var MultiValueLabel = MultiValueGeneric;
function MultiValueRemove(_ref5) {
  var children = _ref5.children, innerProps = _ref5.innerProps;
  return jsx("div", _extends({
    role: "button"
  }, innerProps), children || jsx(CrossIcon, {
    size: 14
  }));
}
var MultiValue = function MultiValue2(props) {
  var children = props.children, components2 = props.components, data = props.data, innerProps = props.innerProps, isDisabled = props.isDisabled, removeProps3 = props.removeProps, selectProps = props.selectProps;
  var Container = components2.Container, Label3 = components2.Label, Remove = components2.Remove;
  return jsx(Container, {
    data,
    innerProps: _objectSpread2(_objectSpread2({}, getStyleProps(props, "multiValue", {
      "multi-value": true,
      "multi-value--is-disabled": isDisabled
    })), innerProps),
    selectProps
  }, jsx(Label3, {
    data,
    innerProps: _objectSpread2({}, getStyleProps(props, "multiValueLabel", {
      "multi-value__label": true
    })),
    selectProps
  }, children), jsx(Remove, {
    data,
    innerProps: _objectSpread2(_objectSpread2({}, getStyleProps(props, "multiValueRemove", {
      "multi-value__remove": true
    })), {}, {
      "aria-label": "Remove ".concat(children || "option")
    }, removeProps3),
    selectProps
  }));
};
var MultiValue$1 = MultiValue;
var optionCSS = function optionCSS2(_ref3, unstyled) {
  var isDisabled = _ref3.isDisabled, isFocused = _ref3.isFocused, isSelected = _ref3.isSelected, _ref$theme = _ref3.theme, spacing2 = _ref$theme.spacing, colors2 = _ref$theme.colors;
  return _objectSpread2({
    label: "option",
    cursor: "default",
    display: "block",
    fontSize: "inherit",
    width: "100%",
    userSelect: "none",
    WebkitTapHighlightColor: "rgba(0, 0, 0, 0)"
  }, unstyled ? {} : {
    backgroundColor: isSelected ? colors2.primary : isFocused ? colors2.primary25 : "transparent",
    color: isDisabled ? colors2.neutral20 : isSelected ? colors2.neutral0 : "inherit",
    padding: "".concat(spacing2.baseUnit * 2, "px ").concat(spacing2.baseUnit * 3, "px"),
    // provide some affordance on touch devices
    ":active": {
      backgroundColor: !isDisabled ? isSelected ? colors2.primary : colors2.primary50 : void 0
    }
  });
};
var Option3 = function Option4(props) {
  var children = props.children, isDisabled = props.isDisabled, isFocused = props.isFocused, isSelected = props.isSelected, innerRef = props.innerRef, innerProps = props.innerProps;
  return jsx("div", _extends({}, getStyleProps(props, "option", {
    option: true,
    "option--is-disabled": isDisabled,
    "option--is-focused": isFocused,
    "option--is-selected": isSelected
  }), {
    ref: innerRef,
    "aria-disabled": isDisabled
  }, innerProps), children);
};
var Option$1 = Option3;
var placeholderCSS = function placeholderCSS2(_ref3, unstyled) {
  var _ref$theme = _ref3.theme, spacing2 = _ref$theme.spacing, colors2 = _ref$theme.colors;
  return _objectSpread2({
    label: "placeholder",
    gridArea: "1 / 1 / 2 / 3"
  }, unstyled ? {} : {
    color: colors2.neutral50,
    marginLeft: spacing2.baseUnit / 2,
    marginRight: spacing2.baseUnit / 2
  });
};
var Placeholder = function Placeholder2(props) {
  var children = props.children, innerProps = props.innerProps;
  return jsx("div", _extends({}, getStyleProps(props, "placeholder", {
    placeholder: true
  }), innerProps), children);
};
var Placeholder$1 = Placeholder;
var css4 = function css5(_ref3, unstyled) {
  var isDisabled = _ref3.isDisabled, _ref$theme = _ref3.theme, spacing2 = _ref$theme.spacing, colors2 = _ref$theme.colors;
  return _objectSpread2({
    label: "singleValue",
    gridArea: "1 / 1 / 2 / 3",
    maxWidth: "100%",
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap"
  }, unstyled ? {} : {
    color: isDisabled ? colors2.neutral40 : colors2.neutral80,
    marginLeft: spacing2.baseUnit / 2,
    marginRight: spacing2.baseUnit / 2
  });
};
var SingleValue = function SingleValue2(props) {
  var children = props.children, isDisabled = props.isDisabled, innerProps = props.innerProps;
  return jsx("div", _extends({}, getStyleProps(props, "singleValue", {
    "single-value": true,
    "single-value--is-disabled": isDisabled
  }), innerProps), children);
};
var SingleValue$1 = SingleValue;
var components = {
  ClearIndicator,
  Control: Control$1,
  DropdownIndicator,
  DownChevron,
  CrossIcon,
  Group: Group$1,
  GroupHeading,
  IndicatorsContainer,
  IndicatorSeparator,
  Input: Input$1,
  LoadingIndicator,
  Menu: Menu$1,
  MenuList,
  MenuPortal,
  LoadingMessage,
  NoOptionsMessage,
  MultiValue: MultiValue$1,
  MultiValueContainer,
  MultiValueLabel,
  MultiValueRemove,
  Option: Option$1,
  Placeholder: Placeholder$1,
  SelectContainer,
  SingleValue: SingleValue$1,
  ValueContainer
};
var defaultComponents = function defaultComponents2(props) {
  return _objectSpread2(_objectSpread2({}, components), props.components);
};

// node_modules/memoize-one/dist/memoize-one.esm.js
var safeIsNaN = Number.isNaN || function ponyfill(value) {
  return typeof value === "number" && value !== value;
};
function isEqual(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }
  return false;
}
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (!isEqual(newInputs[i], lastInputs[i])) {
      return false;
    }
  }
  return true;
}
function memoizeOne(resultFn, isEqual2) {
  if (isEqual2 === void 0) {
    isEqual2 = areInputsEqual;
  }
  var cache = null;
  function memoized() {
    var newArgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }
    if (cache && cache.lastThis === this && isEqual2(newArgs, cache.lastArgs)) {
      return cache.lastResult;
    }
    var lastResult = resultFn.apply(this, newArgs);
    cache = {
      lastResult,
      lastArgs: newArgs,
      lastThis: this
    };
    return lastResult;
  }
  memoized.clear = function clear() {
    cache = null;
  };
  return memoized;
}

// node_modules/react-select/dist/Select-49a62830.esm.js
function _EMOTION_STRINGIFIED_CSS_ERROR__$2() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
var _ref = false ? {
  name: "7pg0cj-a11yText",
  styles: "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap"
} : {
  name: "1f43avz-a11yText-A11yText",
  styles: "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__$2
};
var A11yText = function A11yText2(props) {
  return jsx("span", _extends({
    css: _ref
  }, props));
};
var A11yText$1 = A11yText;
var defaultAriaLiveMessages = {
  guidance: function guidance(props) {
    var isSearchable = props.isSearchable, isMulti = props.isMulti, tabSelectsValue = props.tabSelectsValue, context = props.context, isInitialFocus = props.isInitialFocus;
    switch (context) {
      case "menu":
        return "Use Up and Down to choose options, press Enter to select the currently focused option, press Escape to exit the menu".concat(tabSelectsValue ? ", press Tab to select the option and exit the menu" : "", ".");
      case "input":
        return isInitialFocus ? "".concat(props["aria-label"] || "Select", " is focused ").concat(isSearchable ? ",type to refine list" : "", ", press Down to open the menu, ").concat(isMulti ? " press left to focus selected values" : "") : "";
      case "value":
        return "Use left and right to toggle between focused values, press Backspace to remove the currently focused value";
      default:
        return "";
    }
  },
  onChange: function onChange(props) {
    var action = props.action, _props$label = props.label, label = _props$label === void 0 ? "" : _props$label, labels = props.labels, isDisabled = props.isDisabled;
    switch (action) {
      case "deselect-option":
      case "pop-value":
      case "remove-value":
        return "option ".concat(label, ", deselected.");
      case "clear":
        return "All selected options have been cleared.";
      case "initial-input-focus":
        return "option".concat(labels.length > 1 ? "s" : "", " ").concat(labels.join(","), ", selected.");
      case "select-option":
        return isDisabled ? "option ".concat(label, " is disabled. Select another option.") : "option ".concat(label, ", selected.");
      default:
        return "";
    }
  },
  onFocus: function onFocus(props) {
    var context = props.context, focused = props.focused, options2 = props.options, _props$label2 = props.label, label = _props$label2 === void 0 ? "" : _props$label2, selectValue = props.selectValue, isDisabled = props.isDisabled, isSelected = props.isSelected, isAppleDevice2 = props.isAppleDevice;
    var getArrayIndex = function getArrayIndex2(arr, item) {
      return arr && arr.length ? "".concat(arr.indexOf(item) + 1, " of ").concat(arr.length) : "";
    };
    if (context === "value" && selectValue) {
      return "value ".concat(label, " focused, ").concat(getArrayIndex(selectValue, focused), ".");
    }
    if (context === "menu" && isAppleDevice2) {
      var disabled = isDisabled ? " disabled" : "";
      var status = "".concat(isSelected ? " selected" : "").concat(disabled);
      return "".concat(label).concat(status, ", ").concat(getArrayIndex(options2, focused), ".");
    }
    return "";
  },
  onFilter: function onFilter(props) {
    var inputValue = props.inputValue, resultsMessage = props.resultsMessage;
    return "".concat(resultsMessage).concat(inputValue ? " for search term " + inputValue : "", ".");
  }
};
var LiveRegion = function LiveRegion2(props) {
  var ariaSelection = props.ariaSelection, focusedOption = props.focusedOption, focusedValue = props.focusedValue, focusableOptions = props.focusableOptions, isFocused = props.isFocused, selectValue = props.selectValue, selectProps = props.selectProps, id2 = props.id, isAppleDevice2 = props.isAppleDevice;
  var ariaLiveMessages = selectProps.ariaLiveMessages, getOptionLabel4 = selectProps.getOptionLabel, inputValue = selectProps.inputValue, isMulti = selectProps.isMulti, isOptionDisabled3 = selectProps.isOptionDisabled, isSearchable = selectProps.isSearchable, menuIsOpen = selectProps.menuIsOpen, options2 = selectProps.options, screenReaderStatus2 = selectProps.screenReaderStatus, tabSelectsValue = selectProps.tabSelectsValue, isLoading = selectProps.isLoading;
  var ariaLabel = selectProps["aria-label"];
  var ariaLive = selectProps["aria-live"];
  var messages = (0, import_react46.useMemo)(function() {
    return _objectSpread2(_objectSpread2({}, defaultAriaLiveMessages), ariaLiveMessages || {});
  }, [ariaLiveMessages]);
  var ariaSelected = (0, import_react46.useMemo)(function() {
    var message = "";
    if (ariaSelection && messages.onChange) {
      var option = ariaSelection.option, selectedOptions = ariaSelection.options, removedValue = ariaSelection.removedValue, removedValues = ariaSelection.removedValues, value = ariaSelection.value;
      var asOption = function asOption2(val) {
        return !Array.isArray(val) ? val : null;
      };
      var selected = removedValue || option || asOption(value);
      var label = selected ? getOptionLabel4(selected) : "";
      var multiSelected = selectedOptions || removedValues || void 0;
      var labels = multiSelected ? multiSelected.map(getOptionLabel4) : [];
      var onChangeProps = _objectSpread2({
        // multiSelected items are usually items that have already been selected
        // or set by the user as a default value so we assume they are not disabled
        isDisabled: selected && isOptionDisabled3(selected, selectValue),
        label,
        labels
      }, ariaSelection);
      message = messages.onChange(onChangeProps);
    }
    return message;
  }, [ariaSelection, messages, isOptionDisabled3, selectValue, getOptionLabel4]);
  var ariaFocused = (0, import_react46.useMemo)(function() {
    var focusMsg = "";
    var focused = focusedOption || focusedValue;
    var isSelected = !!(focusedOption && selectValue && selectValue.includes(focusedOption));
    if (focused && messages.onFocus) {
      var onFocusProps = {
        focused,
        label: getOptionLabel4(focused),
        isDisabled: isOptionDisabled3(focused, selectValue),
        isSelected,
        options: focusableOptions,
        context: focused === focusedOption ? "menu" : "value",
        selectValue,
        isAppleDevice: isAppleDevice2
      };
      focusMsg = messages.onFocus(onFocusProps);
    }
    return focusMsg;
  }, [focusedOption, focusedValue, getOptionLabel4, isOptionDisabled3, messages, focusableOptions, selectValue, isAppleDevice2]);
  var ariaResults = (0, import_react46.useMemo)(function() {
    var resultsMsg = "";
    if (menuIsOpen && options2.length && !isLoading && messages.onFilter) {
      var resultsMessage = screenReaderStatus2({
        count: focusableOptions.length
      });
      resultsMsg = messages.onFilter({
        inputValue,
        resultsMessage
      });
    }
    return resultsMsg;
  }, [focusableOptions, inputValue, menuIsOpen, messages, options2, screenReaderStatus2, isLoading]);
  var isInitialFocus = (ariaSelection === null || ariaSelection === void 0 ? void 0 : ariaSelection.action) === "initial-input-focus";
  var ariaGuidance = (0, import_react46.useMemo)(function() {
    var guidanceMsg = "";
    if (messages.guidance) {
      var context = focusedValue ? "value" : menuIsOpen ? "menu" : "input";
      guidanceMsg = messages.guidance({
        "aria-label": ariaLabel,
        context,
        isDisabled: focusedOption && isOptionDisabled3(focusedOption, selectValue),
        isMulti,
        isSearchable,
        tabSelectsValue,
        isInitialFocus
      });
    }
    return guidanceMsg;
  }, [ariaLabel, focusedOption, focusedValue, isMulti, isOptionDisabled3, isSearchable, menuIsOpen, messages, selectValue, tabSelectsValue, isInitialFocus]);
  var ScreenReaderText = jsx(import_react46.Fragment, null, jsx("span", {
    id: "aria-selection"
  }, ariaSelected), jsx("span", {
    id: "aria-focused"
  }, ariaFocused), jsx("span", {
    id: "aria-results"
  }, ariaResults), jsx("span", {
    id: "aria-guidance"
  }, ariaGuidance));
  return jsx(import_react46.Fragment, null, jsx(A11yText$1, {
    id: id2
  }, isInitialFocus && ScreenReaderText), jsx(A11yText$1, {
    "aria-live": ariaLive,
    "aria-atomic": "false",
    "aria-relevant": "additions text",
    role: "log"
  }, isFocused && !isInitialFocus && ScreenReaderText));
};
var LiveRegion$1 = LiveRegion;
var diacritics = [{
  base: "A",
  letters: "AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ"
}, {
  base: "AA",
  letters: "Ꜳ"
}, {
  base: "AE",
  letters: "ÆǼǢ"
}, {
  base: "AO",
  letters: "Ꜵ"
}, {
  base: "AU",
  letters: "Ꜷ"
}, {
  base: "AV",
  letters: "ꜸꜺ"
}, {
  base: "AY",
  letters: "Ꜽ"
}, {
  base: "B",
  letters: "BⒷＢḂḄḆɃƂƁ"
}, {
  base: "C",
  letters: "CⒸＣĆĈĊČÇḈƇȻꜾ"
}, {
  base: "D",
  letters: "DⒹＤḊĎḌḐḒḎĐƋƊƉꝹ"
}, {
  base: "DZ",
  letters: "ǱǄ"
}, {
  base: "Dz",
  letters: "ǲǅ"
}, {
  base: "E",
  letters: "EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ"
}, {
  base: "F",
  letters: "FⒻＦḞƑꝻ"
}, {
  base: "G",
  letters: "GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ"
}, {
  base: "H",
  letters: "HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ"
}, {
  base: "I",
  letters: "IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ"
}, {
  base: "J",
  letters: "JⒿＪĴɈ"
}, {
  base: "K",
  letters: "KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ"
}, {
  base: "L",
  letters: "LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ"
}, {
  base: "LJ",
  letters: "Ǉ"
}, {
  base: "Lj",
  letters: "ǈ"
}, {
  base: "M",
  letters: "MⓂＭḾṀṂⱮƜ"
}, {
  base: "N",
  letters: "NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ"
}, {
  base: "NJ",
  letters: "Ǌ"
}, {
  base: "Nj",
  letters: "ǋ"
}, {
  base: "O",
  letters: "OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ"
}, {
  base: "OI",
  letters: "Ƣ"
}, {
  base: "OO",
  letters: "Ꝏ"
}, {
  base: "OU",
  letters: "Ȣ"
}, {
  base: "P",
  letters: "PⓅＰṔṖƤⱣꝐꝒꝔ"
}, {
  base: "Q",
  letters: "QⓆＱꝖꝘɊ"
}, {
  base: "R",
  letters: "RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ"
}, {
  base: "S",
  letters: "SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ"
}, {
  base: "T",
  letters: "TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ"
}, {
  base: "TZ",
  letters: "Ꜩ"
}, {
  base: "U",
  letters: "UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ"
}, {
  base: "V",
  letters: "VⓋＶṼṾƲꝞɅ"
}, {
  base: "VY",
  letters: "Ꝡ"
}, {
  base: "W",
  letters: "WⓌＷẀẂŴẆẄẈⱲ"
}, {
  base: "X",
  letters: "XⓍＸẊẌ"
}, {
  base: "Y",
  letters: "YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ"
}, {
  base: "Z",
  letters: "ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ"
}, {
  base: "a",
  letters: "aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ"
}, {
  base: "aa",
  letters: "ꜳ"
}, {
  base: "ae",
  letters: "æǽǣ"
}, {
  base: "ao",
  letters: "ꜵ"
}, {
  base: "au",
  letters: "ꜷ"
}, {
  base: "av",
  letters: "ꜹꜻ"
}, {
  base: "ay",
  letters: "ꜽ"
}, {
  base: "b",
  letters: "bⓑｂḃḅḇƀƃɓ"
}, {
  base: "c",
  letters: "cⓒｃćĉċčçḉƈȼꜿↄ"
}, {
  base: "d",
  letters: "dⓓｄḋďḍḑḓḏđƌɖɗꝺ"
}, {
  base: "dz",
  letters: "ǳǆ"
}, {
  base: "e",
  letters: "eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ"
}, {
  base: "f",
  letters: "fⓕｆḟƒꝼ"
}, {
  base: "g",
  letters: "gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ"
}, {
  base: "h",
  letters: "hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ"
}, {
  base: "hv",
  letters: "ƕ"
}, {
  base: "i",
  letters: "iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı"
}, {
  base: "j",
  letters: "jⓙｊĵǰɉ"
}, {
  base: "k",
  letters: "kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ"
}, {
  base: "l",
  letters: "lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ"
}, {
  base: "lj",
  letters: "ǉ"
}, {
  base: "m",
  letters: "mⓜｍḿṁṃɱɯ"
}, {
  base: "n",
  letters: "nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ"
}, {
  base: "nj",
  letters: "ǌ"
}, {
  base: "o",
  letters: "oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ"
}, {
  base: "oi",
  letters: "ƣ"
}, {
  base: "ou",
  letters: "ȣ"
}, {
  base: "oo",
  letters: "ꝏ"
}, {
  base: "p",
  letters: "pⓟｐṕṗƥᵽꝑꝓꝕ"
}, {
  base: "q",
  letters: "qⓠｑɋꝗꝙ"
}, {
  base: "r",
  letters: "rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ"
}, {
  base: "s",
  letters: "sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ"
}, {
  base: "t",
  letters: "tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ"
}, {
  base: "tz",
  letters: "ꜩ"
}, {
  base: "u",
  letters: "uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ"
}, {
  base: "v",
  letters: "vⓥｖṽṿʋꝟʌ"
}, {
  base: "vy",
  letters: "ꝡ"
}, {
  base: "w",
  letters: "wⓦｗẁẃŵẇẅẘẉⱳ"
}, {
  base: "x",
  letters: "xⓧｘẋẍ"
}, {
  base: "y",
  letters: "yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ"
}, {
  base: "z",
  letters: "zⓩｚźẑżžẓẕƶȥɀⱬꝣ"
}];
var anyDiacritic = new RegExp("[" + diacritics.map(function(d2) {
  return d2.letters;
}).join("") + "]", "g");
var diacriticToBase = {};
for (i = 0; i < diacritics.length; i++) {
  diacritic = diacritics[i];
  for (j = 0; j < diacritic.letters.length; j++) {
    diacriticToBase[diacritic.letters[j]] = diacritic.base;
  }
}
var diacritic;
var j;
var i;
var stripDiacritics = function stripDiacritics2(str) {
  return str.replace(anyDiacritic, function(match2) {
    return diacriticToBase[match2];
  });
};
var memoizedStripDiacriticsForInput = memoizeOne(stripDiacritics);
var trimString = function trimString2(str) {
  return str.replace(/^\s+|\s+$/g, "");
};
var defaultStringify = function defaultStringify2(option) {
  return "".concat(option.label, " ").concat(option.value);
};
var createFilter = function createFilter2(config) {
  return function(option, rawInput) {
    if (option.data.__isNew__) return true;
    var _ignoreCase$ignoreAcc = _objectSpread2({
      ignoreCase: true,
      ignoreAccents: true,
      stringify: defaultStringify,
      trim: true,
      matchFrom: "any"
    }, config), ignoreCase = _ignoreCase$ignoreAcc.ignoreCase, ignoreAccents = _ignoreCase$ignoreAcc.ignoreAccents, stringify2 = _ignoreCase$ignoreAcc.stringify, trim2 = _ignoreCase$ignoreAcc.trim, matchFrom = _ignoreCase$ignoreAcc.matchFrom;
    var input = trim2 ? trimString(rawInput) : rawInput;
    var candidate = trim2 ? trimString(stringify2(option)) : stringify2(option);
    if (ignoreCase) {
      input = input.toLowerCase();
      candidate = candidate.toLowerCase();
    }
    if (ignoreAccents) {
      input = memoizedStripDiacriticsForInput(input);
      candidate = stripDiacritics(candidate);
    }
    return matchFrom === "start" ? candidate.substr(0, input.length) === input : candidate.indexOf(input) > -1;
  };
};
var _excluded4 = ["innerRef"];
function DummyInput(_ref3) {
  var innerRef = _ref3.innerRef, props = _objectWithoutProperties(_ref3, _excluded4);
  var filteredProps = removeProps(props, "onExited", "in", "enter", "exit", "appear");
  return jsx("input", _extends({
    ref: innerRef
  }, filteredProps, {
    css: css2({
      label: "dummyInput",
      // get rid of any default styles
      background: 0,
      border: 0,
      // important! this hides the flashing cursor
      caretColor: "transparent",
      fontSize: "inherit",
      gridArea: "1 / 1 / 2 / 3",
      outline: 0,
      padding: 0,
      // important! without `width` browsers won't allow focus
      width: 1,
      // remove cursor on desktop
      color: "transparent",
      // remove cursor on mobile whilst maintaining "scroll into view" behaviour
      left: -100,
      opacity: 0,
      position: "relative",
      transform: "scale(.01)"
    }, false ? "" : ";label:DummyInput;", false ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR1bW15SW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlCTSIsImZpbGUiOiJEdW1teUlucHV0LnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IHsgUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsganN4IH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgcmVtb3ZlUHJvcHMgfSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIER1bW15SW5wdXQoe1xuICBpbm5lclJlZixcbiAgLi4ucHJvcHNcbn06IEpTWC5JbnRyaW5zaWNFbGVtZW50c1snaW5wdXQnXSAmIHtcbiAgcmVhZG9ubHkgaW5uZXJSZWY6IFJlZjxIVE1MSW5wdXRFbGVtZW50Pjtcbn0pIHtcbiAgLy8gUmVtb3ZlIGFuaW1hdGlvbiBwcm9wcyBub3QgbWVhbnQgZm9yIEhUTUwgZWxlbWVudHNcbiAgY29uc3QgZmlsdGVyZWRQcm9wcyA9IHJlbW92ZVByb3BzKFxuICAgIHByb3BzLFxuICAgICdvbkV4aXRlZCcsXG4gICAgJ2luJyxcbiAgICAnZW50ZXInLFxuICAgICdleGl0JyxcbiAgICAnYXBwZWFyJ1xuICApO1xuXG4gIHJldHVybiAoXG4gICAgPGlucHV0XG4gICAgICByZWY9e2lubmVyUmVmfVxuICAgICAgey4uLmZpbHRlcmVkUHJvcHN9XG4gICAgICBjc3M9e3tcbiAgICAgICAgbGFiZWw6ICdkdW1teUlucHV0JyxcbiAgICAgICAgLy8gZ2V0IHJpZCBvZiBhbnkgZGVmYXVsdCBzdHlsZXNcbiAgICAgICAgYmFja2dyb3VuZDogMCxcbiAgICAgICAgYm9yZGVyOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHRoaXMgaGlkZXMgdGhlIGZsYXNoaW5nIGN1cnNvclxuICAgICAgICBjYXJldENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBmb250U2l6ZTogJ2luaGVyaXQnLFxuICAgICAgICBncmlkQXJlYTogJzEgLyAxIC8gMiAvIDMnLFxuICAgICAgICBvdXRsaW5lOiAwLFxuICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHdpdGhvdXQgYHdpZHRoYCBicm93c2VycyB3b24ndCBhbGxvdyBmb2N1c1xuICAgICAgICB3aWR0aDogMSxcblxuICAgICAgICAvLyByZW1vdmUgY3Vyc29yIG9uIGRlc2t0b3BcbiAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcsXG5cbiAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBtb2JpbGUgd2hpbHN0IG1haW50YWluaW5nIFwic2Nyb2xsIGludG8gdmlld1wiIGJlaGF2aW91clxuICAgICAgICBsZWZ0OiAtMTAwLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoLjAxKScsXG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59XG4iXX0= */")
  }));
}
var cancelScroll = function cancelScroll2(event) {
  if (event.cancelable) event.preventDefault();
  event.stopPropagation();
};
function useScrollCapture(_ref3) {
  var isEnabled = _ref3.isEnabled, onBottomArrive = _ref3.onBottomArrive, onBottomLeave = _ref3.onBottomLeave, onTopArrive = _ref3.onTopArrive, onTopLeave = _ref3.onTopLeave;
  var isBottom = (0, import_react46.useRef)(false);
  var isTop = (0, import_react46.useRef)(false);
  var touchStart = (0, import_react46.useRef)(0);
  var scrollTarget = (0, import_react46.useRef)(null);
  var handleEventDelta = (0, import_react46.useCallback)(function(event, delta) {
    if (scrollTarget.current === null) return;
    var _scrollTarget$current = scrollTarget.current, scrollTop = _scrollTarget$current.scrollTop, scrollHeight = _scrollTarget$current.scrollHeight, clientHeight = _scrollTarget$current.clientHeight;
    var target = scrollTarget.current;
    var isDeltaPositive = delta > 0;
    var availableScroll = scrollHeight - clientHeight - scrollTop;
    var shouldCancelScroll = false;
    if (availableScroll > delta && isBottom.current) {
      if (onBottomLeave) onBottomLeave(event);
      isBottom.current = false;
    }
    if (isDeltaPositive && isTop.current) {
      if (onTopLeave) onTopLeave(event);
      isTop.current = false;
    }
    if (isDeltaPositive && delta > availableScroll) {
      if (onBottomArrive && !isBottom.current) {
        onBottomArrive(event);
      }
      target.scrollTop = scrollHeight;
      shouldCancelScroll = true;
      isBottom.current = true;
    } else if (!isDeltaPositive && -delta > scrollTop) {
      if (onTopArrive && !isTop.current) {
        onTopArrive(event);
      }
      target.scrollTop = 0;
      shouldCancelScroll = true;
      isTop.current = true;
    }
    if (shouldCancelScroll) {
      cancelScroll(event);
    }
  }, [onBottomArrive, onBottomLeave, onTopArrive, onTopLeave]);
  var onWheel = (0, import_react46.useCallback)(function(event) {
    handleEventDelta(event, event.deltaY);
  }, [handleEventDelta]);
  var onTouchStart = (0, import_react46.useCallback)(function(event) {
    touchStart.current = event.changedTouches[0].clientY;
  }, []);
  var onTouchMove = (0, import_react46.useCallback)(function(event) {
    var deltaY = touchStart.current - event.changedTouches[0].clientY;
    handleEventDelta(event, deltaY);
  }, [handleEventDelta]);
  var startListening = (0, import_react46.useCallback)(function(el) {
    if (!el) return;
    var notPassive = supportsPassiveEvents ? {
      passive: false
    } : false;
    el.addEventListener("wheel", onWheel, notPassive);
    el.addEventListener("touchstart", onTouchStart, notPassive);
    el.addEventListener("touchmove", onTouchMove, notPassive);
  }, [onTouchMove, onTouchStart, onWheel]);
  var stopListening = (0, import_react46.useCallback)(function(el) {
    if (!el) return;
    el.removeEventListener("wheel", onWheel, false);
    el.removeEventListener("touchstart", onTouchStart, false);
    el.removeEventListener("touchmove", onTouchMove, false);
  }, [onTouchMove, onTouchStart, onWheel]);
  (0, import_react46.useEffect)(function() {
    if (!isEnabled) return;
    var element = scrollTarget.current;
    startListening(element);
    return function() {
      stopListening(element);
    };
  }, [isEnabled, startListening, stopListening]);
  return function(element) {
    scrollTarget.current = element;
  };
}
var STYLE_KEYS = ["boxSizing", "height", "overflow", "paddingRight", "position"];
var LOCK_STYLES = {
  boxSizing: "border-box",
  // account for possible declaration `width: 100%;` on body
  overflow: "hidden",
  position: "relative",
  height: "100%"
};
function preventTouchMove(e) {
  e.preventDefault();
}
function allowTouchMove(e) {
  e.stopPropagation();
}
function preventInertiaScroll() {
  var top2 = this.scrollTop;
  var totalScroll = this.scrollHeight;
  var currentScroll = top2 + this.offsetHeight;
  if (top2 === 0) {
    this.scrollTop = 1;
  } else if (currentScroll === totalScroll) {
    this.scrollTop = top2 - 1;
  }
}
function isTouchDevice() {
  return "ontouchstart" in window || navigator.maxTouchPoints;
}
var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
var activeScrollLocks = 0;
var listenerOptions = {
  capture: false,
  passive: false
};
function useScrollLock(_ref3) {
  var isEnabled = _ref3.isEnabled, _ref$accountForScroll = _ref3.accountForScrollbars, accountForScrollbars = _ref$accountForScroll === void 0 ? true : _ref$accountForScroll;
  var originalStyles = (0, import_react46.useRef)({});
  var scrollTarget = (0, import_react46.useRef)(null);
  var addScrollLock = (0, import_react46.useCallback)(function(touchScrollTarget) {
    if (!canUseDOM) return;
    var target = document.body;
    var targetStyle = target && target.style;
    if (accountForScrollbars) {
      STYLE_KEYS.forEach(function(key) {
        var val = targetStyle && targetStyle[key];
        originalStyles.current[key] = val;
      });
    }
    if (accountForScrollbars && activeScrollLocks < 1) {
      var currentPadding = parseInt(originalStyles.current.paddingRight, 10) || 0;
      var clientWidth = document.body ? document.body.clientWidth : 0;
      var adjustedPadding = window.innerWidth - clientWidth + currentPadding || 0;
      Object.keys(LOCK_STYLES).forEach(function(key) {
        var val = LOCK_STYLES[key];
        if (targetStyle) {
          targetStyle[key] = val;
        }
      });
      if (targetStyle) {
        targetStyle.paddingRight = "".concat(adjustedPadding, "px");
      }
    }
    if (target && isTouchDevice()) {
      target.addEventListener("touchmove", preventTouchMove, listenerOptions);
      if (touchScrollTarget) {
        touchScrollTarget.addEventListener("touchstart", preventInertiaScroll, listenerOptions);
        touchScrollTarget.addEventListener("touchmove", allowTouchMove, listenerOptions);
      }
    }
    activeScrollLocks += 1;
  }, [accountForScrollbars]);
  var removeScrollLock = (0, import_react46.useCallback)(function(touchScrollTarget) {
    if (!canUseDOM) return;
    var target = document.body;
    var targetStyle = target && target.style;
    activeScrollLocks = Math.max(activeScrollLocks - 1, 0);
    if (accountForScrollbars && activeScrollLocks < 1) {
      STYLE_KEYS.forEach(function(key) {
        var val = originalStyles.current[key];
        if (targetStyle) {
          targetStyle[key] = val;
        }
      });
    }
    if (target && isTouchDevice()) {
      target.removeEventListener("touchmove", preventTouchMove, listenerOptions);
      if (touchScrollTarget) {
        touchScrollTarget.removeEventListener("touchstart", preventInertiaScroll, listenerOptions);
        touchScrollTarget.removeEventListener("touchmove", allowTouchMove, listenerOptions);
      }
    }
  }, [accountForScrollbars]);
  (0, import_react46.useEffect)(function() {
    if (!isEnabled) return;
    var element = scrollTarget.current;
    addScrollLock(element);
    return function() {
      removeScrollLock(element);
    };
  }, [isEnabled, addScrollLock, removeScrollLock]);
  return function(element) {
    scrollTarget.current = element;
  };
}
function _EMOTION_STRINGIFIED_CSS_ERROR__$1() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
var blurSelectInput = function blurSelectInput2(event) {
  var element = event.target;
  return element.ownerDocument.activeElement && element.ownerDocument.activeElement.blur();
};
var _ref2$1 = false ? {
  name: "1kfdb0e",
  styles: "position:fixed;left:0;bottom:0;right:0;top:0"
} : {
  name: "bp8cua-ScrollManager",
  styles: "position:fixed;left:0;bottom:0;right:0;top:0;label:ScrollManager;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjcm9sbE1hbmFnZXIudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9EVSIsImZpbGUiOiJTY3JvbGxNYW5hZ2VyLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IHsganN4IH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIFJlYWN0RWxlbWVudCwgUmVmQ2FsbGJhY2ssIE1vdXNlRXZlbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlU2Nyb2xsQ2FwdHVyZSBmcm9tICcuL3VzZVNjcm9sbENhcHR1cmUnO1xuaW1wb3J0IHVzZVNjcm9sbExvY2sgZnJvbSAnLi91c2VTY3JvbGxMb2NrJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgcmVhZG9ubHkgY2hpbGRyZW46IChyZWY6IFJlZkNhbGxiYWNrPEhUTUxFbGVtZW50PikgPT4gUmVhY3RFbGVtZW50O1xuICByZWFkb25seSBsb2NrRW5hYmxlZDogYm9vbGVhbjtcbiAgcmVhZG9ubHkgY2FwdHVyZUVuYWJsZWQ6IGJvb2xlYW47XG4gIHJlYWRvbmx5IG9uQm90dG9tQXJyaXZlPzogKGV2ZW50OiBXaGVlbEV2ZW50IHwgVG91Y2hFdmVudCkgPT4gdm9pZDtcbiAgcmVhZG9ubHkgb25Cb3R0b21MZWF2ZT86IChldmVudDogV2hlZWxFdmVudCB8IFRvdWNoRXZlbnQpID0+IHZvaWQ7XG4gIHJlYWRvbmx5IG9uVG9wQXJyaXZlPzogKGV2ZW50OiBXaGVlbEV2ZW50IHwgVG91Y2hFdmVudCkgPT4gdm9pZDtcbiAgcmVhZG9ubHkgb25Ub3BMZWF2ZT86IChldmVudDogV2hlZWxFdmVudCB8IFRvdWNoRXZlbnQpID0+IHZvaWQ7XG59XG5cbmNvbnN0IGJsdXJTZWxlY3RJbnB1dCA9IChldmVudDogTW91c2VFdmVudDxIVE1MRGl2RWxlbWVudD4pID0+IHtcbiAgY29uc3QgZWxlbWVudCA9IGV2ZW50LnRhcmdldCBhcyBIVE1MRGl2RWxlbWVudDtcbiAgcmV0dXJuIChcbiAgICBlbGVtZW50Lm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJlxuICAgIChlbGVtZW50Lm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCBhcyBIVE1MRWxlbWVudCkuYmx1cigpXG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTY3JvbGxNYW5hZ2VyKHtcbiAgY2hpbGRyZW4sXG4gIGxvY2tFbmFibGVkLFxuICBjYXB0dXJlRW5hYmxlZCA9IHRydWUsXG4gIG9uQm90dG9tQXJyaXZlLFxuICBvbkJvdHRvbUxlYXZlLFxuICBvblRvcEFycml2ZSxcbiAgb25Ub3BMZWF2ZSxcbn06IFByb3BzKSB7XG4gIGNvbnN0IHNldFNjcm9sbENhcHR1cmVUYXJnZXQgPSB1c2VTY3JvbGxDYXB0dXJlKHtcbiAgICBpc0VuYWJsZWQ6IGNhcHR1cmVFbmFibGVkLFxuICAgIG9uQm90dG9tQXJyaXZlLFxuICAgIG9uQm90dG9tTGVhdmUsXG4gICAgb25Ub3BBcnJpdmUsXG4gICAgb25Ub3BMZWF2ZSxcbiAgfSk7XG4gIGNvbnN0IHNldFNjcm9sbExvY2tUYXJnZXQgPSB1c2VTY3JvbGxMb2NrKHsgaXNFbmFibGVkOiBsb2NrRW5hYmxlZCB9KTtcblxuICBjb25zdCB0YXJnZXRSZWY6IFJlZkNhbGxiYWNrPEhUTUxFbGVtZW50PiA9IChlbGVtZW50KSA9PiB7XG4gICAgc2V0U2Nyb2xsQ2FwdHVyZVRhcmdldChlbGVtZW50KTtcbiAgICBzZXRTY3JvbGxMb2NrVGFyZ2V0KGVsZW1lbnQpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAge2xvY2tFbmFibGVkICYmIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uQ2xpY2s9e2JsdXJTZWxlY3RJbnB1dH1cbiAgICAgICAgICBjc3M9e3sgcG9zaXRpb246ICdmaXhlZCcsIGxlZnQ6IDAsIGJvdHRvbTogMCwgcmlnaHQ6IDAsIHRvcDogMCB9fVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIHtjaGlsZHJlbih0YXJnZXRSZWYpfVxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__$1
};
function ScrollManager(_ref3) {
  var children = _ref3.children, lockEnabled = _ref3.lockEnabled, _ref$captureEnabled = _ref3.captureEnabled, captureEnabled = _ref$captureEnabled === void 0 ? true : _ref$captureEnabled, onBottomArrive = _ref3.onBottomArrive, onBottomLeave = _ref3.onBottomLeave, onTopArrive = _ref3.onTopArrive, onTopLeave = _ref3.onTopLeave;
  var setScrollCaptureTarget = useScrollCapture({
    isEnabled: captureEnabled,
    onBottomArrive,
    onBottomLeave,
    onTopArrive,
    onTopLeave
  });
  var setScrollLockTarget = useScrollLock({
    isEnabled: lockEnabled
  });
  var targetRef = function targetRef2(element) {
    setScrollCaptureTarget(element);
    setScrollLockTarget(element);
  };
  return jsx(import_react46.Fragment, null, lockEnabled && jsx("div", {
    onClick: blurSelectInput,
    css: _ref2$1
  }), children(targetRef));
}
function _EMOTION_STRINGIFIED_CSS_ERROR__2() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
var _ref22 = false ? {
  name: "1a0ro4n-requiredInput",
  styles: "label:requiredInput;opacity:0;pointer-events:none;position:absolute;bottom:0;left:0;right:0;width:100%"
} : {
  name: "5kkxb2-requiredInput-RequiredInput",
  styles: "label:requiredInput;opacity:0;pointer-events:none;position:absolute;bottom:0;left:0;right:0;width:100%;label:RequiredInput;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlcXVpcmVkSW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNJIiwiZmlsZSI6IlJlcXVpcmVkSW5wdXQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBGb2N1c0V2ZW50SGFuZGxlciwgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmNvbnN0IFJlcXVpcmVkSW5wdXQ6IEZ1bmN0aW9uQ29tcG9uZW50PHtcbiAgcmVhZG9ubHkgbmFtZT86IHN0cmluZztcbiAgcmVhZG9ubHkgb25Gb2N1czogRm9jdXNFdmVudEhhbmRsZXI8SFRNTElucHV0RWxlbWVudD47XG59PiA9ICh7IG5hbWUsIG9uRm9jdXMgfSkgPT4gKFxuICA8aW5wdXRcbiAgICByZXF1aXJlZFxuICAgIG5hbWU9e25hbWV9XG4gICAgdGFiSW5kZXg9ey0xfVxuICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgb25Gb2N1cz17b25Gb2N1c31cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAncmVxdWlyZWRJbnB1dCcsXG4gICAgICBvcGFjaXR5OiAwLFxuICAgICAgcG9pbnRlckV2ZW50czogJ25vbmUnLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICBib3R0b206IDAsXG4gICAgICBsZWZ0OiAwLFxuICAgICAgcmlnaHQ6IDAsXG4gICAgICB3aWR0aDogJzEwMCUnLFxuICAgIH19XG4gICAgLy8gUHJldmVudCBgU3dpdGNoaW5nIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWRgIGVycm9yXG4gICAgdmFsdWU9XCJcIlxuICAgIG9uQ2hhbmdlPXsoKSA9PiB7fX1cbiAgLz5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IFJlcXVpcmVkSW5wdXQ7XG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__2
};
var RequiredInput = function RequiredInput2(_ref3) {
  var name = _ref3.name, onFocus2 = _ref3.onFocus;
  return jsx("input", {
    required: true,
    name,
    tabIndex: -1,
    "aria-hidden": "true",
    onFocus: onFocus2,
    css: _ref22,
    value: "",
    onChange: function onChange2() {
    }
  });
};
var RequiredInput$1 = RequiredInput;
function testPlatform(re) {
  var _window$navigator$use;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((_window$navigator$use = window.navigator["userAgentData"]) === null || _window$navigator$use === void 0 ? void 0 : _window$navigator$use.platform) || window.navigator.platform) : false;
}
function isIPhone() {
  return testPlatform(/^iPhone/i);
}
function isMac() {
  return testPlatform(/^Mac/i);
}
function isIPad() {
  return testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  isMac() && navigator.maxTouchPoints > 1;
}
function isIOS() {
  return isIPhone() || isIPad();
}
function isAppleDevice() {
  return isMac() || isIOS();
}
var formatGroupLabel = function formatGroupLabel2(group) {
  return group.label;
};
var getOptionLabel$1 = function getOptionLabel(option) {
  return option.label;
};
var getOptionValue$1 = function getOptionValue(option) {
  return option.value;
};
var isOptionDisabled = function isOptionDisabled2(option) {
  return !!option.isDisabled;
};
var defaultStyles = {
  clearIndicator: clearIndicatorCSS,
  container: containerCSS,
  control: css$1,
  dropdownIndicator: dropdownIndicatorCSS,
  group: groupCSS,
  groupHeading: groupHeadingCSS,
  indicatorsContainer: indicatorsContainerCSS,
  indicatorSeparator: indicatorSeparatorCSS,
  input: inputCSS,
  loadingIndicator: loadingIndicatorCSS,
  loadingMessage: loadingMessageCSS,
  menu: menuCSS,
  menuList: menuListCSS,
  menuPortal: menuPortalCSS,
  multiValue: multiValueCSS,
  multiValueLabel: multiValueLabelCSS,
  multiValueRemove: multiValueRemoveCSS,
  noOptionsMessage: noOptionsMessageCSS,
  option: optionCSS,
  placeholder: placeholderCSS,
  singleValue: css4,
  valueContainer: valueContainerCSS
};
var colors = {
  primary: "#2684FF",
  primary75: "#4C9AFF",
  primary50: "#B2D4FF",
  primary25: "#DEEBFF",
  danger: "#DE350B",
  dangerLight: "#FFBDAD",
  neutral0: "hsl(0, 0%, 100%)",
  neutral5: "hsl(0, 0%, 95%)",
  neutral10: "hsl(0, 0%, 90%)",
  neutral20: "hsl(0, 0%, 80%)",
  neutral30: "hsl(0, 0%, 70%)",
  neutral40: "hsl(0, 0%, 60%)",
  neutral50: "hsl(0, 0%, 50%)",
  neutral60: "hsl(0, 0%, 40%)",
  neutral70: "hsl(0, 0%, 30%)",
  neutral80: "hsl(0, 0%, 20%)",
  neutral90: "hsl(0, 0%, 10%)"
};
var borderRadius = 4;
var baseUnit = 4;
var controlHeight = 38;
var menuGutter = baseUnit * 2;
var spacing = {
  baseUnit,
  controlHeight,
  menuGutter
};
var defaultTheme = {
  borderRadius,
  colors,
  spacing
};
var defaultProps2 = {
  "aria-live": "polite",
  backspaceRemovesValue: true,
  blurInputOnSelect: isTouchCapable(),
  captureMenuScroll: !isTouchCapable(),
  classNames: {},
  closeMenuOnSelect: true,
  closeMenuOnScroll: false,
  components: {},
  controlShouldRenderValue: true,
  escapeClearsValue: false,
  filterOption: createFilter(),
  formatGroupLabel,
  getOptionLabel: getOptionLabel$1,
  getOptionValue: getOptionValue$1,
  isDisabled: false,
  isLoading: false,
  isMulti: false,
  isRtl: false,
  isSearchable: true,
  isOptionDisabled,
  loadingMessage: function loadingMessage() {
    return "Loading...";
  },
  maxMenuHeight: 300,
  minMenuHeight: 140,
  menuIsOpen: false,
  menuPlacement: "bottom",
  menuPosition: "absolute",
  menuShouldBlockScroll: false,
  menuShouldScrollIntoView: !isMobileDevice(),
  noOptionsMessage: function noOptionsMessage() {
    return "No options";
  },
  openMenuOnFocus: false,
  openMenuOnClick: true,
  options: [],
  pageSize: 5,
  placeholder: "Select...",
  screenReaderStatus: function screenReaderStatus(_ref3) {
    var count = _ref3.count;
    return "".concat(count, " result").concat(count !== 1 ? "s" : "", " available");
  },
  styles: {},
  tabIndex: 0,
  tabSelectsValue: true,
  unstyled: false
};
function toCategorizedOption(props, option, selectValue, index2) {
  var isDisabled = _isOptionDisabled(props, option, selectValue);
  var isSelected = _isOptionSelected(props, option, selectValue);
  var label = getOptionLabel2(props, option);
  var value = getOptionValue2(props, option);
  return {
    type: "option",
    data: option,
    isDisabled,
    isSelected,
    label,
    value,
    index: index2
  };
}
function buildCategorizedOptions(props, selectValue) {
  return props.options.map(function(groupOrOption, groupOrOptionIndex) {
    if ("options" in groupOrOption) {
      var categorizedOptions = groupOrOption.options.map(function(option, optionIndex) {
        return toCategorizedOption(props, option, selectValue, optionIndex);
      }).filter(function(categorizedOption2) {
        return isFocusable(props, categorizedOption2);
      });
      return categorizedOptions.length > 0 ? {
        type: "group",
        data: groupOrOption,
        options: categorizedOptions,
        index: groupOrOptionIndex
      } : void 0;
    }
    var categorizedOption = toCategorizedOption(props, groupOrOption, selectValue, groupOrOptionIndex);
    return isFocusable(props, categorizedOption) ? categorizedOption : void 0;
  }).filter(notNullish);
}
function buildFocusableOptionsFromCategorizedOptions(categorizedOptions) {
  return categorizedOptions.reduce(function(optionsAccumulator, categorizedOption) {
    if (categorizedOption.type === "group") {
      optionsAccumulator.push.apply(optionsAccumulator, _toConsumableArray(categorizedOption.options.map(function(option) {
        return option.data;
      })));
    } else {
      optionsAccumulator.push(categorizedOption.data);
    }
    return optionsAccumulator;
  }, []);
}
function buildFocusableOptionsWithIds(categorizedOptions, optionId) {
  return categorizedOptions.reduce(function(optionsAccumulator, categorizedOption) {
    if (categorizedOption.type === "group") {
      optionsAccumulator.push.apply(optionsAccumulator, _toConsumableArray(categorizedOption.options.map(function(option) {
        return {
          data: option.data,
          id: "".concat(optionId, "-").concat(categorizedOption.index, "-").concat(option.index)
        };
      })));
    } else {
      optionsAccumulator.push({
        data: categorizedOption.data,
        id: "".concat(optionId, "-").concat(categorizedOption.index)
      });
    }
    return optionsAccumulator;
  }, []);
}
function buildFocusableOptions(props, selectValue) {
  return buildFocusableOptionsFromCategorizedOptions(buildCategorizedOptions(props, selectValue));
}
function isFocusable(props, categorizedOption) {
  var _props$inputValue = props.inputValue, inputValue = _props$inputValue === void 0 ? "" : _props$inputValue;
  var data = categorizedOption.data, isSelected = categorizedOption.isSelected, label = categorizedOption.label, value = categorizedOption.value;
  return (!shouldHideSelectedOptions(props) || !isSelected) && _filterOption(props, {
    label,
    value,
    data
  }, inputValue);
}
function getNextFocusedValue(state2, nextSelectValue) {
  var focusedValue = state2.focusedValue, lastSelectValue = state2.selectValue;
  var lastFocusedIndex = lastSelectValue.indexOf(focusedValue);
  if (lastFocusedIndex > -1) {
    var nextFocusedIndex = nextSelectValue.indexOf(focusedValue);
    if (nextFocusedIndex > -1) {
      return focusedValue;
    } else if (lastFocusedIndex < nextSelectValue.length) {
      return nextSelectValue[lastFocusedIndex];
    }
  }
  return null;
}
function getNextFocusedOption(state2, options2) {
  var lastFocusedOption = state2.focusedOption;
  return lastFocusedOption && options2.indexOf(lastFocusedOption) > -1 ? lastFocusedOption : options2[0];
}
var getFocusedOptionId = function getFocusedOptionId2(focusableOptionsWithIds, focusedOption) {
  var _focusableOptionsWith;
  var focusedOptionId = (_focusableOptionsWith = focusableOptionsWithIds.find(function(option) {
    return option.data === focusedOption;
  })) === null || _focusableOptionsWith === void 0 ? void 0 : _focusableOptionsWith.id;
  return focusedOptionId || null;
};
var getOptionLabel2 = function getOptionLabel3(props, data) {
  return props.getOptionLabel(data);
};
var getOptionValue2 = function getOptionValue3(props, data) {
  return props.getOptionValue(data);
};
function _isOptionDisabled(props, option, selectValue) {
  return typeof props.isOptionDisabled === "function" ? props.isOptionDisabled(option, selectValue) : false;
}
function _isOptionSelected(props, option, selectValue) {
  if (selectValue.indexOf(option) > -1) return true;
  if (typeof props.isOptionSelected === "function") {
    return props.isOptionSelected(option, selectValue);
  }
  var candidate = getOptionValue2(props, option);
  return selectValue.some(function(i) {
    return getOptionValue2(props, i) === candidate;
  });
}
function _filterOption(props, option, inputValue) {
  return props.filterOption ? props.filterOption(option, inputValue) : true;
}
var shouldHideSelectedOptions = function shouldHideSelectedOptions2(props) {
  var hideSelectedOptions = props.hideSelectedOptions, isMulti = props.isMulti;
  if (hideSelectedOptions === void 0) return isMulti;
  return hideSelectedOptions;
};
var instanceId = 1;
var Select = function(_Component) {
  _inherits(Select2, _Component);
  var _super = _createSuper(Select2);
  function Select2(_props) {
    var _this;
    _classCallCheck(this, Select2);
    _this = _super.call(this, _props);
    _this.state = {
      ariaSelection: null,
      focusedOption: null,
      focusedOptionId: null,
      focusableOptionsWithIds: [],
      focusedValue: null,
      inputIsHidden: false,
      isFocused: false,
      selectValue: [],
      clearFocusValueOnUpdate: false,
      prevWasFocused: false,
      inputIsHiddenAfterUpdate: void 0,
      prevProps: void 0,
      instancePrefix: ""
    };
    _this.blockOptionHover = false;
    _this.isComposing = false;
    _this.commonProps = void 0;
    _this.initialTouchX = 0;
    _this.initialTouchY = 0;
    _this.openAfterFocus = false;
    _this.scrollToFocusedOptionOnUpdate = false;
    _this.userIsDragging = void 0;
    _this.isAppleDevice = isAppleDevice();
    _this.controlRef = null;
    _this.getControlRef = function(ref) {
      _this.controlRef = ref;
    };
    _this.focusedOptionRef = null;
    _this.getFocusedOptionRef = function(ref) {
      _this.focusedOptionRef = ref;
    };
    _this.menuListRef = null;
    _this.getMenuListRef = function(ref) {
      _this.menuListRef = ref;
    };
    _this.inputRef = null;
    _this.getInputRef = function(ref) {
      _this.inputRef = ref;
    };
    _this.focus = _this.focusInput;
    _this.blur = _this.blurInput;
    _this.onChange = function(newValue, actionMeta) {
      var _this$props = _this.props, onChange2 = _this$props.onChange, name = _this$props.name;
      actionMeta.name = name;
      _this.ariaOnChange(newValue, actionMeta);
      onChange2(newValue, actionMeta);
    };
    _this.setValue = function(newValue, action, option) {
      var _this$props2 = _this.props, closeMenuOnSelect = _this$props2.closeMenuOnSelect, isMulti = _this$props2.isMulti, inputValue = _this$props2.inputValue;
      _this.onInputChange("", {
        action: "set-value",
        prevInputValue: inputValue
      });
      if (closeMenuOnSelect) {
        _this.setState({
          inputIsHiddenAfterUpdate: !isMulti
        });
        _this.onMenuClose();
      }
      _this.setState({
        clearFocusValueOnUpdate: true
      });
      _this.onChange(newValue, {
        action,
        option
      });
    };
    _this.selectOption = function(newValue) {
      var _this$props3 = _this.props, blurInputOnSelect = _this$props3.blurInputOnSelect, isMulti = _this$props3.isMulti, name = _this$props3.name;
      var selectValue = _this.state.selectValue;
      var deselected = isMulti && _this.isOptionSelected(newValue, selectValue);
      var isDisabled = _this.isOptionDisabled(newValue, selectValue);
      if (deselected) {
        var candidate = _this.getOptionValue(newValue);
        _this.setValue(multiValueAsValue(selectValue.filter(function(i) {
          return _this.getOptionValue(i) !== candidate;
        })), "deselect-option", newValue);
      } else if (!isDisabled) {
        if (isMulti) {
          _this.setValue(multiValueAsValue([].concat(_toConsumableArray(selectValue), [newValue])), "select-option", newValue);
        } else {
          _this.setValue(singleValueAsValue(newValue), "select-option");
        }
      } else {
        _this.ariaOnChange(singleValueAsValue(newValue), {
          action: "select-option",
          option: newValue,
          name
        });
        return;
      }
      if (blurInputOnSelect) {
        _this.blurInput();
      }
    };
    _this.removeValue = function(removedValue) {
      var isMulti = _this.props.isMulti;
      var selectValue = _this.state.selectValue;
      var candidate = _this.getOptionValue(removedValue);
      var newValueArray = selectValue.filter(function(i) {
        return _this.getOptionValue(i) !== candidate;
      });
      var newValue = valueTernary(isMulti, newValueArray, newValueArray[0] || null);
      _this.onChange(newValue, {
        action: "remove-value",
        removedValue
      });
      _this.focusInput();
    };
    _this.clearValue = function() {
      var selectValue = _this.state.selectValue;
      _this.onChange(valueTernary(_this.props.isMulti, [], null), {
        action: "clear",
        removedValues: selectValue
      });
    };
    _this.popValue = function() {
      var isMulti = _this.props.isMulti;
      var selectValue = _this.state.selectValue;
      var lastSelectedValue = selectValue[selectValue.length - 1];
      var newValueArray = selectValue.slice(0, selectValue.length - 1);
      var newValue = valueTernary(isMulti, newValueArray, newValueArray[0] || null);
      _this.onChange(newValue, {
        action: "pop-value",
        removedValue: lastSelectedValue
      });
    };
    _this.getFocusedOptionId = function(focusedOption) {
      return getFocusedOptionId(_this.state.focusableOptionsWithIds, focusedOption);
    };
    _this.getFocusableOptionsWithIds = function() {
      return buildFocusableOptionsWithIds(buildCategorizedOptions(_this.props, _this.state.selectValue), _this.getElementId("option"));
    };
    _this.getValue = function() {
      return _this.state.selectValue;
    };
    _this.cx = function() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return classNames.apply(void 0, [_this.props.classNamePrefix].concat(args));
    };
    _this.getOptionLabel = function(data) {
      return getOptionLabel2(_this.props, data);
    };
    _this.getOptionValue = function(data) {
      return getOptionValue2(_this.props, data);
    };
    _this.getStyles = function(key, props) {
      var unstyled = _this.props.unstyled;
      var base = defaultStyles[key](props, unstyled);
      base.boxSizing = "border-box";
      var custom = _this.props.styles[key];
      return custom ? custom(base, props) : base;
    };
    _this.getClassNames = function(key, props) {
      var _this$props$className, _this$props$className2;
      return (_this$props$className = (_this$props$className2 = _this.props.classNames)[key]) === null || _this$props$className === void 0 ? void 0 : _this$props$className.call(_this$props$className2, props);
    };
    _this.getElementId = function(element) {
      return "".concat(_this.state.instancePrefix, "-").concat(element);
    };
    _this.getComponents = function() {
      return defaultComponents(_this.props);
    };
    _this.buildCategorizedOptions = function() {
      return buildCategorizedOptions(_this.props, _this.state.selectValue);
    };
    _this.getCategorizedOptions = function() {
      return _this.props.menuIsOpen ? _this.buildCategorizedOptions() : [];
    };
    _this.buildFocusableOptions = function() {
      return buildFocusableOptionsFromCategorizedOptions(_this.buildCategorizedOptions());
    };
    _this.getFocusableOptions = function() {
      return _this.props.menuIsOpen ? _this.buildFocusableOptions() : [];
    };
    _this.ariaOnChange = function(value, actionMeta) {
      _this.setState({
        ariaSelection: _objectSpread2({
          value
        }, actionMeta)
      });
    };
    _this.onMenuMouseDown = function(event) {
      if (event.button !== 0) {
        return;
      }
      event.stopPropagation();
      event.preventDefault();
      _this.focusInput();
    };
    _this.onMenuMouseMove = function(event) {
      _this.blockOptionHover = false;
    };
    _this.onControlMouseDown = function(event) {
      if (event.defaultPrevented) {
        return;
      }
      var openMenuOnClick = _this.props.openMenuOnClick;
      if (!_this.state.isFocused) {
        if (openMenuOnClick) {
          _this.openAfterFocus = true;
        }
        _this.focusInput();
      } else if (!_this.props.menuIsOpen) {
        if (openMenuOnClick) {
          _this.openMenu("first");
        }
      } else {
        if (event.target.tagName !== "INPUT" && event.target.tagName !== "TEXTAREA") {
          _this.onMenuClose();
        }
      }
      if (event.target.tagName !== "INPUT" && event.target.tagName !== "TEXTAREA") {
        event.preventDefault();
      }
    };
    _this.onDropdownIndicatorMouseDown = function(event) {
      if (event && event.type === "mousedown" && event.button !== 0) {
        return;
      }
      if (_this.props.isDisabled) return;
      var _this$props4 = _this.props, isMulti = _this$props4.isMulti, menuIsOpen = _this$props4.menuIsOpen;
      _this.focusInput();
      if (menuIsOpen) {
        _this.setState({
          inputIsHiddenAfterUpdate: !isMulti
        });
        _this.onMenuClose();
      } else {
        _this.openMenu("first");
      }
      event.preventDefault();
    };
    _this.onClearIndicatorMouseDown = function(event) {
      if (event && event.type === "mousedown" && event.button !== 0) {
        return;
      }
      _this.clearValue();
      event.preventDefault();
      _this.openAfterFocus = false;
      if (event.type === "touchend") {
        _this.focusInput();
      } else {
        setTimeout(function() {
          return _this.focusInput();
        });
      }
    };
    _this.onScroll = function(event) {
      if (typeof _this.props.closeMenuOnScroll === "boolean") {
        if (event.target instanceof HTMLElement && isDocumentElement(event.target)) {
          _this.props.onMenuClose();
        }
      } else if (typeof _this.props.closeMenuOnScroll === "function") {
        if (_this.props.closeMenuOnScroll(event)) {
          _this.props.onMenuClose();
        }
      }
    };
    _this.onCompositionStart = function() {
      _this.isComposing = true;
    };
    _this.onCompositionEnd = function() {
      _this.isComposing = false;
    };
    _this.onTouchStart = function(_ref23) {
      var touches = _ref23.touches;
      var touch = touches && touches.item(0);
      if (!touch) {
        return;
      }
      _this.initialTouchX = touch.clientX;
      _this.initialTouchY = touch.clientY;
      _this.userIsDragging = false;
    };
    _this.onTouchMove = function(_ref3) {
      var touches = _ref3.touches;
      var touch = touches && touches.item(0);
      if (!touch) {
        return;
      }
      var deltaX = Math.abs(touch.clientX - _this.initialTouchX);
      var deltaY = Math.abs(touch.clientY - _this.initialTouchY);
      var moveThreshold = 5;
      _this.userIsDragging = deltaX > moveThreshold || deltaY > moveThreshold;
    };
    _this.onTouchEnd = function(event) {
      if (_this.userIsDragging) return;
      if (_this.controlRef && !_this.controlRef.contains(event.target) && _this.menuListRef && !_this.menuListRef.contains(event.target)) {
        _this.blurInput();
      }
      _this.initialTouchX = 0;
      _this.initialTouchY = 0;
    };
    _this.onControlTouchEnd = function(event) {
      if (_this.userIsDragging) return;
      _this.onControlMouseDown(event);
    };
    _this.onClearIndicatorTouchEnd = function(event) {
      if (_this.userIsDragging) return;
      _this.onClearIndicatorMouseDown(event);
    };
    _this.onDropdownIndicatorTouchEnd = function(event) {
      if (_this.userIsDragging) return;
      _this.onDropdownIndicatorMouseDown(event);
    };
    _this.handleInputChange = function(event) {
      var prevInputValue = _this.props.inputValue;
      var inputValue = event.currentTarget.value;
      _this.setState({
        inputIsHiddenAfterUpdate: false
      });
      _this.onInputChange(inputValue, {
        action: "input-change",
        prevInputValue
      });
      if (!_this.props.menuIsOpen) {
        _this.onMenuOpen();
      }
    };
    _this.onInputFocus = function(event) {
      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
      _this.setState({
        inputIsHiddenAfterUpdate: false,
        isFocused: true
      });
      if (_this.openAfterFocus || _this.props.openMenuOnFocus) {
        _this.openMenu("first");
      }
      _this.openAfterFocus = false;
    };
    _this.onInputBlur = function(event) {
      var prevInputValue = _this.props.inputValue;
      if (_this.menuListRef && _this.menuListRef.contains(document.activeElement)) {
        _this.inputRef.focus();
        return;
      }
      if (_this.props.onBlur) {
        _this.props.onBlur(event);
      }
      _this.onInputChange("", {
        action: "input-blur",
        prevInputValue
      });
      _this.onMenuClose();
      _this.setState({
        focusedValue: null,
        isFocused: false
      });
    };
    _this.onOptionHover = function(focusedOption) {
      if (_this.blockOptionHover || _this.state.focusedOption === focusedOption) {
        return;
      }
      var options2 = _this.getFocusableOptions();
      var focusedOptionIndex = options2.indexOf(focusedOption);
      _this.setState({
        focusedOption,
        focusedOptionId: focusedOptionIndex > -1 ? _this.getFocusedOptionId(focusedOption) : null
      });
    };
    _this.shouldHideSelectedOptions = function() {
      return shouldHideSelectedOptions(_this.props);
    };
    _this.onValueInputFocus = function(e) {
      e.preventDefault();
      e.stopPropagation();
      _this.focus();
    };
    _this.onKeyDown = function(event) {
      var _this$props5 = _this.props, isMulti = _this$props5.isMulti, backspaceRemovesValue = _this$props5.backspaceRemovesValue, escapeClearsValue = _this$props5.escapeClearsValue, inputValue = _this$props5.inputValue, isClearable = _this$props5.isClearable, isDisabled = _this$props5.isDisabled, menuIsOpen = _this$props5.menuIsOpen, onKeyDown = _this$props5.onKeyDown, tabSelectsValue = _this$props5.tabSelectsValue, openMenuOnFocus = _this$props5.openMenuOnFocus;
      var _this$state = _this.state, focusedOption = _this$state.focusedOption, focusedValue = _this$state.focusedValue, selectValue = _this$state.selectValue;
      if (isDisabled) return;
      if (typeof onKeyDown === "function") {
        onKeyDown(event);
        if (event.defaultPrevented) {
          return;
        }
      }
      _this.blockOptionHover = true;
      switch (event.key) {
        case "ArrowLeft":
          if (!isMulti || inputValue) return;
          _this.focusValue("previous");
          break;
        case "ArrowRight":
          if (!isMulti || inputValue) return;
          _this.focusValue("next");
          break;
        case "Delete":
        case "Backspace":
          if (inputValue) return;
          if (focusedValue) {
            _this.removeValue(focusedValue);
          } else {
            if (!backspaceRemovesValue) return;
            if (isMulti) {
              _this.popValue();
            } else if (isClearable) {
              _this.clearValue();
            }
          }
          break;
        case "Tab":
          if (_this.isComposing) return;
          if (event.shiftKey || !menuIsOpen || !tabSelectsValue || !focusedOption || // don't capture the event if the menu opens on focus and the focused
          // option is already selected; it breaks the flow of navigation
          openMenuOnFocus && _this.isOptionSelected(focusedOption, selectValue)) {
            return;
          }
          _this.selectOption(focusedOption);
          break;
        case "Enter":
          if (event.keyCode === 229) {
            break;
          }
          if (menuIsOpen) {
            if (!focusedOption) return;
            if (_this.isComposing) return;
            _this.selectOption(focusedOption);
            break;
          }
          return;
        case "Escape":
          if (menuIsOpen) {
            _this.setState({
              inputIsHiddenAfterUpdate: false
            });
            _this.onInputChange("", {
              action: "menu-close",
              prevInputValue: inputValue
            });
            _this.onMenuClose();
          } else if (isClearable && escapeClearsValue) {
            _this.clearValue();
          }
          break;
        case " ":
          if (inputValue) {
            return;
          }
          if (!menuIsOpen) {
            _this.openMenu("first");
            break;
          }
          if (!focusedOption) return;
          _this.selectOption(focusedOption);
          break;
        case "ArrowUp":
          if (menuIsOpen) {
            _this.focusOption("up");
          } else {
            _this.openMenu("last");
          }
          break;
        case "ArrowDown":
          if (menuIsOpen) {
            _this.focusOption("down");
          } else {
            _this.openMenu("first");
          }
          break;
        case "PageUp":
          if (!menuIsOpen) return;
          _this.focusOption("pageup");
          break;
        case "PageDown":
          if (!menuIsOpen) return;
          _this.focusOption("pagedown");
          break;
        case "Home":
          if (!menuIsOpen) return;
          _this.focusOption("first");
          break;
        case "End":
          if (!menuIsOpen) return;
          _this.focusOption("last");
          break;
        default:
          return;
      }
      event.preventDefault();
    };
    _this.state.instancePrefix = "react-select-" + (_this.props.instanceId || ++instanceId);
    _this.state.selectValue = cleanValue(_props.value);
    if (_props.menuIsOpen && _this.state.selectValue.length) {
      var focusableOptionsWithIds = _this.getFocusableOptionsWithIds();
      var focusableOptions = _this.buildFocusableOptions();
      var optionIndex = focusableOptions.indexOf(_this.state.selectValue[0]);
      _this.state.focusableOptionsWithIds = focusableOptionsWithIds;
      _this.state.focusedOption = focusableOptions[optionIndex];
      _this.state.focusedOptionId = getFocusedOptionId(focusableOptionsWithIds, focusableOptions[optionIndex]);
    }
    return _this;
  }
  _createClass(Select2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.startListeningComposition();
      this.startListeningToTouch();
      if (this.props.closeMenuOnScroll && document && document.addEventListener) {
        document.addEventListener("scroll", this.onScroll, true);
      }
      if (this.props.autoFocus) {
        this.focusInput();
      }
      if (this.props.menuIsOpen && this.state.focusedOption && this.menuListRef && this.focusedOptionRef) {
        scrollIntoView(this.menuListRef, this.focusedOptionRef);
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this$props6 = this.props, isDisabled = _this$props6.isDisabled, menuIsOpen = _this$props6.menuIsOpen;
      var isFocused = this.state.isFocused;
      if (
        // ensure focus is restored correctly when the control becomes enabled
        isFocused && !isDisabled && prevProps.isDisabled || // ensure focus is on the Input when the menu opens
        isFocused && menuIsOpen && !prevProps.menuIsOpen
      ) {
        this.focusInput();
      }
      if (isFocused && isDisabled && !prevProps.isDisabled) {
        this.setState({
          isFocused: false
        }, this.onMenuClose);
      } else if (!isFocused && !isDisabled && prevProps.isDisabled && this.inputRef === document.activeElement) {
        this.setState({
          isFocused: true
        });
      }
      if (this.menuListRef && this.focusedOptionRef && this.scrollToFocusedOptionOnUpdate) {
        scrollIntoView(this.menuListRef, this.focusedOptionRef);
        this.scrollToFocusedOptionOnUpdate = false;
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.stopListeningComposition();
      this.stopListeningToTouch();
      document.removeEventListener("scroll", this.onScroll, true);
    }
    // ==============================
    // Consumer Handlers
    // ==============================
  }, {
    key: "onMenuOpen",
    value: function onMenuOpen() {
      this.props.onMenuOpen();
    }
  }, {
    key: "onMenuClose",
    value: function onMenuClose() {
      this.onInputChange("", {
        action: "menu-close",
        prevInputValue: this.props.inputValue
      });
      this.props.onMenuClose();
    }
  }, {
    key: "onInputChange",
    value: function onInputChange(newValue, actionMeta) {
      this.props.onInputChange(newValue, actionMeta);
    }
    // ==============================
    // Methods
    // ==============================
  }, {
    key: "focusInput",
    value: function focusInput() {
      if (!this.inputRef) return;
      this.inputRef.focus();
    }
  }, {
    key: "blurInput",
    value: function blurInput() {
      if (!this.inputRef) return;
      this.inputRef.blur();
    }
    // aliased for consumers
  }, {
    key: "openMenu",
    value: function openMenu(focusOption) {
      var _this2 = this;
      var _this$state2 = this.state, selectValue = _this$state2.selectValue, isFocused = _this$state2.isFocused;
      var focusableOptions = this.buildFocusableOptions();
      var openAtIndex = focusOption === "first" ? 0 : focusableOptions.length - 1;
      if (!this.props.isMulti) {
        var selectedIndex = focusableOptions.indexOf(selectValue[0]);
        if (selectedIndex > -1) {
          openAtIndex = selectedIndex;
        }
      }
      this.scrollToFocusedOptionOnUpdate = !(isFocused && this.menuListRef);
      this.setState({
        inputIsHiddenAfterUpdate: false,
        focusedValue: null,
        focusedOption: focusableOptions[openAtIndex],
        focusedOptionId: this.getFocusedOptionId(focusableOptions[openAtIndex])
      }, function() {
        return _this2.onMenuOpen();
      });
    }
  }, {
    key: "focusValue",
    value: function focusValue(direction) {
      var _this$state3 = this.state, selectValue = _this$state3.selectValue, focusedValue = _this$state3.focusedValue;
      if (!this.props.isMulti) return;
      this.setState({
        focusedOption: null
      });
      var focusedIndex = selectValue.indexOf(focusedValue);
      if (!focusedValue) {
        focusedIndex = -1;
      }
      var lastIndex = selectValue.length - 1;
      var nextFocus = -1;
      if (!selectValue.length) return;
      switch (direction) {
        case "previous":
          if (focusedIndex === 0) {
            nextFocus = 0;
          } else if (focusedIndex === -1) {
            nextFocus = lastIndex;
          } else {
            nextFocus = focusedIndex - 1;
          }
          break;
        case "next":
          if (focusedIndex > -1 && focusedIndex < lastIndex) {
            nextFocus = focusedIndex + 1;
          }
          break;
      }
      this.setState({
        inputIsHidden: nextFocus !== -1,
        focusedValue: selectValue[nextFocus]
      });
    }
  }, {
    key: "focusOption",
    value: function focusOption() {
      var direction = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "first";
      var pageSize = this.props.pageSize;
      var focusedOption = this.state.focusedOption;
      var options2 = this.getFocusableOptions();
      if (!options2.length) return;
      var nextFocus = 0;
      var focusedIndex = options2.indexOf(focusedOption);
      if (!focusedOption) {
        focusedIndex = -1;
      }
      if (direction === "up") {
        nextFocus = focusedIndex > 0 ? focusedIndex - 1 : options2.length - 1;
      } else if (direction === "down") {
        nextFocus = (focusedIndex + 1) % options2.length;
      } else if (direction === "pageup") {
        nextFocus = focusedIndex - pageSize;
        if (nextFocus < 0) nextFocus = 0;
      } else if (direction === "pagedown") {
        nextFocus = focusedIndex + pageSize;
        if (nextFocus > options2.length - 1) nextFocus = options2.length - 1;
      } else if (direction === "last") {
        nextFocus = options2.length - 1;
      }
      this.scrollToFocusedOptionOnUpdate = true;
      this.setState({
        focusedOption: options2[nextFocus],
        focusedValue: null,
        focusedOptionId: this.getFocusedOptionId(options2[nextFocus])
      });
    }
  }, {
    key: "getTheme",
    value: (
      // ==============================
      // Getters
      // ==============================
      function getTheme3() {
        if (!this.props.theme) {
          return defaultTheme;
        }
        if (typeof this.props.theme === "function") {
          return this.props.theme(defaultTheme);
        }
        return _objectSpread2(_objectSpread2({}, defaultTheme), this.props.theme);
      }
    )
  }, {
    key: "getCommonProps",
    value: function getCommonProps() {
      var clearValue = this.clearValue, cx = this.cx, getStyles = this.getStyles, getClassNames = this.getClassNames, getValue = this.getValue, selectOption = this.selectOption, setValue = this.setValue, props = this.props;
      var isMulti = props.isMulti, isRtl = props.isRtl, options2 = props.options;
      var hasValue = this.hasValue();
      return {
        clearValue,
        cx,
        getStyles,
        getClassNames,
        getValue,
        hasValue,
        isMulti,
        isRtl,
        options: options2,
        selectOption,
        selectProps: props,
        setValue,
        theme: this.getTheme()
      };
    }
  }, {
    key: "hasValue",
    value: function hasValue() {
      var selectValue = this.state.selectValue;
      return selectValue.length > 0;
    }
  }, {
    key: "hasOptions",
    value: function hasOptions() {
      return !!this.getFocusableOptions().length;
    }
  }, {
    key: "isClearable",
    value: function isClearable() {
      var _this$props7 = this.props, isClearable2 = _this$props7.isClearable, isMulti = _this$props7.isMulti;
      if (isClearable2 === void 0) return isMulti;
      return isClearable2;
    }
  }, {
    key: "isOptionDisabled",
    value: function isOptionDisabled3(option, selectValue) {
      return _isOptionDisabled(this.props, option, selectValue);
    }
  }, {
    key: "isOptionSelected",
    value: function isOptionSelected(option, selectValue) {
      return _isOptionSelected(this.props, option, selectValue);
    }
  }, {
    key: "filterOption",
    value: function filterOption(option, inputValue) {
      return _filterOption(this.props, option, inputValue);
    }
  }, {
    key: "formatOptionLabel",
    value: function formatOptionLabel(data, context) {
      if (typeof this.props.formatOptionLabel === "function") {
        var _inputValue = this.props.inputValue;
        var _selectValue = this.state.selectValue;
        return this.props.formatOptionLabel(data, {
          context,
          inputValue: _inputValue,
          selectValue: _selectValue
        });
      } else {
        return this.getOptionLabel(data);
      }
    }
  }, {
    key: "formatGroupLabel",
    value: function formatGroupLabel3(data) {
      return this.props.formatGroupLabel(data);
    }
    // ==============================
    // Mouse Handlers
    // ==============================
  }, {
    key: "startListeningComposition",
    value: (
      // ==============================
      // Composition Handlers
      // ==============================
      function startListeningComposition() {
        if (document && document.addEventListener) {
          document.addEventListener("compositionstart", this.onCompositionStart, false);
          document.addEventListener("compositionend", this.onCompositionEnd, false);
        }
      }
    )
  }, {
    key: "stopListeningComposition",
    value: function stopListeningComposition() {
      if (document && document.removeEventListener) {
        document.removeEventListener("compositionstart", this.onCompositionStart);
        document.removeEventListener("compositionend", this.onCompositionEnd);
      }
    }
  }, {
    key: "startListeningToTouch",
    value: (
      // ==============================
      // Touch Handlers
      // ==============================
      function startListeningToTouch() {
        if (document && document.addEventListener) {
          document.addEventListener("touchstart", this.onTouchStart, false);
          document.addEventListener("touchmove", this.onTouchMove, false);
          document.addEventListener("touchend", this.onTouchEnd, false);
        }
      }
    )
  }, {
    key: "stopListeningToTouch",
    value: function stopListeningToTouch() {
      if (document && document.removeEventListener) {
        document.removeEventListener("touchstart", this.onTouchStart);
        document.removeEventListener("touchmove", this.onTouchMove);
        document.removeEventListener("touchend", this.onTouchEnd);
      }
    }
  }, {
    key: "renderInput",
    value: (
      // ==============================
      // Renderers
      // ==============================
      function renderInput() {
        var _this$props8 = this.props, isDisabled = _this$props8.isDisabled, isSearchable = _this$props8.isSearchable, inputId = _this$props8.inputId, inputValue = _this$props8.inputValue, tabIndex = _this$props8.tabIndex, form = _this$props8.form, menuIsOpen = _this$props8.menuIsOpen, required = _this$props8.required;
        var _this$getComponents = this.getComponents(), Input5 = _this$getComponents.Input;
        var _this$state4 = this.state, inputIsHidden = _this$state4.inputIsHidden, ariaSelection = _this$state4.ariaSelection;
        var commonProps = this.commonProps;
        var id2 = inputId || this.getElementId("input");
        var ariaAttributes = _objectSpread2(_objectSpread2(_objectSpread2({
          "aria-autocomplete": "list",
          "aria-expanded": menuIsOpen,
          "aria-haspopup": true,
          "aria-errormessage": this.props["aria-errormessage"],
          "aria-invalid": this.props["aria-invalid"],
          "aria-label": this.props["aria-label"],
          "aria-labelledby": this.props["aria-labelledby"],
          "aria-required": required,
          role: "combobox",
          "aria-activedescendant": this.isAppleDevice ? void 0 : this.state.focusedOptionId || ""
        }, menuIsOpen && {
          "aria-controls": this.getElementId("listbox")
        }), !isSearchable && {
          "aria-readonly": true
        }), this.hasValue() ? (ariaSelection === null || ariaSelection === void 0 ? void 0 : ariaSelection.action) === "initial-input-focus" && {
          "aria-describedby": this.getElementId("live-region")
        } : {
          "aria-describedby": this.getElementId("placeholder")
        });
        if (!isSearchable) {
          return React53.createElement(DummyInput, _extends({
            id: id2,
            innerRef: this.getInputRef,
            onBlur: this.onInputBlur,
            onChange: noop,
            onFocus: this.onInputFocus,
            disabled: isDisabled,
            tabIndex,
            inputMode: "none",
            form,
            value: ""
          }, ariaAttributes));
        }
        return React53.createElement(Input5, _extends({}, commonProps, {
          autoCapitalize: "none",
          autoComplete: "off",
          autoCorrect: "off",
          id: id2,
          innerRef: this.getInputRef,
          isDisabled,
          isHidden: inputIsHidden,
          onBlur: this.onInputBlur,
          onChange: this.handleInputChange,
          onFocus: this.onInputFocus,
          spellCheck: "false",
          tabIndex,
          form,
          type: "text",
          value: inputValue
        }, ariaAttributes));
      }
    )
  }, {
    key: "renderPlaceholderOrValue",
    value: function renderPlaceholderOrValue() {
      var _this3 = this;
      var _this$getComponents2 = this.getComponents(), MultiValue3 = _this$getComponents2.MultiValue, MultiValueContainer2 = _this$getComponents2.MultiValueContainer, MultiValueLabel2 = _this$getComponents2.MultiValueLabel, MultiValueRemove2 = _this$getComponents2.MultiValueRemove, SingleValue3 = _this$getComponents2.SingleValue, Placeholder3 = _this$getComponents2.Placeholder;
      var commonProps = this.commonProps;
      var _this$props9 = this.props, controlShouldRenderValue = _this$props9.controlShouldRenderValue, isDisabled = _this$props9.isDisabled, isMulti = _this$props9.isMulti, inputValue = _this$props9.inputValue, placeholder = _this$props9.placeholder;
      var _this$state5 = this.state, selectValue = _this$state5.selectValue, focusedValue = _this$state5.focusedValue, isFocused = _this$state5.isFocused;
      if (!this.hasValue() || !controlShouldRenderValue) {
        return inputValue ? null : React53.createElement(Placeholder3, _extends({}, commonProps, {
          key: "placeholder",
          isDisabled,
          isFocused,
          innerProps: {
            id: this.getElementId("placeholder")
          }
        }), placeholder);
      }
      if (isMulti) {
        return selectValue.map(function(opt, index2) {
          var isOptionFocused = opt === focusedValue;
          var key = "".concat(_this3.getOptionLabel(opt), "-").concat(_this3.getOptionValue(opt));
          return React53.createElement(MultiValue3, _extends({}, commonProps, {
            components: {
              Container: MultiValueContainer2,
              Label: MultiValueLabel2,
              Remove: MultiValueRemove2
            },
            isFocused: isOptionFocused,
            isDisabled,
            key,
            index: index2,
            removeProps: {
              onClick: function onClick() {
                return _this3.removeValue(opt);
              },
              onTouchEnd: function onTouchEnd() {
                return _this3.removeValue(opt);
              },
              onMouseDown: function onMouseDown(e) {
                e.preventDefault();
              }
            },
            data: opt
          }), _this3.formatOptionLabel(opt, "value"));
        });
      }
      if (inputValue) {
        return null;
      }
      var singleValue = selectValue[0];
      return React53.createElement(SingleValue3, _extends({}, commonProps, {
        data: singleValue,
        isDisabled
      }), this.formatOptionLabel(singleValue, "value"));
    }
  }, {
    key: "renderClearIndicator",
    value: function renderClearIndicator() {
      var _this$getComponents3 = this.getComponents(), ClearIndicator3 = _this$getComponents3.ClearIndicator;
      var commonProps = this.commonProps;
      var _this$props10 = this.props, isDisabled = _this$props10.isDisabled, isLoading = _this$props10.isLoading;
      var isFocused = this.state.isFocused;
      if (!this.isClearable() || !ClearIndicator3 || isDisabled || !this.hasValue() || isLoading) {
        return null;
      }
      var innerProps = {
        onMouseDown: this.onClearIndicatorMouseDown,
        onTouchEnd: this.onClearIndicatorTouchEnd,
        "aria-hidden": "true"
      };
      return React53.createElement(ClearIndicator3, _extends({}, commonProps, {
        innerProps,
        isFocused
      }));
    }
  }, {
    key: "renderLoadingIndicator",
    value: function renderLoadingIndicator() {
      var _this$getComponents4 = this.getComponents(), LoadingIndicator3 = _this$getComponents4.LoadingIndicator;
      var commonProps = this.commonProps;
      var _this$props11 = this.props, isDisabled = _this$props11.isDisabled, isLoading = _this$props11.isLoading;
      var isFocused = this.state.isFocused;
      if (!LoadingIndicator3 || !isLoading) return null;
      var innerProps = {
        "aria-hidden": "true"
      };
      return React53.createElement(LoadingIndicator3, _extends({}, commonProps, {
        innerProps,
        isDisabled,
        isFocused
      }));
    }
  }, {
    key: "renderIndicatorSeparator",
    value: function renderIndicatorSeparator() {
      var _this$getComponents5 = this.getComponents(), DropdownIndicator3 = _this$getComponents5.DropdownIndicator, IndicatorSeparator3 = _this$getComponents5.IndicatorSeparator;
      if (!DropdownIndicator3 || !IndicatorSeparator3) return null;
      var commonProps = this.commonProps;
      var isDisabled = this.props.isDisabled;
      var isFocused = this.state.isFocused;
      return React53.createElement(IndicatorSeparator3, _extends({}, commonProps, {
        isDisabled,
        isFocused
      }));
    }
  }, {
    key: "renderDropdownIndicator",
    value: function renderDropdownIndicator() {
      var _this$getComponents6 = this.getComponents(), DropdownIndicator3 = _this$getComponents6.DropdownIndicator;
      if (!DropdownIndicator3) return null;
      var commonProps = this.commonProps;
      var isDisabled = this.props.isDisabled;
      var isFocused = this.state.isFocused;
      var innerProps = {
        onMouseDown: this.onDropdownIndicatorMouseDown,
        onTouchEnd: this.onDropdownIndicatorTouchEnd,
        "aria-hidden": "true"
      };
      return React53.createElement(DropdownIndicator3, _extends({}, commonProps, {
        innerProps,
        isDisabled,
        isFocused
      }));
    }
  }, {
    key: "renderMenu",
    value: function renderMenu() {
      var _this4 = this;
      var _this$getComponents7 = this.getComponents(), Group3 = _this$getComponents7.Group, GroupHeading3 = _this$getComponents7.GroupHeading, Menu3 = _this$getComponents7.Menu, MenuList3 = _this$getComponents7.MenuList, MenuPortal3 = _this$getComponents7.MenuPortal, LoadingMessage3 = _this$getComponents7.LoadingMessage, NoOptionsMessage3 = _this$getComponents7.NoOptionsMessage, Option5 = _this$getComponents7.Option;
      var commonProps = this.commonProps;
      var focusedOption = this.state.focusedOption;
      var _this$props12 = this.props, captureMenuScroll = _this$props12.captureMenuScroll, inputValue = _this$props12.inputValue, isLoading = _this$props12.isLoading, loadingMessage2 = _this$props12.loadingMessage, minMenuHeight = _this$props12.minMenuHeight, maxMenuHeight = _this$props12.maxMenuHeight, menuIsOpen = _this$props12.menuIsOpen, menuPlacement = _this$props12.menuPlacement, menuPosition = _this$props12.menuPosition, menuPortalTarget = _this$props12.menuPortalTarget, menuShouldBlockScroll = _this$props12.menuShouldBlockScroll, menuShouldScrollIntoView = _this$props12.menuShouldScrollIntoView, noOptionsMessage2 = _this$props12.noOptionsMessage, onMenuScrollToTop = _this$props12.onMenuScrollToTop, onMenuScrollToBottom = _this$props12.onMenuScrollToBottom;
      if (!menuIsOpen) return null;
      var render3 = function render4(props, id2) {
        var type = props.type, data = props.data, isDisabled = props.isDisabled, isSelected = props.isSelected, label = props.label, value = props.value;
        var isFocused = focusedOption === data;
        var onHover = isDisabled ? void 0 : function() {
          return _this4.onOptionHover(data);
        };
        var onSelect = isDisabled ? void 0 : function() {
          return _this4.selectOption(data);
        };
        var optionId = "".concat(_this4.getElementId("option"), "-").concat(id2);
        var innerProps = {
          id: optionId,
          onClick: onSelect,
          onMouseMove: onHover,
          onMouseOver: onHover,
          tabIndex: -1,
          role: "option",
          "aria-selected": _this4.isAppleDevice ? void 0 : isSelected
          // is not supported on Apple devices
        };
        return React53.createElement(Option5, _extends({}, commonProps, {
          innerProps,
          data,
          isDisabled,
          isSelected,
          key: optionId,
          label,
          type,
          value,
          isFocused,
          innerRef: isFocused ? _this4.getFocusedOptionRef : void 0
        }), _this4.formatOptionLabel(props.data, "menu"));
      };
      var menuUI;
      if (this.hasOptions()) {
        menuUI = this.getCategorizedOptions().map(function(item) {
          if (item.type === "group") {
            var _data = item.data, options2 = item.options, groupIndex = item.index;
            var groupId = "".concat(_this4.getElementId("group"), "-").concat(groupIndex);
            var headingId = "".concat(groupId, "-heading");
            return React53.createElement(Group3, _extends({}, commonProps, {
              key: groupId,
              data: _data,
              options: options2,
              Heading: GroupHeading3,
              headingProps: {
                id: headingId,
                data: item.data
              },
              label: _this4.formatGroupLabel(item.data)
            }), item.options.map(function(option) {
              return render3(option, "".concat(groupIndex, "-").concat(option.index));
            }));
          } else if (item.type === "option") {
            return render3(item, "".concat(item.index));
          }
        });
      } else if (isLoading) {
        var message = loadingMessage2({
          inputValue
        });
        if (message === null) return null;
        menuUI = React53.createElement(LoadingMessage3, commonProps, message);
      } else {
        var _message = noOptionsMessage2({
          inputValue
        });
        if (_message === null) return null;
        menuUI = React53.createElement(NoOptionsMessage3, commonProps, _message);
      }
      var menuPlacementProps = {
        minMenuHeight,
        maxMenuHeight,
        menuPlacement,
        menuPosition,
        menuShouldScrollIntoView
      };
      var menuElement = React53.createElement(MenuPlacer, _extends({}, commonProps, menuPlacementProps), function(_ref4) {
        var ref = _ref4.ref, _ref4$placerProps = _ref4.placerProps, placement = _ref4$placerProps.placement, maxHeight = _ref4$placerProps.maxHeight;
        return React53.createElement(Menu3, _extends({}, commonProps, menuPlacementProps, {
          innerRef: ref,
          innerProps: {
            onMouseDown: _this4.onMenuMouseDown,
            onMouseMove: _this4.onMenuMouseMove
          },
          isLoading,
          placement
        }), React53.createElement(ScrollManager, {
          captureEnabled: captureMenuScroll,
          onTopArrive: onMenuScrollToTop,
          onBottomArrive: onMenuScrollToBottom,
          lockEnabled: menuShouldBlockScroll
        }, function(scrollTargetRef) {
          return React53.createElement(MenuList3, _extends({}, commonProps, {
            innerRef: function innerRef(instance) {
              _this4.getMenuListRef(instance);
              scrollTargetRef(instance);
            },
            innerProps: {
              role: "listbox",
              "aria-multiselectable": commonProps.isMulti,
              id: _this4.getElementId("listbox")
            },
            isLoading,
            maxHeight,
            focusedOption
          }), menuUI);
        }));
      });
      return menuPortalTarget || menuPosition === "fixed" ? React53.createElement(MenuPortal3, _extends({}, commonProps, {
        appendTo: menuPortalTarget,
        controlElement: this.controlRef,
        menuPlacement,
        menuPosition
      }), menuElement) : menuElement;
    }
  }, {
    key: "renderFormField",
    value: function renderFormField() {
      var _this5 = this;
      var _this$props13 = this.props, delimiter2 = _this$props13.delimiter, isDisabled = _this$props13.isDisabled, isMulti = _this$props13.isMulti, name = _this$props13.name, required = _this$props13.required;
      var selectValue = this.state.selectValue;
      if (required && !this.hasValue() && !isDisabled) {
        return React53.createElement(RequiredInput$1, {
          name,
          onFocus: this.onValueInputFocus
        });
      }
      if (!name || isDisabled) return;
      if (isMulti) {
        if (delimiter2) {
          var value = selectValue.map(function(opt) {
            return _this5.getOptionValue(opt);
          }).join(delimiter2);
          return React53.createElement("input", {
            name,
            type: "hidden",
            value
          });
        } else {
          var input = selectValue.length > 0 ? selectValue.map(function(opt, i) {
            return React53.createElement("input", {
              key: "i-".concat(i),
              name,
              type: "hidden",
              value: _this5.getOptionValue(opt)
            });
          }) : React53.createElement("input", {
            name,
            type: "hidden",
            value: ""
          });
          return React53.createElement("div", null, input);
        }
      } else {
        var _value = selectValue[0] ? this.getOptionValue(selectValue[0]) : "";
        return React53.createElement("input", {
          name,
          type: "hidden",
          value: _value
        });
      }
    }
  }, {
    key: "renderLiveRegion",
    value: function renderLiveRegion() {
      var commonProps = this.commonProps;
      var _this$state6 = this.state, ariaSelection = _this$state6.ariaSelection, focusedOption = _this$state6.focusedOption, focusedValue = _this$state6.focusedValue, isFocused = _this$state6.isFocused, selectValue = _this$state6.selectValue;
      var focusableOptions = this.getFocusableOptions();
      return React53.createElement(LiveRegion$1, _extends({}, commonProps, {
        id: this.getElementId("live-region"),
        ariaSelection,
        focusedOption,
        focusedValue,
        isFocused,
        selectValue,
        focusableOptions,
        isAppleDevice: this.isAppleDevice
      }));
    }
  }, {
    key: "render",
    value: function render3() {
      var _this$getComponents8 = this.getComponents(), Control3 = _this$getComponents8.Control, IndicatorsContainer3 = _this$getComponents8.IndicatorsContainer, SelectContainer3 = _this$getComponents8.SelectContainer, ValueContainer3 = _this$getComponents8.ValueContainer;
      var _this$props14 = this.props, className = _this$props14.className, id2 = _this$props14.id, isDisabled = _this$props14.isDisabled, menuIsOpen = _this$props14.menuIsOpen;
      var isFocused = this.state.isFocused;
      var commonProps = this.commonProps = this.getCommonProps();
      return React53.createElement(SelectContainer3, _extends({}, commonProps, {
        className,
        innerProps: {
          id: id2,
          onKeyDown: this.onKeyDown
        },
        isDisabled,
        isFocused
      }), this.renderLiveRegion(), React53.createElement(Control3, _extends({}, commonProps, {
        innerRef: this.getControlRef,
        innerProps: {
          onMouseDown: this.onControlMouseDown,
          onTouchEnd: this.onControlTouchEnd
        },
        isDisabled,
        isFocused,
        menuIsOpen
      }), React53.createElement(ValueContainer3, _extends({}, commonProps, {
        isDisabled
      }), this.renderPlaceholderOrValue(), this.renderInput()), React53.createElement(IndicatorsContainer3, _extends({}, commonProps, {
        isDisabled
      }), this.renderClearIndicator(), this.renderLoadingIndicator(), this.renderIndicatorSeparator(), this.renderDropdownIndicator())), this.renderMenu(), this.renderFormField());
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state2) {
      var prevProps = state2.prevProps, clearFocusValueOnUpdate = state2.clearFocusValueOnUpdate, inputIsHiddenAfterUpdate = state2.inputIsHiddenAfterUpdate, ariaSelection = state2.ariaSelection, isFocused = state2.isFocused, prevWasFocused = state2.prevWasFocused, instancePrefix = state2.instancePrefix;
      var options2 = props.options, value = props.value, menuIsOpen = props.menuIsOpen, inputValue = props.inputValue, isMulti = props.isMulti;
      var selectValue = cleanValue(value);
      var newMenuOptionsState = {};
      if (prevProps && (value !== prevProps.value || options2 !== prevProps.options || menuIsOpen !== prevProps.menuIsOpen || inputValue !== prevProps.inputValue)) {
        var focusableOptions = menuIsOpen ? buildFocusableOptions(props, selectValue) : [];
        var focusableOptionsWithIds = menuIsOpen ? buildFocusableOptionsWithIds(buildCategorizedOptions(props, selectValue), "".concat(instancePrefix, "-option")) : [];
        var focusedValue = clearFocusValueOnUpdate ? getNextFocusedValue(state2, selectValue) : null;
        var focusedOption = getNextFocusedOption(state2, focusableOptions);
        var focusedOptionId = getFocusedOptionId(focusableOptionsWithIds, focusedOption);
        newMenuOptionsState = {
          selectValue,
          focusedOption,
          focusedOptionId,
          focusableOptionsWithIds,
          focusedValue,
          clearFocusValueOnUpdate: false
        };
      }
      var newInputIsHiddenState = inputIsHiddenAfterUpdate != null && props !== prevProps ? {
        inputIsHidden: inputIsHiddenAfterUpdate,
        inputIsHiddenAfterUpdate: void 0
      } : {};
      var newAriaSelection = ariaSelection;
      var hasKeptFocus = isFocused && prevWasFocused;
      if (isFocused && !hasKeptFocus) {
        newAriaSelection = {
          value: valueTernary(isMulti, selectValue, selectValue[0] || null),
          options: selectValue,
          action: "initial-input-focus"
        };
        hasKeptFocus = !prevWasFocused;
      }
      if ((ariaSelection === null || ariaSelection === void 0 ? void 0 : ariaSelection.action) === "initial-input-focus") {
        newAriaSelection = null;
      }
      return _objectSpread2(_objectSpread2(_objectSpread2({}, newMenuOptionsState), newInputIsHiddenState), {}, {
        prevProps: props,
        ariaSelection: newAriaSelection,
        prevWasFocused: hasKeptFocus
      });
    }
  }]);
  return Select2;
}(import_react46.Component);
Select.defaultProps = defaultProps2;

// node_modules/react-select/dist/react-select.esm.js
var import_react_dom2 = __toESM(require_react_dom());
var StateManagedSelect = (0, import_react48.forwardRef)(function(props, ref) {
  var baseSelectProps = useStateManager(props);
  return React54.createElement(Select, _extends({
    ref
  }, baseSelectProps));
});

// node_modules/@here/hds-react-components/Select/HDSSelect.js
var HDSSelectStyles = {
  container: (styles58) => ({
    ...styles58,
    font: "var(--hds-body-small-font)",
    letterSpacing: "var(--hds-body-small-letter-spacing)",
    background: "var(--hds-background-secondary)",
    borderRadius: "var(--hds-border-radius)"
  }),
  control: (styles58, state2) => {
    let border = "var(--hds-border-width) solid var(--hds-foreground-tertiary)";
    border = state2.isFocused ? "var(--hds-border-width) solid transparent" : border;
    border = state2.isDisabled ? "var(--hds-border-width) solid var(--hds-foreground-tertiary-disabled)" : border;
    const boxShadow = state2.isFocused ? "0 0 0 2px var(--hds-object-focused)" : "none";
    return {
      ...styles58,
      background: "var(--hds-background--primary)",
      border,
      borderRadius: "var(--hds-border-radius)",
      boxShadow,
      paddingRight: "var(--hds-spacing-2)"
    };
  },
  input: (styles58) => ({
    ...styles58,
    margin: "var(--hds-spacing-0) var(--hds-spacing-0) var(--hds-spacing-0) var(--hds-spacing-0)",
    padding: "var(--hds-spacing-0)",
    color: "var(--hds-foreground-primary)"
  }),
  placeholder: (styles58) => ({
    ...styles58,
    margin: "var(--hds-spacing-0)",
    color: "var(--hds-foreground-tertiary)"
  }),
  noOptionsMessage: (styles58) => ({
    ...styles58,
    color: "var(--hds-foreground-inactive)",
    textAlign: "left"
  }),
  singleValue: (styles58, state2) => ({
    ...styles58,
    margin: "var(--hds-spacing-0)",
    color: state2.isDisabled ? "var(--hds-foreground-primary-disabled)" : "var(--hds-foreground-primary)"
  }),
  indicatorsContainer: (styles58) => ({
    ...styles58,
    alignItems: "flex-start",
    alignSelf: "flex-start",
    height: "40px"
  }),
  indicatorSeparator: () => ({
    display: "none"
  }),
  menu: (styles58) => ({
    ...styles58,
    background: "var(--hds-background-secondary)",
    border: "none",
    boxShadow: "none",
    borderRadius: "var(--hds-border-radius)",
    filter: "var(--hds-overlay)",
    margin: "var(--hds-spacing-3) var(--hds-spacing-0)"
  }),
  menuList: (styles58) => ({
    ...styles58,
    padding: "var(--hds-spacing-2) var(--hds-spacing-0)"
  }),
  option: (styles58) => ({
    ...styles58,
    padding: "var(--hds-spacing-0)"
  }),
  valueContainer: (styles58) => ({
    ...styles58,
    gap: "var(--hds-spacing-2)",
    padding: "var(--hds-spacing-2) var(--hds-spacing-2) var(--hds-spacing-2) var(--hds-spacing-4)"
  }),
  multiValue: (styles58) => ({
    ...styles58,
    background: "none",
    color: "var(--hds-foreground-primary)",
    position: "relative",
    margin: "var(--hds-spacing-0)",
    "& > div": {
      padding: "var(--hds-spacing-0)"
    }
  }),
  multiValueRemove: (styles58) => ({
    ...styles58,
    position: "absolute",
    right: "var(--hds-spacing-2)",
    opacity: "0",
    top: "var(--hds-spacing-1)",
    width: "20px",
    height: "18px",
    cursor: "pointer"
  }),
  clearIndicator: (styles58, state2) => ({
    ...styles58,
    cursor: "pointer",
    alignSelf: "center",
    "--hds-icon-color": state2.isDisabled ? "var(--hds-foreground-secondary-disabled)" : "var(--hds-foreground-secondary)"
  }),
  dropdownIndicator: (styles58, state2) => ({
    ...styles58,
    alignSelf: "center",
    "--hds-icon-color": state2.isDisabled ? "var(--hds-foreground-secondary-disabled)" : "var(--hds-foreground-secondary)"
  })
};
var Base = {
  container: (styles58) => ({
    ...styles58,
    font: "var(--hds-body-small-font)",
    letterSpacing: "var(--hds-body-small-letter-spacing)",
    background: "var(--hds-background-secondary)",
    borderRadius: "var(--hds-border-radius)"
  }),
  control: (styles58, state2) => {
    let border = "var(--hds-border-width) solid var(--hds-foreground-tertiary)";
    border = state2.isFocused ? "var(--hds-border-width) solid transparent" : border;
    border = state2.isDisabled ? "var(--hds-border-width) solid var(--hds-foreground-tertiary-disabled)" : border;
    const boxShadow = state2.isFocused ? "0 0 0 2px var(--hds-object-focused)" : "none";
    return {
      ...styles58,
      background: "var(--hds-background--primary)",
      border,
      borderRadius: "var(--hds-border-radius)",
      boxShadow,
      paddingRight: "var(--hds-spacing-3)",
      minHeight: 40
    };
  },
  input: (styles58) => ({
    ...styles58,
    margin: "var(--hds-spacing-0)",
    padding: "var(--hds-spacing-0)",
    color: "var(--hds-foreground-primary)"
  }),
  placeholder: (styles58) => ({
    ...styles58,
    margin: "var(--hds-spacing-0)",
    color: "var(--hds-foreground-tertiary)"
  }),
  noOptionsMessage: (styles58) => ({
    ...styles58,
    color: "var(--hds-foreground-inactive)",
    textAlign: "left"
  }),
  singleValue: (styles58, state2) => ({
    ...styles58,
    margin: "var(--hds-spacing-0)",
    color: state2.isDisabled ? "var(--hds-foreground-primary-disabled)" : "var(--hds-foreground-primary)"
  }),
  indicatorsContainer: (styles58) => ({
    ...styles58,
    alignSelf: "auto"
  }),
  indicatorSeparator: () => ({
    display: "none"
  }),
  menu: (styles58) => ({
    ...styles58,
    background: "var(--hds-background-secondary)",
    border: "none",
    boxShadow: "none",
    borderRadius: "var(--hds-border-radius)",
    filter: "var(--hds-overlay)",
    margin: "var(--hds-spacing-3) var(--hds-spacing-0)"
  }),
  menuList: (styles58) => ({
    ...styles58,
    padding: "var(--hds-spacing-2) var(--hds-spacing-0)"
  }),
  option: (styles58) => ({
    ...styles58,
    padding: "var(--hds-spacing-0)"
  }),
  valueContainer: (styles58) => ({
    ...styles58,
    gap: "var(--hds-spacing-2)",
    padding: "calc(var(--hds-spacing-2) - 1px) var(--hds-spacing-0) calc(var(--hds-spacing-2) - 1px) var(--hds-spacing-4)"
  }),
  multiValue: (styles58) => ({
    ...styles58,
    background: "none",
    color: "var(--hds-foreground-primary)",
    position: "relative",
    margin: "var(--hds-spacing-0)",
    "& > div": {
      padding: "var(--hds-spacing-0)"
    }
  }),
  multiValueRemove: (styles58) => ({
    ...styles58,
    position: "absolute",
    right: "var(--hds-spacing-2)",
    opacity: "0",
    top: "var(--hds-spacing-1)",
    width: "20px",
    height: "18px",
    cursor: "pointer"
  }),
  clearIndicator: (styles58, state2) => ({
    ...styles58,
    cursor: "pointer",
    alignSelf: "center",
    "--hds-icon-color": state2.isDisabled ? "var(--hds-foreground-secondary-disabled)" : "var(--hds-foreground-secondary)",
    padding: "var(--hds-spacing-1)"
  }),
  dropdownIndicator: (styles58, state2) => ({
    ...styles58,
    alignSelf: "center",
    "--hds-icon-color": state2.isDisabled ? "var(--hds-foreground-secondary-disabled)" : "var(--hds-foreground-secondary)",
    padding: "var(--hds-spacing-1)"
  })
};
var Small = {
  ...Base,
  control: (styles58, state2) => ({
    ...styles58,
    ...Base.control(styles58, state2),
    minHeight: 22
  }),
  indicatorsContainer: (styles58) => ({
    ...Base.indicatorsContainer(styles58),
    height: "24px"
  }),
  valueContainer: (styles58) => ({
    ...Base.valueContainer(styles58),
    padding: "var(--hds-spacing-0) var(--hds-spacing-0) var(--hds-spacing-0) var(--hds-spacing-2)"
  }),
  dropdownIndicator: (styles58, state2) => ({
    ...Base.dropdownIndicator(styles58, state2),
    padding: 0
  })
};
var Large = {
  ...Base
};
var Medium = {
  ...Base,
  control: (styles58, state2) => ({
    ...styles58,
    ...Base.control(styles58, state2),
    minHeight: 30
  }),
  valueContainer: (styles58) => ({
    ...Base.valueContainer(styles58),
    padding: "calc(var(--hds-spacing-0) - 0px) var(--hds-spacing-0) calc(var(--hds-spacing-0) - 0px) var(--hds-spacing-4)"
  })
};
var SubtleControl = (styles58, state2) => {
  const boxShadow = state2.isFocused ? "0 0 0 2px var(--hds-object-focused)" : "none";
  return {
    ...styles58,
    background: "transparent",
    border: "var(--hds-border-width) solid transparent !important",
    borderRadius: "var(--hds-border-radius)",
    boxShadow,
    paddingRight: "var(--hds-spacing-3)",
    minHeight: 40
  };
};
var SmallSublte = {
  ...Small,
  control: (styles58, state2) => ({
    ...styles58,
    ...SubtleControl(styles58, state2),
    minHeight: 30
  })
};
var MediumSublte = {
  ...Medium,
  control: (styles58, state2) => ({
    ...styles58,
    ...SubtleControl(styles58, state2),
    minHeight: 38
  })
};
var LargeSublte = {
  ...Large,
  control: (styles58, state2) => ({
    ...styles58,
    ...SubtleControl(styles58, state2),
    minHeight: 46
  })
};
var HDSSelectStyleGroups = {
  default: {
    small: Small,
    medium: Medium,
    large: Large
  },
  subtle: {
    small: SmallSublte,
    medium: MediumSublte,
    large: LargeSublte
  }
};
var HDSSelectThemes = (theme) => ({
  ...theme,
  borderRadius: "0",
  colors: {
    ...theme.colors,
    primary25: "var(--hds-background-hover)",
    primary50: "",
    primary: ""
  }
});
var HDSSelectMultiOption = (props) => import_react50.default.createElement(
  components.Option,
  { ...props },
  import_react50.default.createElement(HDSOption_default, { variant: "multiple", selected: props.isSelected, disabled: props.isDisabled }, props.label)
);
var HDSSelectSingleOption = (props) => import_react50.default.createElement(
  components.Option,
  { ...props },
  import_react50.default.createElement(HDSOption_default, { selected: props.isSelected, disabled: props.isDisabled }, props.label)
);
var HDSSelectChips = (props) => {
  const { data } = props;
  return import_react50.default.createElement(
    components.MultiValue,
    { ...props },
    import_react50.default.createElement(HDSChip_default, { size: "small", removable: true, disabled: props.disabled || data.disabled }, data.label)
  );
};
var HDSSelectDropdownIndicator = (props) => {
  const { selectProps: { menuIsOpen } } = props;
  return import_react50.default.createElement(components.DropdownIndicator, { ...props }, menuIsOpen ? import_react50.default.createElement(HDSIcon_default, { iconStyle: "solid", name: "chevron-up", size: "16px" }) : import_react50.default.createElement(HDSIcon_default, { iconStyle: "solid", name: "chevron-down", size: "16px" }));
};
var HDSSelectClearIndicator = (props) => import_react50.default.createElement(
  components.ClearIndicator,
  { ...props },
  import_react50.default.createElement(HDSIcon_default, { iconStyle: "solid", name: "clear", size: "16px" })
);

// node_modules/@here/hds-react-components/Wizard/HDSWizard.js
var React56 = __toESM(require_react(), 1);

// node_modules/lit-html/development/directives/unsafe-html.js
var HTML_RESULT2 = 1;
var UnsafeHTMLDirective = class extends Directive {
  constructor(partInfo) {
    super(partInfo);
    this._value = nothing;
    if (partInfo.type !== PartType.CHILD) {
      throw new Error(`${this.constructor.directiveName}() can only be used in child bindings`);
    }
  }
  render(value) {
    if (value === nothing || value == null) {
      this._templateResult = void 0;
      return this._value = value;
    }
    if (value === noChange) {
      return value;
    }
    if (typeof value != "string") {
      throw new Error(`${this.constructor.directiveName}() called with a non-string value`);
    }
    if (value === this._value) {
      return this._templateResult;
    }
    this._value = value;
    const strings = [value];
    strings.raw = strings;
    return this._templateResult = {
      // Cast to a known set of integers that satisfy ResultType so that we
      // don't have to export ResultType and possibly encourage this pattern.
      // This property needs to remain unminified.
      ["_$litType$"]: this.constructor.resultType,
      strings,
      values: []
    };
  }
};
UnsafeHTMLDirective.directiveName = "unsafeHTML";
UnsafeHTMLDirective.resultType = HTML_RESULT2;
var unsafeHTML = directive(UnsafeHTMLDirective);

// node_modules/@here/hds-wizard/build/hds-wizard.css.js
var styles53 = css`
:host(:focus){outline:0}.-hds-wizard-wrapper{background:var(--hds-background-object);color:var(--hds-foreground-primary);font:var(--hds-body-font);letter-spacing:var(--hds-body-letter-spacing);-webkit-text-decoration:var(--hds-body-text-decoration,inherit);text-decoration:var(--hds-body-text-decoration,inherit)}.-hds-wizard-wrapper.disabled{background:var(--hds-background-object);color:var(--hds-foreground-inactive)}.stepper-wrapper{background-color:var(--hds-background-object);box-sizing:border-box;display:flex;flex-direction:column;grid-column:1/3;padding:var(--hds-spacing-7)}.stepper{max-height:var(--hds-wizard-stepper-max-height);overflow-y:auto}.content-wrapper{display:flex;flex-direction:column;grid-column:3/-1;justify-content:space-between}.hds-modal-header{box-shadow:unset;flex-shrink:0;padding:var(--hds-spacing-7) var(--hds-spacing-8) var(--hds-spacing-6) var(--hds-spacing-8)}.hds-modal-header .title{font:var(--hds-headline-03-font);letter-spacing:var(--hds-headline-03-letter-spacing);-webkit-text-decoration:var(--hds-headline-03-text-decoration,inherit);text-decoration:var(--hds-headline-03-text-decoration,inherit)}.hds-modal-header.with-close{padding-top:var(--hds-spacing-10)}.hds-modal-footer{flex-shrink:0}.hds-modal-body,.hds-modal-footer{padding:var(--hds-spacing-6) var(--hds-spacing-8)}.hds-modal-body{border-top:0}.hds-modal-footer--default{justify-content:space-between}.heading-counter{color:var(--hds-foreground-tertiary);font:var(--hds-caption-font);letter-spacing:var(--hds-caption-letter-spacing);padding-bottom:var(--hds-spacing-2);-webkit-text-decoration:var(--hds-caption-text-decoration,inherit);text-decoration:var(--hds-caption-text-decoration,inherit)}.stepper-heading{font:var(--hds-headline-02-font);letter-spacing:var(--hds-headline-02-letter-spacing);padding-bottom:var(--hds-spacing-7);-webkit-text-decoration:var(--hds-headline-02-text-decoration,inherit);text-decoration:var(--hds-headline-02-text-decoration,inherit)}.stepper-footer{bottom:var(--hds-spacing-0);margin-top:auto;padding-top:var(--hds-spacing-7);position:relative}@media (max-width:600px){:host .hds-wizard-content-wrapper{display:grid;gap:var(--hds-grid-row-gap-mobile) var(--hds-grid-column-gap-mobile);grid-template-columns:repeat(var(--hds-grid-columns-mobile),minmax(10px,1fr))}.wrapper{grid-column:1/-1}.wrapper .stepper-wrapper{grid-column:1/3}.wrapper .content-wrapper{grid-column:3/-1}}@media (min-width:601px) and (max-width:1024px){.wrapper .stepper-wrapper{grid-column:1/3}.wrapper .content-wrapper{grid-column:3/-1}.hds-wizard-content-wrapper{grid-column:1/7}.-hds-wizard-wrapper{padding:var(--hds-spacing-4);width:calc(100% - var(--hds-spacing-4)*2)}}@media (min-width:601px){:host .hds-wizard-content-wrapper{display:grid;gap:var(--hds-grid-row-gap-tablet) var(--hds-grid-column-gap-tablet);grid-template-columns:repeat(var(--hds-grid-columns-tablet),minmax(10px,1fr))}}@media (min-width:1025px){.wrapper .stepper-wrapper{grid-column:1/3}.wrapper .content-wrapper{grid-column:3/-1}}@media (min-width:1025px) and (max-width:1440px){.wrapper{grid-column:var(--hds-modal-desktop-small-grid-column)}}@media (min-width:1441px) and (max-width:1680px){.wrapper{grid-column:var(--hds-modal-desktop-medium-grid-column)}}@media (min-width:1681px){.wrapper{grid-column:var(--hds-modal-desktop-large-grid-column)}}
`;

// node_modules/@here/hds-wizard/build/hds-wizard.js
var Wizard = class Wizard2 extends Modal {
  constructor() {
    super(...arguments);
    this.stepperHeading = "";
    this.confirmText = "Next";
    this.cancelText = "Back";
    this.stepText = "Step {{ activeStep }} of {{ totalSteps }}";
    this.debouncedResize = debounce(async () => {
      await super.changeBodyMaxHeight();
      await this.changeStepperMaxHeight();
    }, 150);
  }
  static get styles() {
    return [super.styles, styles53];
  }
  get stepper() {
    var _a6;
    let stepper;
    const nodes = (_a6 = this.slotNodes(this.stepperSlot)[0]) == null ? void 0 : _a6.childNodes;
    if (nodes) {
      stepper = [...nodes].find((element) => element instanceof Stepper);
    }
    return stepper;
  }
  async updated() {
    await super.updated();
    if (this.stepper) {
      this.stepper.orientation = "vertical";
    }
    await super.changeBodyMaxHeight();
    await this.changeStepperMaxHeight();
  }
  render() {
    const classes = {
      dialog: true
    };
    return html`
      <div class="-hds-wizard-wrapper -hds-modal-wrapper hds-grid-container ${classMap(classes)}">
        <div
          class="hds-wizard-content-wrapper wrapper hds-grid-container"
          role="dialog"
          aria-modal="true"
          aria-labelledby="title"
          aria-describedby="content"
        >
          <div class="stepper-wrapper">
            ${this.renderStepperHeading()}
            <div class="stepper">
              <slot name="stepper" @slotchange="${this.onSlotChange}"></slot>
            </div>

            ${this.renderStepperFooter()}
          </div>
          <div class="content-wrapper">
            ${this.renderContentHeader()}
            <div
              class="hds-modal-body"
              id="content"
              @scroll="${() => this.dispatchEvent(new CustomEvent("scroll", { composed: true, bubbles: true }))}"
            >
              <slot name="body"></slot>
              <slot>
                <div>${this.message}</div>
              </slot>
            </div>
            ${this.renderContentFooter()} ${this.renderCloseButton()}
          </div>
        </div>
        <hds-overlay @click="${this.handleClickOverlay}"></hds-overlay>
      </div>
    `;
  }
  async setTabbableElements() {
    await this.updateComplete;
    super.setTabbableElements();
    if (this.stepper && this.stepper.nonLinear) {
      const steps = [...this.stepper.childNodes].filter((node2) => node2 instanceof Step);
      this.tabbableElements.unshift(...steps);
    }
    this.removeHandleFocusEvents();
    this.setTabKeydownListeners();
  }
  renderStepText() {
    var _a6, _b5;
    return this.stepText.replace(/{{\s*activeStep\s*}}/, `<span id="current-step">${(((_a6 = this.stepper) == null ? void 0 : _a6.activeStep) || 0) + 1}</span>`).replace(/{{\s*totalSteps\s*}}/, `${(_b5 = this.stepper) == null ? void 0 : _b5.stepsLength}`);
  }
  /**
   * Set calculated max height for stepper as custom css variable
   */
  async changeStepperMaxHeight() {
    await this.updateComplete;
    const header = this.shadowRoot.querySelector("#stepper-heading");
    const footer = this.shadowRoot.querySelector("#stepper-footer");
    const documentHeight = this.shadowRoot.ownerDocument.body.offsetHeight;
    const headerHeight = (header == null ? void 0 : header.offsetHeight) || 0;
    const footerHeight = (footer == null ? void 0 : footer.offsetHeight) || 0;
    const maxHeight = `${documentHeight - (headerHeight + footerHeight + this.HDS_SPACING_10 * 2)}px`;
    this.shadowRoot.ownerDocument.body.style.setProperty("--hds-wizard-stepper-max-height", maxHeight);
  }
  renderContentHeader() {
    if (this.hideHeader) {
      return nothing;
    }
    const classes = {
      "hds-modal-header": true
    };
    const titleClasses = {
      title: true
    };
    if (!this.headerSlotted && !this.headingMessage) {
      return html` <slot name="header"></slot>`;
    }
    return html`
      <div id="modal-header" class="${classMap(classes)}">
        <div id="title" class="${classMap(titleClasses)}">
          <slot name="header">
            <div class="heading-counter">${unsafeHTML(this.renderStepText())}</div>
            ${this.headingMessage}
          </slot>
        </div>
      </div>
    `;
  }
  onSlotChange() {
    const stepsNode = this.slotNodes(this.stepperSlot)[0];
    const stepper = [...stepsNode.childNodes].filter((node2) => node2 instanceof Stepper)[0];
    if (!stepper) {
      throw new Error("Stepper should be provided");
    }
  }
  renderStepperHeading() {
    if (this.stepperHeading) {
      return html` <div id="stepper-heading" class="stepper-heading">${this.stepperHeading}</div>`;
    }
    return void 0;
  }
  renderStepperFooter() {
    return html` <div id="stepper-footer" class="stepper-footer">
      <slot name="stepper-footer"></slot>
    </div>`;
  }
  renderContentFooter() {
    if (this.hideFooter) {
      return void 0;
    }
    return html`
      <div id="modal-footer" class="hds-modal-footer">
        <slot name="footer">${this.renderFooterButtons()}</slot>
      </div>
    `;
  }
  renderFooterButtons() {
    const confirm = this.hideConfirm ? void 0 : this.renderDefaultFooterButton(this.confirmVariant, this.confirmText, "confirm");
    const cancel = this.hideCancel ? void 0 : this.renderDefaultFooterButton("secondary", this.cancelText, "cancel");
    return html` <div class="hds-modal-footer--default">${cancel}${confirm}</div>`;
  }
  renderDefaultFooterButton(variant, text, name) {
    return html` <hds-button
      class="default-button ${name}"
      variant="${variant}"
      width="100%"
      @click="${() => this.defaultButtonClick(name)}"
      aria-label="${text}"
      size="small"
      >${text}
    </hds-button>`;
  }
  async defaultButtonClick(name) {
    await this.updateComplete;
    this.dispatchEvent(new CustomEvent("action", {
      detail: {
        from: name
      }
    }));
  }
};
__decorate([
  property({ type: String, reflect: true, attribute: "stepper-heading" })
], Wizard.prototype, "stepperHeading", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "confirm-text" })
], Wizard.prototype, "confirmText", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "cancel-text" })
], Wizard.prototype, "cancelText", void 0);
__decorate([
  property({
    type: String,
    reflect: true,
    attribute: "step-text"
  })
], Wizard.prototype, "stepText", void 0);
__decorate([
  query('slot[name="stepper"]')
], Wizard.prototype, "stepperSlot", void 0);
Wizard = __decorate([
  customElement("hds-wizard")
], Wizard);

// node_modules/@here/hds-react-components/Wizard/HDSWizard.js
var import_react51 = __toESM(require_react(), 1);
new Wizard();
var HDSWizard = React56.forwardRef((props, ref) => {
  const { header, body, footer, stepper, stepperFooter, onClose, onConfirm, onCancel, onStepChange, onChange: onChange2, className, hideCloseBtn, disableCloseOnOverlayClick, disableCloseOnEscape, closeAriaLabel, headingMessage, message, hideHeader, hideFooter, confirmVariant, hideConfirm, hideCancel, confirmText, cancelText, stepText, stepperHeading, children, ...rest } = props;
  const innerRef = (0, import_react51.useRef)(null);
  (0, import_react51.useImperativeHandle)(ref, () => innerRef.current);
  const _handleClose = (e) => {
    if (e.target !== innerRef.current)
      return;
    onClose && onClose(e.detail);
    onChange2 && onChange2(e.detail);
  };
  const _handleConfirm = () => onConfirm && onConfirm();
  const _handleCancel = () => onCancel && onCancel();
  const _handleAction = (e) => {
    if (e.target !== innerRef.current)
      return;
    if (e.detail.from === "confirm") {
      _handleConfirm();
    } else {
      _handleCancel();
    }
  };
  (0, import_react51.useEffect)(() => {
    if (innerRef.current) {
      (onClose || onChange2) && innerRef.current.addEventListener("change", _handleClose);
      (onConfirm || onCancel) && innerRef.current.addEventListener("action", _handleAction);
    }
    return () => {
      var _a6, _b5;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleClose);
      (_b5 = innerRef.current) == null ? void 0 : _b5.removeEventListener("action", _handleAction);
    };
  }, [onClose, onChange2, onConfirm, onCancel, onStepChange, innerRef]);
  const attributes = {};
  hideCloseBtn && (attributes["hide-close-btn"] = true);
  disableCloseOnOverlayClick && (attributes["disable-close-on-overlay-click"] = true);
  disableCloseOnEscape && (attributes["disable-close-on-escape"] = true);
  closeAriaLabel && (attributes["close-aria-label"] = closeAriaLabel);
  headingMessage && (attributes["heading-message"] = headingMessage);
  message && (attributes.message = message);
  hideHeader && (attributes["hide-header"] = hideHeader);
  hideFooter && (attributes["hide-footer"] = hideFooter);
  confirmVariant && (attributes["confirm-variant"] = confirmVariant);
  hideConfirm && (attributes["hide-confirm"] = hideConfirm);
  hideCancel && (attributes["hide-cancel"] = hideCancel);
  confirmText && (attributes["confirm-text"] = confirmText);
  cancelText && (attributes["cancel-text"] = cancelText);
  stepText && (attributes["step-text"] = stepText);
  stepperHeading && (attributes["stepper-heading"] = stepperHeading);
  return React56.createElement(
    "hds-wizard",
    { ref: innerRef, ...attributes, ...className && { class: className }, ...rest },
    header && React56.createElement("div", { slot: "header" }, header),
    body ? React56.createElement("div", { slot: "body" }, body) : children,
    footer && React56.createElement("div", { slot: "footer" }, footer),
    stepper && React56.createElement("div", { slot: "stepper" }, stepper),
    stepperFooter && React56.createElement("div", { slot: "stepper-footer" }, stepperFooter)
  );
});
var HDSWizard_default = HDSWizard;

// node_modules/@here/hds-react-components/Modal/HDSModal.js
var import_react52 = __toESM(require_react(), 1);
new Modal();
var HDSModal = import_react52.default.forwardRef((props, ref) => {
  const { header, body, footer, onClose, onChange: onChange2, onConfirm, onCancel, onThirdButton, icon, iconCategory, iconColor, hideCloseBtn, disableCloseOnOverlayClick, disableCloseOnEscape, closeAriaLabel, className, headingMessage, message, titleSize, hideHeader, hideFooter, confirmVariant, hideConfirm, hideCancel, hideThirdButton, confirmText, cancelText, thirdButtonText, children, ...rest } = props;
  const innerRef = (0, import_react52.useRef)(null);
  (0, import_react52.useImperativeHandle)(ref, () => innerRef.current);
  const _handleClose = (e) => {
    if (e.target !== innerRef.current)
      return;
    onClose && onClose(e.detail);
    onChange2 && onChange2(e.detail);
  };
  const _handleAction = (e) => {
    if (e.target !== innerRef.current)
      return;
    switch (e.detail.from) {
      case "thirdButton":
        onThirdButton && onThirdButton();
        break;
      case "confirm":
        onConfirm && onConfirm();
        break;
      case "cancel":
        onCancel && onCancel();
        break;
    }
  };
  (0, import_react52.useEffect)(() => {
    var _a6;
    if (innerRef.current) {
      (onClose || onChange2) && innerRef.current.addEventListener("change", _handleClose);
      (onConfirm || onCancel || onThirdButton) && ((_a6 = innerRef.current) == null ? void 0 : _a6.addEventListener("action", _handleAction));
    }
    return () => {
      var _a7, _b5;
      (_a7 = innerRef.current) == null ? void 0 : _a7.removeEventListener("change", _handleClose);
      (_b5 = innerRef.current) == null ? void 0 : _b5.removeEventListener("action", _handleAction);
    };
  }, [onClose, onChange2, onConfirm, onCancel, onThirdButton, innerRef]);
  const attributes = {};
  icon && (attributes.icon = icon);
  iconCategory && (attributes["icon-category"] = iconCategory);
  iconColor && (attributes["icon-color"] = iconColor);
  hideCloseBtn && (attributes["hide-close-btn"] = hideCloseBtn);
  disableCloseOnOverlayClick && (attributes["disable-close-on-overlay-click"] = disableCloseOnOverlayClick);
  disableCloseOnEscape && (attributes["disable-close-on-escape"] = disableCloseOnEscape);
  closeAriaLabel && (attributes["close-aria-label"] = closeAriaLabel);
  headingMessage && (attributes["heading-message"] = headingMessage);
  message && (attributes.message = message);
  titleSize && (attributes["title-size"] = titleSize);
  hideHeader && (attributes["hide-header"] = hideHeader);
  hideFooter && (attributes["hide-footer"] = hideFooter);
  confirmVariant && (attributes["confirm-variant"] = confirmVariant);
  hideConfirm && (attributes["hide-confirm"] = hideConfirm);
  hideCancel && (attributes["hide-cancel"] = hideCancel);
  hideThirdButton && (attributes["hide-third-button"] = hideThirdButton);
  confirmText && (attributes["confirm-text"] = confirmText);
  cancelText && (attributes["cancel-text"] = cancelText);
  thirdButtonText && (attributes["third-button-text"] = thirdButtonText);
  return import_react52.default.createElement(
    "hds-modal",
    { ...attributes, ref: innerRef, ...className && { class: className }, ...rest },
    header && import_react52.default.createElement("div", { slot: "header" }, header),
    body ? import_react52.default.createElement("div", { slot: "body" }, body) : children,
    footer && import_react52.default.createElement("div", { slot: "footer" }, footer)
  );
});
var HDSModal_default = HDSModal;

// node_modules/@here/hds-react-components/Modal/HDSModalContainer.js
var React58 = __toESM(require_react(), 1);
new ModalContainer();
var HDSModalContainer = React58.forwardRef((props, ref) => {
  const { children, className, ...rest } = props;
  return React58.createElement("hds-modal-container", { ...className && { class: className }, ref, ...rest }, children);
});
var HDSModalContainer_default = HDSModalContainer;

// node_modules/@here/hds-react-components/Modal/HDSModalContextProvider.js
var import_react53 = __toESM(require_react(), 1);
var HDSModalWrapper = (props) => {
  const { onClose } = props;
  const handleClose = (e) => {
    if (onClose) {
      onClose(e);
    }
  };
  return import_react53.default.createElement(HDSModal_default, { ...props, onClose: handleClose }, props.children);
};
var ModalContext = (0, import_react53.createContext)({});
var HDSModalContextProvider_default = ModalContext;
var modalCounter = 1;
var HDSModalContextProvider = ({ children }) => {
  const [modal, setModal] = (0, import_react53.useState)([]);
  const addModal = (0, import_react53.useCallback)((modalElement) => {
    modalElement.modalId = `hds-modal-${modalCounter++}`;
    setModal((currValue) => [...currValue, modalElement]);
  }, [setModal]);
  const contextValue = (0, import_react53.useMemo)(() => ({ addModal }), [addModal]);
  return import_react53.default.createElement(
    ModalContext.Provider,
    { value: contextValue },
    children,
    import_react53.default.createElement(HDSModalContainer_default, null, modal.map((modalEl) => import_react53.default.createElement(HDSModalWrapper, { ...modalEl, key: modalEl.modalId }, modalEl.body)))
  );
};

// node_modules/@here/hds-react-components/Modal/useModal.js
var import_react54 = __toESM(require_react(), 1);
function useModal() {
  const ctx = (0, import_react54.useContext)(HDSModalContextProvider_default);
  if (!ctx) {
    throw new Error("The `useModal` hook must be called from a descendent of `HDSModalContextProvider`");
  }
  return {
    addModal: ctx.addModal
  };
}

// node_modules/@here/hds-react-components/Toggle/HDSToggle.js
var import_react55 = __toESM(require_react(), 1);

// node_modules/@here/hds-toggle/build/hds-toggle.css.js
var styles54 = css`
:host(:focus){outline:0}.-hds-checkbox-wrapper>input:focus-visible+.checkbox-trigger{outline:var(--hds-object-focused) solid .125rem}.-hds-checkbox-wrapper.-hds-toggle-wrapper{padding-top:var(--hds-spacing-1px);position:relative}.-hds-checkbox-wrapper:after{background-color:var(--hds-foreground-tertiary);border-radius:50%;content:"";height:.875rem;left:.1875rem;position:absolute;top:.1875rem;transition:left .15s ease-in-out;width:.875rem}.-hds-checkbox-wrapper:active,.-hds-checkbox-wrapper:focus{outline:none}.-hds-checkbox-wrapper.hds-checkbox--size-medium .checkbox-trigger,.-hds-checkbox-wrapper.hds-checkbox--size-small .checkbox-trigger{height:1.25rem;width:2.5rem}.-hds-checkbox-wrapper .checkbox-trigger{border-radius:1.25rem;flex-shrink:0;justify-content:left;left:0;padding-left:var(--hds-spacing-1);position:absolute;top:0}.-hds-checkbox-wrapper .checkbox-content{margin-left:calc(2.5rem + var(--hds-spacing-2))}.-hds-checkbox-wrapper.-checked:after{background-color:var(--hds-ondarkcolor-primary);left:1.4375rem}.-hds-checkbox-wrapper.-checked.disabled{--hds-icon-color:var(--hds-foreground-tertiary-disabled)}.-hds-checkbox-wrapper.-checked.disabled .checkbox-trigger{background-color:unset;border-color:var(--hds-foreground-tertiary-disabled)}.-hds-checkbox-wrapper.disabled:after{background-color:var(--hds-foreground-tertiary-disabled)}.-hds-checkbox-wrapper.disabled ::slotted([slot=description]){color:var(--hds-foreground-secondary-disabled)}
`;

// node_modules/@here/hds-toggle/build/hds-toggle.js
var Toggle = class Toggle2 extends Checkbox {
  static get styles() {
    return [super.styles, styles54];
  }
  firstUpdated() {
    this.checkboxWrapper.classList.add("-hds-toggle-wrapper");
  }
};
__decorate([
  query(".-hds-checkbox-wrapper")
], Toggle.prototype, "checkboxWrapper", void 0);
Toggle = __decorate([
  customElement("hds-toggle")
], Toggle);

// node_modules/@here/hds-react-components/Toggle/HDSToggle.js
new Toggle();
var HDSToggle = import_react55.default.forwardRef(({ children, checked, value, disabled, id: id2, name, description, className, onCheck, onChange: onChange2, showRequired, required, ...rest }, ref) => {
  const innerRef = (0, import_react55.useRef)(null);
  (0, import_react55.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onCheck && onCheck(e.detail);
    onChange2 && onChange2(e);
  };
  (0, import_react55.useEffect)(() => {
    if (innerRef.current && (onCheck || onChange2)) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onCheck, onChange2, innerRef]);
  return import_react55.default.createElement(
    "hds-toggle",
    { ...checked && { checked: true }, ...disabled && { disabled: true }, ...showRequired && { "show-required": showRequired }, ...className && { class: className }, value, required, id: id2, name, ref: innerRef, ...rest },
    children,
    description && import_react55.default.createElement("span", { slot: "description" }, description)
  );
});
HDSToggle.defaultProps = {
  checked: false,
  disabled: false,
  required: false,
  id: "",
  name: "",
  ariaLabel: "",
  showRequired: false,
  autocomplete: ""
};
var HDSToggle_default = HDSToggle;

// node_modules/@here/hds-react-components/VerticalNavigation/HDSVerticalNavigation.js
var import_react56 = __toESM(require_react(), 1);
new VerticalNavigation();
var HDSVerticalNavigation = import_react56.default.forwardRef((props, ref) => {
  const { onSelect, onChange: onChange2, chevron, navMode, children, className, ...rest } = props;
  const innerRef = (0, import_react56.useRef)(null);
  (0, import_react56.useImperativeHandle)(ref, () => innerRef.current);
  const _handleSelected = (e) => {
    onSelect && onSelect(e.detail);
  };
  const _handleChanged = (e) => {
    onChange2 && onChange2(e.detail);
  };
  (0, import_react56.useEffect)(() => {
    if (onSelect && innerRef.current) {
      innerRef.current.addEventListener("select", _handleSelected);
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("select", _handleSelected);
    };
  }, [onSelect, innerRef]);
  (0, import_react56.useEffect)(() => {
    if (onChange2 && innerRef.current) {
      innerRef.current.addEventListener("change", _handleChanged);
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChanged);
    };
  }, [onChange2, innerRef]);
  return import_react56.default.createElement("hds-vertical-navigation", { ref: innerRef, ...className && { class: className }, ...chevron && { chevron }, ...navMode && { "nav-mode": navMode }, ...rest }, children);
});
HDSVerticalNavigation.defaultProps = {
  navMode: "expanded",
  chevron: false
};
var HDSVerticalNavigation_default = HDSVerticalNavigation;

// node_modules/@here/hds-react-components/VerticalNavigation/HDSVerticalNavigationItem.js
var import_react57 = __toESM(require_react(), 1);
new VerticalNavigationItem();
var HDSVerticalNavigationItem = import_react57.default.forwardRef((props, ref) => {
  const { selected, avatarUrl, avatarName, iconStyle, className, iconCategory, children, ...rest } = props;
  return import_react57.default.createElement("hds-vertical-navigation-item", { ref, ...className && { class: className }, ...selected && { selected }, ...avatarUrl && { "avatar-url": avatarUrl }, ...avatarName && { "avatar-name": avatarName }, ...iconCategory && { "icon-category": iconCategory }, ...iconStyle && { "icon-style": iconStyle }, ...rest }, children);
});
HDSVerticalNavigationItem.defaultProps = {
  avatarUrl: "",
  avatarName: "",
  selected: false
};
var HDSVerticalNavigationItem_default = HDSVerticalNavigationItem;

// node_modules/@here/hds-react-components/VerticalNavigation/HDSVerticalNavigationSubList.js
var import_react58 = __toESM(require_react(), 1);
new VerticalNavigationSubList();
var HDSVerticalNavigationSubList = import_react58.default.forwardRef((props, ref) => {
  const { children, className, ...rest } = props;
  return import_react58.default.createElement("hds-vertical-navigation-sub-list", { ref, ...className && { class: className }, ...rest }, children);
});
var HDSVerticalNavigationSubList_default = HDSVerticalNavigationSubList;

// node_modules/@here/hds-react-components/VerticalNavigation/HDSVerticalNavigationSubListItem.js
var React64 = __toESM(require_react(), 1);
new VerticalNavigationSubListItem();
var HDSVerticalNavigationSubListItem = React64.forwardRef((props, ref) => {
  const { children, className, ...rest } = props;
  return React64.createElement("hds-vertical-navigation-sub-list-item", { ...className && { class: className }, ref, ...rest }, children);
});
var HDSVerticalNavigationSubListItem_default = HDSVerticalNavigationSubListItem;

// node_modules/@here/hds-react-components/Launcher/HDSLauncher.js
var import_react59 = __toESM(require_react(), 1);

// node_modules/@here/hds-launcher/build/hds-launcher.css.js
var styles55 = css`
:host{display:block;filter:var(--hds-overlay);height:100%}:host(:focus){outline:0}:host([expanded]) .-hds-panel-wrapper,:host([expanded]) .-hds-panel-wrapper .content{height:100%}.-hds-launcher-wrapper{display:none;flex-direction:column;height:100%;outline:none}.-hds-launcher-wrapper.expanded{display:flex}.-hds-launcher-wrapper.hds-launcher-solid .hds-launcher--header{background:var(--hds-gradient)}.-hds-launcher-wrapper.hide-footer-divider hr{display:none}.-hds-launcher-wrapper.has-subtitle .hds-launcher--title,.-hds-launcher-wrapper.has-subtitle .hds-launcher--title::slotted(*){margin-bottom:var(--hds-spacing-1)}.-hds-launcher-wrapper .hds-launcher--header{background:var(--hds-background-object);padding:var(--hds-spacing-12) var(--hds-spacing-4) var(--hds-spacing-6) var(--hds-spacing-8)}.-hds-launcher-wrapper .hds-launcher--header .close-btn{--hds-icon-color:var(--hds-foreground-primary);cursor:pointer;position:absolute;right:var(--hds-spacing-4);top:var(--hds-spacing-2)}.-hds-launcher-wrapper .hds-launcher--title,.-hds-launcher-wrapper .hds-launcher--title::slotted(*){align-items:center;color:var(--hds-foreground-primary);display:flex;font:var(--hds-headline-03-font);letter-spacing:var(--hds-headline-03-letter-spacing);margin-bottom:var(--hds-spacing-0);-webkit-text-decoration:var(--hds-headline-03-text-decoration,inherit);text-decoration:var(--hds-headline-03-text-decoration,inherit)}.-hds-launcher-wrapper .hds-launcher--sub-title{color:var(--hds-foreground-secondary);font:var(--hds-caption-font);letter-spacing:var(--hds-caption-letter-spacing);-webkit-text-decoration:var(--hds-caption-text-decoration,inherit);text-decoration:var(--hds-caption-text-decoration,inherit)}.-hds-launcher-wrapper .hds-launcher--content{display:flex;flex:1;flex-direction:column;overflow:hidden;padding:0 var(--hds-spacing-6) var(--hds-spacing-6)}.-hds-launcher-wrapper .hds-launcher--main{flex:1;overflow:auto}.-hds-launcher-wrapper .hds-launcher--footer hr{background:var(--hds-foreground-divider);border:0;height:1px;margin:0 auto var(--hds-spacing-4)}
`;

// node_modules/@here/hds-launcher/build/hds-launcher.js
var Launcher = class Launcher2 extends Panel {
  constructor() {
    super(...arguments);
    this.launcherExpanded = false;
    this.launcherVariant = "subtle";
    this.hideFooterDivider = false;
    this.hasSubTitle = true;
    this._handleKeydown = (e) => {
      if (e.key === "Escape") {
        this.hide();
      }
    };
  }
  firstUpdated() {
    super.firstUpdated();
    const slotFooterContent = this.slotFooterEl.assignedNodes({ flatten: true }) || [];
    this.hideFooterDivider = !(slotFooterContent.length > 0);
    const slotSubtitleContent = this.slotSubtitleEl.assignedNodes({ flatten: true }) || [];
    this.hasSubTitle = slotSubtitleContent.length > 0;
  }
  show() {
    this.launcherExpanded = true;
  }
  hide() {
    this.launcherExpanded = false;
  }
  toggle() {
    this.launcherExpanded = !this.launcherExpanded;
    this.requestUpdate();
  }
  async updated(changedProperties) {
    if (changedProperties.has("launcherExpanded")) {
      if (!changedProperties.get("launcherExpanded")) {
        this.launcherWrapper.focus();
      }
      this.dispatchEvent(new CustomEvent("change", {
        detail: { expanded: this.launcherExpanded },
        bubbles: true
      }));
    }
  }
  render() {
    return super.renderPanel(this._renderLauncher());
  }
  _renderLauncher() {
    const classes = {
      expanded: this.launcherExpanded,
      "hide-footer-divider": this.hideFooterDivider,
      "has-subtitle": this.hasSubTitle
    };
    classes[`hds-launcher-${this.launcherVariant}`] = true;
    return html`
      <div
        class="-hds-launcher-wrapper ${classMap(classes)}"
        tabindex="0"
        @keydown="${this._handleKeydown}"
      >
        <div class="hds-launcher--header">
          <hds-button
            variant="secondary"
            class="close-btn"
            icon="cross"
            size="small"
            role="button"
            aria-label="Close"
            @click="${this.hide}"
          ></hds-button>
          <div class="hds-launcher--title">
            <slot name="title"></slot>
          </div>
          <div class="hds-launcher--sub-title">
            <slot name="subtitle"></slot>
          </div>
        </div>
        <div class="hds-launcher--content">
          <div class="hds-launcher--main">
            <slot name="main"></slot>
          </div>
          <div class="hds-launcher--footer">
            <hr />
            <slot name="footer"></slot>
          </div>
        </div>
      </div>
    `;
  }
};
Launcher.styles = styles55;
__decorate([
  property({ type: Boolean, reflect: true, attribute: "expanded" })
], Launcher.prototype, "launcherExpanded", void 0);
__decorate([
  property({ type: String, attribute: "variant" })
], Launcher.prototype, "launcherVariant", void 0);
__decorate([
  query(".-hds-launcher-wrapper")
], Launcher.prototype, "launcherWrapper", void 0);
__decorate([
  state()
], Launcher.prototype, "hideFooterDivider", void 0);
__decorate([
  state()
], Launcher.prototype, "hasSubTitle", void 0);
__decorate([
  query("slot[name=footer]")
], Launcher.prototype, "slotFooterEl", void 0);
__decorate([
  query("slot[name=subtitle]")
], Launcher.prototype, "slotSubtitleEl", void 0);
Launcher = __decorate([
  customElement("hds-launcher")
], Launcher);

// node_modules/@here/hds-react-components/Launcher/HDSLauncher.js
new Launcher();
var HDSLauncher = import_react59.default.forwardRef((props, ref) => {
  const { expanded, variant, title, className, subtitle, main: main2, footer, onClose, children, ...rest } = props;
  const innerRef = (0, import_react59.useRef)(null);
  (0, import_react59.useImperativeHandle)(ref, () => innerRef.current);
  const _handleClose = (e) => {
    if (e.target !== innerRef.current)
      return;
    if (e && e.detail && !e.detail.expanded) {
      onClose && onClose();
    }
  };
  (0, import_react59.useEffect)(() => {
    if (innerRef.current) {
      onClose && innerRef.current.addEventListener("change", _handleClose);
    }
    return () => {
      var _a6;
      return (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleClose);
    };
  }, [onClose, innerRef]);
  return import_react59.default.createElement(
    "hds-launcher",
    { variant, ...expanded && { expanded: true }, ...className && { class: className }, ref: innerRef, ...rest },
    title && import_react59.default.createElement("div", { slot: "title" }, title),
    subtitle && import_react59.default.createElement("div", { slot: "subtitle" }, subtitle),
    main2 && import_react59.default.createElement("div", { slot: "main" }, main2),
    footer && import_react59.default.createElement("div", { slot: "footer" }, footer),
    children
  );
});
HDSLauncher.defaultProps = {
  expanded: false,
  variant: "subtle",
  panelPosition: "left",
  panelInteraction: "none",
  partialSize: 0
};
var HDSLauncher_default = HDSLauncher;

// node_modules/@here/hds-react-components/Label/HDSLabel.js
var React66 = __toESM(require_react(), 1);
new Label();
var HDSLabel = React66.forwardRef((props, ref) => {
  const { children, primaryLabel, secondaryLabel, className, ...rest } = props;
  return React66.createElement(
    "hds-label",
    { ref, ...className && { class: className }, ...rest },
    primaryLabel ? React66.createElement("span", null, primaryLabel) : children,
    secondaryLabel && React66.createElement("span", { slot: "secondary" }, secondaryLabel)
  );
});
HDSLabel.defaultProps = {
  variant: "default",
  type: "default"
};
var HDSLabel_default = HDSLabel;

// node_modules/@here/hds-react-components/Pagination/HDSPagination.js
var import_react60 = __toESM(require_react(), 1);

// node_modules/@here/hds-pagination/build/hds-pagination.css.js
var styles56 = css`
:host{display:block}:host(:focus){outline:0}.-hds-pagination-wrapper{align-items:center;display:flex;font:var(--hds-body-small-font);height:2.5rem;justify-content:space-between;letter-spacing:var(--hds-body-small-letter-spacing);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.-hds-pagination-wrapper.disabled,.-hds-pagination-wrapper.disabled input,.-hds-pagination-wrapper.disabled select{color:var(--hds-foreground-inactive)}.-hds-pagination-wrapper .text-before-items-per-page.has-text,.-hds-pagination-wrapper .text-before-page.has-text{margin-right:var(--hds-spacing-2)}.-hds-pagination-wrapper .nav-forward,.-hds-pagination-wrapper .text-after-page.has-text,.-hds-pagination-wrapper .text-before-nav.has-text{margin-left:var(--hds-spacing-2)}.-hds-pagination-wrapper .nav-backward,.-hds-pagination-wrapper .text-after-nav.has-text{margin-left:var(--hds-spacing-4)}.-hds-pagination-wrapper .separator{background:var(--hds-foreground-divider);border-radius:.03125rem;height:2rem;margin:auto var(--hds-spacing-4);width:.0625rem}.-hds-pagination-wrapper .-items-per-page-wrapper,.-hds-pagination-wrapper .-pages-wrapper{align-items:center;display:flex}.-hds-pagination-wrapper input,.-hds-pagination-wrapper select{background:var(--hds-background-secondary);border:var(--hds-border-width) solid;border-color:var(--hds-foreground-tertiary);border-radius:var(--hds-border-radius);box-sizing:border-box;color:var(--hds-foreground-primary);font:var(--hds-body-small-font);height:1.5rem;letter-spacing:var(--hds-body-small-letter-spacing);padding:var(--hds-spacing-0) var(--hds-spacing-1);-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.-hds-pagination-wrapper input:active,.-hds-pagination-wrapper input:focus,.-hds-pagination-wrapper input:focus-visible,.-hds-pagination-wrapper input:focus-within,.-hds-pagination-wrapper select:active,.-hds-pagination-wrapper select:focus,.-hds-pagination-wrapper select:focus-visible,.-hds-pagination-wrapper select:focus-within{border-color:#0000;box-shadow:0 0 0 .125rem var(--hds-object-focused);outline:0}.-hds-pagination-wrapper input{-webkit-appearance:textfield;appearance:textfield;text-align:right;width:2.375rem}.-hds-pagination-wrapper input::-webkit-inner-spin-button,.-hds-pagination-wrapper input::-webkit-outer-spin-button{-webkit-appearance:none;appearance:none;margin:var(--hds-spacing-0)}
`;

// node_modules/@here/hds-pagination/build/hds-pagination.js
var Pagination = class Pagination2 extends LitElement {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.itemsPerPageValues = [];
    this.pageInputType = "select";
  }
  get page() {
    return this._page;
  }
  set page(value) {
    const oldValue = this._page;
    const numberValue = Number.parseInt(value, 10);
    if (!(numberValue < 1 || numberValue > this._totalPages || Number.isNaN(numberValue))) {
      this._page = numberValue;
    }
    this.requestUpdate("page", oldValue);
  }
  get itemsPerPage() {
    return this._itemsPerPage;
  }
  set itemsPerPage(value) {
    const oldValue = this._itemsPerPage;
    let numberValue = Number.parseInt(value, 10);
    if (numberValue < 1 || Number.isNaN(numberValue)) {
      numberValue = 1;
    }
    this._itemsPerPage = numberValue;
    if (this.page > this._totalPages) {
      this.page = 1;
    }
    this.requestUpdate("itemsPerPage", oldValue);
  }
  get _totalPages() {
    return Math.ceil(this.totalItems / this.itemsPerPage);
  }
  get _canGoBackward() {
    return this.page > 1;
  }
  get _canGoForward() {
    return !this.totalItems || this.page < this._totalPages;
  }
  get _itemsFrom() {
    return Math.max(1, this.page * this.itemsPerPage - (this.itemsPerPage - 1));
  }
  get _itemsTo() {
    return this.totalItems ? Math.min(this.totalItems, this.page * this.itemsPerPage) : this.page * this.itemsPerPage;
  }
  updated(_changedProps) {
    if (_changedProps.has("page") && _changedProps.get("page") !== void 0 || _changedProps.has("itemsPerPage") && _changedProps.get("itemsPerPage") !== void 0) {
      this.dispatchEvent(new CustomEvent("change", {
        detail: {
          page: this.page,
          itemsPerPage: this.itemsPerPage,
          itemsFrom: this._itemsFrom,
          itemsTo: this._itemsTo
        },
        bubbles: true,
        composed: true
      }));
    }
  }
  _onInputForPageChange(e) {
    this.page = e.target.value;
    e.target.value = this.page;
  }
  _onSelectForPageChange(e) {
    this.page = e.target.value;
  }
  _onSelectForItemsPerPageChange(e) {
    this.itemsPerPage = e.target.value;
  }
  backward() {
    if (this._canGoBackward) {
      this.page -= 1;
    }
  }
  forward() {
    if (this._canGoForward) {
      this.page += 1;
    }
  }
  renderOption(val, isSelected) {
    return html`<option value="${val}" ?selected="${isSelected}">${val}</option>`;
  }
  renderPageInput() {
    let output;
    if (this.totalItems && this.pageInputType === "input") {
      output = html`<input
        type="number"
        ?disabled="${this.disabled}"
        class="input-page"
        .value="${this.page}"
        @change="${this._onInputForPageChange}"
        aria-label="page"
      />`;
    } else if (this.totalItems && this.pageInputType === "select") {
      output = html`<select
        ?disabled="${this.disabled}"
        class="select-page"
        @change="${this._onSelectForPageChange}"
        .selectedIndex="${this.page - 1}"
        aria-label="page"
      >
        ${[...Array(this._totalPages)].map((_, idx) => this.renderOption(idx + 1, idx + 1 === this.page))}
      </select>`;
    } else {
      output = nothing;
    }
    return output;
  }
  renderItemsPerPageInput() {
    if (this.itemsPerPageValues && this.itemsPerPageValues.length) {
      return html`
        <select
          ?disabled="${this.disabled}"
          class="select-items-per-page"
          @change="${this._onSelectForItemsPerPageChange}"
          aria-label="items per page"
        >
          ${this.itemsPerPageValues.map((v) => this.renderOption(v, v === this.itemsPerPage))}
        </select>
      `;
    }
    return nothing;
  }
  renderSeparator(context) {
    const anyContentInItemsPerPageArea = this.itemsPerPageValues && this.itemsPerPageValues.length || this.textBeforeItemsPerPage;
    const anyContentInItemsPerPageInfoArea = this.textAfterItemsPerPage;
    const isRenderItemsPerPageSep = context === "itemsPerPageArea" && anyContentInItemsPerPageArea && anyContentInItemsPerPageInfoArea;
    const isRenderPageAreaSep = context === "pageArea" && (anyContentInItemsPerPageArea || anyContentInItemsPerPageInfoArea);
    if (isRenderItemsPerPageSep || isRenderPageAreaSep) {
      return html`<span class="separator"></span>`;
    }
    return nothing;
  }
  renderLabel(text, classInfo) {
    if (text) {
      const args = {
        page: this.page,
        totalPages: this._totalPages,
        totalItems: this.totalItems,
        itemsPerPage: this.itemsPerPage,
        itemsFrom: this._itemsFrom,
        itemsTo: this._itemsTo
      };
      return html` <span class="${classMap(classInfo)}"> ${stringFormat(text, args)} </span>`;
    }
    return nothing;
  }
  render() {
    const cssClasses = {
      wrapper: { "-hds-pagination-wrapper": true, disabled: this.disabled },
      textBeforeItemsPerPage: {
        "text-before-items-per-page": true,
        "has-text": this.textBeforeItemsPerPage
      },
      textAfterItemsPerPage: {
        "text-after-items-per-page": true,
        "has-text": this.textAfterItemsPerPage
      },
      textBeforePage: { "text-before-page": true, "has-text": this.textBeforePage },
      textAfterPage: { "text-after-page": true, "has-text": this.textAfterPage },
      textBeforeNav: { "text-before-nav": true, "has-text": this.textBeforeNav },
      textAfterNav: { "text-after-nav": true, "has-text": this.textAfterNav }
    };
    return html`
      <div class="${classMap(cssClasses.wrapper)}">
        <div class="-items-per-page-wrapper">
          ${this.renderLabel(this.textBeforeItemsPerPage, cssClasses.textBeforeItemsPerPage)}
          ${this.renderItemsPerPageInput()} ${this.renderSeparator("itemsPerPageArea")}
          ${this.renderLabel(this.textAfterItemsPerPage, cssClasses.textAfterItemsPerPage)}
        </div>
        <div class="-pages-wrapper">
          ${this.renderSeparator("pageArea")}
          ${this.renderLabel(this.textBeforePage, cssClasses.textBeforePage)}
          ${this.renderPageInput()}
          ${this.renderLabel(this.textAfterPage, cssClasses.textAfterPage)}
          ${this.renderLabel(this.textBeforeNav, cssClasses.textBeforeNav)}
          <hds-button
            class="nav-backward"
            @click="${this.backward}"
            ?disabled="${!this._canGoBackward || this.disabled}"
            variant="secondary"
            size="small"
            icon="arrow-left"
          ></hds-button>
          <hds-button
            class="nav-forward"
            @click="${this.forward}"
            ?disabled="${!this._canGoForward || this.disabled}"
            variant="secondary"
            size="small"
            icon="arrow-right"
          ></hds-button>
          ${this.renderLabel(this.textAfterNav, cssClasses.textAfterNav)}
        </div>
      </div>
    `;
  }
};
Pagination.styles = styles56;
__decorate([
  property({ type: Boolean })
], Pagination.prototype, "disabled", void 0);
__decorate([
  property({ type: Array, attribute: "items-per-page-values" })
], Pagination.prototype, "itemsPerPageValues", void 0);
__decorate([
  property({ type: Number, attribute: "total-items" })
], Pagination.prototype, "totalItems", void 0);
__decorate([
  property({ type: String, attribute: "text-before-items-per-page" })
], Pagination.prototype, "textBeforeItemsPerPage", void 0);
__decorate([
  property({ type: String, attribute: "text-after-items-per-page" })
], Pagination.prototype, "textAfterItemsPerPage", void 0);
__decorate([
  property({ type: String, attribute: "text-before-page" })
], Pagination.prototype, "textBeforePage", void 0);
__decorate([
  property({ type: String, attribute: "text-after-page" })
], Pagination.prototype, "textAfterPage", void 0);
__decorate([
  property({ type: String, attribute: "text-before-nav" })
], Pagination.prototype, "textBeforeNav", void 0);
__decorate([
  property({ type: String, attribute: "text-after-nav" })
], Pagination.prototype, "textAfterNav", void 0);
__decorate([
  property({ type: String, attribute: "page-input-type" })
], Pagination.prototype, "pageInputType", void 0);
__decorate([
  property({ type: Number, reflect: true, attribute: "page" })
], Pagination.prototype, "page", null);
__decorate([
  property({ type: Number, reflect: true, attribute: "items-per-page" })
], Pagination.prototype, "itemsPerPage", null);
Pagination = __decorate([
  customElement("hds-pagination")
], Pagination);

// node_modules/@here/hds-react-components/Pagination/HDSPagination.js
new Pagination();
var HDSPagination = import_react60.default.forwardRef((props, ref) => {
  const { className, onChange: onChange2, pageInputType, page, itemsPerPage, itemsPerPageValues, totalItems, textBeforeItemsPerPage, textAfterItemsPerPage, textBeforePage, textAfterPage, textBeforeNav, textAfterNav, disabled, ...rest } = props;
  const innerRef = (0, import_react60.useRef)(null);
  (0, import_react60.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onChange2 && onChange2(e);
  };
  (0, import_react60.useEffect)(() => {
    if (innerRef.current) {
      innerRef.current.addEventListener("change", _handleChange);
    }
    return () => {
      var _a6;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
    };
  }, [onChange2, innerRef]);
  return import_react60.default.createElement("hds-pagination", { ref: innerRef, ...className && { class: className }, "page-input-type": pageInputType, page, "items-per-page": itemsPerPage, "total-items": totalItems || void 0, "items-per-page-values": itemsPerPageValues || void 0, "text-before-items-per-page": textBeforeItemsPerPage || void 0, "text-after-items-per-page": textAfterItemsPerPage || void 0, "text-before-page": textBeforePage || void 0, "text-after-page": textAfterPage || void 0, "text-before-nav": textBeforeNav || void 0, "text-after-nav": textAfterNav || void 0, ...disabled && { disabled: true }, ...rest });
});
HDSPagination.displayName = "HDSPagination";
HDSPagination.defaultProps = {
  disabled: false,
  pageInputType: "select",
  itemsPerPageValues: "",
  totalItems: void 0,
  textBeforeItemsPerPage: void 0,
  textAfterItemsPerPage: void 0,
  textBeforePage: void 0,
  textAfterPage: void 0,
  textBeforeNav: void 0,
  textAfterNav: void 0
};
var HDSPagination_default = HDSPagination;

// node_modules/@here/hds-react-components/Calendar/HDSCalendar.js
var import_react61 = __toESM(require_react(), 1);

// node_modules/@here/hds-calendar/build/hds-calendar.css.js
var styles57 = css`
:host{display:block}:host(:focus){outline:0}.-hds-calendar-wrapper{cursor:default;font:var(--hds-body-small-font);letter-spacing:var(--hds-body-small-letter-spacing);min-width:18.5rem;-webkit-text-decoration:var(--hds-body-small-text-decoration,inherit);text-decoration:var(--hds-body-small-text-decoration,inherit)}.-hds-calendar-wrapper.-has-month-controls .month .month-value{text-align:center}.-hds-calendar-wrapper.-no-month-controls .month .month-value{text-align:left}.-hds-calendar-wrapper .header{align-items:center;display:flex;flex-flow:row wrap;font:var(--hds-body-small-strong-font);justify-content:space-between;letter-spacing:var(--hds-body-small-strong-letter-spacing);-webkit-text-decoration:var(--hds-body-small-strong-text-decoration,inherit);text-decoration:var(--hds-body-small-strong-text-decoration,inherit)}.-hds-calendar-wrapper .header .month,.-hds-calendar-wrapper .header .year{align-items:center;display:flex;justify-content:center}.-hds-calendar-wrapper .header .month .month-value{min-width:5rem}.-hds-calendar-wrapper .header .year .year-value{min-width:2.5rem;text-align:center}.-hds-calendar-wrapper .grid-calendar-cells{grid-gap:0;display:grid;grid-template-columns:repeat(7,1fr);grid-template-rows:repeat(6,1fr);margin-top:var(--hds-spacing-5)}.-hds-calendar-wrapper .grid-calendar-cells .cell{align-items:center;display:flex;justify-content:center;margin:auto;min-height:2rem;min-width:2rem}.-hds-calendar-wrapper .grid-calendar-cells .cell.outside-month-cell{color:var(--hds-foreground-inactive)}.-hds-calendar-wrapper .grid-days-of-week{grid-gap:var(--hds-spacing-2);color:var(--hds-foreground-secondary);display:grid;grid-template-columns:repeat(7,1fr);grid-template-rows:repeat(1,1fr);margin-top:var(--hds-spacing-5);text-align:center}.-hds-calendar-wrapper .grid-days-of-week .cell{align-items:center;display:flex;justify-content:center}.-hds-calendar-wrapper.hds-calendar-variant-dense .grid-calendar-cells{grid-gap:var(--hds-spacing-2)}.-hds-calendar-wrapper.hds-calendar-variant-dense .grid-calendar-cells .cell{align-items:center;display:flex;justify-content:center}.-hds-calendar-wrapper.hds-calendar-variant-dense.-has-date-slot .grid-calendar-cells .cell{width:100%}.-hds-calendar-wrapper.hds-calendar-variant-dense.-no-date-slot .grid-calendar-cells .cell{align-items:center;border-radius:2rem;color:var(--hds-foreground-primary);display:flex;height:2rem;justify-content:center;width:2rem}.-hds-calendar-wrapper.hds-calendar-variant-dense.-no-date-slot .grid-calendar-cells .cell.selected{background-color:var(--hds-action);color:var(--hds-inverse-primary)}.-hds-calendar-wrapper.hds-calendar-variant-dense.-no-date-slot .grid-calendar-cells .cell.selected.inside-month-cell.today{font:var(--hds-body-small-strong-font);letter-spacing:var(--hds-body-small-strong-letter-spacing);-webkit-text-decoration:var(--hds-body-small-strong-text-decoration,inherit);text-decoration:var(--hds-body-small-strong-text-decoration,inherit)}.-hds-calendar-wrapper.hds-calendar-variant-dense.-no-date-slot .grid-calendar-cells .cell.not-selected.inside-month-cell{color:var(--hds-foreground-primary)}.-hds-calendar-wrapper.hds-calendar-variant-dense.-no-date-slot .grid-calendar-cells .cell.not-selected.inside-month-cell.today{color:var(--hds-action);font:var(--hds-body-small-strong-font);letter-spacing:var(--hds-body-small-strong-letter-spacing);-webkit-text-decoration:var(--hds-body-small-strong-text-decoration,inherit);text-decoration:var(--hds-body-small-strong-text-decoration,inherit)}.-hds-calendar-wrapper.hds-calendar-variant-dense.-no-date-slot .grid-calendar-cells .cell.not-selected.outside-month-cell{color:var(--hds-foreground-inactive)}.-hds-calendar-wrapper.hds-calendar-variant-dense.-no-date-slot .grid-calendar-cells .cell.not-selected:hover{background-color:var(--hds-background-oncolor-hover)}.-hds-calendar-wrapper.hds-calendar-variant-dense.-no-date-slot .grid-calendar-cells .cell.not-selected:active,.-hds-calendar-wrapper.hds-calendar-variant-dense.-no-date-slot .grid-calendar-cells .cell.not-selected:active:hover{background-color:var(--hds-background-oncolor-press)}.-hds-calendar-wrapper.hds-calendar-variant-dense.-no-date-slot .grid-calendar-cells .cell:focus:not(:focus-visible){outline:none}.-hds-calendar-wrapper.hds-calendar-variant-dense.-no-date-slot .grid-calendar-cells .cell:focus-visible{outline:var(--hds-object-focused) solid .125rem}.-hds-calendar-wrapper.hds-calendar-variant-default .header{justify-content:flex-start}.-hds-calendar-wrapper.hds-calendar-variant-default .header .year{margin-left:var(--hds-spacing-6)}.-hds-calendar-wrapper.hds-calendar-variant-default .grid-calendar-cells{border-left:1px solid var(--hds-foreground-divider);border-top:1px solid var(--hds-foreground-divider)}.-hds-calendar-wrapper.hds-calendar-variant-default .grid-calendar-cells .cell{align-items:flex-start;border-bottom:1px solid var(--hds-foreground-divider);border-right:1px solid var(--hds-foreground-divider);box-sizing:border-box;color:var(--hds-foreground-primary);height:100%;justify-content:center;padding:var(--hds-spacing-2);width:100%}.-hds-calendar-wrapper.hds-calendar-variant-default .grid-calendar-cells .cell.outside-month-cell{color:var(--hds-foreground-inactive)}
`;

// node_modules/@here/hds-calendar/build/hds-calendar.js
var CALENDAR_WEEKDAYS = [
  "Sunday",
  "Monday",
  "Tuesday",
  "Wednesday",
  "Thursday",
  "Friday",
  "Saturday"
];
var Calendar = class Calendar2 extends LitElement {
  constructor() {
    super(...arguments);
    this.hideYearControls = false;
    this.hideMonthControls = false;
    this.variant = "default";
    this.firstDayOfWeek = "Sunday";
    this.lang = "en-US";
    this.monthFormat = "long";
    this.yearFormat = "numeric";
    this.weekdayFormat = "short";
    this.dayFormat = "numeric";
    this.dayOutsideFormat = "numeric";
    this.value = "";
    this.selected = "";
    this._hasDateSlot = false;
  }
  connectedCallback() {
    super.connectedCallback && super.connectedCallback();
    this.value = this.value || this._todayAsString;
  }
  get _todayAsString() {
    return this.getStringFromDate(/* @__PURE__ */ new Date());
  }
  get _valueAsDate() {
    return this.getDateFromString(this.value);
  }
  getStringFromDate(date) {
    const dateEnUsFormat = date.toLocaleDateString("en-US", {
      day: "2-digit",
      month: "2-digit",
      year: "numeric"
    }).split("/");
    const month = dateEnUsFormat[0];
    const day = dateEnUsFormat[1];
    const year = dateEnUsFormat[2];
    return `${year}-${month}-${day}`;
  }
  getDateFromString(date) {
    return new Date(date);
  }
  updated(_changedProps) {
    if (_changedProps.get("selected") !== void 0 && _changedProps.has("selected")) {
      this.dispatchEvent(new CustomEvent("select", {
        detail: { selected: this.selected },
        bubbles: true,
        composed: true
      }));
    }
    if (_changedProps.get("value") !== void 0 && _changedProps.has("value")) {
      this.dispatchEvent(new CustomEvent("change", {
        detail: { value: this.value },
        bubbles: true,
        composed: true
      }));
    }
  }
  _getNextMonth() {
    const { _valueAsDate: valueAsDate } = this;
    return new Date(valueAsDate.getFullYear(), valueAsDate.getMonth() + 1, 1);
  }
  _getPreviousMonth() {
    const { _valueAsDate: valueAsDate } = this;
    return new Date(valueAsDate.getFullYear(), valueAsDate.getMonth() - 1, 1);
  }
  nextMonth() {
    if (this.hideMonthControls)
      return;
    this.value = this.getStringFromDate(this._getNextMonth());
  }
  previousMonth() {
    if (this.hideMonthControls)
      return;
    this.value = this.getStringFromDate(this._getPreviousMonth());
  }
  nextYear() {
    if (this.hideYearControls)
      return;
    const { _valueAsDate: valueAsDate } = this;
    const nextYearDate = new Date(valueAsDate.getFullYear() + 1, 0, 1);
    this.value = this.getStringFromDate(nextYearDate);
  }
  previousYear() {
    if (this.hideYearControls)
      return;
    const { _valueAsDate: valueAsDate } = this;
    const previousYearDate = new Date(valueAsDate.getFullYear() - 1, 0, 1);
    this.value = this.getStringFromDate(previousYearDate);
  }
  renderPreviousMonthControl() {
    if (this.hideMonthControls || !this.monthFormat || this.monthFormat === "none") {
      return nothing;
    }
    return html`<hds-button
      variant="subtle"
      size="small"
      @click="${this.previousMonth}"
      icon="chevron-left"
      tabindex="0"
    ></hds-button>`;
  }
  renderNextMonthControl() {
    if (this.hideMonthControls || !this.monthFormat || this.monthFormat === "none") {
      return nothing;
    }
    return html`<hds-button
      variant="subtle"
      size="small"
      @click="${this.nextMonth}"
      icon="chevron-right"
      tabindex="0"
    ></hds-button>`;
  }
  renderPreviousYearControl() {
    if (this.hideYearControls || !this.yearFormat || this.yearFormat === "none") {
      return nothing;
    }
    return html`<hds-button
      variant="subtle"
      size="small"
      @click="${this.previousYear}"
      icon="chevron-left"
      tabindex="0"
    ></hds-button>`;
  }
  renderNextYearControl() {
    if (this.hideYearControls || !this.yearFormat || this.yearFormat === "none") {
      return nothing;
    }
    return html`<hds-button
      variant="subtle"
      size="small"
      @click="${this.nextYear}"
      icon="chevron-right"
      tabindex="0"
    ></hds-button>`;
  }
  _onSlotChange() {
    this._hasDateSlot = !!this.querySelector('[slot^="date-"]');
  }
  async _onCellKeyDown(e, index2, cellDate, _viewDate) {
    if (e.key !== "Tab") {
      e.preventDefault();
    }
    const viewDates = this._getCalendarView(this._valueAsDate, this.firstDayOfWeek);
    let newFocusIdx = -1;
    const canChangeMonth = !this.hideMonthControls && !this.hideYearControls;
    switch (e.key) {
      case "ArrowUp":
        if (index2 - CALENDAR_WEEKDAYS.length >= 0) {
          newFocusIdx = index2 - CALENDAR_WEEKDAYS.length;
        } else if (canChangeMonth && index2 - CALENDAR_WEEKDAYS.length < 0) {
          this.value = this.getStringFromDate(this._getPreviousMonth());
          newFocusIdx = viewDates.length - CALENDAR_WEEKDAYS.length + index2;
        }
        break;
      case "ArrowDown":
        if (index2 + CALENDAR_WEEKDAYS.length < viewDates.length) {
          newFocusIdx = index2 + CALENDAR_WEEKDAYS.length;
        } else if (canChangeMonth && index2 + CALENDAR_WEEKDAYS.length >= viewDates.length) {
          this.value = this.getStringFromDate(this._getNextMonth());
          newFocusIdx = Math.abs(viewDates.length - CALENDAR_WEEKDAYS.length - index2);
        }
        break;
      case "ArrowLeft":
        if (index2 - 1 >= 0) {
          newFocusIdx = index2 - 1;
        } else if (canChangeMonth && index2 === 0) {
          this.value = this.getStringFromDate(this._getPreviousMonth());
          newFocusIdx = viewDates.length - 1;
        }
        break;
      case "ArrowRight":
        if (index2 + 1 < viewDates.length) {
          newFocusIdx = index2 + 1;
        } else if (canChangeMonth && index2 === viewDates.length - 1) {
          this.value = this.getStringFromDate(this._getNextMonth());
          newFocusIdx = 0;
        }
        break;
      case "Enter":
      case " ":
        this.selected = this.getStringFromDate(cellDate);
        break;
      default:
        break;
    }
    if (newFocusIdx !== -1) {
      await this.updateComplete;
      this._cellElements[newFocusIdx].focus();
    }
  }
  _onCellClick(_e2, _index, cellDate, _viewDate) {
    this.selected = this.getStringFromDate(cellDate);
  }
  renderCell(index2, cellDate, viewDate) {
    const now = /* @__PURE__ */ new Date();
    const cellDateAsString = this.getStringFromDate(cellDate);
    const isInsideMonthCell = cellDate.getMonth() === viewDate.getMonth();
    const isSelected = this.selected === cellDateAsString;
    const isToday = now.getFullYear() === cellDate.getFullYear() && now.getMonth() === cellDate.getMonth() && now.getDate() === cellDate.getDate();
    const cssClasses = {
      cell: true,
      today: isToday,
      selected: isSelected,
      "not-selected": !isSelected,
      "inside-month-cell": isInsideMonthCell,
      "outside-month-cell": !isInsideMonthCell
    };
    const cellSlotName = `date-${cellDateAsString}`;
    const dayFormat = isInsideMonthCell ? this.dayFormat : this.dayOutsideFormat;
    const cellValue = dayFormat && dayFormat !== "none" ? cellDate.toLocaleDateString(this.lang, { day: dayFormat }) : "";
    return html`<div
      class="${classMap(cssClasses)}"
      @click="${(e) => this._onCellClick(e, index2, cellDate, viewDate)}"
      @keydown=${(e) => this._onCellKeyDown(e, index2, cellDate, viewDate)}
      tabindex="0"
      data-cell-date="${cellDateAsString}"
      data-cell-index="${index2}"
    >
      <slot name="${cellSlotName}">${cellValue}</slot>
    </div>`;
  }
  renderDayOfWeek(date) {
    const dayOfWeekValue = this.weekdayFormat && this.weekdayFormat !== "none" ? date.toLocaleDateString(this.lang, { weekday: this.weekdayFormat }) : "";
    return html`<div class="cell">${dayOfWeekValue}</div>`;
  }
  render() {
    const viewDates = this._getCalendarView(this._valueAsDate, this.firstDayOfWeek);
    const daysOfWeek = viewDates.slice(0, 7);
    const cssClasses = {
      "-hds-calendar-wrapper": true,
      "-has-date-slot": this._hasDateSlot,
      "-no-date-slot": !this._hasDateSlot,
      "-no-year-controls": this.hideYearControls,
      "-has-year-controls": !this.hideYearControls,
      "-no-month-controls": this.hideMonthControls,
      "-has-month-controls": !this.hideMonthControls
    };
    cssClasses[`hds-calendar-variant-${this.variant}`] = true;
    const { _valueAsDate: valueAsDate } = this;
    const monthValue = this.monthFormat && this.monthFormat !== "none" ? valueAsDate.toLocaleDateString(this.lang, { month: this.monthFormat }) : "";
    const yearValue = this.yearFormat && this.yearFormat !== "none" ? valueAsDate.toLocaleDateString(this.lang, { year: this.yearFormat }) : "";
    return html`
      <div class="${classMap(cssClasses)}" @slotchange="${this._onSlotChange}">
        <div class="header">
          <div class="month">
            ${this.renderPreviousMonthControl()}
            <div class="month-value">${monthValue}</div>
            ${this.renderNextMonthControl()}
          </div>
          <div class="year">
            ${this.renderPreviousYearControl()}
            <div class="year-value">${yearValue}</div>
            ${this.renderNextYearControl()}
          </div>
        </div>
        <div class="grid-days-of-week">${daysOfWeek.map((d2) => this.renderDayOfWeek(d2))}</div>
        <div class="grid-calendar-cells">
          ${viewDates.map((d2, idx) => this.renderCell(idx, d2, this._valueAsDate))}
        </div>
      </div>
    `;
  }
  _getCalendarView(forDate, firstDayOfWeek) {
    let view = [];
    const weekStartIdx = CALENDAR_WEEKDAYS.indexOf(firstDayOfWeek);
    const prevMonthDate = new Date(forDate.getFullYear(), forDate.getMonth() - 1, 31 / 2);
    const nextMonthDate = new Date(forDate.getFullYear(), forDate.getMonth() + 1, 31 / 2);
    const currMonthStartDate = new Date(forDate.getFullYear(), forDate.getMonth(), 1);
    const cursor2 = new Date(prevMonthDate.getTime());
    while (cursor2 <= nextMonthDate) {
      if (cursor2.getMonth() === prevMonthDate.getMonth() && currMonthStartDate.getDay() !== weekStartIdx) {
        if (cursor2.getDay() === weekStartIdx) {
          view = [];
        }
        view.push(new Date(cursor2.getTime()));
      } else if (cursor2.getMonth() === forDate.getMonth()) {
        view.push(new Date(cursor2.getTime()));
      } else if (cursor2.getMonth() === nextMonthDate.getMonth() && view.length !== 7 * 6) {
        view.push(new Date(cursor2.getTime()));
      }
      cursor2.setDate(cursor2.getDate() + 1);
    }
    return view;
  }
};
Calendar.styles = styles57;
__decorate([
  property({ type: Boolean, reflect: true, attribute: "hide-year-controls" })
], Calendar.prototype, "hideYearControls", void 0);
__decorate([
  property({ type: Boolean, reflect: true, attribute: "hide-month-controls" })
], Calendar.prototype, "hideMonthControls", void 0);
__decorate([
  property({ type: String, reflect: true })
], Calendar.prototype, "variant", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "first-day-of-week" })
], Calendar.prototype, "firstDayOfWeek", void 0);
__decorate([
  property({ type: String, reflect: true })
], Calendar.prototype, "lang", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "month-format" })
], Calendar.prototype, "monthFormat", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "year-format" })
], Calendar.prototype, "yearFormat", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "weekday-format" })
], Calendar.prototype, "weekdayFormat", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "day-format" })
], Calendar.prototype, "dayFormat", void 0);
__decorate([
  property({ type: String, reflect: true, attribute: "day-outside-format" })
], Calendar.prototype, "dayOutsideFormat", void 0);
__decorate([
  property({ type: String, reflect: true })
], Calendar.prototype, "value", void 0);
__decorate([
  property({ type: String, reflect: true })
], Calendar.prototype, "selected", void 0);
__decorate([
  state()
], Calendar.prototype, "_hasDateSlot", void 0);
__decorate([
  queryAll("[data-cell-index]")
], Calendar.prototype, "_cellElements", void 0);
Calendar = __decorate([
  customElement("hds-calendar")
], Calendar);

// node_modules/@here/hds-react-components/Calendar/HDSCalendar.js
new Calendar();
var HDSCalendar = import_react61.default.forwardRef((props, ref) => {
  const { children, className, onSelect, onChange: onChange2, ...rest } = props;
  const innerRef = (0, import_react61.useRef)(null);
  (0, import_react61.useImperativeHandle)(ref, () => innerRef.current);
  const _handleChange = (e) => {
    if (e.target !== innerRef.current)
      return;
    onChange2 && onChange2(e);
  };
  const _handleSelect = (e) => {
    if (e.target !== innerRef.current)
      return;
    onSelect && onSelect(e);
  };
  (0, import_react61.useEffect)(() => {
    if (innerRef.current) {
      innerRef.current.addEventListener("change", _handleChange);
      innerRef.current.addEventListener("select", _handleSelect);
    }
    return () => {
      var _a6, _b5;
      (_a6 = innerRef.current) == null ? void 0 : _a6.removeEventListener("change", _handleChange);
      (_b5 = innerRef.current) == null ? void 0 : _b5.removeEventListener("select", _handleSelect);
    };
  }, [onSelect, onChange2, innerRef]);
  return import_react61.default.createElement("hds-calendar", { ref: innerRef, ...className && { class: className }, ...rest }, children && children);
});
HDSCalendar.displayName = "HDSCalendar";
HDSCalendar.defaultProps = {
  variant: "default",
  firstDayOfWeek: "Monday",
  lang: "en-US",
  monthFormat: "long",
  yearFormat: "numeric",
  weekdayFormat: "short",
  dayFormat: "numeric",
  dayOutsideFormat: "numeric",
  value: "",
  selected: "",
  hideYearControls: false,
  hideMonthControls: false
};
var HDSCalendar_default = HDSCalendar;
export {
  HDSAccordion_default as HDSAccordion,
  HDSAccordionItem_default as HDSAccordionItem,
  HDSAvatar_default as HDSAvatar,
  HDSAvatarButton_default as HDSAvatarButton,
  HDSBanner_default as HDSBanner,
  HDSBreadcrumb_default as HDSBreadcrumb,
  HDSBreadcrumbItem_default as HDSBreadcrumbItem,
  HDSButton_default as HDSButton,
  HDSCalendar_default as HDSCalendar,
  HDSCheckbox_default as HDSCheckbox,
  HDSCheckboxGroup_default as HDSCheckboxGroup,
  HDSChip_default as HDSChip,
  HDSChipGroup_default as HDSChipGroup,
  HDSConfirm_default as HDSConfirm,
  HDSDropdown_default as HDSDropdown,
  HDSDropzone_default as HDSDropzone,
  HDSFlag_default as HDSFlag,
  HDSHeroSearch_default as HDSHeroSearch,
  HDSIcon_default as HDSIcon,
  HDSInput_default as HDSInput,
  HDSLabel_default as HDSLabel,
  HDSLauncher_default as HDSLauncher,
  HDSList_default as HDSList,
  HDSListItem_default as HDSListItem,
  HDSLogo_default as HDSLogo,
  HDSModal_default as HDSModal,
  HDSModalContainer_default as HDSModalContainer,
  HDSModalContextProvider,
  HDSNavBarSide_default as HDSNavBarSide,
  HDSNavBarTop_default as HDSNavBarTop,
  HDSNotification_default as HDSNotification,
  HDSOption_default as HDSOption,
  HDSOverlay_default as HDSOverlay,
  HDSPagination_default as HDSPagination,
  HDSPanel_default as HDSPanel,
  HDSProfileMenu_default as HDSProfileMenu,
  HDSProgressIndicator_default as HDSProgressIndicator,
  HDSRadio_default as HDSRadio,
  HDSRadioGroup_default as HDSRadioGroup,
  HDSRichList_default as HDSRichList,
  HDSRichListItem_default as HDSRichListItem,
  HDSSelectChips,
  HDSSelectClearIndicator,
  HDSSelectDropdownIndicator,
  HDSSelectMultiOption,
  HDSSelectSingleOption,
  HDSSelectStyleGroups,
  HDSSelectStyles,
  HDSSelectThemes,
  HDSSlider_default as HDSSlider,
  HDSStep_default as HDSStep,
  HDSStepper_default as HDSStepper,
  HDSSwitcher_default as HDSSwitcher,
  HDSSwitcherTab_default as HDSSwitcherTab,
  HDSTab_default as HDSTab,
  HDSTabBar_default as HDSTabBar,
  HDSTabPanel_default as HDSTabPanel,
  HDSTabPanelContainer_default as HDSTabPanelContainer,
  HDSTextarea_default as HDSTextarea,
  HDSToastContainer_default as HDSToastContainer,
  HDSToastContextProvider,
  HDSToggle_default as HDSToggle,
  HDSToggleList_default as HDSToggleList,
  HDSToggleListItem_default as HDSToggleListItem,
  HDSTooltip_default as HDSTooltip,
  HDSVerticalNavigation_default as HDSVerticalNavigation,
  HDSVerticalNavigationItem_default as HDSVerticalNavigationItem,
  HDSVerticalNavigationSubList_default as HDSVerticalNavigationSubList,
  HDSVerticalNavigationSubListItem_default as HDSVerticalNavigationSubListItem,
  HDSWizard_default as HDSWizard,
  useModal,
  useToast
};
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@lit/reactive-element/development/css-tag.js:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/reactive-element.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/lit-html.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-element/development/lit-element.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/is-server.js:
  (**
   * @license
   * Copyright 2022 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directive.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/custom-element.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/property.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/state.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/base.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/event-options.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/query.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/query-all.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/query-async.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/query-assigned-elements.js:
  (**
   * @license
   * Copyright 2021 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit/reactive-element/development/decorators/query-assigned-nodes.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directives/class-map.js:
  (**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directives/if-defined.js:
  (**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directives/style-map.js:
  (**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

tabbable/dist/index.esm.js:
  (*!
  * tabbable 6.2.0
  * @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
  *)

lit-html/development/directive-helpers.js:
  (**
   * @license
   * Copyright 2020 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directives/repeat.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directives/unsafe-html.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)
*/
//# sourceMappingURL=@here_hds-react-components.js.map
